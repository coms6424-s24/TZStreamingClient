
9aaaf200-2450-11e4-abe2-0002a5d5c51b.elf:     file format elf64-littleaarch64
9aaaf200-2450-11e4-abe2-0002a5d5c51b.elf
architecture: aarch64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x0000000000000314

Program Header:
    LOAD off    0x0000000000001000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**12
         filesz 0x0000000000018e88 memsz 0x0000000000018e88 flags r-x
    LOAD off    0x000000000001a000 vaddr 0x0000000000019000 paddr 0x0000000000019000 align 2**12
         filesz 0x000000000000068c memsz 0x000000000000bf38 flags rw-
 DYNAMIC off    0x000000000001a000 vaddr 0x0000000000019000 paddr 0x0000000000019000 align 2**3
         filesz 0x0000000000000110 memsz 0x0000000000000110 flags rw-
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-

Dynamic Section:
  HASH                 0x0000000000018ae0
  GNU_HASH             0x00000000000189a8
  STRTAB               0x0000000000018aa8
  SYMTAB               0x0000000000018a00
  STRSZ                0x0000000000000036
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  RELA                 0x0000000000018b10
  RELASZ               0x00000000000005b8
  RELAENT              0x0000000000000018
  FLAGS_1              0x0000000008000000
  RELACOUNT            0x0000000000000025
private flags = 0:

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         000133f8  0000000000000000  0000000000000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .eh_frame     000040e4  00000000000133f8  00000000000133f8  000143f8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .rodata       000014c3  00000000000174e0  00000000000174e0  000184e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000034  00000000000189a8  00000000000189a8  000199a8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ta_head      00000020  00000000000189e0  00000000000189e0  000199e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynsym       000000a8  0000000000018a00  0000000000018a00  00019a00  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .dynstr       00000036  0000000000018aa8  0000000000018aa8  00019aa8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .hash         00000030  0000000000018ae0  0000000000018ae0  00019ae0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     00000378  0000000000018b10  0000000000018b10  00019b10  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .dynamic      00000110  0000000000019000  0000000000019000  0001a000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 10 .got          000000e0  0000000000019110  0000000000019110  0001a110  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 11 .rela.got     00000240  00000000000191f0  00000000000191f0  0001a1f0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 12 .data         0000025c  0000000000019430  0000000000019430  0001a430  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0000b8a8  0000000000019690  0000000000019690  0001a68c  2**3
                  ALLOC
 14 .debug_info   000247eb  0000000000000000  0000000000000000  0001a68c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00005227  0000000000000000  0000000000000000  0003ee77  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_loc    000007c2  0000000000000000  0000000000000000  0004409e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_aranges 00000a10  0000000000000000  0000000000000000  00044860  2**4
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_ranges 00000050  0000000000000000  0000000000000000  00045270  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_macro  0001c634  0000000000000000  0000000000000000  000452c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line   0000f9c4  0000000000000000  0000000000000000  000618f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    0001d543  0000000000000000  0000000000000000  000712b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .comment      0000005e  0000000000000000  0000000000000000  0008e7fb  2**0
                  CONTENTS, READONLY
 23 .debug_loclists 000151c1  0000000000000000  0000000000000000  0008e859  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00000a61  0000000000000000  0000000000000000  000a3a1a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_line_str 0000093b  0000000000000000  0000000000000000  000a447b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
0000000000000000 l    d  .text	0000000000000000 .text
00000000000133f8 l    d  .eh_frame	0000000000000000 .eh_frame
00000000000174e0 l    d  .rodata	0000000000000000 .rodata
00000000000189a8 l    d  .gnu.hash	0000000000000000 .gnu.hash
00000000000189e0 l    d  .ta_head	0000000000000000 .ta_head
0000000000018a00 l    d  .dynsym	0000000000000000 .dynsym
0000000000018aa8 l    d  .dynstr	0000000000000000 .dynstr
0000000000018ae0 l    d  .hash	0000000000000000 .hash
0000000000018b10 l    d  .rela.dyn	0000000000000000 .rela.dyn
0000000000019000 l    d  .dynamic	0000000000000000 .dynamic
0000000000019110 l    d  .got	0000000000000000 .got
00000000000191f0 l    d  .rela.got	0000000000000000 .rela.got
0000000000019430 l    d  .data	0000000000000000 .data
0000000000019690 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_loc	0000000000000000 .debug_loc
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_ranges	0000000000000000 .debug_ranges
0000000000000000 l    d  .debug_macro	0000000000000000 .debug_macro
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 l    d  .debug_loclists	0000000000000000 .debug_loclists
0000000000000000 l    d  .debug_rnglists	0000000000000000 .debug_rnglists
0000000000000000 l    d  .debug_line_str	0000000000000000 .debug_line_str
0000000000000000 l    df *ABS*	0000000000000000 memcpy.c
0000000000000000 l    df *ABS*	0000000000000000 my_test_ta.c
00000000000179d6 l     O .rodata	0000000000000014 __func__.4583
00000000000179ea l     O .rodata	0000000000000015 __func__.4587
00000000000179ff l     O .rodata	0000000000000020 __func__.4594
0000000000017a1f l     O .rodata	000000000000001a __func__.4598
0000000000017a39 l     O .rodata	000000000000000a __func__.4604
0000000000017a43 l     O .rodata	000000000000000a __func__.4610
0000000000000000 l    df *ABS*	0000000000000000 user_ta_header.c
00000000000174e8 l     O .rodata	0000000000000004 __compound_literal.7
00000000000174ec l     O .rodata	0000000000000001 __compound_literal.6
00000000000174f0 l     O .rodata	0000000000000004 __compound_literal.5
00000000000174f4 l     O .rodata	0000000000000004 __compound_literal.4
00000000000174f8 l     O .rodata	0000000000000004 __compound_literal.3
00000000000174fc l     O .rodata	0000000000000001 __compound_literal.2
00000000000174fd l     O .rodata	0000000000000001 __compound_literal.1
00000000000174fe l     O .rodata	0000000000000001 __compound_literal.0
0000000000000000 l    df *ABS*	0000000000000000 trace.c
0000000000017bba l     O .rodata	0000000000000005 lvl_strs.0
0000000000000000 l    df *ABS*	0000000000000000 stack_check.c
0000000000000000 l    df *ABS*	0000000000000000 snprintk.c
0000000000000894 l     F .text	0000000000000bc4 kprintf.constprop.0
00000000000175c2 l     O .rodata	0000000000000011 hexdigits
00000000000175d3 l     O .rodata	0000000000000011 HEXDIGITS
0000000000000000 l    df *ABS*	0000000000000000 memchr.c
0000000000000000 l    df *ABS*	0000000000000000 strlen.c
0000000000000000 l    df *ABS*	0000000000000000 trace_ext.c
0000000000000000 l    df *ABS*	0000000000000000 user_ta_entry.c
00000000000016cc l     F .text	00000000000000b0 _get_fn_array
000000000000177c l     F .text	0000000000000090 _fini_iterate_phdr_cb
000000000000180c l     F .text	0000000000000028 ta_header_get_session
0000000000001834 l     F .text	0000000000000070 to_utee_params
00000000000018a4 l     F .text	000000000000005c from_utee_params
0000000000001900 l     F .text	0000000000000094 _init_iterate_phdr_cb
0000000000001af0 l     F .text	0000000000000094 ta_header_remove_session
0000000000017c5e l     O .rodata	0000000000000016 __func__.0
0000000000019690 l     O .bss	0000000000000008 _num_mod_init
0000000000019698 l     O .bss	0000000000000001 init_done
0000000000019540 l     O .data	0000000000000010 ta_sessions
0000000000019550 l     O .data	0000000000000010 __phdr_info_head
0000000000000000 l    df *ABS*	0000000000000000 user_ta_entry_compat.c
0000000000001e0c l     F .text	0000000000000064 to_gp11_param
0000000000001e70 l     F .text	0000000000000064 from_gp11_param
0000000000000000 l    df *ABS*	0000000000000000 utee_syscalls_a64.o
0000000000000000 l    df *ABS*	0000000000000000 abort.c
0000000000000000 l    df *ABS*	0000000000000000 tee_api.c
00000000000022ec l     F .text	000000000000006c copy_param
0000000000002358 l     F .text	0000000000000070 copy_gp11_param
00000000000023c8 l     F .text	0000000000000098 check_mem_access_rights_params
0000000000002460 l     F .text	0000000000000044 buf_overlaps_no_share_heap
00000000000024a4 l     F .text	00000000000000a8 check_invoke_param
000000000000254c l     F .text	00000000000000a4 update_out_param
00000000000025f0 l     F .text	00000000000000a8 update_out_gp11_param
0000000000002868 l     F .text	000000000000019c map_tmp_param
0000000000019700 l     O .bss	0000000000000008 tee_api_instance_data
0000000000017520 l     O .rodata	000000000000000b __func__.0
0000000000000000 l    df *ABS*	0000000000000000 tee_api_arith_mpi.c
00000000000033c8 l     F .text	0000000000000030 api_panic
00000000000033f8 l     F .text	0000000000000030 mpi_panic
0000000000003428 l     F .text	0000000000000098 get_mpi
00000000000034c0 l     F .text	0000000000000064 copy_mpi_to_bigint
0000000000003524 l     F .text	000000000000014c bigint_binary
0000000000003670 l     F .text	0000000000000020 mpi_is_odd
0000000000003690 l     F .text	0000000000000028 rng_read
00000000000036b8 l     F .text	0000000000000574 mpi_egcd
0000000000019710 l     O .bss	0000000000003800 data.18
0000000000004164 l     F .text	00000000000001d0 bigint_binary_mod
0000000000017d55 l     O .rodata	0000000000000008 __func__.15
0000000000017d5d l     O .rodata	000000000000000e __func__.11
0000000000017d6b l     O .rodata	0000000000000009 __func__.2
0000000000017d74 l     O .rodata	0000000000000012 __func__.17
0000000000017d86 l     O .rodata	000000000000000f __func__.16
0000000000017d95 l     O .rodata	000000000000001f __func__.14
0000000000017db4 l     O .rodata	0000000000000019 __func__.13
0000000000017dcd l     O .rodata	0000000000000012 __func__.7
0000000000017ddf l     O .rodata	0000000000000015 __func__.12
0000000000017df4 l     O .rodata	000000000000000e __func__.10
0000000000017e02 l     O .rodata	000000000000000e __func__.9
0000000000017e10 l     O .rodata	000000000000000e __func__.8
0000000000017e1e l     O .rodata	0000000000000011 __func__.6
0000000000017e2f l     O .rodata	0000000000000018 __func__.5
0000000000017e47 l     O .rodata	0000000000000011 __func__.4
0000000000017e58 l     O .rodata	000000000000001d __func__.3
0000000000017e75 l     O .rodata	0000000000000019 __func__.1
0000000000017e8e l     O .rodata	0000000000000015 __func__.0
0000000000000000 l    df *ABS*	0000000000000000 tee_api_panic.c
0000000000005530 l     F .text	000000000000001c check_access
0000000000005554 l     F .text	0000000000000010 check_res.constprop.0
00000000000056e4 l     F .text	0000000000000024 __utee_check_attr_in_annotation.localalias
0000000000000000 l    df *ABS*	0000000000000000 tee_api_property.c
000000000000572c l     F .text	000000000000006c propset_get
0000000000005798 l     F .text	000000000000002c is_propset_pseudo_handle
00000000000057c4 l     F .text	0000000000000140 propget_get_ext_prop
0000000000005904 l     F .text	00000000000001f8 propget_get_property
00000000000175f4 l     O .rodata	0000000000000004 __compound_literal.3
00000000000175f8 l     O .rodata	0000000000000004 __compound_literal.2
00000000000175fc l     O .rodata	0000000000000004 __compound_literal.1
0000000000017600 l     O .rodata	0000000000000004 __compound_literal.0
0000000000000000 l    df *ABS*	0000000000000000 tee_system_pta.c
00000000000066fc l     F .text	0000000000000084 invoke_system_pta
0000000000017604 l     O .rodata	0000000000000010 uuid.2
0000000000017614 l     O .rodata	000000000000000a __func__.1
000000000001761e l     O .rodata	0000000000000017 __func__.0
000000000001cf10 l     O .bss	0000000000000008 sess.3
0000000000000000 l    df *ABS*	0000000000000000 tcb.c
0000000000018005 l     O .rodata	0000000000000010 __func__.1
0000000000018015 l     O .rodata	0000000000000010 __func__.0
000000000001cf18 l     O .bss	0000000000000008 _tls_size
000000000001cf20 l     O .bss	0000000000000008 _tcb
0000000000000000 l    df *ABS*	0000000000000000 assert.c
0000000000000000 l    df *ABS*	0000000000000000 base64.c
000000000001763c l     O .rodata	0000000000000041 base64_table
0000000000000000 l    df *ABS*	0000000000000000 bignum.c
0000000000006fac l     F .text	0000000000000064 mpi_get_digit
0000000000007010 l     F .text	0000000000000068 mpi_select
0000000000007078 l     F .text	000000000000001c mpi_montmul.isra.0
0000000000007094 l     F .text	0000000000000078 mpi_montred
000000000000729c l     F .text	000000000000006c mbedtls_mpi_resize_clear
0000000000007d18 l     F .text	00000000000000a4 add_sub_mpi
0000000000008c94 l     F .text	00000000000000c4 mpi_check_small_factors
0000000000009668 l     F .text	00000000000002a4 mpi_miller_rabin
0000000000017680 l     O .rodata	00000000000002a0 small_prime
0000000000017920 l     O .rodata	0000000000000024 gcd_pairs
0000000000000000 l    df *ABS*	0000000000000000 bignum_core.c
0000000000000000 l    df *ABS*	0000000000000000 constant_time.c
000000000000b4b8 l     F .text	0000000000000020 mbedtls_ct_uchar_mask_of_range
0000000000000000 l    df *ABS*	0000000000000000 platform_util.c
000000000000bc98 l     F .text	000000000000005c mbedtls_get_unaligned_uint32.localalias
000000000000bcf4 l     F .text	0000000000000020 mbedtls_put_unaligned_uint32.localalias
00000000000195c0 l     O .data	0000000000000008 memset_func
0000000000000000 l    df *ABS*	0000000000000000 bget_malloc.c
000000000000be48 l     F .text	0000000000000024 myrand
000000000000be6c l     F .text	0000000000000010 _assert_trap
000000000000be7c l     F .text	0000000000000028 bget_buf_size.part.0
000000000000bea4 l     F .text	0000000000000038 raw_malloc_return_hook.constprop.0
000000000000c73c l     F .text	0000000000000088 stats.constprop.0
000000000001884b l     O .rodata	000000000000000e __func__.2
0000000000018859 l     O .rodata	0000000000000005 __func__.9
000000000001885e l     O .rodata	0000000000000006 __func__.8
0000000000018864 l     O .rodata	0000000000000005 __func__.6
0000000000018869 l     O .rodata	0000000000000006 __func__.7
000000000001886f l     O .rodata	0000000000000006 __func__.5
0000000000018875 l     O .rodata	0000000000000007 __func__.4
000000000001887c l     O .rodata	000000000000000f __func__.3
000000000001888b l     O .rodata	0000000000000003 CSWTCH.111
000000000001888e l     O .rodata	0000000000000014 __func__.1
00000000000188a2 l     O .rodata	0000000000000013 __func__.0
00000000000195c8 l     O .data	0000000000000008 next
000000000001cf30 l     O .bss	0000000000000008 bchain
00000000000195d0 l     O .data	0000000000000038 mypoolset
0000000000019608 l     O .data	0000000000000080 malloc_ctx
0000000000000000 l    df *ABS*	0000000000000000 snprintf.c
0000000000000000 l    df *ABS*	0000000000000000 memmove.c
0000000000000000 l    df *ABS*	0000000000000000 memset.c
0000000000000000 l    df *ABS*	0000000000000000 strcmp.c
0000000000000000 l    df *ABS*	0000000000000000 strlcpy.c
0000000000000000 l    df *ABS*	0000000000000000 mempool.c
000000000001893e l     O .rodata	0000000000000013 __func__.2
0000000000018951 l     O .rodata	000000000000000b __func__.1
000000000001895c l     O .rodata	000000000000000e __func__.0
0000000000000000 l    df *ABS*	0000000000000000 consttime_memcmp.c
0000000000000000 l    df *ABS*	0000000000000000 tee_api_operations.c
000000000000d4d8 l     F .text	000000000000011c __tee_alg_get_main_alg
000000000000d5f4 l     F .text	0000000000000250 tee_buffer_update
000000000000d844 l     F .text	000000000000009c __tee_alg_get_class
000000000000d8e0 l     F .text	00000000000000ec ae_update_helper
000000000000d9cc l     F .text	000000000000005c reset_operation_state
000000000000da28 l     F .text	00000000000001e4 set_operation_key2
0000000000017952 l     O .rodata	0000000000000012 __func__.0
0000000000000000 l    df *ABS*	0000000000000000 tee_api_objects.c
0000000000000000 l    df *ABS*	0000000000000000 
0000000000019000 l     O *ABS*	0000000000000000 _DYNAMIC
0000000000019128 l     O *ABS*	0000000000000000 _GLOBAL_OFFSET_TABLE_
000000000000165c g     F .text	0000000000000070 putchar
0000000000003dac g     F .text	0000000000000008 __GP11_TEE_BigIntConvertFromOctetString
000000000001230c g     F .text	0000000000000110 TEE_PopulateTransientObject
000000000000fdd4 g     F .text	0000000000000010 __GP11_TEE_AEInit
000000000000ab94 g     F .text	0000000000000070 mbedtls_mpi_core_add_if
000000000000530c g     F .text	0000000000000004 TEE_BigIntConvertToFMM
0000000000004b60 g     F .text	000000000000000c TEE_BigIntSquareMod
0000000000004334 g     F .text	00000000000001a0 TEE_BigIntShiftRight
000000000000cd94 g     F .text	00000000000000d4 raw_malloc_add_pool
00000000000068d0 g     F .text	00000000000000e8 tee_invoke_supp_plugin
000000000000afa8 g     F .text	00000000000000b0 mbedtls_mpi_core_fill_random
00000000000071b4 g     F .text	00000000000000e8 mbedtls_mpi_grow
000000000000eee4 g     F .text	0000000000000070 TEE_DigestUpdate
0000000000006460 g     F .text	0000000000000130 __GP11_TEE_GetPropertyName
00000000000032b4 g     F .text	00000000000000f4 TEE_Realloc
000000000000aa7c g     F .text	00000000000000dc mbedtls_mpi_core_shift_r
000000000000ed1c g     F .text	0000000000000020 TEE_SetOperationKey2
000000000000fb5c g     F .text	00000000000000a4 __GP11_TEE_MACComputeFinal
000000000000570c g     F .text	0000000000000020 __utee_check_inout_annotation
000000000000cb44 g     F .text	0000000000000010 raw_free
000000000000151c g     F .text	0000000000000100 printf
00000000000046d8 g     F .text	000000000000002c TEE_BigIntAbs
000000000000f58c g     F .text	00000000000000a4 __GP11_TEE_CipherUpdate
000000000001252c g     F .text	000000000000004c TEE_InitRefAttribute
0000000000002038 g     F .text	000000000000000c _utee_log
0000000000002ca0 g     F .text	0000000000000184 TEE_InvokeTACommand
0000000000012614 g     F .text	000000000000004c __GP11_TEE_InitValueAttribute
0000000000005564 g     F .text	000000000000004c __utee_check_outbuf_annotation
000000000000a9c4 g     F .text	00000000000000b8 mbedtls_mpi_core_write_be
0000000000007120 g     F .text	0000000000000028 mbedtls_mpi_init_mempool
00000000000021b8 g     F .text	000000000000000c _utee_cryp_random_number_generate
00000000000077d8 g     F .text	0000000000000010 mbedtls_mpi_write_binary
00000000000100e0 g     F .text	0000000000000200 TEE_AEEncryptFinal
000000000000076c g     F .text	0000000000000058 vsnprintk
0000000000007e44 g     F .text	0000000000000078 mbedtls_mpi_sub_int
0000000000010ad8 g     F .text	0000000000000178 __GP11_TEE_AsymmetricDecrypt
000000000000d1fc g     F .text	000000000000005c memmove
000000000000d0d0 g     F .text	00000000000000d4 snprintf
00000000000040e4 g     F .text	0000000000000080 TEE_BigIntCmpS32
0000000000002fc0 g     F .text	0000000000000008 __GP11_TEE_MemMove
0000000000019538 g     O .data	0000000000000008 __stack_chk_guard
000000000000ba28 g     F .text	0000000000000204 mbedtls_ct_rsaes_pkcs1_v15_unpadding
00000000000125c8 g     F .text	000000000000004c TEE_InitValueAttribute
0000000000007308 g     F .text	0000000000000118 mbedtls_mpi_shrink
0000000000002fd8 g     F .text	0000000000000008 __GP11_TEE_MemFill
0000000000004704 g     F .text	000000000000000c TEE_BigIntAdd
0000000000002158 g     F .text	000000000000000c _utee_cryp_obj_restrict_usage
0000000000012578 g     F .text	0000000000000050 __GP11_TEE_InitRefAttribute
0000000000017508 g     O .rodata	0000000000000008 ta_heap_size
000000000001227c g     F .text	0000000000000090 TEE_ResetTransientObject
0000000000002200 g     F .text	000000000000000c _utee_asymm_operate
0000000000006d5c g     F .text	0000000000000018 _base64_enc_len
000000000000812c g     F .text	000000000000020c mbedtls_mpi_read_string
00000000000128c0 g     F .text	00000000000000d4 __GP11_TEE_GenerateKey
000000000000f310 g     F .text	00000000000000e0 TEE_CipherInit
000000000000ac48 g     F .text	00000000000001cc mbedtls_mpi_core_mla
000000000000471c g     F .text	00000000000000e4 TEE_BigIntNeg
0000000000002254 g     F .text	000000000000000c _utee_storage_free_enum
0000000000000000 g       .text	0000000000000000 __text_start
000000000000661c g     F .text	00000000000000e0 TEE_GetNextProperty
0000000000012df8 g     F .text	0000000000000050 TEE_StartPersistentObjectEnumerator
00000000000078f8 g     F .text	0000000000000030 mbedtls_mpi_shift_r
000000000000d0b8 g     F .text	0000000000000018 malloc_buffer_overlaps_heap
0000000000002104 g     F .text	000000000000000c _utee_hash_init
0000000000004b48 g     F .text	000000000000000c TEE_BigIntSubMod
0000000000009edc g     F .text	000000000000034c mbedtls_mpi_gen_prime
000000000000618c g     F .text	000000000000009c TEE_GetPropertyAsBinaryBlock
00000000000075e0 g     F .text	000000000000002c mbedtls_mpi_get_bit
000000000000b058 g     F .text	00000000000000f8 mbedtls_mpi_core_random
0000000000017500 g     O .rodata	0000000000000008 __ta_no_share_heap_size
000000000000776c g     F .text	000000000000005c mbedtls_mpi_read_binary
000000000000fd10 g     F .text	00000000000000c4 TEE_AEInit
0000000000000590 g     F .text	00000000000000e4 trace_printf
0000000000008d80 g     F .text	000000000000000c mbedtls_mpi_montmul
00000000000022c0 g     F .text	000000000000000c _utee_cache_operation
0000000000000000 g     F .text	00000000000000ec memcpy
000000000000b178 g     F .text	0000000000000260 mbedtls_mpi_core_exp_mod
0000000000005310 g     F .text	00000000000000d4 TEE_BigIntConvertFromFMM
000000000000554c g     F .text	0000000000000008 TEE_Panic
000000000000ed88 g     F .text	000000000000015c TEE_CopyOperation
000000000000161c g     F .text	0000000000000040 puts
00000000000053e4 g     F .text	000000000000014c TEE_BigIntComputeFMM
000000000000d074 g     F .text	0000000000000014 malloc_get_stats
0000000000003100 g     F .text	0000000000000028 TEE_GetREETime
000000000000d038 g     F .text	000000000000003c raw_malloc_get_stats
0000000000012d18 g     F .text	0000000000000090 TEE_AllocatePersistentObjectEnumerator
0000000000019430 g     O .data	0000000000000108 ta_props
0000000000010648 g     F .text	000000000000018c TEE_AsymmetricEncrypt
000000000000324c g     F .text	0000000000000008 __GP11_TEE_Malloc
0000000000002b58 g     F .text	0000000000000148 __GP11_TEE_OpenTASession
00000000000055fc g     F .text	0000000000000030 __utee_check_instring_annotation
000000000000ccb8 g     F .text	000000000000001c malloc
000000000000644c g     F .text	0000000000000004 TEE_FreePropertyEnumerator
000000000000b51c g     F .text	0000000000000010 mbedtls_ct_mpi_uint_mask
000000000000f3f0 g     F .text	0000000000000008 __GP11_TEE_CipherInit
00000000000127ec g     F .text	00000000000000d4 TEE_GenerateKey
000000000000d1a4 g     F .text	0000000000000058 vsnprintf
0000000000019688 g     O .data	0000000000000004 trace_level
0000000000012a78 g     F .text	0000000000000008 __GP11_TEE_OpenPersistentObject
000000000000404c g     F .text	0000000000000098 TEE_BigIntCmp
00000000000174e0 g     O .rodata	0000000000000008 ta_num_props
000000000000c508 g     F .text	00000000000000d0 bgetr
0000000000002218 g     F .text	000000000000000c _utee_storage_obj_open
0000000000002fcc g     F .text	0000000000000008 __GP11_TEE_MemCompare
000000000000d44c g     F .text	000000000000001c mempool_free
000000000000f3f8 g     F .text	0000000000000194 TEE_CipherUpdate
0000000000002110 g     F .text	000000000000000c _utee_hash_update
0000000000003db4 g     F .text	00000000000000c8 TEE_BigIntConvertToOctetString
000000000000e91c g     F .text	00000000000001b0 TEE_GetOperationInfoMultiple
00000000000076ec g     F .text	0000000000000008 mbedtls_mpi_bitlen
00000000000044dc g     F .text	0000000000000084 TEE_BigIntGetBit
0000000000017510 g     O .rodata	0000000000000003 trace_ext_prefix
0000000000002278 g     F .text	000000000000000c _utee_storage_next_enum
000000000000cb34 g     F .text	0000000000000010 raw_malloc
000000000000c1bc g     F .text	0000000000000088 bgetz
000000000000b52c g     F .text	0000000000000018 mbedtls_ct_size_bool_eq
0000000000002fb0 g     F .text	000000000000000c TEE_GetInstanceData
0000000000003008 g     F .text	000000000000003c TEE_Wait
0000000000007ebc g     F .text	00000000000001bc mbedtls_mpi_mul_mpi
00000000000044d4 g     F .text	0000000000000008 __GP11_TEE_BigIntShiftRight
000000000000bd70 g     F .text	0000000000000020 mbedtls_put_unaligned_uint64
00000000000033b8 g     F .text	0000000000000008 TEE_CacheFlush
0000000000000374 g     F .text	000000000000021c trace_vprintf
0000000000000120 g     F .text	0000000000000024 TA_DestroyEntryPoint
000000000000710c g     F .text	0000000000000014 mbedtls_mpi_init
0000000000002230 g     F .text	000000000000000c _utee_storage_obj_del
0000000000007698 g     F .text	0000000000000054 mbedtls_mpi_lsb
000000000000f848 g     F .text	00000000000000b0 __GP11_TEE_CipherDoFinal
0000000000006d04 g     F .text	0000000000000044 _assert_log
000000000000ffe0 g     F .text	0000000000000100 __GP11_TEE_AEUpdate
00000000000020ec g     F .text	000000000000000c _utee_cryp_state_copy
00000000000052ec g     F .text	0000000000000008 TEE_BigIntFMMContextSizeInU32
0000000000006814 g     F .text	00000000000000bc tee_unmap
000000000000fc00 g     F .text	0000000000000104 TEE_MACCompareFinal
000000000000b560 g     F .text	0000000000000030 mbedtls_ct_uint_if
0000000000012cb4 g     F .text	000000000000005c TEE_RenamePersistentObject
000000000000ef5c g     F .text	000000000000016c TEE_DigestDoFinal
000000000001241c g     F .text	0000000000000110 __GP11_TEE_PopulateTransientObject
0000000000003c2c g     F .text	0000000000000050 _TEE_MathAPI_Init
000000000000bd90 g     F .text	0000000000000098 mbedtls_xor
00000000000069b8 g     F .text	0000000000000240 __utee_tcb_init
0000000000007dbc g     F .text	0000000000000008 mbedtls_mpi_add_mpi
00000000000022cc g     F .text	0000000000000020 abort
000000000000990c g     F .text	0000000000000094 mbedtls_mpi_random
0000000000000678 g     F .text	0000000000000030 __stack_chk_fail
00000000000056c4 g     F .text	0000000000000020 __utee_check_out_annotation
000000000001cf38 g     O .bss	0000000000008000 ta_heap
0000000000004b6c g     F .text	0000000000000150 TEE_BigIntInvMod
000000000000ef54 g     F .text	0000000000000008 __GP11_TEE_DigestUpdate
0000000000001994 g     F .text	000000000000014c __utee_call_elf_init_fn
0000000000011b10 g     F .text	00000000000000c8 __GP11_TEE_GetObjectInfo
00000000000001b4 g     F .text	0000000000000024 TA_CloseSessionEntryPoint
00000000000001d8 g     F .text	000000000000013c __GP11_TA_InvokeCommandEntryPoint
0000000000002074 g     F .text	000000000000000c _utee_close_ta_session
0000000000011c88 g     F .text	00000000000000c0 __GP11_TEE_GetObjectInfo1
0000000000010948 g     F .text	0000000000000190 TEE_AsymmetricDecrypt
00000000000052b4 g     F .text	0000000000000008 __GP11_TEE_BigIntInitFMMContext
0000000000012994 g     F .text	00000000000000e4 TEE_OpenPersistentObject
000000000000b408 g     F .text	0000000000000028 mbedtls_mpi_core_check_zero_ct
0000000000007dc4 g     F .text	0000000000000008 mbedtls_mpi_sub_mpi
000000000000d468 g     F .text	0000000000000070 consttime_memcmp
000000000000202c g     F .text	000000000000000c _utee_return
0000000000002044 g     F .text	000000000000000c __utee_panic
000000000000b4d8 g     F .text	0000000000000034 mbedtls_ct_memcmp
0000000000006bf8 g     F .text	000000000000001c __tls_get_addr
000000000000033c g     F .text	000000000000000c TA_InvokeCommandEntryPoint
0000000000001ae0 g     F .text	0000000000000010 __utee_call_elf_fini_fn
000000000000cd5c g     F .text	0000000000000014 free_wipe
000000000000d398 g     F .text	0000000000000064 mempool_alloc
0000000000002020 g     F .text	000000000000000c _utee_panic
000000000000cd78 g     F .text	000000000000001c raw_malloc_init_ctx
000000000000d3fc g     F .text	0000000000000050 mempool_calloc
00000000000022b4 g     F .text	000000000000000c _utee_cryp_obj_generate_key
0000000000012758 g     F .text	0000000000000094 TEE_CopyObjectAttributes
000000000000229c g     F .text	000000000000000c _utee_storage_obj_trunc
0000000000019560 g     O .data	0000000000000060 tee_props
00000000000020a4 g     F .text	000000000000000c _utee_unmask_cancellation
00000000000063f8 g     F .text	000000000000000c TEE_ResetPropertyEnumerator
000000000000ccd4 g     F .text	0000000000000020 calloc
0000000000003128 g     F .text	0000000000000124 TEE_Malloc
00000000000027e0 g     F .text	0000000000000088 TEE_CheckMemoryAccessRights
000000000000bc98 g     F .text	000000000000005c mbedtls_get_unaligned_uint32
0000000000006228 g     F .text	00000000000000e8 TEE_GetPropertyAsUUID
0000000000002050 g     F .text	000000000000000c _utee_get_property
000000000000f0c8 g     F .text	00000000000000a4 __GP11_TEE_DigestDoFinal
00000000000045d8 g     F .text	00000000000000b0 TEE_BigIntSetBit
0000000000007578 g     F .text	0000000000000068 mbedtls_mpi_lset
000000000000ed3c g     F .text	000000000000004c __GP11_TEE_SetOperationKey2
0000000000013090 g     F .text	00000000000000c8 TEE_ReadObjectData
0000000000011e1c g     F .text	0000000000000104 TEE_GetObjectBufferAttribute
0000000000000330 g     F .text	000000000000000c TA_OpenSessionEntryPoint
000000000000b3d8 g     F .text	0000000000000030 mbedtls_mpi_core_sub_int
0000000000000144 g     F .text	0000000000000070 __GP11_TA_OpenSessionEntryPoint
000000000000dc0c g     F .text	0000000000000040 TEE_FreeOperation
0000000000006c14 g     F .text	00000000000000f0 dl_iterate_phdr
0000000000024f38 g       .bss	0000000000000000 __ftrace_buf_end
00000000000196f8 g     O .bss	0000000000000004 ta_param_types
0000000000008858 g     F .text	0000000000000078 mbedtls_mpi_div_int
00000000000119b4 g     F .text	0000000000000050 __utee_from_attr
000000000000a918 g     F .text	00000000000000ac mbedtls_mpi_core_write_le
0000000000009df8 g     F .text	00000000000000e4 mbedtls_mpi_is_prime_ext
000000000000520c g     F .text	0000000000000098 TEE_BigIntIsProbablePrime
000000000000bcf4 g     F .text	0000000000000020 mbedtls_put_unaligned_uint32
0000000000008078 g     F .text	00000000000000b4 mbedtls_mpi_mul_int
0000000000012c40 g     F .text	0000000000000048 TEE_CloseAndDeletePersistentObject1
0000000000008d90 g     F .text	0000000000000698 mbedtls_mpi_exp_mod
000000000000b73c g     F .text	00000000000000bc mbedtls_mpi_safe_cond_assign
0000000000005afc g     F .text	0000000000000264 TEE_GetPropertyAsString
000000000000b930 g     F .text	00000000000000f8 mbedtls_mpi_lt_mpi_ct
00000000000103b8 g     F .text	00000000000001d4 TEE_AEDecryptFinal
0000000000003c7c g     F .text	0000000000000060 TEE_BigIntInit
0000000000003e7c g     F .text	0000000000000064 __GP11_TEE_BigIntConvertToOctetString
0000000000004688 g     F .text	0000000000000050 TEE_BigIntAssign
000000000000562c g     F .text	000000000000004c __utee_check_outstring_annotation
0000000000002fbc g     F .text	0000000000000004 TEE_MemMove
000000000000be28 g     F .text	0000000000000020 mbedtls_platform_zeroize
0000000000003ce4 g     F .text	00000000000000c8 TEE_BigIntConvertFromOctetString
00000000000021f4 g     F .text	000000000000000c _utee_authenc_dec_final
0000000000007928 g     F .text	000000000000009c mbedtls_mpi_cmp_abs
0000000000002284 g     F .text	000000000000000c _utee_storage_obj_read
000000000000f8f8 g     F .text	00000000000000a4 TEE_MACInit
0000000000010c50 g     F .text	000000000000016c TEE_AsymmetricSignDigest
00000000000014a4 g     F .text	000000000000002c memchr
0000000000002720 g     F .text	0000000000000060 TEE_UnmaskCancellation
0000000000011a54 g     F .text	00000000000000bc TEE_GetObjectInfo
000000000000a228 g     F .text	0000000000000420 mbedtls_mpi_self_test
00000000000055b0 g     F .text	000000000000004c __utee_check_gp11_outbuf_annotation
00000000000022a8 g     F .text	000000000000000c _utee_storage_obj_seek
000000000000ff14 g     F .text	00000000000000cc TEE_AEUpdate
00000000000121ec g     F .text	0000000000000090 TEE_FreeTransientObject
000000000000a780 g     F .text	000000000000007c mbedtls_mpi_core_cond_swap
0000000000002098 g     F .text	000000000000000c _utee_check_access_rights
000000000000a888 g     F .text	0000000000000090 mbedtls_mpi_core_read_be
0000000000002e24 g     F .text	0000000000000178 __GP11_TEE_InvokeTACommand
0000000000007a94 g     F .text	0000000000000078 mbedtls_mpi_cmp_int
0000000000006e88 g     F .text	0000000000000124 _base64_dec
000000000000e89c g     F .text	000000000000002c __GP11_TEE_FreeOperation
0000000000002260 g     F .text	000000000000000c _utee_storage_reset_enum
000000000000b680 g     F .text	00000000000000bc mbedtls_ct_base64_dec_value
000000000000c7c4 g     F .text	00000000000002d4 bget_main_test
00000000000114f0 g     F .text	000000000000005c rand
00000000000056e4 g     F .text	0000000000000024 __utee_check_attr_in_annotation
00000000000021dc g     F .text	000000000000000c _utee_authenc_update_payload
000000000000e8c8 g     F .text	0000000000000054 TEE_GetOperationInfo
0000000000004ad0 g     F .text	000000000000006c TEE_BigIntMod
0000000000008984 g     F .text	000000000000009c mbedtls_mpi_mod_int
0000000000010dbc g     F .text	000000000000016c __GP11_TEE_AsymmetricSignDigest
0000000000007710 g     F .text	000000000000005c mbedtls_mpi_read_binary_le
000000000000491c g     F .text	00000000000001b4 TEE_BigIntDiv
0000000000002170 g     F .text	000000000000000c _utee_cryp_obj_alloc
0000000000024f38 g       .bss	0000000000000000 __ftrace_buf_start
000000000000d298 g     F .text	0000000000000038 strlcpy
000000000000b5cc g     F .text	00000000000000b4 mbedtls_ct_base64_enc_char
0000000000007420 g     F .text	00000000000000cc mbedtls_mpi_copy
000000000001154c g     F .text	0000000000000468 TEE_IsAlgorithmSupported
000000000000a648 g     F .text	0000000000000028 mbedtls_mpi_core_clz
000000000000ca98 g     F .text	0000000000000018 malloc_reset_stats
0000000000006310 g     F .text	00000000000000e8 TEE_GetPropertyAsIdentity
0000000000001458 g     F .text	000000000000004c __vsprintf
0000000000005fbc g     F .text	00000000000000e8 TEE_GetPropertyAsU64
00000000000020d4 g     F .text	000000000000000c _utee_set_ta_time
0000000000002080 g     F .text	000000000000000c _utee_invoke_ta_command
000000000000bc80 g     F .text	0000000000000018 mbedtls_put_unaligned_uint16
0000000000011d48 g     F .text	0000000000000044 TEE_RestrictObjectUsage1
000000000000ccf4 g     F .text	000000000000001c realloc
00000000000074ec g     F .text	000000000000008c mbedtls_mpi_swap
000000000000d2d0 g     F .text	00000000000000c8 mempool_alloc_pool
0000000000004800 g     F .text	0000000000000114 TEE_BigIntMul
000000000000eb58 g     F .text	000000000000003c TEE_ResetOperation
000000000000cd70 g     F .text	0000000000000008 raw_malloc_get_ctx_size
00000000000077e8 g     F .text	0000000000000110 mbedtls_mpi_shift_l
00000000000079c4 g     F .text	00000000000000d0 mbedtls_mpi_cmp_mpi
0000000000002fd4 g     F .text	0000000000000004 TEE_MemFill
000000000000d088 g     F .text	0000000000000018 malloc_add_pool
000000000000f9a4 g     F .text	00000000000000a0 TEE_MACUpdate
0000000000000364 g     F .text	0000000000000010 trace_get_level
0000000000007b0c g     F .text	00000000000000f8 mbedtls_mpi_add_abs
0000000000011d8c g     F .text	0000000000000090 TEE_RestrictObjectUsage
00000000000052c4 g     F .text	0000000000000010 TEE_BigIntFMMSizeInU32
0000000000005dfc g     F .text	00000000000000d8 TEE_GetPropertyAsBool
000000000000cbc4 g     F .text	00000000000000f4 raw_realloc
00000000000052a4 g     F .text	0000000000000004 TEE_BigIntInitFMM
00000000000120f4 g     F .text	0000000000000028 TEE_CloseObject
0000000000002128 g     F .text	000000000000000c _utee_cipher_init
0000000000001b84 g     F .text	0000000000000288 __utee_entry
0000000000005ed4 g     F .text	00000000000000e8 TEE_GetPropertyAsU32
00000000000133f8 g       .text	0000000000000000 __text_end
0000000000004cbc g     F .text	0000000000000108 TEE_BigIntRelativePrime
00000000000088d0 g     F .text	00000000000000b4 mbedtls_mpi_mod_mpi
000000000000b8b0 g     F .text	0000000000000080 mbedtls_mpi_core_lt_ct
000000000000214c g     F .text	000000000000000c _utee_cryp_obj_get_info
000000000000ac04 g     F .text	0000000000000044 mbedtls_mpi_core_sub
000000000000c5d8 g     F .text	00000000000000d0 bpool
0000000000006404 g     F .text	0000000000000048 TEE_AllocatePropertyEnumerator
00000000000020e0 g     F .text	000000000000000c _utee_cryp_state_alloc
00000000000026c0 g     F .text	0000000000000060 TEE_GetCancellationFlag
0000000000012bc4 g     F .text	000000000000007c __GP11_TEE_CreatePersistentObject
000000000000bc2c g     F .text	0000000000000054 mbedtls_get_unaligned_uint16
0000000000009428 g     F .text	00000000000001d8 mbedtls_mpi_gcd
00000000000030bc g     F .text	0000000000000044 TEE_SetTAPersistentTime
00000000000077c8 g     F .text	0000000000000010 mbedtls_mpi_write_binary_le
000000000000d258 g     F .text	000000000000001c memset
000000000000cab0 g     F .text	0000000000000084 raw_memalign
0000000000003044 g     F .text	0000000000000078 TEE_GetTAPersistentTime
000000000000ece0 g     F .text	000000000000003c __GP11_TEE_SetOperationKey
00000000000102e0 g     F .text	00000000000000d8 __GP11_TEE_AEEncryptFinal
000000000000bd14 g     F .text	000000000000005c mbedtls_get_unaligned_uint64
0000000000000674 g     F .text	0000000000000004 dhex_dump
000000000000a6c4 g     F .text	0000000000000034 mbedtls_mpi_core_bigendian_to_host
0000000000012a80 g     F .text	0000000000000144 TEE_CreatePersistentObject
0000000000002780 g     F .text	0000000000000060 TEE_MaskCancellation
000000000000fde4 g     F .text	000000000000009c TEE_AEUpdateAAD
0000000000013274 g     F .text	000000000000005c TEE_TruncateObjectData
0000000000002164 g     F .text	000000000000000c _utee_cryp_obj_get_attr
0000000000011bd8 g     F .text	00000000000000b0 TEE_GetObjectInfo1
0000000000002140 g     F .text	000000000000000c _utee_cipher_final
0000000000000348 g     F .text	000000000000001c trace_set_level
000000000000b430 g     F .text	000000000000001c mbedtls_mpi_core_to_mont_rep
0000000000011fbc g     F .text	0000000000000138 TEE_GetObjectValueAttribute
000000000000eb94 g     F .text	000000000000014c TEE_SetOperationKey
000000000000b544 g     F .text	000000000000001c mbedtls_ct_mpi_uint_lt
0000000000011f20 g     F .text	000000000000009c __GP11_TEE_GetObjectBufferAttribute
00000000000020f8 g     F .text	000000000000000c _utee_cryp_state_free
000000000000d274 g     F .text	0000000000000024 strcmp
0000000000002068 g     F .text	000000000000000c _utee_open_ta_session
0000000000003f94 g     F .text	00000000000000b8 TEE_BigIntConvertToS32
0000000000004710 g     F .text	000000000000000c TEE_BigIntSub
00000000000133f0 g     F .text	0000000000000008 __GP11_TEE_SeekObjectData
0000000000000328 g     F .text	0000000000000008 tahead_get_trace_level
000000000000226c g     F .text	000000000000000c _utee_storage_start_enum
00000000000132d8 g     F .text	0000000000000118 TEE_SeekObjectData
0000000000006780 g     F .text	0000000000000094 tee_map_zi
00000000000132d0 g     F .text	0000000000000008 __GP11_TEE_TruncateObjectData
0000000000008d8c g     F .text	0000000000000004 mbedtls_mpi_montred
000000000000cd10 g     F .text	0000000000000020 memalign
000000000000b50c g     F .text	0000000000000010 mbedtls_ct_uint_mask
000000000000f630 g     F .text	0000000000000218 TEE_CipherDoFinal
0000000000003cdc g     F .text	0000000000000008 __GP11_TEE_BigIntInit
0000000000003ee0 g     F .text	00000000000000b4 TEE_BigIntConvertFromS32
0000000000007dcc g     F .text	0000000000000078 mbedtls_mpi_add_int
00000000000021e8 g     F .text	000000000000000c _utee_authenc_enc_final
000000000000d0a0 g     F .text	0000000000000018 malloc_buffer_is_within_alloced
000000000000217c g     F .text	000000000000000c _utee_cryp_obj_close
00000000000114e8 g     F .text	0000000000000008 __GP11_TEE_GenerateRandom
00000000000052b0 g     F .text	0000000000000004 TEE_BigIntInitFMMContext
00000000000020b0 g     F .text	000000000000000c _utee_mask_cancellation
00000000000196b0 g     O .bss	0000000000000008 __ta_no_share_malloc_ctx
000000000000223c g     F .text	000000000000000c _utee_storage_obj_rename
0000000000012f64 g     F .text	000000000000012c __GP11_TEE_GetNextPersistentObject
00000000000131f4 g     F .text	0000000000000078 TEE_WriteObjectData
0000000000012dd0 g     F .text	0000000000000028 TEE_ResetPersistentObjectEnumerator
0000000000002f9c g     F .text	0000000000000008 __GP11_TEE_CheckMemoryAccessRights
0000000000004914 g     F .text	0000000000000008 TEE_BigIntSquare
0000000000002290 g     F .text	000000000000000c _utee_storage_obj_write
000000000000a670 g     F .text	0000000000000054 mbedtls_mpi_core_bitlen
00000000000000ec g     F .text	0000000000000034 TA_CreateEntryPoint
0000000000000314 g     F .text	0000000000000014 __ta_entry
0000000000024f38 g     O .bss	0000000000000000 __ta_no_share_heap
00000000000021d0 g     F .text	000000000000000c _utee_authenc_update_aad
0000000000008d58 g     F .text	0000000000000028 mbedtls_mpi_montg_init
00000000000007c4 g     F .text	00000000000000d0 snprintk
0000000000004560 g     F .text	0000000000000078 TEE_BigIntGetBitCount
00000000000021a0 g     F .text	000000000000000c _utee_cryp_obj_copy
000000000000fe80 g     F .text	0000000000000094 __GP11_TEE_AEUpdateAAD
0000000000004b54 g     F .text	000000000000000c TEE_BigIntMulMod
00000000000099a0 g     F .text	0000000000000458 mbedtls_mpi_inv_mod
0000000000005708 g     F .text	0000000000000004 __utee_check_gp11_attr_in_annotation
00000000000111d8 g     F .text	0000000000000178 TEE_DeriveKey
00000000000196b8 g     O .bss	0000000000000040 ta_params
0000000000008338 g     F .text	0000000000000520 mbedtls_mpi_div_mpi
0000000000005678 g     F .text	000000000000004c __utee_check_gp11_outstring_annotation
00000000000076f4 g     F .text	000000000000001c mbedtls_mpi_size
000000000000bedc g     F .text	00000000000002e0 bget
0000000000013158 g     F .text	000000000000009c __GP11_TEE_ReadObjectData
00000000000121d0 g     F .text	000000000000001c TEE_AllocateTransientObject
000000000000fa44 g     F .text	0000000000000008 __GP11_TEE_MACUpdate
00000000000052f4 g     F .text	0000000000000018 __GP11_TEE_BigIntFMMContextSizeInU32
0000000000006450 g     F .text	0000000000000010 TEE_StartPropertyEnumerator
00000000000020bc g     F .text	000000000000000c _utee_wait
000000000000760c g     F .text	000000000000008c mbedtls_mpi_set_bit
000000000000a6f8 g     F .text	0000000000000064 mbedtls_mpi_core_uint_le_mpi
0000000000003254 g     F .text	0000000000000060 TEE_Free
00000000000033c0 g     F .text	0000000000000008 TEE_CacheInvalidate
0000000000006d48 g     F .text	0000000000000014 _assert_break
000000000000b150 g     F .text	0000000000000028 mbedtls_mpi_core_exp_mod_working_limbs
0000000000004b3c g     F .text	000000000000000c TEE_BigIntAddMod
000000000000b590 g     F .text	000000000000003c mbedtls_ct_mpi_uint_cond_assign
00000000000052a8 g     F .text	0000000000000008 __GP11_TEE_BigIntInitFMM
00000000000020c8 g     F .text	000000000000000c _utee_get_time
000000000000ab58 g     F .text	000000000000003c mbedtls_mpi_core_add
0000000000006590 g     F .text	000000000000008c TEE_GetPropertyName
00000000000033a8 g     F .text	0000000000000008 __GP11_TEE_Realloc
000000000000dc4c g     F .text	0000000000000c50 TEE_AllocateOperation
0000000000002194 g     F .text	000000000000000c _utee_cryp_obj_populate
000000000000a7fc g     F .text	000000000000008c mbedtls_mpi_core_read_le
000000000000eacc g     F .text	000000000000008c __GP11_TEE_GetOperationInfoMultiple
0000000000011a04 g     F .text	0000000000000050 __utee_from_gp11_attr
00000000000114c8 g     F .text	0000000000000020 TEE_GenerateRandom
000000000000f16c g     F .text	00000000000001a4 TEE_DigestExtract
0000000000002fc8 g     F .text	0000000000000004 TEE_MemCompare
0000000000002134 g     F .text	000000000000000c _utee_cipher_update
00000000000006a8 g     F .text	00000000000000c4 __vsnprintf
00000000000196a0 g     O .bss	0000000000000010 __elf_phdr_info
0000000000012da8 g     F .text	0000000000000028 TEE_FreePersistentObjectEnumerator
0000000000002a04 g     F .text	0000000000000154 TEE_OpenTASession
0000000000011350 g     F .text	0000000000000178 __GP11_TEE_DeriveKey
000000000000b44c g     F .text	000000000000006c mbedtls_mpi_core_from_mont_rep
000000000001058c g     F .text	00000000000000bc __GP11_TEE_AEDecryptFinal
00000000000014ec g     F .text	0000000000000028 trace_ext_puts
0000000000005d60 g     F .text	000000000000009c __GP11_TEE_GetPropertyAsString
000000000000cee8 g     F .text	0000000000000150 raw_malloc_buffer_is_within_alloced
0000000000001514 g     F .text	0000000000000008 trace_ext_get_thread_id
000000000000ce68 g     F .text	0000000000000080 raw_malloc_buffer_overlaps_heap
0000000000012c88 g     F .text	000000000000002c TEE_CloseAndDeletePersistentObject
00000000000021ac g     F .text	000000000000000c _utee_cryp_derive_key
0000000000007148 g     F .text	000000000000006c mbedtls_mpi_free
000000000000f99c g     F .text	0000000000000008 __GP11_TEE_MACInit
0000000000011080 g     F .text	0000000000000158 __GP11_TEE_AsymmetricVerifyDigest
0000000000002188 g     F .text	000000000000000c _utee_cryp_obj_reset
00000000000033b0 g     F .text	0000000000000008 TEE_CacheClean
000000000000205c g     F .text	000000000000000c _utee_get_property_name_to_index
000000000000ae48 g     F .text	00000000000000f8 mbedtls_mpi_core_montmul
000000000000cb54 g     F .text	0000000000000070 raw_calloc
0000000000006d74 g     F .text	0000000000000114 _base64_enc
000000000000b7f8 g     F .text	00000000000000b8 mbedtls_mpi_safe_cond_swap
00000000000021c4 g     F .text	000000000000000c _utee_authenc_init
0000000000012660 g     F .text	00000000000000f8 TEE_CopyObjectAttributes1
0000000000012d10 g     F .text	0000000000000008 __GP11_TEE_RenamePersistentObject
00000000000014d0 g     F .text	000000000000001c strlen
0000000000004f9c g     F .text	0000000000000270 TEE_BigIntComputeExtendedGcd
0000000000002248 g     F .text	000000000000000c _utee_storage_alloc_enum
0000000000004dc4 g     F .text	00000000000001d8 TEE_BigIntExpMod
0000000000002fe0 g     F .text	0000000000000028 TEE_GetSystemTime
000000000000220c g     F .text	000000000000000c _utee_asymm_verify
00000000000189e0 g     O .ta_head	0000000000000020 ta_head
000000000000c244 g     F .text	00000000000002c4 brel
0000000000001f70 g     F .text	00000000000000b0 __ta_invoke_cmd
00000000000060a4 g     F .text	00000000000000e8 __GP11_TEE_GetPropertyAsBinaryBlock
0000000000007c04 g     F .text	0000000000000114 mbedtls_mpi_sub_abs
0000000000009600 g     F .text	0000000000000068 mbedtls_mpi_fill_random
000000000001211c g     F .text	00000000000000b4 __GP11_TEE_AllocateTransientObject
0000000000001ed4 g     F .text	000000000000009c __ta_open_sess
0000000000002fa4 g     F .text	000000000000000c TEE_SetInstanceData
00000000000107d4 g     F .text	0000000000000174 __GP11_TEE_AsymmetricEncrypt
000000000000208c g     F .text	000000000000000c _utee_get_cancellation_flag
000000000000a75c g     F .text	0000000000000024 mbedtls_mpi_core_cond_assign
0000000000008a20 g     F .text	0000000000000274 mbedtls_mpi_write_string
000000000000cd30 g     F .text	0000000000000018 aligned_alloc
000000000000ae14 g     F .text	0000000000000034 mbedtls_mpi_core_montmul_init
0000000000012e48 g     F .text	000000000000011c TEE_GetNextPersistentObject
00000000000052bc g     F .text	0000000000000008 TEE_BigIntInitFMMContext1
000000000000fd04 g     F .text	000000000000000c __GP11_TEE_MACCompareFinal
000000000001326c g     F .text	0000000000000008 __GP11_TEE_WriteObjectData
000000000000af40 g     F .text	0000000000000068 mbedtls_mpi_core_get_mont_r2_unsafe
0000000000002698 g     F .text	0000000000000028 TEE_CloseTASession
0000000000010f28 g     F .text	0000000000000158 TEE_AsymmetricVerifyDigest
0000000000002224 g     F .text	000000000000000c _utee_storage_obj_create
00000000000052d4 g     F .text	0000000000000018 __GP11_TEE_BigIntFMMSizeInU32
000000000000cd48 g     F .text	0000000000000014 free
000000000000c6a8 g     F .text	0000000000000094 bstats
000000000000fa4c g     F .text	0000000000000110 TEE_MACComputeFinal
000000000001cf28 g     O .bss	0000000000000008 mbedtls_mpi_mempool
000000000000211c g     F .text	000000000000000c _utee_hash_final



Disassembly of section .text:

0000000000000000 <memcpy>:
memcpy():
/home/qc2335/optee/optee_os/memcpy.c:106
       0:	f1007c5f 	cmp	x2, #0x1f
       4:	54000629 	b.ls	c8 <memcpy+0xc8>  // b.plast
/home/qc2335/optee/optee_os/memcpy.c:106 (discriminator 1)
       8:	aa010005 	orr	x5, x0, x1
       c:	f24008a5 	ands	x5, x5, #0x7
      10:	54000641 	b.ne	d8 <memcpy+0xd8>  // b.any
      14:	d1008048 	sub	x8, x2, #0x20
/home/qc2335/optee/optee_os/memcpy.c:108
      18:	aa0103e3 	mov	x3, x1
      1c:	927be908 	and	x8, x8, #0xffffffffffffffe0
/home/qc2335/optee/optee_os/memcpy.c:107
      20:	aa0003e4 	mov	x4, x0
      24:	91008108 	add	x8, x8, #0x20
      28:	8b080007 	add	x7, x0, x8
      2c:	d503201f 	nop
/home/qc2335/optee/optee_os/memcpy.c:112
      30:	f9400066 	ldr	x6, [x3]
      34:	f9000086 	str	x6, [x4]
/home/qc2335/optee/optee_os/memcpy.c:113
      38:	91008063 	add	x3, x3, #0x20
      3c:	91008084 	add	x4, x4, #0x20
      40:	f85e8066 	ldur	x6, [x3, #-24]
      44:	f81e8086 	stur	x6, [x4, #-24]
/home/qc2335/optee/optee_os/memcpy.c:114
      48:	f85f0066 	ldur	x6, [x3, #-16]
      4c:	f81f0086 	stur	x6, [x4, #-16]
/home/qc2335/optee/optee_os/memcpy.c:115
      50:	f85f8066 	ldur	x6, [x3, #-8]
      54:	f81f8086 	stur	x6, [x4, #-8]
/home/qc2335/optee/optee_os/memcpy.c:111
      58:	eb0400ff 	cmp	x7, x4
      5c:	54fffea1 	b.ne	30 <memcpy+0x30>  // b.any
/home/qc2335/optee/optee_os/memcpy.c:115
      60:	8b080021 	add	x1, x1, x8
/home/qc2335/optee/optee_os/memcpy.c:116
      64:	92401043 	and	x3, x2, #0x1f
/home/qc2335/optee/optee_os/memcpy.c:120
      68:	f27d045f 	tst	x2, #0x18
      6c:	540003c0 	b.eq	e4 <memcpy+0xe4>  // b.none
/home/qc2335/optee/optee_os/memcpy.c:121
      70:	f8656826 	ldr	x6, [x1, x5]
      74:	f8256886 	str	x6, [x4, x5]
/home/qc2335/optee/optee_os/memcpy.c:120
      78:	910020a5 	add	x5, x5, #0x8
      7c:	cb050066 	sub	x6, x3, x5
      80:	f1001cdf 	cmp	x6, #0x7
      84:	54ffff68 	b.hi	70 <memcpy+0x70>  // b.pmore
      88:	d1002063 	sub	x3, x3, #0x8
/home/qc2335/optee/optee_os/memcpy.c:122
      8c:	92400842 	and	x2, x2, #0x7
      90:	927df063 	and	x3, x3, #0xfffffffffffffff8
/home/qc2335/optee/optee_os/memcpy.c:130
      94:	d1000446 	sub	x6, x2, #0x1
      98:	91002063 	add	x3, x3, #0x8
/home/qc2335/optee/optee_os/memcpy.c:121
      9c:	8b030084 	add	x4, x4, x3
      a0:	8b030021 	add	x1, x1, x3
/home/qc2335/optee/optee_os/memcpy.c:130
      a4:	b4000102 	cbz	x2, c4 <memcpy+0xc4>
/home/qc2335/optee/optee_os/memcpy.c:99
      a8:	d2800002 	mov	x2, #0x0                   	// #0
      ac:	d503201f 	nop
/home/qc2335/optee/optee_os/memcpy.c:131
      b0:	38626825 	ldrb	w5, [x1, x2]
/home/qc2335/optee/optee_os/memcpy.c:130
      b4:	eb0200df 	cmp	x6, x2
/home/qc2335/optee/optee_os/memcpy.c:131
      b8:	38226885 	strb	w5, [x4, x2]
/home/qc2335/optee/optee_os/memcpy.c:130
      bc:	91000442 	add	x2, x2, #0x1
      c0:	54ffff81 	b.ne	b0 <memcpy+0xb0>  // b.any
/home/qc2335/optee/optee_os/memcpy.c:135
      c4:	d65f03c0 	ret
/home/qc2335/optee/optee_os/memcpy.c:99
      c8:	aa0003e4 	mov	x4, x0
/home/qc2335/optee/optee_os/memcpy.c:130
      cc:	d1000446 	sub	x6, x2, #0x1
      d0:	b5fffec2 	cbnz	x2, a8 <memcpy+0xa8>
/home/qc2335/optee/optee_os/memcpy.c:135
      d4:	d65f03c0 	ret
/home/qc2335/optee/optee_os/memcpy.c:130
      d8:	d1000446 	sub	x6, x2, #0x1
/home/qc2335/optee/optee_os/memcpy.c:99
      dc:	aa0003e4 	mov	x4, x0
      e0:	17fffff2 	b	a8 <memcpy+0xa8>
/home/qc2335/optee/optee_os/memcpy.c:120
      e4:	aa0303e2 	mov	x2, x3
      e8:	17fffff9 	b	cc <memcpy+0xcc>

00000000000000ec <TA_CreateEntryPoint>:
TA_CreateEntryPoint():
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:38
      ec:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:39
      f0:	52800023 	mov	w3, #0x1                   	// #1
      f4:	52800062 	mov	w2, #0x3                   	// #3
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:38
      f8:	910003fd 	mov	x29, sp
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:39
      fc:	528004e1 	mov	w1, #0x27                  	// #39
     100:	f00000a4 	adrp	x4, 17000 <__text_end+0x3c08>
     104:	f00000a0 	adrp	x0, 17000 <__text_end+0x3c08>
     108:	91259084 	add	x4, x4, #0x964
     10c:	91275800 	add	x0, x0, #0x9d6
     110:	94000120 	bl	590 <trace_printf>
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:42
     114:	52800000 	mov	w0, #0x0                   	// #0
     118:	a8c17bfd 	ldp	x29, x30, [sp], #16
     11c:	d65f03c0 	ret

0000000000000120 <TA_DestroyEntryPoint>:
TA_DestroyEntryPoint():
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:50
     120:	f00000a0 	adrp	x0, 17000 <__text_end+0x3c08>
     124:	91275800 	add	x0, x0, #0x9d6
     128:	91005000 	add	x0, x0, #0x14
     12c:	f00000a4 	adrp	x4, 17000 <__text_end+0x3c08>
     130:	52800023 	mov	w3, #0x1                   	// #1
     134:	91259084 	add	x4, x4, #0x964
     138:	52800062 	mov	w2, #0x3                   	// #3
     13c:	52800641 	mov	w1, #0x32                  	// #50
     140:	14000114 	b	590 <trace_printf>

0000000000000144 <__GP11_TA_OpenSessionEntryPoint>:
__GP11_TA_OpenSessionEntryPoint():
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:62
     144:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:68
     148:	f00000a4 	adrp	x4, 17000 <__text_end+0x3c08>
     14c:	52800023 	mov	w3, #0x1                   	// #1
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:62
     150:	910003fd 	mov	x29, sp
     154:	a90153f3 	stp	x19, x20, [sp, #16]
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:68
     158:	f00000b3 	adrp	x19, 17000 <__text_end+0x3c08>
     15c:	91275a73 	add	x19, x19, #0x9d6
     160:	9100a673 	add	x19, x19, #0x29
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:62
     164:	2a0003f4 	mov	w20, w0
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:68
     168:	91259084 	add	x4, x4, #0x964
     16c:	aa1303e0 	mov	x0, x19
     170:	52800062 	mov	w2, #0x3                   	// #3
     174:	52800881 	mov	w1, #0x44                  	// #68
     178:	94000106 	bl	590 <trace_printf>
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:70
     17c:	35000194 	cbnz	w20, 1ac <__GP11_TA_OpenSessionEntryPoint+0x68>
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:81
     180:	f00000a4 	adrp	x4, 17000 <__text_end+0x3c08>
     184:	aa1303e0 	mov	x0, x19
     188:	9125d084 	add	x4, x4, #0x974
     18c:	52800023 	mov	w3, #0x1                   	// #1
     190:	52800042 	mov	w2, #0x2                   	// #2
     194:	52800a21 	mov	w1, #0x51                  	// #81
     198:	940000fe 	bl	590 <trace_printf>
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:85
     19c:	2a1403e0 	mov	w0, w20
     1a0:	a94153f3 	ldp	x19, x20, [sp, #16]
     1a4:	a8c27bfd 	ldp	x29, x30, [sp], #32
     1a8:	d65f03c0 	ret
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:71
     1ac:	129fff34 	mov	w20, #0xffff0006            	// #-65530
     1b0:	17fffffb 	b	19c <__GP11_TA_OpenSessionEntryPoint+0x58>

00000000000001b4 <TA_CloseSessionEntryPoint>:
TA_CloseSessionEntryPoint():
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:94
     1b4:	f00000a0 	adrp	x0, 17000 <__text_end+0x3c08>
     1b8:	91275800 	add	x0, x0, #0x9d6
     1bc:	91012400 	add	x0, x0, #0x49
     1c0:	f00000a4 	adrp	x4, 17000 <__text_end+0x3c08>
     1c4:	52800023 	mov	w3, #0x1                   	// #1
     1c8:	91260c84 	add	x4, x4, #0x983
     1cc:	52800042 	mov	w2, #0x2                   	// #2
     1d0:	52800bc1 	mov	w1, #0x5e                  	// #94
     1d4:	140000ef 	b	590 <trace_printf>

00000000000001d8 <__GP11_TA_InvokeCommandEntryPoint>:
__GP11_TA_InvokeCommandEntryPoint():
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:144
     1d8:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
     1dc:	910003fd 	mov	x29, sp
     1e0:	a90153f3 	stp	x19, x20, [sp, #16]
     1e4:	2a0103f3 	mov	w19, w1
     1e8:	aa0303f4 	mov	x20, x3
     1ec:	a9025bf5 	stp	x21, x22, [sp, #32]
     1f0:	2a0203f6 	mov	w22, w2
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:147
     1f4:	34000121 	cbz	w1, 218 <__GP11_TA_InvokeCommandEntryPoint+0x40>
     1f8:	7100043f 	cmp	w1, #0x1
     1fc:	540004c0 	b.eq	294 <__GP11_TA_InvokeCommandEntryPoint+0xbc>  // b.none
inc_value():
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:108
     200:	129fff33 	mov	w19, #0xffff0006            	// #-65530
__GP11_TA_InvokeCommandEntryPoint():
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:155
     204:	2a1303e0 	mov	w0, w19
     208:	a94153f3 	ldp	x19, x20, [sp, #16]
     20c:	a9425bf5 	ldp	x21, x22, [sp, #32]
     210:	a8c37bfd 	ldp	x29, x30, [sp], #48
     214:	d65f03c0 	ret
inc_value():
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:105
     218:	f00000b5 	adrp	x21, 17000 <__text_end+0x3c08>
     21c:	91275ab5 	add	x21, x21, #0x9d6
     220:	91018eb5 	add	x21, x21, #0x63
     224:	f00000a4 	adrp	x4, 17000 <__text_end+0x3c08>
     228:	aa1503e0 	mov	x0, x21
     22c:	91259084 	add	x4, x4, #0x964
     230:	52800023 	mov	w3, #0x1                   	// #1
     234:	52800062 	mov	w2, #0x3                   	// #3
     238:	52800d21 	mov	w1, #0x69                  	// #105
     23c:	940000d5 	bl	590 <trace_printf>
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:107
     240:	71000edf 	cmp	w22, #0x3
     244:	54fffde1 	b.ne	200 <__GP11_TA_InvokeCommandEntryPoint+0x28>  // b.any
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:110
     248:	b9400285 	ldr	w5, [x20]
     24c:	aa1503e0 	mov	x0, x21
     250:	52800023 	mov	w3, #0x1                   	// #1
     254:	52800042 	mov	w2, #0x2                   	// #2
     258:	52800dc1 	mov	w1, #0x6e                  	// #110
     25c:	f00000a4 	adrp	x4, 17000 <__text_end+0x3c08>
     260:	91265084 	add	x4, x4, #0x994
     264:	940000cb 	bl	590 <trace_printf>
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:111
     268:	b9400285 	ldr	w5, [x20]
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:112
     26c:	aa1503e0 	mov	x0, x21
     270:	f00000a4 	adrp	x4, 17000 <__text_end+0x3c08>
     274:	52800023 	mov	w3, #0x1                   	// #1
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:111
     278:	110028a5 	add	w5, w5, #0xa
     27c:	b9000285 	str	w5, [x20]
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:112
     280:	9126a884 	add	x4, x4, #0x9aa
     284:	52800042 	mov	w2, #0x2                   	// #2
     288:	52800e01 	mov	w1, #0x70                  	// #112
     28c:	940000c1 	bl	590 <trace_printf>
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:114
     290:	17ffffdd 	b	204 <__GP11_TA_InvokeCommandEntryPoint+0x2c>
dec_value():
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:125
     294:	f00000b5 	adrp	x21, 17000 <__text_end+0x3c08>
     298:	91275ab5 	add	x21, x21, #0x9d6
     29c:	9101b6b5 	add	x21, x21, #0x6d
     2a0:	2a0103e3 	mov	w3, w1
     2a4:	aa1503e0 	mov	x0, x21
     2a8:	f00000a4 	adrp	x4, 17000 <__text_end+0x3c08>
     2ac:	52800062 	mov	w2, #0x3                   	// #3
     2b0:	91259084 	add	x4, x4, #0x964
     2b4:	52800fa1 	mov	w1, #0x7d                  	// #125
     2b8:	940000b6 	bl	590 <trace_printf>
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:127
     2bc:	71000edf 	cmp	w22, #0x3
     2c0:	54fffa01 	b.ne	200 <__GP11_TA_InvokeCommandEntryPoint+0x28>  // b.any
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:130
     2c4:	b9400285 	ldr	w5, [x20]
     2c8:	2a1303e3 	mov	w3, w19
     2cc:	aa1503e0 	mov	x0, x21
     2d0:	52800042 	mov	w2, #0x2                   	// #2
     2d4:	52801041 	mov	w1, #0x82                  	// #130
     2d8:	f00000a4 	adrp	x4, 17000 <__text_end+0x3c08>
     2dc:	91265084 	add	x4, x4, #0x994
     2e0:	940000ac 	bl	590 <trace_printf>
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:131
     2e4:	b9400285 	ldr	w5, [x20]
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:132
     2e8:	2a1303e3 	mov	w3, w19
     2ec:	aa1503e0 	mov	x0, x21
     2f0:	f00000a4 	adrp	x4, 17000 <__text_end+0x3c08>
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:131
     2f4:	510004a5 	sub	w5, w5, #0x1
     2f8:	b9000285 	str	w5, [x20]
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:132
     2fc:	91270084 	add	x4, x4, #0x9c0
     300:	52800042 	mov	w2, #0x2                   	// #2
     304:	52801081 	mov	w1, #0x84                  	// #132
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:134
     308:	52800013 	mov	w19, #0x0                   	// #0
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:132
     30c:	940000a1 	bl	590 <trace_printf>
/home/qc2335/optee/optee_examples/my_test/ta/my_test_ta.c:134
     310:	17ffffbd 	b	204 <__GP11_TA_InvokeCommandEntryPoint+0x2c>

0000000000000314 <__ta_entry>:
__ta_entry():
/home/qc2335/optee/optee_os/out/arm/export-ta_arm64/src/user_ta_header.c:51
     314:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
     318:	910003fd 	mov	x29, sp
/home/qc2335/optee/optee_os/out/arm/export-ta_arm64/src/user_ta_header.c:70
     31c:	9400061a 	bl	1b84 <__utee_entry>
/home/qc2335/optee/optee_os/out/arm/export-ta_arm64/src/user_ta_header.c:81
     320:	2a0003e0 	mov	w0, w0
     324:	94000742 	bl	202c <_utee_return>

0000000000000328 <tahead_get_trace_level>:
tahead_get_trace_level():
/home/qc2335/optee/optee_os/out/arm/export-ta_arm64/src/user_ta_header.c:193
     328:	52800080 	mov	w0, #0x4                   	// #4
     32c:	d65f03c0 	ret

0000000000000330 <TA_OpenSessionEntryPoint>:
TA_OpenSessionEntryPoint():
/home/qc2335/optee/optee_os/out/arm/export-ta_arm64/src/user_ta_header.c:203
     330:	b00000c3 	adrp	x3, 19000 <_DYNAMIC>
     334:	f940cc63 	ldr	x3, [x3, #408]
     338:	140006e7 	b	1ed4 <__ta_open_sess>

000000000000033c <TA_InvokeCommandEntryPoint>:
TA_InvokeCommandEntryPoint():
/home/qc2335/optee/optee_os/out/arm/export-ta_arm64/src/user_ta_header.c:211
     33c:	b00000c4 	adrp	x4, 19000 <_DYNAMIC>
     340:	f940c084 	ldr	x4, [x4, #384]
     344:	1400070b 	b	1f70 <__ta_invoke_cmd>

0000000000000348 <trace_set_level>:
trace_set_level():
     348:	7100141f 	cmp	w0, #0x5
     34c:	52800081 	mov	w1, #0x4                   	// #4
     350:	1a813000 	csel	w0, w0, w1, cc  // cc = lo, ul, last
     354:	b00000c1 	adrp	x1, 19000 <_DYNAMIC>
     358:	f940a821 	ldr	x1, [x1, #336]
     35c:	b9000020 	str	w0, [x1]
     360:	d65f03c0 	ret

0000000000000364 <trace_get_level>:
trace_get_level():
     364:	b00000c0 	adrp	x0, 19000 <_DYNAMIC>
     368:	f940a800 	ldr	x0, [x0, #336]
     36c:	b9400000 	ldr	w0, [x0]
     370:	d65f03c0 	ret

0000000000000374 <trace_vprintf>:
trace_vprintf():
     374:	a9a77bfd 	stp	x29, x30, [sp, #-400]!
     378:	910003fd 	mov	x29, sp
     37c:	a9046bf9 	stp	x25, x26, [sp, #64]
     380:	2a0103f9 	mov	w25, w1
     384:	b00000c1 	adrp	x1, 19000 <_DYNAMIC>
     388:	a9025bf5 	stp	x21, x22, [sp, #32]
     38c:	aa0003f6 	mov	x22, x0
     390:	aa0103f5 	mov	x21, x1
     394:	f9409820 	ldr	x0, [x1, #304]
     398:	a90153f3 	stp	x19, x20, [sp, #16]
     39c:	2a0203f3 	mov	w19, w2
     3a0:	a90363f7 	stp	x23, x24, [sp, #48]
     3a4:	aa0403f7 	mov	x23, x4
     3a8:	aa0503f8 	mov	x24, x5
     3ac:	a90573fb 	stp	x27, x28, [sp, #80]
     3b0:	72001c7b 	ands	w27, w3, #0xff
     3b4:	f9400002 	ldr	x2, [x0]
     3b8:	f900c7e2 	str	x2, [sp, #392]
     3bc:	d2800002 	mov	x2, #0x0                   	// #0
     3c0:	54000b20 	b.eq	524 <trace_vprintf+0x1b0>  // b.none
     3c4:	f940a820 	ldr	x0, [x1, #336]
     3c8:	b9400000 	ldr	w0, [x0]
     3cc:	6b13001f 	cmp	w0, w19
     3d0:	540009cb 	b.lt	508 <trace_vprintf+0x194>  // b.tstop
     3d4:	7100127f 	cmp	w19, #0x4
     3d8:	f00000a0 	adrp	x0, 17000 <__text_end+0x3c08>
     3dc:	1a9f9261 	csel	w1, w19, wzr, ls  // ls = plast
     3e0:	912ee800 	add	x0, x0, #0xbba
     3e4:	3861c803 	ldrb	w3, [x0, w1, sxtw]
     3e8:	910223f4 	add	x20, sp, #0x88
     3ec:	f00000a2 	adrp	x2, 17000 <__text_end+0x3c08>
     3f0:	aa1403e0 	mov	x0, x20
     3f4:	912e8042 	add	x2, x2, #0xba0
     3f8:	d2802001 	mov	x1, #0x100                 	// #256
     3fc:	940000f2 	bl	7c4 <snprintk>
     400:	37f80840 	tbnz	w0, #31, 508 <trace_vprintf+0x194>
     404:	f940b2a3 	ldr	x3, [x21, #352]
     408:	d280201c 	mov	x28, #0x100                 	// #256
     40c:	93407c1a 	sxtw	x26, w0
     410:	cb20c381 	sub	x1, x28, w0, sxtw
     414:	f00000a2 	adrp	x2, 17000 <__text_end+0x3c08>
     418:	8b20c280 	add	x0, x20, w0, sxtw
     41c:	912e9042 	add	x2, x2, #0xba4
     420:	940000e9 	bl	7c4 <snprintk>
     424:	37f80720 	tbnz	w0, #31, 508 <trace_vprintf+0x194>
     428:	8b20c35a 	add	x26, x26, w0, sxtw
     42c:	3400093b 	cbz	w27, 550 <trace_vprintf+0x1dc>
     430:	52800340 	mov	w0, #0x1a                  	// #26
     434:	1ad32400 	lsr	w0, w0, w19
     438:	360008c0 	tbz	w0, #0, 550 <trace_vprintf+0x1dc>
     43c:	94000436 	bl	1514 <trace_ext_get_thread_id>
     440:	8b1a029b 	add	x27, x20, x26
     444:	cb1a039c 	sub	x28, x28, x26
     448:	2a0003e4 	mov	w4, w0
     44c:	37f80700 	tbnz	w0, #31, 52c <trace_vprintf+0x1b8>
     450:	f00000a2 	adrp	x2, 17000 <__text_end+0x3c08>
     454:	aa1c03e1 	mov	x1, x28
     458:	912ea042 	add	x2, x2, #0xba8
     45c:	aa1b03e0 	mov	x0, x27
     460:	52800023 	mov	w3, #0x1                   	// #1
     464:	940000d8 	bl	7c4 <snprintk>
     468:	37f80500 	tbnz	w0, #31, 508 <trace_vprintf+0x194>
     46c:	8b20c353 	add	x19, x26, w0, sxtw
     470:	b4000176 	cbz	x22, 49c <trace_vprintf+0x128>
     474:	f00000a2 	adrp	x2, 17000 <__text_end+0x3c08>
     478:	d2802001 	mov	x1, #0x100                 	// #256
     47c:	2a1903e4 	mov	w4, w25
     480:	aa1603e3 	mov	x3, x22
     484:	912ecc42 	add	x2, x2, #0xbb3
     488:	cb130021 	sub	x1, x1, x19
     48c:	8b130280 	add	x0, x20, x19
     490:	940000cd 	bl	7c4 <snprintk>
     494:	37f803a0 	tbnz	w0, #31, 508 <trace_vprintf+0x194>
     498:	8b20c273 	add	x19, x19, w0, sxtw
     49c:	910183e3 	add	x3, sp, #0x60
     4a0:	aa1803e1 	mov	x1, x24
     4a4:	aa0303e0 	mov	x0, x3
     4a8:	d2800402 	mov	x2, #0x20                  	// #32
     4ac:	97fffed5 	bl	0 <memcpy>
     4b0:	aa0003e3 	mov	x3, x0
     4b4:	d2802001 	mov	x1, #0x100                 	// #256
     4b8:	aa1703e2 	mov	x2, x23
     4bc:	cb130021 	sub	x1, x1, x19
     4c0:	8b130280 	add	x0, x20, x19
     4c4:	940000aa 	bl	76c <vsnprintk>
     4c8:	7100001f 	cmp	w0, #0x0
     4cc:	5400004d 	b.le	4d4 <trace_vprintf+0x160>
     4d0:	8b20c273 	add	x19, x19, w0, sxtw
     4d4:	f103fa7f 	cmp	x19, #0xfe
     4d8:	d2801fc0 	mov	x0, #0xfe                  	// #254
     4dc:	9a809273 	csel	x19, x19, x0, ls  // ls = plast
     4e0:	52800140 	mov	w0, #0xa                   	// #10
     4e4:	38336a80 	strb	w0, [x20, x19]
     4e8:	b4000093 	cbz	x19, 4f8 <trace_vprintf+0x184>
     4ec:	38736a80 	ldrb	w0, [x20, x19]
     4f0:	7100281f 	cmp	w0, #0xa
     4f4:	540003c0 	b.eq	56c <trace_vprintf+0x1f8>  // b.none
     4f8:	91022be0 	add	x0, sp, #0x8a
     4fc:	3833681f 	strb	wzr, [x0, x19]
     500:	aa1403e0 	mov	x0, x20
     504:	940003fa 	bl	14ec <trace_ext_puts>
     508:	f9409ab5 	ldr	x21, [x21, #304]
     50c:	f940c7e0 	ldr	x0, [sp, #392]
     510:	f94002a1 	ldr	x1, [x21]
     514:	eb010000 	subs	x0, x0, x1
     518:	d2800001 	mov	x1, #0x0                   	// #0
     51c:	540002c0 	b.eq	574 <trace_vprintf+0x200>  // b.none
     520:	94000056 	bl	678 <__stack_chk_fail>
     524:	528009a3 	mov	w3, #0x4d                  	// #77
     528:	17ffffb0 	b	3e8 <trace_vprintf+0x74>
     52c:	aa1c03e1 	mov	x1, x28
     530:	aa1b03e0 	mov	x0, x27
     534:	f00000a4 	adrp	x4, 17000 <__text_end+0x3c08>
     538:	52800023 	mov	w3, #0x1                   	// #1
     53c:	91264c84 	add	x4, x4, #0x993
     540:	f00000a2 	adrp	x2, 17000 <__text_end+0x3c08>
     544:	912eb842 	add	x2, x2, #0xbae
     548:	9400009f 	bl	7c4 <snprintk>
     54c:	17ffffc7 	b	468 <trace_vprintf+0xf4>
     550:	f103fb5f 	cmp	x26, #0xfe
     554:	54fffda8 	b.hi	508 <trace_vprintf+0x194>  // b.pmore
     558:	91000753 	add	x19, x26, #0x1
     55c:	52800400 	mov	w0, #0x20                  	// #32
     560:	383a6a80 	strb	w0, [x20, x26]
     564:	38336a9f 	strb	wzr, [x20, x19]
     568:	17ffffcd 	b	49c <trace_vprintf+0x128>
     56c:	d1000673 	sub	x19, x19, #0x1
     570:	17ffffde 	b	4e8 <trace_vprintf+0x174>
     574:	a94153f3 	ldp	x19, x20, [sp, #16]
     578:	a9425bf5 	ldp	x21, x22, [sp, #32]
     57c:	a94363f7 	ldp	x23, x24, [sp, #48]
     580:	a9446bf9 	ldp	x25, x26, [sp, #64]
     584:	a94573fb 	ldp	x27, x28, [sp, #80]
     588:	a8d97bfd 	ldp	x29, x30, [sp], #400
     58c:	d65f03c0 	ret

0000000000000590 <trace_printf>:
trace_printf():
     590:	a9ad7bfd 	stp	x29, x30, [sp, #-304]!
     594:	910003fd 	mov	x29, sp
     598:	a90153f3 	stp	x19, x20, [sp, #16]
     59c:	b00000d3 	adrp	x19, 19000 <_DYNAMIC>
     5a0:	aa0003f4 	mov	x20, x0
     5a4:	f9409a60 	ldr	x0, [x19, #304]
     5a8:	a9025bf5 	stp	x21, x22, [sp, #32]
     5ac:	2a0103f5 	mov	w21, w1
     5b0:	a90363f7 	stp	x23, x24, [sp, #48]
     5b4:	2a0203f6 	mov	w22, w2
     5b8:	12001c78 	and	w24, w3, #0xff
     5bc:	3d8027e0 	str	q0, [sp, #144]
     5c0:	aa0403f7 	mov	x23, x4
     5c4:	d2800402 	mov	x2, #0x20                  	// #32
     5c8:	3d802be1 	str	q1, [sp, #160]
     5cc:	3d802fe2 	str	q2, [sp, #176]
     5d0:	3d8033e3 	str	q3, [sp, #192]
     5d4:	3d8037e4 	str	q4, [sp, #208]
     5d8:	3d803be5 	str	q5, [sp, #224]
     5dc:	3d803fe6 	str	q6, [sp, #240]
     5e0:	3d8043e7 	str	q7, [sp, #256]
     5e4:	a9119be5 	stp	x5, x6, [sp, #280]
     5e8:	910103e5 	add	x5, sp, #0x40
     5ec:	f90097e7 	str	x7, [sp, #296]
     5f0:	f9400001 	ldr	x1, [x0]
     5f4:	f90047e1 	str	x1, [sp, #136]
     5f8:	d2800001 	mov	x1, #0x0                   	// #0
     5fc:	9104c3e0 	add	x0, sp, #0x130
     600:	a90683e0 	stp	x0, x0, [sp, #104]
     604:	910443e0 	add	x0, sp, #0x110
     608:	9101a3e1 	add	x1, sp, #0x68
     60c:	f9003fe0 	str	x0, [sp, #120]
     610:	128002e0 	mov	w0, #0xffffffe8            	// #-24
     614:	b90083e0 	str	w0, [sp, #128]
     618:	12800fe0 	mov	w0, #0xffffff80            	// #-128
     61c:	b90087e0 	str	w0, [sp, #132]
     620:	aa0503e0 	mov	x0, x5
     624:	97fffe77 	bl	0 <memcpy>
     628:	aa0003e5 	mov	x5, x0
     62c:	2a1503e1 	mov	w1, w21
     630:	aa1403e0 	mov	x0, x20
     634:	aa1703e4 	mov	x4, x23
     638:	2a1803e3 	mov	w3, w24
     63c:	2a1603e2 	mov	w2, w22
     640:	97ffff4d 	bl	374 <trace_vprintf>
     644:	f9409a73 	ldr	x19, [x19, #304]
     648:	f94047e0 	ldr	x0, [sp, #136]
     64c:	f9400261 	ldr	x1, [x19]
     650:	eb010000 	subs	x0, x0, x1
     654:	d2800001 	mov	x1, #0x0                   	// #0
     658:	54000040 	b.eq	660 <trace_printf+0xd0>  // b.none
     65c:	94000007 	bl	678 <__stack_chk_fail>
     660:	a94153f3 	ldp	x19, x20, [sp, #16]
     664:	a9425bf5 	ldp	x21, x22, [sp, #32]
     668:	a94363f7 	ldp	x23, x24, [sp, #48]
     66c:	a8d37bfd 	ldp	x29, x30, [sp], #304
     670:	d65f03c0 	ret

0000000000000674 <dhex_dump>:
dhex_dump():
     674:	d65f03c0 	ret

0000000000000678 <__stack_chk_fail>:
__stack_chk_fail():
/home/qc2335/optee/optee_os/stack_check.c:24
     678:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
/home/qc2335/optee/optee_os/stack_check.c:25
     67c:	f00000a4 	adrp	x4, 17000 <__text_end+0x3c08>
     680:	52800023 	mov	w3, #0x1                   	// #1
/home/qc2335/optee/optee_os/stack_check.c:24
     684:	910003fd 	mov	x29, sp
/home/qc2335/optee/optee_os/stack_check.c:25
     688:	912efc84 	add	x4, x4, #0xbbf
     68c:	52800022 	mov	w2, #0x1                   	// #1
     690:	52800001 	mov	w1, #0x0                   	// #0
     694:	d2800000 	mov	x0, #0x0                   	// #0
     698:	97ffffbe 	bl	590 <trace_printf>
/home/qc2335/optee/optee_os/stack_check.c:27 (discriminator 1)
     69c:	1299fe00 	mov	w0, #0xffff300f            	// #-53233
     6a0:	94000660 	bl	2020 <_utee_panic>
/home/qc2335/optee/optee_os/stack_check.c:26 (discriminator 1)
     6a4:	17fffffe 	b	69c <__stack_chk_fail+0x24>

00000000000006a8 <__vsnprintf>:
__vsnprintf():
/home/qc2335/optee/optee_os/snprintk.c:138
     6a8:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
     6ac:	b00000c5 	adrp	x5, 19000 <_DYNAMIC>
     6b0:	910003fd 	mov	x29, sp
     6b4:	f94098a5 	ldr	x5, [x5, #304]
     6b8:	a90153f3 	stp	x19, x20, [sp, #16]
     6bc:	aa0103f4 	mov	x20, x1
     6c0:	a9025bf5 	stp	x21, x22, [sp, #32]
     6c4:	aa0003f3 	mov	x19, x0
/home/qc2335/optee/optee_os/snprintk.c:142
     6c8:	8b140016 	add	x22, x0, x20
/home/qc2335/optee/optee_os/snprintk.c:138
     6cc:	f9001bf7 	str	x23, [sp, #48]
     6d0:	aa0303e1 	mov	x1, x3
     6d4:	aa0203f5 	mov	x21, x2
     6d8:	12001c97 	and	w23, w4, #0xff
     6dc:	f94000a0 	ldr	x0, [x5]
     6e0:	f90037e0 	str	x0, [sp, #104]
     6e4:	d2800000 	mov	x0, #0x0                   	// #0
/home/qc2335/optee/optee_os/snprintk.c:143
     6e8:	910103e5 	add	x5, sp, #0x40
     6ec:	aa0503e0 	mov	x0, x5
     6f0:	d2800402 	mov	x2, #0x20                  	// #32
/home/qc2335/optee/optee_os/snprintk.c:142
     6f4:	f90033f6 	str	x22, [sp, #96]
/home/qc2335/optee/optee_os/snprintk.c:143
     6f8:	97fffe42 	bl	0 <memcpy>
     6fc:	aa0003e3 	mov	x3, x0
     700:	2a1703e4 	mov	w4, w23
     704:	aa1303e2 	mov	x2, x19
     708:	910183e1 	add	x1, sp, #0x60
     70c:	aa1503e0 	mov	x0, x21
     710:	94000061 	bl	894 <kprintf.constprop.0>
/home/qc2335/optee/optee_os/snprintk.c:144
     714:	f100027f 	cmp	x19, #0x0
     718:	fa401a84 	ccmp	x20, #0x0, #0x4, ne  // ne = any
     71c:	540000a0 	b.eq	730 <__vsnprintf+0x88>  // b.none
/home/qc2335/optee/optee_os/snprintk.c:146
     720:	93407c01 	sxtw	x1, w0
     724:	eb20c29f 	cmp	x20, w0, sxtw
     728:	54000148 	b.hi	750 <__vsnprintf+0xa8>  // b.pmore
/home/qc2335/optee/optee_os/snprintk.c:147
     72c:	381ff2df 	sturb	wzr, [x22, #-1]
/home/qc2335/optee/optee_os/snprintk.c:152
     730:	b00000c5 	adrp	x5, 19000 <_DYNAMIC>
     734:	f94098a5 	ldr	x5, [x5, #304]
     738:	f94037e1 	ldr	x1, [sp, #104]
     73c:	f94000a2 	ldr	x2, [x5]
     740:	eb020021 	subs	x1, x1, x2
     744:	d2800002 	mov	x2, #0x0                   	// #0
     748:	54000080 	b.eq	758 <__vsnprintf+0xb0>  // b.none
     74c:	97ffffcb 	bl	678 <__stack_chk_fail>
/home/qc2335/optee/optee_os/snprintk.c:149
     750:	38216a7f 	strb	wzr, [x19, x1]
/home/qc2335/optee/optee_os/snprintk.c:151
     754:	17fffff7 	b	730 <__vsnprintf+0x88>
/home/qc2335/optee/optee_os/snprintk.c:152
     758:	a94153f3 	ldp	x19, x20, [sp, #16]
     75c:	a9425bf5 	ldp	x21, x22, [sp, #32]
     760:	f9401bf7 	ldr	x23, [sp, #48]
     764:	a8c77bfd 	ldp	x29, x30, [sp], #112
     768:	d65f03c0 	ret

000000000000076c <vsnprintk>:
vsnprintk():
/home/qc2335/optee/optee_os/snprintk.c:130
     76c:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
/home/qc2335/optee/optee_os/snprintk.c:131
     770:	9100c3e4 	add	x4, sp, #0x30
/home/qc2335/optee/optee_os/snprintk.c:130
     774:	910003fd 	mov	x29, sp
     778:	a90153f3 	stp	x19, x20, [sp, #16]
     77c:	aa0003f3 	mov	x19, x0
     780:	aa0103f4 	mov	x20, x1
/home/qc2335/optee/optee_os/snprintk.c:131
     784:	aa0403e0 	mov	x0, x4
/home/qc2335/optee/optee_os/snprintk.c:130
     788:	aa0303e1 	mov	x1, x3
     78c:	f90013f5 	str	x21, [sp, #32]
     790:	aa0203f5 	mov	x21, x2
/home/qc2335/optee/optee_os/snprintk.c:131
     794:	d2800402 	mov	x2, #0x20                  	// #32
     798:	97fffe1a 	bl	0 <memcpy>
     79c:	aa1503e2 	mov	x2, x21
     7a0:	aa0003e3 	mov	x3, x0
     7a4:	aa1403e1 	mov	x1, x20
     7a8:	aa1303e0 	mov	x0, x19
     7ac:	52800024 	mov	w4, #0x1                   	// #1
     7b0:	97ffffbe 	bl	6a8 <__vsnprintf>
/home/qc2335/optee/optee_os/snprintk.c:132
     7b4:	a94153f3 	ldp	x19, x20, [sp, #16]
     7b8:	f94013f5 	ldr	x21, [sp, #32]
     7bc:	a8c57bfd 	ldp	x29, x30, [sp], #80
     7c0:	d65f03c0 	ret

00000000000007c4 <snprintk>:
snprintk():
/home/qc2335/optee/optee_os/snprintk.c:113
     7c4:	a9ad7bfd 	stp	x29, x30, [sp, #-304]!
     7c8:	910003fd 	mov	x29, sp
     7cc:	a90153f3 	stp	x19, x20, [sp, #16]
     7d0:	b00000d3 	adrp	x19, 19000 <_DYNAMIC>
     7d4:	aa0003f4 	mov	x20, x0
     7d8:	f9409a60 	ldr	x0, [x19, #304]
     7dc:	a9025bf5 	stp	x21, x22, [sp, #32]
     7e0:	aa0103f5 	mov	x21, x1
     7e4:	3d8023e0 	str	q0, [sp, #128]
     7e8:	aa0203f6 	mov	x22, x2
/home/qc2335/optee/optee_os/snprintk.c:118
     7ec:	d2800402 	mov	x2, #0x20                  	// #32
/home/qc2335/optee/optee_os/snprintk.c:113
     7f0:	3d8027e1 	str	q1, [sp, #144]
     7f4:	3d802be2 	str	q2, [sp, #160]
     7f8:	3d802fe3 	str	q3, [sp, #176]
     7fc:	3d8033e4 	str	q4, [sp, #192]
     800:	3d8037e5 	str	q5, [sp, #208]
     804:	3d803be6 	str	q6, [sp, #224]
     808:	3d803fe7 	str	q7, [sp, #240]
     80c:	a91093e3 	stp	x3, x4, [sp, #264]
/home/qc2335/optee/optee_os/snprintk.c:118
     810:	9100c3e3 	add	x3, sp, #0x30
/home/qc2335/optee/optee_os/snprintk.c:113
     814:	a9119be5 	stp	x5, x6, [sp, #280]
     818:	f90097e7 	str	x7, [sp, #296]
     81c:	f9400001 	ldr	x1, [x0]
     820:	f9003fe1 	str	x1, [sp, #120]
     824:	d2800001 	mov	x1, #0x0                   	// #0
/home/qc2335/optee/optee_os/snprintk.c:117
     828:	9104c3e0 	add	x0, sp, #0x130
     82c:	a90583e0 	stp	x0, x0, [sp, #88]
     830:	910403e0 	add	x0, sp, #0x100
/home/qc2335/optee/optee_os/snprintk.c:118
     834:	910163e1 	add	x1, sp, #0x58
/home/qc2335/optee/optee_os/snprintk.c:117
     838:	f90037e0 	str	x0, [sp, #104]
     83c:	128004e0 	mov	w0, #0xffffffd8            	// #-40
     840:	b90073e0 	str	w0, [sp, #112]
     844:	12800fe0 	mov	w0, #0xffffff80            	// #-128
     848:	b90077e0 	str	w0, [sp, #116]
/home/qc2335/optee/optee_os/snprintk.c:118
     84c:	aa0303e0 	mov	x0, x3
     850:	97fffdec 	bl	0 <memcpy>
     854:	aa0003e3 	mov	x3, x0
     858:	aa1603e2 	mov	x2, x22
     85c:	aa1503e1 	mov	x1, x21
     860:	aa1403e0 	mov	x0, x20
     864:	97ffffc2 	bl	76c <vsnprintk>
/home/qc2335/optee/optee_os/snprintk.c:122
     868:	f9409a73 	ldr	x19, [x19, #304]
     86c:	f9403fe1 	ldr	x1, [sp, #120]
     870:	f9400262 	ldr	x2, [x19]
     874:	eb020021 	subs	x1, x1, x2
     878:	d2800002 	mov	x2, #0x0                   	// #0
     87c:	54000040 	b.eq	884 <snprintk+0xc0>  // b.none
     880:	97ffff7e 	bl	678 <__stack_chk_fail>
     884:	a94153f3 	ldp	x19, x20, [sp, #16]
     888:	a9425bf5 	ldp	x21, x22, [sp, #32]
     88c:	a8d37bfd 	ldp	x29, x30, [sp], #304
     890:	d65f03c0 	ret

0000000000000894 <kprintf.constprop.0>:
kprintf():
/home/qc2335/optee/optee_os/snprintk.c:242
     894:	d103c3ff 	sub	sp, sp, #0xf0
     898:	aa0103e9 	mov	x9, x1
     89c:	a9037bfd 	stp	x29, x30, [sp, #48]
     8a0:	9100c3fd 	add	x29, sp, #0x30
     8a4:	a90873fb 	stp	x27, x28, [sp, #128]
     8a8:	aa0003fc 	mov	x28, x0
     8ac:	12001c80 	and	w0, w4, #0xff
     8b0:	b900abe0 	str	w0, [sp, #168]
     8b4:	b00000c0 	adrp	x0, 19000 <_DYNAMIC>
     8b8:	a90453f3 	stp	x19, x20, [sp, #64]
     8bc:	b9401874 	ldr	w20, [x3, #24]
     8c0:	f9409800 	ldr	x0, [x0, #304]
     8c4:	a9055bf5 	stp	x21, x22, [sp, #80]
     8c8:	aa0203f6 	mov	x22, x2
     8cc:	a90663f7 	stp	x23, x24, [sp, #96]
     8d0:	a9076bf9 	stp	x25, x26, [sp, #112]
     8d4:	f9400001 	ldr	x1, [x0]
     8d8:	f90077e1 	str	x1, [sp, #232]
     8dc:	d2800001 	mov	x1, #0x0                   	// #0
     8e0:	a9406c73 	ldp	x19, x27, [x3]
/home/qc2335/optee/optee_os/snprintk.c:264
     8e4:	b4000489 	cbz	x9, 974 <kprintf.constprop.0+0xe0>
/home/qc2335/optee/optee_os/snprintk.c:265
     8e8:	f9400139 	ldr	x25, [x9]
/home/qc2335/optee/optee_os/snprintk.c:297
     8ec:	f00000b8 	adrp	x24, 17000 <__text_end+0x3c08>
/home/qc2335/optee/optee_os/snprintk.c:275
     8f0:	d2800017 	mov	x23, #0x0                   	// #0
/home/qc2335/optee/optee_os/snprintk.c:297
     8f4:	9114e300 	add	x0, x24, #0x538
/home/qc2335/optee/optee_os/snprintk.c:273
     8f8:	5280001a 	mov	w26, #0x0                   	// #0
/home/qc2335/optee/optee_os/snprintk.c:297
     8fc:	f9004fe0 	str	x0, [sp, #152]
/home/qc2335/optee/optee_os/snprintk.c:281
     900:	39400380 	ldrb	w0, [x28]
     904:	7100941f 	cmp	w0, #0x25
     908:	7a401804 	ccmp	w0, #0x0, #0x4, ne  // ne = any
     90c:	54000381 	b.ne	97c <kprintf.constprop.0+0xe8>  // b.any
/home/qc2335/optee/optee_os/snprintk.c:285
     910:	340051a0 	cbz	w0, 1344 <kprintf.constprop.0+0xab0>
/home/qc2335/optee/optee_os/snprintk.c:293
     914:	12800005 	mov	w5, #0xffffffff            	// #-1
/home/qc2335/optee/optee_os/snprintk.c:297
     918:	f00000a2 	adrp	x2, 17000 <__text_end+0x3c08>
/home/qc2335/optee/optee_os/snprintk.c:288
     91c:	9100079c 	add	x28, x28, #0x1
     920:	2a1403e4 	mov	w4, w20
     924:	aa1303e3 	mov	x3, x19
/home/qc2335/optee/optee_os/snprintk.c:297
     928:	91155042 	add	x2, x2, #0x554
/home/qc2335/optee/optee_os/snprintk.c:330
     92c:	2a0503e7 	mov	w7, w5
/home/qc2335/optee/optee_os/snprintk.c:294
     930:	52800001 	mov	w1, #0x0                   	// #0
/home/qc2335/optee/optee_os/snprintk.c:292
     934:	5280000b 	mov	w11, #0x0                   	// #0
/home/qc2335/optee/optee_os/snprintk.c:290
     938:	52800015 	mov	w21, #0x0                   	// #0
/home/qc2335/optee/optee_os/snprintk.c:305
     93c:	5280040d 	mov	w13, #0x20                  	// #32
/home/qc2335/optee/optee_os/snprintk.c:296
     940:	38401798 	ldrb	w24, [x28], #1
/home/qc2335/optee/optee_os/snprintk.c:297
     944:	7100e71f 	cmp	w24, #0x39
     948:	5400036c 	b.gt	9b4 <kprintf.constprop.0+0x120>
     94c:	71007f1f 	cmp	w24, #0x1f
     950:	54004f8d 	b.le	1340 <kprintf.constprop.0+0xaac>
     954:	51008300 	sub	w0, w24, #0x20
     958:	7100641f 	cmp	w0, #0x19
     95c:	54000328 	b.hi	9c0 <kprintf.constprop.0+0x12c>  // b.pmore
     960:	f9404fe6 	ldr	x6, [sp, #152]
     964:	386048c0 	ldrb	w0, [x6, w0, uxtw]
     968:	10000066 	adr	x6, 974 <kprintf.constprop.0+0xe0>
     96c:	8b2088c0 	add	x0, x6, w0, sxtb #2
     970:	d61f0000 	br	x0
/home/qc2335/optee/optee_os/snprintk.c:267
     974:	d2800019 	mov	x25, #0x0                   	// #0
     978:	17ffffdd 	b	8ec <kprintf.constprop.0+0x58>
/home/qc2335/optee/optee_os/snprintk.c:282
     97c:	1100075a 	add	w26, w26, #0x1
/home/qc2335/optee/optee_os/snprintk.c:283
     980:	b40000b6 	cbz	x22, 994 <kprintf.constprop.0+0x100>
     984:	f100013f 	cmp	x9, #0x0
     988:	fa5912c0 	ccmp	x22, x25, #0x0, ne  // ne = any
     98c:	54000042 	b.cs	994 <kprintf.constprop.0+0x100>  // b.hs, b.nlast
     990:	380016c0 	strb	w0, [x22], #1
/home/qc2335/optee/optee_os/snprintk.c:281
     994:	9100079c 	add	x28, x28, #0x1
     998:	17ffffda 	b	900 <kprintf.constprop.0+0x6c>
/home/qc2335/optee/optee_os/snprintk.c:297
     99c:	52800561 	mov	w1, #0x2b                  	// #43
     9a0:	17ffffe8 	b	940 <kprintf.constprop.0+0xac>
     9a4:	78605840 	ldrh	w0, [x2, w0, uxtw #1]
     9a8:	10000066 	adr	x6, 9b4 <kprintf.constprop.0+0x120>
     9ac:	8b20a8c0 	add	x0, x6, w0, sxth #2
     9b0:	d61f0000 	br	x0
     9b4:	51011300 	sub	w0, w24, #0x44
     9b8:	7100d81f 	cmp	w0, #0x36
     9bc:	54ffff49 	b.ls	9a4 <kprintf.constprop.0+0x110>  // b.plast
/home/qc2335/optee/optee_os/snprintk.c:554
     9c0:	2a0403f4 	mov	w20, w4
     9c4:	aa0303f3 	mov	x19, x3
/home/qc2335/optee/optee_os/snprintk.c:551
     9c8:	390303f8 	strb	w24, [sp, #192]
/home/qc2335/optee/optee_os/snprintk.c:554
     9cc:	1400005a 	b	b34 <kprintf.constprop.0+0x2a0>
/home/qc2335/optee/optee_os/snprintk.c:305
     9d0:	7100003f 	cmp	w1, #0x0
     9d4:	1a8d1021 	csel	w1, w1, w13, ne  // ne = any
     9d8:	17ffffda 	b	940 <kprintf.constprop.0+0xac>
/home/qc2335/optee/optee_os/snprintk.c:308
     9dc:	320002b5 	orr	w21, w21, #0x1
/home/qc2335/optee/optee_os/snprintk.c:309
     9e0:	17ffffd8 	b	940 <kprintf.constprop.0+0xac>
/home/qc2335/optee/optee_os/snprintk.c:317
     9e4:	37f80124 	tbnz	w4, #31, a08 <kprintf.constprop.0+0x174>
     9e8:	91002c66 	add	x6, x3, #0xb
     9ec:	aa0303e0 	mov	x0, x3
     9f0:	927df0c3 	and	x3, x6, #0xfffffffffffffff8
     9f4:	b940000b 	ldr	w11, [x0]
     9f8:	36fffa4b 	tbz	w11, #31, 940 <kprintf.constprop.0+0xac>
/home/qc2335/optee/optee_os/snprintk.c:319
     9fc:	4b0b03eb 	neg	w11, w11
/home/qc2335/optee/optee_os/snprintk.c:322
     a00:	321e02b5 	orr	w21, w21, #0x4
/home/qc2335/optee/optee_os/snprintk.c:323
     a04:	17ffffcf 	b	940 <kprintf.constprop.0+0xac>
/home/qc2335/optee/optee_os/snprintk.c:317
     a08:	11002086 	add	w6, w4, #0x8
     a0c:	710000df 	cmp	w6, #0x0
     a10:	540000cd 	b.le	a28 <kprintf.constprop.0+0x194>
     a14:	91002c68 	add	x8, x3, #0xb
     a18:	aa0303e0 	mov	x0, x3
     a1c:	2a0603e4 	mov	w4, w6
     a20:	927df103 	and	x3, x8, #0xfffffffffffffff8
     a24:	17fffff4 	b	9f4 <kprintf.constprop.0+0x160>
     a28:	8b24c360 	add	x0, x27, w4, sxtw
     a2c:	2a0603e4 	mov	w4, w6
     a30:	17fffff1 	b	9f4 <kprintf.constprop.0+0x160>
/home/qc2335/optee/optee_os/snprintk.c:328
     a34:	38401798 	ldrb	w24, [x28], #1
     a38:	7100ab1f 	cmp	w24, #0x2a
     a3c:	54000361 	b.ne	aa8 <kprintf.constprop.0+0x214>  // b.any
/home/qc2335/optee/optee_os/snprintk.c:329
     a40:	37f80144 	tbnz	w4, #31, a68 <kprintf.constprop.0+0x1d4>
     a44:	91002c60 	add	x0, x3, #0xb
     a48:	2a0403e6 	mov	w6, w4
     a4c:	927df000 	and	x0, x0, #0xfffffffffffffff8
/home/qc2335/optee/optee_os/snprintk.c:330
     a50:	b9400065 	ldr	w5, [x3]
/home/qc2335/optee/optee_os/snprintk.c:331
     a54:	2a0603e4 	mov	w4, w6
     a58:	aa0003e3 	mov	x3, x0
/home/qc2335/optee/optee_os/snprintk.c:330
     a5c:	710000bf 	cmp	w5, #0x0
     a60:	1a87a0a5 	csel	w5, w5, w7, ge  // ge = tcont
/home/qc2335/optee/optee_os/snprintk.c:331
     a64:	17ffffb7 	b	940 <kprintf.constprop.0+0xac>
/home/qc2335/optee/optee_os/snprintk.c:329
     a68:	11002086 	add	w6, w4, #0x8
     a6c:	710000df 	cmp	w6, #0x0
     a70:	5400008d 	b.le	a80 <kprintf.constprop.0+0x1ec>
     a74:	91002c60 	add	x0, x3, #0xb
     a78:	927df000 	and	x0, x0, #0xfffffffffffffff8
     a7c:	17fffff5 	b	a50 <kprintf.constprop.0+0x1bc>
     a80:	aa0303e0 	mov	x0, x3
     a84:	8b24c363 	add	x3, x27, w4, sxtw
     a88:	17fffff2 	b	a50 <kprintf.constprop.0+0x1bc>
/home/qc2335/optee/optee_os/snprintk.c:335
     a8c:	52800146 	mov	w6, #0xa                   	// #10
/home/qc2335/optee/optee_os/snprintk.c:336
     a90:	38401798 	ldrb	w24, [x28], #1
/home/qc2335/optee/optee_os/snprintk.c:335
     a94:	1b0600a5 	madd	w5, w5, w6, w0
/home/qc2335/optee/optee_os/snprintk.c:334
     a98:	5100c300 	sub	w0, w24, #0x30
     a9c:	7100241f 	cmp	w0, #0x9
     aa0:	54ffff69 	b.ls	a8c <kprintf.constprop.0+0x1f8>  // b.plast
     aa4:	17ffffa8 	b	944 <kprintf.constprop.0+0xb0>
/home/qc2335/optee/optee_os/snprintk.c:333
     aa8:	52800005 	mov	w5, #0x0                   	// #0
     aac:	17fffffb 	b	a98 <kprintf.constprop.0+0x204>
/home/qc2335/optee/optee_os/snprintk.c:346
     ab0:	321602b5 	orr	w21, w21, #0x400
/home/qc2335/optee/optee_os/snprintk.c:347
     ab4:	17ffffa3 	b	940 <kprintf.constprop.0+0xac>
/home/qc2335/optee/optee_os/snprintk.c:297
     ab8:	5280000b 	mov	w11, #0x0                   	// #0
/home/qc2335/optee/optee_os/snprintk.c:352
     abc:	5100c308 	sub	w8, w24, #0x30
     ac0:	52800140 	mov	w0, #0xa                   	// #10
/home/qc2335/optee/optee_os/snprintk.c:353
     ac4:	38401798 	ldrb	w24, [x28], #1
/home/qc2335/optee/optee_os/snprintk.c:352
     ac8:	1b00216b 	madd	w11, w11, w0, w8
/home/qc2335/optee/optee_os/snprintk.c:354
     acc:	5100c300 	sub	w0, w24, #0x30
     ad0:	7100241f 	cmp	w0, #0x9
     ad4:	54ffff49 	b.ls	abc <kprintf.constprop.0+0x228>  // b.plast
     ad8:	17ffff9b 	b	944 <kprintf.constprop.0+0xb0>
/home/qc2335/optee/optee_os/snprintk.c:358
     adc:	321a02b5 	orr	w21, w21, #0x40
/home/qc2335/optee/optee_os/snprintk.c:359
     ae0:	17ffff98 	b	940 <kprintf.constprop.0+0xac>
/home/qc2335/optee/optee_os/snprintk.c:361
     ae4:	321902b5 	orr	w21, w21, #0x80
/home/qc2335/optee/optee_os/snprintk.c:362
     ae8:	17ffff96 	b	940 <kprintf.constprop.0+0xac>
/home/qc2335/optee/optee_os/snprintk.c:364
     aec:	39400380 	ldrb	w0, [x28]
     af0:	7101b01f 	cmp	w0, #0x6c
     af4:	54000081 	b.ne	b04 <kprintf.constprop.0+0x270>  // b.any
/home/qc2335/optee/optee_os/snprintk.c:328
     af8:	9100079c 	add	x28, x28, #0x1
/home/qc2335/optee/optee_os/snprintk.c:372
     afc:	321b02b5 	orr	w21, w21, #0x20
/home/qc2335/optee/optee_os/snprintk.c:373
     b00:	17ffff90 	b	940 <kprintf.constprop.0+0xac>
/home/qc2335/optee/optee_os/snprintk.c:368
     b04:	321c02b5 	orr	w21, w21, #0x10
     b08:	17ffff8e 	b	940 <kprintf.constprop.0+0xac>
/home/qc2335/optee/optee_os/snprintk.c:375
     b0c:	321802b5 	orr	w21, w21, #0x100
/home/qc2335/optee/optee_os/snprintk.c:376
     b10:	17ffff8c 	b	940 <kprintf.constprop.0+0xac>
/home/qc2335/optee/optee_os/snprintk.c:378
     b14:	321702b5 	orr	w21, w21, #0x200
/home/qc2335/optee/optee_os/snprintk.c:379
     b18:	17ffff8a 	b	940 <kprintf.constprop.0+0xac>
/home/qc2335/optee/optee_os/snprintk.c:381
     b1c:	37f80164 	tbnz	w4, #31, b48 <kprintf.constprop.0+0x2b4>
     b20:	91002c73 	add	x19, x3, #0xb
     b24:	2a0403f4 	mov	w20, w4
     b28:	927df273 	and	x19, x19, #0xfffffffffffffff8
     b2c:	b9400060 	ldr	w0, [x3]
     b30:	390303e0 	strb	w0, [sp, #192]
/home/qc2335/optee/optee_os/snprintk.c:550
     b34:	910303ed 	add	x13, sp, #0xc0
/home/qc2335/optee/optee_os/snprintk.c:552
     b38:	52800025 	mov	w5, #0x1                   	// #1
/home/qc2335/optee/optee_os/snprintk.c:291
     b3c:	52800002 	mov	w2, #0x0                   	// #0
/home/qc2335/optee/optee_os/snprintk.c:553
     b40:	52800001 	mov	w1, #0x0                   	// #0
/home/qc2335/optee/optee_os/snprintk.c:554
     b44:	140000fa 	b	f2c <kprintf.constprop.0+0x698>
/home/qc2335/optee/optee_os/snprintk.c:381
     b48:	11002094 	add	w20, w4, #0x8
     b4c:	7100029f 	cmp	w20, #0x0
     b50:	5400008d 	b.le	b60 <kprintf.constprop.0+0x2cc>
     b54:	91002c73 	add	x19, x3, #0xb
     b58:	927df273 	and	x19, x19, #0xfffffffffffffff8
     b5c:	17fffff4 	b	b2c <kprintf.constprop.0+0x298>
     b60:	aa0303f3 	mov	x19, x3
     b64:	8b24c363 	add	x3, x27, w4, sxtw
     b68:	17fffff1 	b	b2c <kprintf.constprop.0+0x298>
/home/qc2335/optee/optee_os/snprintk.c:386
     b6c:	321c02b5 	orr	w21, w21, #0x10
/home/qc2335/optee/optee_os/snprintk.c:390
     b70:	363802f5 	tbz	w21, #7, bcc <kprintf.constprop.0+0x338>
     b74:	37f80424 	tbnz	w4, #31, bf8 <kprintf.constprop.0+0x364>
     b78:	91003c73 	add	x19, x3, #0xf
     b7c:	2a0403f4 	mov	w20, w4
     b80:	927df273 	and	x19, x19, #0xfffffffffffffff8
     b84:	f9400062 	ldr	x2, [x3]
/home/qc2335/optee/optee_os/snprintk.c:391
     b88:	b6f82d22 	tbz	x2, #63, 112c <kprintf.constprop.0+0x898>
/home/qc2335/optee/optee_os/snprintk.c:392
     b8c:	cb0203e2 	neg	x2, x2
/home/qc2335/optee/optee_os/snprintk.c:395
     b90:	52800020 	mov	w0, #0x1                   	// #1
/home/qc2335/optee/optee_os/snprintk.c:393
     b94:	528005a1 	mov	w1, #0x2d                  	// #45
/home/qc2335/optee/optee_os/snprintk.c:494
     b98:	310004bf 	cmn	w5, #0x1
     b9c:	54003b21 	b.ne	1300 <kprintf.constprop.0+0xa6c>  // b.any
/home/qc2335/optee/optee_os/snprintk.c:509
     ba0:	7100041f 	cmp	w0, #0x1
     ba4:	54002c80 	b.eq	1134 <kprintf.constprop.0+0x8a0>  // b.none
     ba8:	7100081f 	cmp	w0, #0x2
     bac:	54000ea1 	b.ne	d80 <kprintf.constprop.0+0x4ec>  // b.any
/home/qc2335/optee/optee_os/snprintk.c:502
     bb0:	910397ed 	add	x13, sp, #0xe5
/home/qc2335/optee/optee_os/snprintk.c:531
     bb4:	92400c40 	and	x0, x2, #0xf
/home/qc2335/optee/optee_os/snprintk.c:532
     bb8:	d344fc42 	lsr	x2, x2, #4
/home/qc2335/optee/optee_os/snprintk.c:531
     bbc:	38606ae0 	ldrb	w0, [x23, x0]
     bc0:	381ffda0 	strb	w0, [x13, #-1]!
/home/qc2335/optee/optee_os/snprintk.c:533
     bc4:	b5ffff82 	cbnz	x2, bb4 <kprintf.constprop.0+0x320>
     bc8:	1400007b 	b	db4 <kprintf.constprop.0+0x520>
/home/qc2335/optee/optee_os/snprintk.c:390
     bcc:	3747fd55 	tbnz	w21, #8, b74 <kprintf.constprop.0+0x2e0>
     bd0:	374ffd35 	tbnz	w21, #9, b74 <kprintf.constprop.0+0x2e0>
     bd4:	372ffd15 	tbnz	w21, #5, b74 <kprintf.constprop.0+0x2e0>
     bd8:	3727fcf5 	tbnz	w21, #4, b74 <kprintf.constprop.0+0x2e0>
     bdc:	36300335 	tbz	w21, #6, c40 <kprintf.constprop.0+0x3ac>
     be0:	37f801e4 	tbnz	w4, #31, c1c <kprintf.constprop.0+0x388>
     be4:	91002c73 	add	x19, x3, #0xb
     be8:	2a0403f4 	mov	w20, w4
     bec:	927df273 	and	x19, x19, #0xfffffffffffffff8
     bf0:	79800062 	ldrsh	x2, [x3]
     bf4:	17ffffe5 	b	b88 <kprintf.constprop.0+0x2f4>
     bf8:	11002094 	add	w20, w4, #0x8
     bfc:	7100029f 	cmp	w20, #0x0
     c00:	5400008d 	b.le	c10 <kprintf.constprop.0+0x37c>
     c04:	91003c73 	add	x19, x3, #0xf
     c08:	927df273 	and	x19, x19, #0xfffffffffffffff8
     c0c:	17ffffde 	b	b84 <kprintf.constprop.0+0x2f0>
     c10:	aa0303f3 	mov	x19, x3
     c14:	8b24c363 	add	x3, x27, w4, sxtw
     c18:	17ffffdb 	b	b84 <kprintf.constprop.0+0x2f0>
     c1c:	11002094 	add	w20, w4, #0x8
     c20:	7100029f 	cmp	w20, #0x0
     c24:	5400008d 	b.le	c34 <kprintf.constprop.0+0x3a0>
     c28:	91002c73 	add	x19, x3, #0xb
     c2c:	927df273 	and	x19, x19, #0xfffffffffffffff8
     c30:	17fffff0 	b	bf0 <kprintf.constprop.0+0x35c>
     c34:	aa0303f3 	mov	x19, x3
     c38:	8b24c363 	add	x3, x27, w4, sxtw
     c3c:	17ffffed 	b	bf0 <kprintf.constprop.0+0x35c>
     c40:	37f800c4 	tbnz	w4, #31, c58 <kprintf.constprop.0+0x3c4>
     c44:	91002c73 	add	x19, x3, #0xb
     c48:	2a0403f4 	mov	w20, w4
     c4c:	927df273 	and	x19, x19, #0xfffffffffffffff8
     c50:	b9800062 	ldrsw	x2, [x3]
     c54:	17ffffcd 	b	b88 <kprintf.constprop.0+0x2f4>
     c58:	11002094 	add	w20, w4, #0x8
     c5c:	7100029f 	cmp	w20, #0x0
     c60:	5400008d 	b.le	c70 <kprintf.constprop.0+0x3dc>
     c64:	91002c73 	add	x19, x3, #0xb
     c68:	927df273 	and	x19, x19, #0xfffffffffffffff8
     c6c:	17fffff9 	b	c50 <kprintf.constprop.0+0x3bc>
     c70:	aa0303f3 	mov	x19, x3
     c74:	8b24c363 	add	x3, x27, w4, sxtw
     c78:	17fffff6 	b	c50 <kprintf.constprop.0+0x3bc>
/home/qc2335/optee/optee_os/snprintk.c:398
     c7c:	36380135 	tbz	w21, #7, ca0 <kprintf.constprop.0+0x40c>
/home/qc2335/optee/optee_os/snprintk.c:407
     c80:	37f80284 	tbnz	w4, #31, cd0 <kprintf.constprop.0+0x43c>
     c84:	91003c73 	add	x19, x3, #0xf
     c88:	2a0403f4 	mov	w20, w4
     c8c:	927df273 	and	x19, x19, #0xfffffffffffffff8
     c90:	f9400060 	ldr	x0, [x3]
     c94:	93407f41 	sxtw	x1, w26
     c98:	f9000001 	str	x1, [x0]
     c9c:	17ffff19 	b	900 <kprintf.constprop.0+0x6c>
/home/qc2335/optee/optee_os/snprintk.c:400
     ca0:	3747ff15 	tbnz	w21, #8, c80 <kprintf.constprop.0+0x3ec>
/home/qc2335/optee/optee_os/snprintk.c:402
     ca4:	374ffef5 	tbnz	w21, #9, c80 <kprintf.constprop.0+0x3ec>
/home/qc2335/optee/optee_os/snprintk.c:404
     ca8:	372ffed5 	tbnz	w21, #5, c80 <kprintf.constprop.0+0x3ec>
/home/qc2335/optee/optee_os/snprintk.c:406
     cac:	3727feb5 	tbnz	w21, #4, c80 <kprintf.constprop.0+0x3ec>
/home/qc2335/optee/optee_os/snprintk.c:408
     cb0:	36300355 	tbz	w21, #6, d18 <kprintf.constprop.0+0x484>
/home/qc2335/optee/optee_os/snprintk.c:409
     cb4:	37f80204 	tbnz	w4, #31, cf4 <kprintf.constprop.0+0x460>
     cb8:	91003c73 	add	x19, x3, #0xf
     cbc:	2a0403f4 	mov	w20, w4
     cc0:	927df273 	and	x19, x19, #0xfffffffffffffff8
     cc4:	f9400060 	ldr	x0, [x3]
     cc8:	7900001a 	strh	w26, [x0]
     ccc:	17ffff0d 	b	900 <kprintf.constprop.0+0x6c>
/home/qc2335/optee/optee_os/snprintk.c:407
     cd0:	11002094 	add	w20, w4, #0x8
     cd4:	7100029f 	cmp	w20, #0x0
     cd8:	5400008d 	b.le	ce8 <kprintf.constprop.0+0x454>
     cdc:	91003c73 	add	x19, x3, #0xf
     ce0:	927df273 	and	x19, x19, #0xfffffffffffffff8
     ce4:	17ffffeb 	b	c90 <kprintf.constprop.0+0x3fc>
     ce8:	aa0303f3 	mov	x19, x3
     cec:	8b24c363 	add	x3, x27, w4, sxtw
     cf0:	17ffffe8 	b	c90 <kprintf.constprop.0+0x3fc>
/home/qc2335/optee/optee_os/snprintk.c:409
     cf4:	11002094 	add	w20, w4, #0x8
     cf8:	7100029f 	cmp	w20, #0x0
     cfc:	5400008d 	b.le	d0c <kprintf.constprop.0+0x478>
     d00:	91003c73 	add	x19, x3, #0xf
     d04:	927df273 	and	x19, x19, #0xfffffffffffffff8
     d08:	17ffffef 	b	cc4 <kprintf.constprop.0+0x430>
     d0c:	aa0303f3 	mov	x19, x3
     d10:	8b24c363 	add	x3, x27, w4, sxtw
     d14:	17ffffec 	b	cc4 <kprintf.constprop.0+0x430>
/home/qc2335/optee/optee_os/snprintk.c:411
     d18:	37f800e4 	tbnz	w4, #31, d34 <kprintf.constprop.0+0x4a0>
     d1c:	91003c73 	add	x19, x3, #0xf
     d20:	2a0403f4 	mov	w20, w4
     d24:	927df273 	and	x19, x19, #0xfffffffffffffff8
     d28:	f9400060 	ldr	x0, [x3]
     d2c:	b900001a 	str	w26, [x0]
     d30:	17fffef4 	b	900 <kprintf.constprop.0+0x6c>
     d34:	11002094 	add	w20, w4, #0x8
     d38:	7100029f 	cmp	w20, #0x0
     d3c:	5400008d 	b.le	d4c <kprintf.constprop.0+0x4b8>
     d40:	91003c73 	add	x19, x3, #0xf
     d44:	927df273 	and	x19, x19, #0xfffffffffffffff8
     d48:	17fffff8 	b	d28 <kprintf.constprop.0+0x494>
     d4c:	aa0303f3 	mov	x19, x3
     d50:	8b24c363 	add	x3, x27, w4, sxtw
     d54:	17fffff5 	b	d28 <kprintf.constprop.0+0x494>
/home/qc2335/optee/optee_os/snprintk.c:414
     d58:	321c02b5 	orr	w21, w21, #0x10
/home/qc2335/optee/optee_os/snprintk.c:417
     d5c:	36380355 	tbz	w21, #7, dc4 <kprintf.constprop.0+0x530>
     d60:	37f80484 	tbnz	w4, #31, df0 <kprintf.constprop.0+0x55c>
     d64:	91003c73 	add	x19, x3, #0xf
     d68:	2a0403f4 	mov	w20, w4
     d6c:	927df273 	and	x19, x19, #0xfffffffffffffff8
     d70:	f9400062 	ldr	x2, [x3]
/home/qc2335/optee/optee_os/snprintk.c:494
     d74:	52800001 	mov	w1, #0x0                   	// #0
     d78:	310004bf 	cmn	w5, #0x1
     d7c:	54002c01 	b.ne	12fc <kprintf.constprop.0+0xa68>  // b.any
/home/qc2335/optee/optee_os/snprintk.c:502
     d80:	910397ed 	add	x13, sp, #0xe5
/home/qc2335/optee/optee_os/snprintk.c:512
     d84:	12000840 	and	w0, w2, #0x7
     d88:	aa0d03e4 	mov	x4, x13
     d8c:	1100c000 	add	w0, w0, #0x30
     d90:	381ffda0 	strb	w0, [x13, #-1]!
/home/qc2335/optee/optee_os/snprintk.c:513
     d94:	d343fc42 	lsr	x2, x2, #3
/home/qc2335/optee/optee_os/snprintk.c:514
     d98:	b5ffff62 	cbnz	x2, d84 <kprintf.constprop.0+0x4f0>
/home/qc2335/optee/optee_os/snprintk.c:516
     d9c:	360000d5 	tbz	w21, #0, db4 <kprintf.constprop.0+0x520>
     da0:	7100c01f 	cmp	w0, #0x30
     da4:	54000080 	b.eq	db4 <kprintf.constprop.0+0x520>  // b.none
/home/qc2335/optee/optee_os/snprintk.c:517
     da8:	52800600 	mov	w0, #0x30                  	// #48
     dac:	381ff1a0 	sturb	w0, [x13, #-1]
     db0:	d100088d 	sub	x13, x4, #0x2
/home/qc2335/optee/optee_os/snprintk.c:543
     db4:	2a0503e2 	mov	w2, w5
     db8:	910397e5 	add	x5, sp, #0xe5
     dbc:	4b0d00a5 	sub	w5, w5, w13
     dc0:	1400005b 	b	f2c <kprintf.constprop.0+0x698>
/home/qc2335/optee/optee_os/snprintk.c:417
     dc4:	3747fcf5 	tbnz	w21, #8, d60 <kprintf.constprop.0+0x4cc>
     dc8:	374ffcd5 	tbnz	w21, #9, d60 <kprintf.constprop.0+0x4cc>
     dcc:	372ffcb5 	tbnz	w21, #5, d60 <kprintf.constprop.0+0x4cc>
     dd0:	3727fc95 	tbnz	w21, #4, d60 <kprintf.constprop.0+0x4cc>
     dd4:	36300335 	tbz	w21, #6, e38 <kprintf.constprop.0+0x5a4>
     dd8:	37f801e4 	tbnz	w4, #31, e14 <kprintf.constprop.0+0x580>
     ddc:	91002c73 	add	x19, x3, #0xb
     de0:	2a0403f4 	mov	w20, w4
     de4:	927df273 	and	x19, x19, #0xfffffffffffffff8
     de8:	79400062 	ldrh	w2, [x3]
     dec:	17ffffe2 	b	d74 <kprintf.constprop.0+0x4e0>
     df0:	11002094 	add	w20, w4, #0x8
     df4:	7100029f 	cmp	w20, #0x0
     df8:	5400008d 	b.le	e08 <kprintf.constprop.0+0x574>
     dfc:	91003c73 	add	x19, x3, #0xf
     e00:	927df273 	and	x19, x19, #0xfffffffffffffff8
     e04:	17ffffdb 	b	d70 <kprintf.constprop.0+0x4dc>
     e08:	aa0303f3 	mov	x19, x3
     e0c:	8b24c363 	add	x3, x27, w4, sxtw
     e10:	17ffffd8 	b	d70 <kprintf.constprop.0+0x4dc>
     e14:	11002094 	add	w20, w4, #0x8
     e18:	7100029f 	cmp	w20, #0x0
     e1c:	5400008d 	b.le	e2c <kprintf.constprop.0+0x598>
     e20:	91002c73 	add	x19, x3, #0xb
     e24:	927df273 	and	x19, x19, #0xfffffffffffffff8
     e28:	17fffff0 	b	de8 <kprintf.constprop.0+0x554>
     e2c:	aa0303f3 	mov	x19, x3
     e30:	8b24c363 	add	x3, x27, w4, sxtw
     e34:	17ffffed 	b	de8 <kprintf.constprop.0+0x554>
     e38:	37f800c4 	tbnz	w4, #31, e50 <kprintf.constprop.0+0x5bc>
     e3c:	91002c73 	add	x19, x3, #0xb
     e40:	2a0403f4 	mov	w20, w4
     e44:	927df273 	and	x19, x19, #0xfffffffffffffff8
     e48:	b9400062 	ldr	w2, [x3]
     e4c:	17ffffca 	b	d74 <kprintf.constprop.0+0x4e0>
     e50:	11002094 	add	w20, w4, #0x8
     e54:	7100029f 	cmp	w20, #0x0
     e58:	5400008d 	b.le	e68 <kprintf.constprop.0+0x5d4>
     e5c:	91002c73 	add	x19, x3, #0xb
     e60:	927df273 	and	x19, x19, #0xfffffffffffffff8
     e64:	17fffff9 	b	e48 <kprintf.constprop.0+0x5b4>
     e68:	aa0303f3 	mov	x19, x3
     e6c:	8b24c363 	add	x3, x27, w4, sxtw
     e70:	17fffff6 	b	e48 <kprintf.constprop.0+0x5b4>
/home/qc2335/optee/optee_os/snprintk.c:421
     e74:	b940abe0 	ldr	w0, [sp, #168]
     e78:	34000c80 	cbz	w0, 1008 <kprintf.constprop.0+0x774>
     e7c:	39400380 	ldrb	w0, [x28]
     e80:	7101541f 	cmp	w0, #0x55
     e84:	54000c21 	b.ne	1008 <kprintf.constprop.0+0x774>  // b.any
     e88:	39400780 	ldrb	w0, [x28, #1]
     e8c:	7101b01f 	cmp	w0, #0x6c
     e90:	54000bc1 	b.ne	1008 <kprintf.constprop.0+0x774>  // b.any
/home/qc2335/optee/optee_os/snprintk.c:426
     e94:	91000b9c 	add	x28, x28, #0x2
/home/qc2335/optee/optee_os/snprintk.c:427
     e98:	37f80a64 	tbnz	w4, #31, fe4 <kprintf.constprop.0+0x750>
     e9c:	91003c73 	add	x19, x3, #0xf
     ea0:	2a0403f4 	mov	w20, w4
     ea4:	927df273 	and	x19, x19, #0xfffffffffffffff8
     ea8:	f9400061 	ldr	x1, [x3]
uuid2str():
/home/qc2335/optee/optee_os/snprintk.c:229
     eac:	910303ed 	add	x13, sp, #0xc0
     eb0:	f00000a2 	adrp	x2, 17000 <__text_end+0x3c08>
     eb4:	912f7842 	add	x2, x2, #0xbde
     eb8:	f90053ed 	str	x13, [sp, #160]
     ebc:	39403c20 	ldrb	w0, [x1, #15]
     ec0:	39402427 	ldrb	w7, [x1, #9]
     ec4:	39402026 	ldrb	w6, [x1, #8]
     ec8:	79400c25 	ldrh	w5, [x1, #6]
     ecc:	79400824 	ldrh	w4, [x1, #4]
     ed0:	b9002be0 	str	w0, [sp, #40]
     ed4:	b900afeb 	str	w11, [sp, #172]
     ed8:	39403820 	ldrb	w0, [x1, #14]
     edc:	b90023e0 	str	w0, [sp, #32]
     ee0:	f9005be9 	str	x9, [sp, #176]
     ee4:	39403420 	ldrb	w0, [x1, #13]
     ee8:	b9001be0 	str	w0, [sp, #24]
     eec:	39403020 	ldrb	w0, [x1, #12]
     ef0:	b90013e0 	str	w0, [sp, #16]
     ef4:	39402c20 	ldrb	w0, [x1, #11]
     ef8:	b9000be0 	str	w0, [sp, #8]
     efc:	39402820 	ldrb	w0, [x1, #10]
     f00:	b90003e0 	str	w0, [sp]
     f04:	aa0d03e0 	mov	x0, x13
     f08:	b9400023 	ldr	w3, [x1]
     f0c:	d28004a1 	mov	x1, #0x25                  	// #37
     f10:	97fffe2d 	bl	7c4 <snprintk>
     f14:	b940afeb 	ldr	w11, [sp, #172]
kprintf():
/home/qc2335/optee/optee_os/snprintk.c:466
     f18:	2a0003e5 	mov	w5, w0
     f1c:	f94053ed 	ldr	x13, [sp, #160]
/home/qc2335/optee/optee_os/snprintk.c:291
     f20:	52800002 	mov	w2, #0x0                   	// #0
     f24:	f9405be9 	ldr	x9, [sp, #176]
/home/qc2335/optee/optee_os/snprintk.c:467
     f28:	52800001 	mov	w1, #0x0                   	// #0
/home/qc2335/optee/optee_os/snprintk.c:571
     f2c:	6b05005f 	cmp	w2, w5
     f30:	1a85a040 	csel	w0, w2, w5, ge  // ge = tcont
/home/qc2335/optee/optee_os/snprintk.c:572
     f34:	340021c1 	cbz	w1, 136c <kprintf.constprop.0+0xad8>
/home/qc2335/optee/optee_os/snprintk.c:573
     f38:	11000400 	add	w0, w0, #0x1
/home/qc2335/optee/optee_os/snprintk.c:578
     f3c:	6b0b001f 	cmp	w0, w11
     f40:	1a8ba004 	csel	w4, w0, w11, ge  // ge = tcont
     f44:	0b04035a 	add	w26, w26, w4
/home/qc2335/optee/optee_os/snprintk.c:581
     f48:	52808084 	mov	w4, #0x404                 	// #1028
     f4c:	6a0402a4 	ands	w4, w21, w4
     f50:	540000a1 	b.ne	f64 <kprintf.constprop.0+0x6d0>  // b.any
/home/qc2335/optee/optee_os/snprintk.c:582
     f54:	4b000166 	sub	w6, w11, w0
/home/qc2335/optee/optee_os/snprintk.c:584
     f58:	52800407 	mov	w7, #0x20                  	// #32
/home/qc2335/optee/optee_os/snprintk.c:583
     f5c:	710000df 	cmp	w6, #0x0
     f60:	540020cc 	b.gt	1378 <kprintf.constprop.0+0xae4>
/home/qc2335/optee/optee_os/snprintk.c:588
     f64:	34002181 	cbz	w1, 1394 <kprintf.constprop.0+0xb00>
/home/qc2335/optee/optee_os/snprintk.c:589
     f68:	b40000b6 	cbz	x22, f7c <kprintf.constprop.0+0x6e8>
     f6c:	f100013f 	cmp	x9, #0x0
     f70:	fa561322 	ccmp	x25, x22, #0x2, ne  // ne = any
     f74:	54000049 	b.ls	f7c <kprintf.constprop.0+0x6e8>  // b.plast
     f78:	380016c1 	strb	w1, [x22], #1
/home/qc2335/optee/optee_os/snprintk.c:596
     f7c:	7110009f 	cmp	w4, #0x400
     f80:	540000a1 	b.ne	f94 <kprintf.constprop.0+0x700>  // b.any
/home/qc2335/optee/optee_os/snprintk.c:597
     f84:	4b000161 	sub	w1, w11, w0
/home/qc2335/optee/optee_os/snprintk.c:599
     f88:	52800604 	mov	w4, #0x30                  	// #48
/home/qc2335/optee/optee_os/snprintk.c:598
     f8c:	7100003f 	cmp	w1, #0x0
     f90:	5400226c 	b.gt	13dc <kprintf.constprop.0+0xb48>
/home/qc2335/optee/optee_os/snprintk.c:603
     f94:	4b050042 	sub	w2, w2, w5
/home/qc2335/optee/optee_os/snprintk.c:605
     f98:	52800601 	mov	w1, #0x30                  	// #48
/home/qc2335/optee/optee_os/snprintk.c:604
     f9c:	7100005f 	cmp	w2, #0x0
     fa0:	540022cc 	b.gt	13f8 <kprintf.constprop.0+0xb64>
     fa4:	2a0503e5 	mov	w5, w5
     fa8:	d2800001 	mov	x1, #0x0                   	// #0
/home/qc2335/optee/optee_os/snprintk.c:608
     fac:	eb05003f 	cmp	x1, x5
     fb0:	54002321 	b.ne	1414 <kprintf.constprop.0+0xb80>  // b.any
/home/qc2335/optee/optee_os/snprintk.c:611
     fb4:	3617ca75 	tbz	w21, #2, 900 <kprintf.constprop.0+0x6c>
/home/qc2335/optee/optee_os/snprintk.c:612
     fb8:	4b000160 	sub	w0, w11, w0
/home/qc2335/optee/optee_os/snprintk.c:614
     fbc:	52800401 	mov	w1, #0x20                  	// #32
/home/qc2335/optee/optee_os/snprintk.c:613
     fc0:	7100001f 	cmp	w0, #0x0
     fc4:	54ffc9ed 	b.le	900 <kprintf.constprop.0+0x6c>
/home/qc2335/optee/optee_os/snprintk.c:614
     fc8:	b40000b6 	cbz	x22, fdc <kprintf.constprop.0+0x748>
     fcc:	f100013f 	cmp	x9, #0x0
     fd0:	fa561322 	ccmp	x25, x22, #0x2, ne  // ne = any
     fd4:	54000049 	b.ls	fdc <kprintf.constprop.0+0x748>  // b.plast
     fd8:	380016c1 	strb	w1, [x22], #1
     fdc:	51000400 	sub	w0, w0, #0x1
     fe0:	17fffff8 	b	fc0 <kprintf.constprop.0+0x72c>
/home/qc2335/optee/optee_os/snprintk.c:427
     fe4:	11002094 	add	w20, w4, #0x8
     fe8:	7100029f 	cmp	w20, #0x0
     fec:	5400008d 	b.le	ffc <kprintf.constprop.0+0x768>
     ff0:	91003c73 	add	x19, x3, #0xf
     ff4:	927df273 	and	x19, x19, #0xfffffffffffffff8
     ff8:	17ffffac 	b	ea8 <kprintf.constprop.0+0x614>
     ffc:	aa0303f3 	mov	x19, x3
    1000:	8b24c363 	add	x3, x27, w4, sxtw
    1004:	17ffffa9 	b	ea8 <kprintf.constprop.0+0x614>
/home/qc2335/optee/optee_os/snprintk.c:441
    1008:	37f801c4 	tbnz	w4, #31, 1040 <kprintf.constprop.0+0x7ac>
    100c:	91003c73 	add	x19, x3, #0xf
    1010:	2a0403f4 	mov	w20, w4
    1014:	927df273 	and	x19, x19, #0xfffffffffffffff8
    1018:	f9400062 	ldr	x2, [x3]
/home/qc2335/optee/optee_os/snprintk.c:443
    101c:	d00000b7 	adrp	x23, 17000 <__text_end+0x3c08>
/home/qc2335/optee/optee_os/snprintk.c:444
    1020:	321f02b5 	orr	w21, w21, #0x2
/home/qc2335/optee/optee_os/snprintk.c:443
    1024:	91170af7 	add	x23, x23, #0x5c2
/home/qc2335/optee/optee_os/snprintk.c:445
    1028:	52800f18 	mov	w24, #0x78                  	// #120
/home/qc2335/optee/optee_os/snprintk.c:494
    102c:	52800001 	mov	w1, #0x0                   	// #0
    1030:	310004bf 	cmn	w5, #0x1
    1034:	54ffdbe0 	b.eq	bb0 <kprintf.constprop.0+0x31c>  // b.none
    1038:	52800040 	mov	w0, #0x2                   	// #2
    103c:	140000b1 	b	1300 <kprintf.constprop.0+0xa6c>
/home/qc2335/optee/optee_os/snprintk.c:441
    1040:	11002094 	add	w20, w4, #0x8
    1044:	7100029f 	cmp	w20, #0x0
    1048:	5400008d 	b.le	1058 <kprintf.constprop.0+0x7c4>
    104c:	91003c73 	add	x19, x3, #0xf
    1050:	927df273 	and	x19, x19, #0xfffffffffffffff8
    1054:	17fffff1 	b	1018 <kprintf.constprop.0+0x784>
    1058:	aa0303f3 	mov	x19, x3
    105c:	8b24c363 	add	x3, x27, w4, sxtw
    1060:	17ffffee 	b	1018 <kprintf.constprop.0+0x784>
/home/qc2335/optee/optee_os/snprintk.c:448
    1064:	37f80364 	tbnz	w4, #31, 10d0 <kprintf.constprop.0+0x83c>
    1068:	91003c73 	add	x19, x3, #0xf
    106c:	2a0403f4 	mov	w20, w4
    1070:	927df273 	and	x19, x19, #0xfffffffffffffff8
    1074:	f940006d 	ldr	x13, [x3]
    1078:	b500006d 	cbnz	x13, 1084 <kprintf.constprop.0+0x7f0>
/home/qc2335/optee/optee_os/snprintk.c:450
    107c:	d00000a3 	adrp	x3, 17000 <__text_end+0x3c08>
    1080:	912f5c6d 	add	x13, x3, #0xbd7
/home/qc2335/optee/optee_os/snprintk.c:451
    1084:	310004bf 	cmn	w5, #0x1
    1088:	54000360 	b.eq	10f4 <kprintf.constprop.0+0x860>  // b.none
/home/qc2335/optee/optee_os/snprintk.c:457
    108c:	93407ca2 	sxtw	x2, w5
    1090:	aa0d03e0 	mov	x0, x13
    1094:	52800001 	mov	w1, #0x0                   	// #0
    1098:	f90053ed 	str	x13, [sp, #160]
    109c:	2915afe5 	stp	w5, w11, [sp, #172]
    10a0:	f9005fe9 	str	x9, [sp, #184]
    10a4:	94000100 	bl	14a4 <memchr>
/home/qc2335/optee/optee_os/snprintk.c:459
    10a8:	2955afe5 	ldp	w5, w11, [sp, #172]
    10ac:	f94053ed 	ldr	x13, [sp, #160]
    10b0:	f9405fe9 	ldr	x9, [sp, #184]
    10b4:	b4000080 	cbz	x0, 10c4 <kprintf.constprop.0+0x830>
/home/qc2335/optee/optee_os/snprintk.c:460
    10b8:	cb0d0000 	sub	x0, x0, x13
    10bc:	6b0000bf 	cmp	w5, w0
    10c0:	1a80d0a5 	csel	w5, w5, w0, le
/home/qc2335/optee/optee_os/snprintk.c:291
    10c4:	52800002 	mov	w2, #0x0                   	// #0
/home/qc2335/optee/optee_os/snprintk.c:467
    10c8:	52800001 	mov	w1, #0x0                   	// #0
    10cc:	17ffff98 	b	f2c <kprintf.constprop.0+0x698>
/home/qc2335/optee/optee_os/snprintk.c:448
    10d0:	11002094 	add	w20, w4, #0x8
    10d4:	7100029f 	cmp	w20, #0x0
    10d8:	5400008d 	b.le	10e8 <kprintf.constprop.0+0x854>
    10dc:	91003c73 	add	x19, x3, #0xf
    10e0:	927df273 	and	x19, x19, #0xfffffffffffffff8
    10e4:	17ffffe4 	b	1074 <kprintf.constprop.0+0x7e0>
    10e8:	aa0303f3 	mov	x19, x3
    10ec:	8b24c363 	add	x3, x27, w4, sxtw
    10f0:	17ffffe1 	b	1074 <kprintf.constprop.0+0x7e0>
/home/qc2335/optee/optee_os/snprintk.c:466
    10f4:	aa0d03e0 	mov	x0, x13
    10f8:	f90053ed 	str	x13, [sp, #160]
    10fc:	b900afeb 	str	w11, [sp, #172]
    1100:	f9005be9 	str	x9, [sp, #176]
    1104:	940000f3 	bl	14d0 <strlen>
    1108:	17ffff83 	b	f14 <kprintf.constprop.0+0x680>
/home/qc2335/optee/optee_os/snprintk.c:470
    110c:	321c02b5 	orr	w21, w21, #0x10
/home/qc2335/optee/optee_os/snprintk.c:473
    1110:	36380235 	tbz	w21, #7, 1154 <kprintf.constprop.0+0x8c0>
    1114:	37f80364 	tbnz	w4, #31, 1180 <kprintf.constprop.0+0x8ec>
    1118:	91003c73 	add	x19, x3, #0xf
    111c:	2a0403f4 	mov	w20, w4
    1120:	927df273 	and	x19, x19, #0xfffffffffffffff8
    1124:	f9400062 	ldr	x2, [x3]
/home/qc2335/optee/optee_os/snprintk.c:488
    1128:	52800001 	mov	w1, #0x0                   	// #0
/home/qc2335/optee/optee_os/snprintk.c:494
    112c:	310004bf 	cmn	w5, #0x1
    1130:	54000f61 	b.ne	131c <kprintf.constprop.0+0xa88>  // b.any
/home/qc2335/optee/optee_os/snprintk.c:502
    1134:	910397e0 	add	x0, sp, #0xe5
/home/qc2335/optee/optee_os/snprintk.c:523
    1138:	d2800144 	mov	x4, #0xa                   	// #10
    113c:	d100040d 	sub	x13, x0, #0x1
/home/qc2335/optee/optee_os/snprintk.c:522
    1140:	f100245f 	cmp	x2, #0x9
    1144:	54000f08 	b.hi	1324 <kprintf.constprop.0+0xa90>  // b.pmore
/home/qc2335/optee/optee_os/snprintk.c:526
    1148:	1100c042 	add	w2, w2, #0x30
    114c:	381ff002 	sturb	w2, [x0, #-1]
/home/qc2335/optee/optee_os/snprintk.c:527
    1150:	17ffff19 	b	db4 <kprintf.constprop.0+0x520>
/home/qc2335/optee/optee_os/snprintk.c:473
    1154:	3747fe15 	tbnz	w21, #8, 1114 <kprintf.constprop.0+0x880>
    1158:	374ffdf5 	tbnz	w21, #9, 1114 <kprintf.constprop.0+0x880>
    115c:	372ffdd5 	tbnz	w21, #5, 1114 <kprintf.constprop.0+0x880>
    1160:	3727fdb5 	tbnz	w21, #4, 1114 <kprintf.constprop.0+0x880>
    1164:	36300335 	tbz	w21, #6, 11c8 <kprintf.constprop.0+0x934>
    1168:	37f801e4 	tbnz	w4, #31, 11a4 <kprintf.constprop.0+0x910>
    116c:	91002c73 	add	x19, x3, #0xb
    1170:	2a0403f4 	mov	w20, w4
    1174:	927df273 	and	x19, x19, #0xfffffffffffffff8
    1178:	79400062 	ldrh	w2, [x3]
    117c:	17ffffeb 	b	1128 <kprintf.constprop.0+0x894>
    1180:	11002094 	add	w20, w4, #0x8
    1184:	7100029f 	cmp	w20, #0x0
    1188:	5400008d 	b.le	1198 <kprintf.constprop.0+0x904>
    118c:	91003c73 	add	x19, x3, #0xf
    1190:	927df273 	and	x19, x19, #0xfffffffffffffff8
    1194:	17ffffe4 	b	1124 <kprintf.constprop.0+0x890>
    1198:	aa0303f3 	mov	x19, x3
    119c:	8b24c363 	add	x3, x27, w4, sxtw
    11a0:	17ffffe1 	b	1124 <kprintf.constprop.0+0x890>
    11a4:	11002094 	add	w20, w4, #0x8
    11a8:	7100029f 	cmp	w20, #0x0
    11ac:	5400008d 	b.le	11bc <kprintf.constprop.0+0x928>
    11b0:	91002c73 	add	x19, x3, #0xb
    11b4:	927df273 	and	x19, x19, #0xfffffffffffffff8
    11b8:	17fffff0 	b	1178 <kprintf.constprop.0+0x8e4>
    11bc:	aa0303f3 	mov	x19, x3
    11c0:	8b24c363 	add	x3, x27, w4, sxtw
    11c4:	17ffffed 	b	1178 <kprintf.constprop.0+0x8e4>
    11c8:	37f800c4 	tbnz	w4, #31, 11e0 <kprintf.constprop.0+0x94c>
    11cc:	91002c73 	add	x19, x3, #0xb
    11d0:	2a0403f4 	mov	w20, w4
    11d4:	927df273 	and	x19, x19, #0xfffffffffffffff8
    11d8:	b9400062 	ldr	w2, [x3]
    11dc:	17ffffd3 	b	1128 <kprintf.constprop.0+0x894>
    11e0:	11002094 	add	w20, w4, #0x8
    11e4:	7100029f 	cmp	w20, #0x0
    11e8:	5400008d 	b.le	11f8 <kprintf.constprop.0+0x964>
    11ec:	91002c73 	add	x19, x3, #0xb
    11f0:	927df273 	and	x19, x19, #0xfffffffffffffff8
    11f4:	17fffff9 	b	11d8 <kprintf.constprop.0+0x944>
    11f8:	aa0303f3 	mov	x19, x3
    11fc:	8b24c363 	add	x3, x27, w4, sxtw
    1200:	17fffff6 	b	11d8 <kprintf.constprop.0+0x944>
/home/qc2335/optee/optee_os/snprintk.c:297
    1204:	d00000b7 	adrp	x23, 17000 <__text_end+0x3c08>
    1208:	91170af7 	add	x23, x23, #0x5c2
    120c:	910046f7 	add	x23, x23, #0x11
/home/qc2335/optee/optee_os/snprintk.c:481
    1210:	363801f5 	tbz	w21, #7, 124c <kprintf.constprop.0+0x9b8>
    1214:	37f80324 	tbnz	w4, #31, 1278 <kprintf.constprop.0+0x9e4>
    1218:	91003c73 	add	x19, x3, #0xf
    121c:	2a0403f4 	mov	w20, w4
    1220:	927df273 	and	x19, x19, #0xfffffffffffffff8
    1224:	f9400062 	ldr	x2, [x3]
/home/qc2335/optee/optee_os/snprintk.c:484
    1228:	3607f035 	tbz	w21, #0, 102c <kprintf.constprop.0+0x798>
    122c:	b4fff002 	cbz	x2, 102c <kprintf.constprop.0+0x798>
/home/qc2335/optee/optee_os/snprintk.c:485
    1230:	321f02b5 	orr	w21, w21, #0x2
/home/qc2335/optee/optee_os/snprintk.c:482
    1234:	52800040 	mov	w0, #0x2                   	// #2
/home/qc2335/optee/optee_os/snprintk.c:488
    1238:	52800001 	mov	w1, #0x0                   	// #0
    123c:	17fffe57 	b	b98 <kprintf.constprop.0+0x304>
/home/qc2335/optee/optee_os/snprintk.c:480
    1240:	d00000b7 	adrp	x23, 17000 <__text_end+0x3c08>
    1244:	91170af7 	add	x23, x23, #0x5c2
    1248:	17fffff2 	b	1210 <kprintf.constprop.0+0x97c>
/home/qc2335/optee/optee_os/snprintk.c:481
    124c:	3747fe55 	tbnz	w21, #8, 1214 <kprintf.constprop.0+0x980>
    1250:	374ffe35 	tbnz	w21, #9, 1214 <kprintf.constprop.0+0x980>
    1254:	372ffe15 	tbnz	w21, #5, 1214 <kprintf.constprop.0+0x980>
    1258:	3727fdf5 	tbnz	w21, #4, 1214 <kprintf.constprop.0+0x980>
    125c:	36300335 	tbz	w21, #6, 12c0 <kprintf.constprop.0+0xa2c>
    1260:	37f801e4 	tbnz	w4, #31, 129c <kprintf.constprop.0+0xa08>
    1264:	91002c73 	add	x19, x3, #0xb
    1268:	2a0403f4 	mov	w20, w4
    126c:	927df273 	and	x19, x19, #0xfffffffffffffff8
    1270:	79400062 	ldrh	w2, [x3]
    1274:	17ffffed 	b	1228 <kprintf.constprop.0+0x994>
    1278:	11002094 	add	w20, w4, #0x8
    127c:	7100029f 	cmp	w20, #0x0
    1280:	5400008d 	b.le	1290 <kprintf.constprop.0+0x9fc>
    1284:	91003c73 	add	x19, x3, #0xf
    1288:	927df273 	and	x19, x19, #0xfffffffffffffff8
    128c:	17ffffe6 	b	1224 <kprintf.constprop.0+0x990>
    1290:	aa0303f3 	mov	x19, x3
    1294:	8b24c363 	add	x3, x27, w4, sxtw
    1298:	17ffffe3 	b	1224 <kprintf.constprop.0+0x990>
    129c:	11002094 	add	w20, w4, #0x8
    12a0:	7100029f 	cmp	w20, #0x0
    12a4:	5400008d 	b.le	12b4 <kprintf.constprop.0+0xa20>
    12a8:	91002c73 	add	x19, x3, #0xb
    12ac:	927df273 	and	x19, x19, #0xfffffffffffffff8
    12b0:	17fffff0 	b	1270 <kprintf.constprop.0+0x9dc>
    12b4:	aa0303f3 	mov	x19, x3
    12b8:	8b24c363 	add	x3, x27, w4, sxtw
    12bc:	17ffffed 	b	1270 <kprintf.constprop.0+0x9dc>
    12c0:	37f800c4 	tbnz	w4, #31, 12d8 <kprintf.constprop.0+0xa44>
    12c4:	91002c73 	add	x19, x3, #0xb
    12c8:	2a0403f4 	mov	w20, w4
    12cc:	927df273 	and	x19, x19, #0xfffffffffffffff8
    12d0:	b9400062 	ldr	w2, [x3]
    12d4:	17ffffd5 	b	1228 <kprintf.constprop.0+0x994>
    12d8:	11002094 	add	w20, w4, #0x8
    12dc:	7100029f 	cmp	w20, #0x0
    12e0:	5400008d 	b.le	12f0 <kprintf.constprop.0+0xa5c>
    12e4:	91002c73 	add	x19, x3, #0xb
    12e8:	927df273 	and	x19, x19, #0xfffffffffffffff8
    12ec:	17fffff9 	b	12d0 <kprintf.constprop.0+0xa3c>
    12f0:	aa0303f3 	mov	x19, x3
    12f4:	8b24c363 	add	x3, x27, w4, sxtw
    12f8:	17fffff6 	b	12d0 <kprintf.constprop.0+0xa3c>
/home/qc2335/optee/optee_os/snprintk.c:494
    12fc:	52800000 	mov	w0, #0x0                   	// #0
/home/qc2335/optee/optee_os/snprintk.c:503
    1300:	f100005f 	cmp	x2, #0x0
/home/qc2335/optee/optee_os/snprintk.c:495
    1304:	12157ab5 	and	w21, w21, #0xfffffbff
/home/qc2335/optee/optee_os/snprintk.c:503
    1308:	7a4008a0 	ccmp	w5, #0x0, #0x0, eq  // eq = none
    130c:	54ffc4a1 	b.ne	ba0 <kprintf.constprop.0+0x30c>  // b.any
/home/qc2335/optee/optee_os/snprintk.c:502
    1310:	910397ed 	add	x13, sp, #0xe5
    1314:	52800005 	mov	w5, #0x0                   	// #0
    1318:	17fffea7 	b	db4 <kprintf.constprop.0+0x520>
/home/qc2335/optee/optee_os/snprintk.c:494
    131c:	52800020 	mov	w0, #0x1                   	// #1
    1320:	17fffff8 	b	1300 <kprintf.constprop.0+0xa6c>
/home/qc2335/optee/optee_os/snprintk.c:523
    1324:	9ac40846 	udiv	x6, x2, x4
    1328:	9b0488c2 	msub	x2, x6, x4, x2
    132c:	1100c042 	add	w2, w2, #0x30
    1330:	381ff002 	sturb	w2, [x0, #-1]
/home/qc2335/optee/optee_os/snprintk.c:524
    1334:	aa0603e2 	mov	x2, x6
    1338:	aa0d03e0 	mov	x0, x13
    133c:	17ffff80 	b	113c <kprintf.constprop.0+0x8a8>
/home/qc2335/optee/optee_os/snprintk.c:547
    1340:	35ffb418 	cbnz	w24, 9c0 <kprintf.constprop.0+0x12c>
/home/qc2335/optee/optee_os/snprintk.c:619
    1344:	b4000049 	cbz	x9, 134c <kprintf.constprop.0+0xab8>
/home/qc2335/optee/optee_os/snprintk.c:620
    1348:	f9000136 	str	x22, [x9]
/home/qc2335/optee/optee_os/snprintk.c:622
    134c:	900000c0 	adrp	x0, 19000 <_DYNAMIC>
    1350:	f9409800 	ldr	x0, [x0, #304]
    1354:	f94077e2 	ldr	x2, [sp, #232]
    1358:	f9400001 	ldr	x1, [x0]
    135c:	eb010042 	subs	x2, x2, x1
    1360:	d2800001 	mov	x1, #0x0                   	// #0
    1364:	54000680 	b.eq	1434 <kprintf.constprop.0+0xba0>  // b.none
    1368:	97fffcc4 	bl	678 <__stack_chk_fail>
/home/qc2335/optee/optee_os/snprintk.c:574
    136c:	360fde95 	tbz	w21, #1, f3c <kprintf.constprop.0+0x6a8>
/home/qc2335/optee/optee_os/snprintk.c:575
    1370:	11000800 	add	w0, w0, #0x2
    1374:	17fffef2 	b	f3c <kprintf.constprop.0+0x6a8>
/home/qc2335/optee/optee_os/snprintk.c:584
    1378:	b40000b6 	cbz	x22, 138c <kprintf.constprop.0+0xaf8>
    137c:	f100013f 	cmp	x9, #0x0
    1380:	fa561322 	ccmp	x25, x22, #0x2, ne  // ne = any
    1384:	54000049 	b.ls	138c <kprintf.constprop.0+0xaf8>  // b.plast
    1388:	380016c7 	strb	w7, [x22], #1
    138c:	510004c6 	sub	w6, w6, #0x1
    1390:	17fffef3 	b	f5c <kprintf.constprop.0+0x6c8>
/home/qc2335/optee/optee_os/snprintk.c:590
    1394:	360fdf55 	tbz	w21, #1, f7c <kprintf.constprop.0+0x6e8>
/home/qc2335/optee/optee_os/snprintk.c:591
    1398:	b4ffdf36 	cbz	x22, f7c <kprintf.constprop.0+0x6e8>
    139c:	f100013f 	cmp	x9, #0x0
    13a0:	1a9f17e6 	cset	w6, eq  // eq = none
    13a4:	710000df 	cmp	w6, #0x0
    13a8:	fa560322 	ccmp	x25, x22, #0x2, eq  // eq = none
    13ac:	54ffde89 	b.ls	f7c <kprintf.constprop.0+0x6e8>  // b.plast
    13b0:	aa1603e1 	mov	x1, x22
    13b4:	52800607 	mov	w7, #0x30                  	// #48
/home/qc2335/optee/optee_os/snprintk.c:592
    13b8:	710000df 	cmp	w6, #0x0
/home/qc2335/optee/optee_os/snprintk.c:591
    13bc:	38001427 	strb	w7, [x1], #1
/home/qc2335/optee/optee_os/snprintk.c:592
    13c0:	fa410322 	ccmp	x25, x1, #0x2, eq  // eq = none
    13c4:	54000089 	b.ls	13d4 <kprintf.constprop.0+0xb40>  // b.plast
    13c8:	91000ad6 	add	x22, x22, #0x2
    13cc:	381ff2d8 	sturb	w24, [x22, #-1]
    13d0:	17fffeeb 	b	f7c <kprintf.constprop.0+0x6e8>
    13d4:	aa0103f6 	mov	x22, x1
    13d8:	17fffee9 	b	f7c <kprintf.constprop.0+0x6e8>
/home/qc2335/optee/optee_os/snprintk.c:599
    13dc:	b40000b6 	cbz	x22, 13f0 <kprintf.constprop.0+0xb5c>
    13e0:	f100013f 	cmp	x9, #0x0
    13e4:	fa561322 	ccmp	x25, x22, #0x2, ne  // ne = any
    13e8:	54000049 	b.ls	13f0 <kprintf.constprop.0+0xb5c>  // b.plast
    13ec:	380016c4 	strb	w4, [x22], #1
    13f0:	51000421 	sub	w1, w1, #0x1
    13f4:	17fffee6 	b	f8c <kprintf.constprop.0+0x6f8>
/home/qc2335/optee/optee_os/snprintk.c:605
    13f8:	b40000b6 	cbz	x22, 140c <kprintf.constprop.0+0xb78>
    13fc:	f100013f 	cmp	x9, #0x0
    1400:	fa561322 	ccmp	x25, x22, #0x2, ne  // ne = any
    1404:	54000049 	b.ls	140c <kprintf.constprop.0+0xb78>  // b.plast
    1408:	380016c1 	strb	w1, [x22], #1
    140c:	51000442 	sub	w2, w2, #0x1
    1410:	17fffee3 	b	f9c <kprintf.constprop.0+0x708>
/home/qc2335/optee/optee_os/snprintk.c:609
    1414:	b40000d6 	cbz	x22, 142c <kprintf.constprop.0+0xb98>
    1418:	f100013f 	cmp	x9, #0x0
    141c:	fa561322 	ccmp	x25, x22, #0x2, ne  // ne = any
    1420:	54000069 	b.ls	142c <kprintf.constprop.0+0xb98>  // b.plast
    1424:	386169a2 	ldrb	w2, [x13, x1]
    1428:	380016c2 	strb	w2, [x22], #1
/home/qc2335/optee/optee_os/snprintk.c:608
    142c:	91000421 	add	x1, x1, #0x1
    1430:	17fffedf 	b	fac <kprintf.constprop.0+0x718>
/home/qc2335/optee/optee_os/snprintk.c:622
    1434:	2a1a03e0 	mov	w0, w26
    1438:	a9437bfd 	ldp	x29, x30, [sp, #48]
    143c:	a94453f3 	ldp	x19, x20, [sp, #64]
    1440:	a9455bf5 	ldp	x21, x22, [sp, #80]
    1444:	a94663f7 	ldp	x23, x24, [sp, #96]
    1448:	a9476bf9 	ldp	x25, x26, [sp, #112]
    144c:	a94873fb 	ldp	x27, x28, [sp, #128]
    1450:	9103c3ff 	add	sp, sp, #0xf0
    1454:	d65f03c0 	ret

0000000000001458 <__vsprintf>:
__vsprintf():
/home/qc2335/optee/optee_os/snprintk.c:155
    1458:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
/home/qc2335/optee/optee_os/snprintk.c:156
    145c:	910083e3 	add	x3, sp, #0x20
/home/qc2335/optee/optee_os/snprintk.c:155
    1460:	910003fd 	mov	x29, sp
    1464:	a90153f3 	stp	x19, x20, [sp, #16]
    1468:	aa0003f4 	mov	x20, x0
    146c:	aa0103f3 	mov	x19, x1
/home/qc2335/optee/optee_os/snprintk.c:156
    1470:	aa0303e0 	mov	x0, x3
/home/qc2335/optee/optee_os/snprintk.c:155
    1474:	aa0203e1 	mov	x1, x2
/home/qc2335/optee/optee_os/snprintk.c:156
    1478:	d2800402 	mov	x2, #0x20                  	// #32
    147c:	97fffae1 	bl	0 <memcpy>
    1480:	aa1403e2 	mov	x2, x20
    1484:	aa0003e3 	mov	x3, x0
    1488:	52800004 	mov	w4, #0x0                   	// #0
    148c:	aa1303e0 	mov	x0, x19
    1490:	d2800001 	mov	x1, #0x0                   	// #0
    1494:	97fffd00 	bl	894 <kprintf.constprop.0>
/home/qc2335/optee/optee_os/snprintk.c:157
    1498:	a94153f3 	ldp	x19, x20, [sp, #16]
    149c:	a8c47bfd 	ldp	x29, x30, [sp], #64
    14a0:	d65f03c0 	ret

00000000000014a4 <memchr>:
memchr():
/home/qc2335/optee/optee_os/memchr.c:109
    14a4:	12001c21 	and	w1, w1, #0xff
/home/qc2335/optee/optee_os/memchr.c:153
    14a8:	8b020002 	add	x2, x0, x2
    14ac:	eb02001f 	cmp	x0, x2
    14b0:	54000061 	b.ne	14bc <memchr+0x18>  // b.any
/home/qc2335/optee/optee_os/memchr.c:159
    14b4:	d2800000 	mov	x0, #0x0                   	// #0
/home/qc2335/optee/optee_os/memchr.c:160
    14b8:	d65f03c0 	ret
/home/qc2335/optee/optee_os/memchr.c:154
    14bc:	39400003 	ldrb	w3, [x0]
    14c0:	6b01007f 	cmp	w3, w1
    14c4:	54ffffa0 	b.eq	14b8 <memchr+0x14>  // b.none
/home/qc2335/optee/optee_os/memchr.c:156
    14c8:	91000400 	add	x0, x0, #0x1
    14cc:	17fffff8 	b	14ac <memchr+0x8>

00000000000014d0 <strlen>:
strlen():
/home/qc2335/optee/optee_os/strlen.c:117
    14d0:	aa0003e1 	mov	x1, x0
    14d4:	39400022 	ldrb	w2, [x1]
    14d8:	35000062 	cbnz	w2, 14e4 <strlen+0x14>
/home/qc2335/optee/optee_os/strlen.c:120
    14dc:	cb000020 	sub	x0, x1, x0
    14e0:	d65f03c0 	ret
/home/qc2335/optee/optee_os/strlen.c:118
    14e4:	91000421 	add	x1, x1, #0x1
    14e8:	17fffffb 	b	14d4 <strlen+0x4>

00000000000014ec <trace_ext_puts>:
trace_ext_puts():
/home/qc2335/optee/optee_os/trace_ext.c:22
    14ec:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    14f0:	910003fd 	mov	x29, sp
    14f4:	f9000bf3 	str	x19, [sp, #16]
    14f8:	aa0003f3 	mov	x19, x0
/home/qc2335/optee/optee_os/trace_ext.c:26
    14fc:	97fffff5 	bl	14d0 <strlen>
    1500:	aa0003e1 	mov	x1, x0
    1504:	aa1303e0 	mov	x0, x19
/home/qc2335/optee/optee_os/trace_ext.c:28
    1508:	f9400bf3 	ldr	x19, [sp, #16]
    150c:	a8c27bfd 	ldp	x29, x30, [sp], #32
/home/qc2335/optee/optee_os/trace_ext.c:26
    1510:	140002ca 	b	2038 <_utee_log>

0000000000001514 <trace_ext_get_thread_id>:
trace_ext_get_thread_id():
/home/qc2335/optee/optee_os/trace_ext.c:33
    1514:	12800000 	mov	w0, #0xffffffff            	// #-1
    1518:	d65f03c0 	ret

000000000000151c <printf>:
printf():
/home/qc2335/optee/optee_os/trace_ext.c:41
    151c:	d108c3ff 	sub	sp, sp, #0x230
    1520:	a9007bfd 	stp	x29, x30, [sp]
    1524:	910003fd 	mov	x29, sp
    1528:	a90153f3 	stp	x19, x20, [sp, #16]
    152c:	aa0003f3 	mov	x19, x0
    1530:	910823e0 	add	x0, sp, #0x208
    1534:	a91f8be1 	stp	x1, x2, [sp, #504]
    1538:	900000c1 	adrp	x1, 19000 <_DYNAMIC>
    153c:	3d805fe0 	str	q0, [sp, #368]
    1540:	3d8063e1 	str	q1, [sp, #384]
    1544:	3d8067e2 	str	q2, [sp, #400]
    1548:	3d806be3 	str	q3, [sp, #416]
    154c:	3d806fe4 	str	q4, [sp, #432]
    1550:	3d8073e5 	str	q5, [sp, #448]
    1554:	3d8077e6 	str	q6, [sp, #464]
    1558:	3d807be7 	str	q7, [sp, #480]
    155c:	f9409821 	ldr	x1, [x1, #304]
    1560:	a9001003 	stp	x3, x4, [x0]
    1564:	a9011805 	stp	x5, x6, [x0, #16]
    1568:	f90117e7 	str	x7, [sp, #552]
    156c:	f9400020 	ldr	x0, [x1]
    1570:	f900b7e0 	str	x0, [sp, #360]
    1574:	d2800000 	mov	x0, #0x0                   	// #0
/home/qc2335/optee/optee_os/trace_ext.c:46
    1578:	97fffb7b 	bl	364 <trace_get_level>
    157c:	7100001f 	cmp	w0, #0x0
    1580:	5400040d 	b.le	1600 <printf+0xe4>
/home/qc2335/optee/optee_os/trace_ext.c:49
    1584:	9108c3e0 	add	x0, sp, #0x230
/home/qc2335/optee/optee_os/trace_ext.c:50
    1588:	910083e3 	add	x3, sp, #0x20
/home/qc2335/optee/optee_os/trace_ext.c:49
    158c:	a90483e0 	stp	x0, x0, [sp, #72]
    1590:	9107c3e0 	add	x0, sp, #0x1f0
/home/qc2335/optee/optee_os/trace_ext.c:50
    1594:	910123e1 	add	x1, sp, #0x48
/home/qc2335/optee/optee_os/trace_ext.c:49
    1598:	f9002fe0 	str	x0, [sp, #88]
    159c:	128006e0 	mov	w0, #0xffffffc8            	// #-56
    15a0:	b90063e0 	str	w0, [sp, #96]
    15a4:	12800fe0 	mov	w0, #0xffffff80            	// #-128
/home/qc2335/optee/optee_os/trace_ext.c:50
    15a8:	d2800402 	mov	x2, #0x20                  	// #32
    15ac:	9101a3f4 	add	x20, sp, #0x68
/home/qc2335/optee/optee_os/trace_ext.c:49
    15b0:	b90067e0 	str	w0, [sp, #100]
/home/qc2335/optee/optee_os/trace_ext.c:50
    15b4:	aa0303e0 	mov	x0, x3
    15b8:	97fffa92 	bl	0 <memcpy>
    15bc:	aa0003e3 	mov	x3, x0
    15c0:	aa1303e2 	mov	x2, x19
    15c4:	aa1403e0 	mov	x0, x20
    15c8:	d2802001 	mov	x1, #0x100                 	// #256
    15cc:	94002ef6 	bl	d1a4 <vsnprintf>
    15d0:	2a0003f3 	mov	w19, w0
/home/qc2335/optee/optee_os/trace_ext.c:53
    15d4:	37f80060 	tbnz	w0, #31, 15e0 <printf+0xc4>
/home/qc2335/optee/optee_os/trace_ext.c:56
    15d8:	aa1403e0 	mov	x0, x20
    15dc:	97ffffc4 	bl	14ec <trace_ext_puts>
/home/qc2335/optee/optee_os/trace_ext.c:59
    15e0:	900000c1 	adrp	x1, 19000 <_DYNAMIC>
    15e4:	f9409821 	ldr	x1, [x1, #304]
    15e8:	f940b7e0 	ldr	x0, [sp, #360]
    15ec:	f9400022 	ldr	x2, [x1]
    15f0:	eb020000 	subs	x0, x0, x2
    15f4:	d2800002 	mov	x2, #0x0                   	// #0
    15f8:	54000080 	b.eq	1608 <printf+0xec>  // b.none
    15fc:	97fffc1f 	bl	678 <__stack_chk_fail>
/home/qc2335/optee/optee_os/trace_ext.c:47
    1600:	52800013 	mov	w19, #0x0                   	// #0
    1604:	17fffff7 	b	15e0 <printf+0xc4>
/home/qc2335/optee/optee_os/trace_ext.c:59
    1608:	2a1303e0 	mov	w0, w19
    160c:	a9407bfd 	ldp	x29, x30, [sp]
    1610:	a94153f3 	ldp	x19, x20, [sp, #16]
    1614:	9108c3ff 	add	sp, sp, #0x230
    1618:	d65f03c0 	ret

000000000000161c <puts>:
puts():
/home/qc2335/optee/optee_os/trace_ext.c:62
    161c:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    1620:	910003fd 	mov	x29, sp
    1624:	f9000bf3 	str	x19, [sp, #16]
    1628:	aa0003f3 	mov	x19, x0
/home/qc2335/optee/optee_os/trace_ext.c:63
    162c:	97fffb4e 	bl	364 <trace_get_level>
    1630:	7100001f 	cmp	w0, #0x0
    1634:	540000cd 	b.le	164c <puts+0x30>
/home/qc2335/optee/optee_os/trace_ext.c:64
    1638:	aa1303e0 	mov	x0, x19
    163c:	97ffffac 	bl	14ec <trace_ext_puts>
/home/qc2335/optee/optee_os/trace_ext.c:65
    1640:	d00000a0 	adrp	x0, 17000 <__text_end+0x3c08>
    1644:	91264800 	add	x0, x0, #0x992
    1648:	97ffffa9 	bl	14ec <trace_ext_puts>
/home/qc2335/optee/optee_os/trace_ext.c:68
    164c:	52800020 	mov	w0, #0x1                   	// #1
    1650:	f9400bf3 	ldr	x19, [sp, #16]
    1654:	a8c27bfd 	ldp	x29, x30, [sp], #32
    1658:	d65f03c0 	ret

000000000000165c <putchar>:
putchar():
/home/qc2335/optee/optee_os/trace_ext.c:71
    165c:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    1660:	900000c1 	adrp	x1, 19000 <_DYNAMIC>
    1664:	910003fd 	mov	x29, sp
    1668:	f9409821 	ldr	x1, [x1, #304]
    166c:	f9000bf3 	str	x19, [sp, #16]
    1670:	2a0003f3 	mov	w19, w0
    1674:	f9400020 	ldr	x0, [x1]
    1678:	f90017e0 	str	x0, [sp, #40]
    167c:	d2800000 	mov	x0, #0x0                   	// #0
/home/qc2335/optee/optee_os/trace_ext.c:72
    1680:	390083f3 	strb	w19, [sp, #32]
    1684:	390087ff 	strb	wzr, [sp, #33]
/home/qc2335/optee/optee_os/trace_ext.c:74
    1688:	97fffb37 	bl	364 <trace_get_level>
    168c:	7100001f 	cmp	w0, #0x0
    1690:	5400006d 	b.le	169c <putchar+0x40>
/home/qc2335/optee/optee_os/trace_ext.c:75
    1694:	910083e0 	add	x0, sp, #0x20
    1698:	97ffff95 	bl	14ec <trace_ext_puts>
/home/qc2335/optee/optee_os/trace_ext.c:82
    169c:	900000c1 	adrp	x1, 19000 <_DYNAMIC>
/home/qc2335/optee/optee_os/trace_ext.c:81
    16a0:	12001e60 	and	w0, w19, #0xff
/home/qc2335/optee/optee_os/trace_ext.c:82
    16a4:	f9409821 	ldr	x1, [x1, #304]
    16a8:	f94017e3 	ldr	x3, [sp, #40]
    16ac:	f9400022 	ldr	x2, [x1]
    16b0:	eb020063 	subs	x3, x3, x2
    16b4:	d2800002 	mov	x2, #0x0                   	// #0
    16b8:	54000040 	b.eq	16c0 <putchar+0x64>  // b.none
    16bc:	97fffbef 	bl	678 <__stack_chk_fail>
    16c0:	f9400bf3 	ldr	x19, [sp, #16]
    16c4:	a8c37bfd 	ldp	x29, x30, [sp], #48
    16c8:	d65f03c0 	ret

00000000000016cc <_get_fn_array>:
_get_fn_array():
    16cc:	79403009 	ldrh	w9, [x0, #24]
    16d0:	93407c21 	sxtw	x1, w1
    16d4:	93407c42 	sxtw	x2, w2
    16d8:	d2800007 	mov	x7, #0x0                   	// #0
    16dc:	d280070a 	mov	x10, #0x38                  	// #56
    16e0:	eb07013f 	cmp	x9, x7
    16e4:	54000048 	b.hi	16ec <_get_fn_array+0x20>  // b.pmore
    16e8:	d65f03c0 	ret
    16ec:	9b0a7ce5 	mul	x5, x7, x10
    16f0:	f9400808 	ldr	x8, [x0, #16]
    16f4:	8b050106 	add	x6, x8, x5
    16f8:	b8656905 	ldr	w5, [x8, x5]
    16fc:	710008bf 	cmp	w5, #0x2
    1700:	54000060 	b.eq	170c <_get_fn_array+0x40>  // b.none
    1704:	910004e7 	add	x7, x7, #0x1
    1708:	17fffff6 	b	16e0 <_get_fn_array+0x14>
    170c:	f9400008 	ldr	x8, [x0]
    1710:	f94008c5 	ldr	x5, [x6, #16]
    1714:	f94014c6 	ldr	x6, [x6, #40]
    1718:	8b0800a5 	add	x5, x5, x8
    171c:	927cecc6 	and	x6, x6, #0xfffffffffffffff0
    1720:	8b0500c6 	add	x6, x6, x5
    1724:	eb0600bf 	cmp	x5, x6
    1728:	54fffee0 	b.eq	1704 <_get_fn_array+0x38>  // b.none
    172c:	f9400068 	ldr	x8, [x3]
    1730:	b4000068 	cbz	x8, 173c <_get_fn_array+0x70>
    1734:	f9400088 	ldr	x8, [x4]
    1738:	b5fffe68 	cbnz	x8, 1704 <_get_fn_array+0x38>
    173c:	f94000a8 	ldr	x8, [x5]
    1740:	b4fffe28 	cbz	x8, 1704 <_get_fn_array+0x38>
    1744:	eb01011f 	cmp	x8, x1
    1748:	540000e1 	b.ne	1764 <_get_fn_array+0x98>  // b.any
    174c:	f940000b 	ldr	x11, [x0]
    1750:	f94004a8 	ldr	x8, [x5, #8]
    1754:	8b0b0108 	add	x8, x8, x11
    1758:	f9000068 	str	x8, [x3]
    175c:	910040a5 	add	x5, x5, #0x10
    1760:	17fffff1 	b	1724 <_get_fn_array+0x58>
    1764:	eb02011f 	cmp	x8, x2
    1768:	54ffffa1 	b.ne	175c <_get_fn_array+0x90>  // b.any
    176c:	f94004a8 	ldr	x8, [x5, #8]
    1770:	d343fd08 	lsr	x8, x8, #3
    1774:	f9000088 	str	x8, [x4]
    1778:	17fffff9 	b	175c <_get_fn_array+0x90>

000000000000177c <_fini_iterate_phdr_cb>:
_fini_iterate_phdr_cb():
    177c:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    1780:	900000c1 	adrp	x1, 19000 <_DYNAMIC>
    1784:	910003fd 	mov	x29, sp
    1788:	f9409821 	ldr	x1, [x1, #304]
    178c:	f9000bf3 	str	x19, [sp, #16]
    1790:	9100c3e4 	add	x4, sp, #0x30
    1794:	9100a3e3 	add	x3, sp, #0x28
    1798:	f9400022 	ldr	x2, [x1]
    179c:	f9001fe2 	str	x2, [sp, #56]
    17a0:	d2800002 	mov	x2, #0x0                   	// #0
    17a4:	d2800033 	mov	x19, #0x1                   	// #1
    17a8:	52800382 	mov	w2, #0x1c                  	// #28
    17ac:	52800341 	mov	w1, #0x1a                  	// #26
    17b0:	a902ffff 	stp	xzr, xzr, [sp, #40]
    17b4:	97ffffc6 	bl	16cc <_get_fn_array>
    17b8:	f9401be0 	ldr	x0, [sp, #48]
    17bc:	eb13001f 	cmp	x0, x19
    17c0:	54000122 	b.cs	17e4 <_fini_iterate_phdr_cb+0x68>  // b.hs, b.nlast
    17c4:	900000c1 	adrp	x1, 19000 <_DYNAMIC>
    17c8:	f9409821 	ldr	x1, [x1, #304]
    17cc:	f9401fe0 	ldr	x0, [sp, #56]
    17d0:	f9400022 	ldr	x2, [x1]
    17d4:	eb020000 	subs	x0, x0, x2
    17d8:	d2800002 	mov	x2, #0x0                   	// #0
    17dc:	54000100 	b.eq	17fc <_fini_iterate_phdr_cb+0x80>  // b.none
    17e0:	97fffba6 	bl	678 <__stack_chk_fail>
    17e4:	f94017e1 	ldr	x1, [sp, #40]
    17e8:	cb130000 	sub	x0, x0, x19
    17ec:	91000673 	add	x19, x19, #0x1
    17f0:	f8607820 	ldr	x0, [x1, x0, lsl #3]
    17f4:	d63f0000 	blr	x0
    17f8:	17fffff0 	b	17b8 <_fini_iterate_phdr_cb+0x3c>
    17fc:	52800000 	mov	w0, #0x0                   	// #0
    1800:	f9400bf3 	ldr	x19, [sp, #16]
    1804:	a8c47bfd 	ldp	x29, x30, [sp], #64
    1808:	d65f03c0 	ret

000000000000180c <ta_header_get_session>:
ta_header_get_session():
    180c:	2a0003e1 	mov	w1, w0
    1810:	900000c0 	adrp	x0, 19000 <_DYNAMIC>
    1814:	f942a000 	ldr	x0, [x0, #1344]
    1818:	b5000040 	cbnz	x0, 1820 <ta_header_get_session+0x14>
    181c:	d65f03c0 	ret
    1820:	b9400002 	ldr	w2, [x0]
    1824:	6b01005f 	cmp	w2, w1
    1828:	54ffffa0 	b.eq	181c <ta_header_get_session+0x10>  // b.none
    182c:	f9400800 	ldr	x0, [x0, #16]
    1830:	17fffffa 	b	1818 <ta_header_get_session+0xc>

0000000000001834 <to_utee_params>:
to_utee_params():
    1834:	2a0103e3 	mov	w3, w1
    1838:	f8008403 	str	x3, [x0], #8
    183c:	52800003 	mov	w3, #0x0                   	// #0
    1840:	1ac32425 	lsr	w5, w1, w3
    1844:	12000ca4 	and	w4, w5, #0xf
    1848:	721e04bf 	tst	w5, #0xc
    184c:	54000181 	b.ne	187c <to_utee_params+0x48>  // b.any
    1850:	340001c4 	cbz	w4, 1888 <to_utee_params+0x54>
    1854:	b9400044 	ldr	w4, [x2]
    1858:	f9000004 	str	x4, [x0]
    185c:	b9400444 	ldr	w4, [x2, #4]
    1860:	11001063 	add	w3, w3, #0x4
    1864:	f9000404 	str	x4, [x0, #8]
    1868:	91004042 	add	x2, x2, #0x10
    186c:	91004000 	add	x0, x0, #0x10
    1870:	7100407f 	cmp	w3, #0x10
    1874:	54fffe61 	b.ne	1840 <to_utee_params+0xc>  // b.any
    1878:	d65f03c0 	ret
    187c:	51001484 	sub	w4, w4, #0x5
    1880:	7100089f 	cmp	w4, #0x2
    1884:	54000089 	b.ls	1894 <to_utee_params+0x60>  // b.plast
    1888:	d2800004 	mov	x4, #0x0                   	// #0
    188c:	f900001f 	str	xzr, [x0]
    1890:	17fffff4 	b	1860 <to_utee_params+0x2c>
    1894:	f9400044 	ldr	x4, [x2]
    1898:	f9000004 	str	x4, [x0]
    189c:	f9400444 	ldr	x4, [x2, #8]
    18a0:	17fffff0 	b	1860 <to_utee_params+0x2c>

00000000000018a4 <from_utee_params>:
from_utee_params():
    18a4:	f8408445 	ldr	x5, [x2], #8
    18a8:	52800003 	mov	w3, #0x0                   	// #0
    18ac:	2a0503e9 	mov	w9, w5
    18b0:	1ac32528 	lsr	w8, w9, w3
    18b4:	12000d04 	and	w4, w8, #0xf
    18b8:	a9401847 	ldp	x7, x6, [x2]
    18bc:	721e051f 	tst	w8, #0xc
    18c0:	54000081 	b.ne	18d0 <from_utee_params+0x2c>  // b.any
    18c4:	340000c4 	cbz	w4, 18dc <from_utee_params+0x38>
    18c8:	29001807 	stp	w7, w6, [x0]
    18cc:	14000004 	b	18dc <from_utee_params+0x38>
    18d0:	51001484 	sub	w4, w4, #0x5
    18d4:	7100089f 	cmp	w4, #0x2
    18d8:	54000109 	b.ls	18f8 <from_utee_params+0x54>  // b.plast
    18dc:	11001063 	add	w3, w3, #0x4
    18e0:	91004042 	add	x2, x2, #0x10
    18e4:	91004000 	add	x0, x0, #0x10
    18e8:	7100407f 	cmp	w3, #0x10
    18ec:	54fffe21 	b.ne	18b0 <from_utee_params+0xc>  // b.any
    18f0:	b9000025 	str	w5, [x1]
    18f4:	d65f03c0 	ret
    18f8:	a9001807 	stp	x7, x6, [x0]
    18fc:	17fffff8 	b	18dc <from_utee_params+0x38>

0000000000001900 <_init_iterate_phdr_cb>:
_init_iterate_phdr_cb():
    1900:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    1904:	910003fd 	mov	x29, sp
    1908:	a90153f3 	stp	x19, x20, [sp, #16]
    190c:	aa0203f4 	mov	x20, x2
    1910:	f90013f5 	str	x21, [sp, #32]
    1914:	aa0003f5 	mov	x21, x0
    1918:	d2800a00 	mov	x0, #0x50                  	// #80
    191c:	94002ce7 	bl	ccb8 <malloc>
    1920:	b5000140 	cbnz	x0, 1948 <_init_iterate_phdr_cb+0x48>
    1924:	d00000a4 	adrp	x4, 17000 <__text_end+0x3c08>
    1928:	d00000a0 	adrp	x0, 17000 <__text_end+0x3c08>
    192c:	91303c84 	add	x4, x4, #0xc0f
    1930:	91317800 	add	x0, x0, #0xc5e
    1934:	52800023 	mov	w3, #0x1                   	// #1
    1938:	52800022 	mov	w2, #0x1                   	// #1
    193c:	52800841 	mov	w1, #0x42                  	// #66
    1940:	97fffb14 	bl	590 <trace_printf>
    1944:	94000262 	bl	22cc <abort>
    1948:	aa0003f3 	mov	x19, x0
    194c:	aa1503e1 	mov	x1, x21
    1950:	d2800802 	mov	x2, #0x40                  	// #64
    1954:	97fff9ab 	bl	0 <memcpy>
    1958:	900000c0 	adrp	x0, 19000 <_DYNAMIC>
    195c:	91150000 	add	x0, x0, #0x540
    1960:	f94013f5 	ldr	x21, [sp, #32]
    1964:	f9400c01 	ldr	x1, [x0, #24]
    1968:	a904067f 	stp	xzr, x1, [x19, #64]
    196c:	f9000033 	str	x19, [x1]
    1970:	91010273 	add	x19, x19, #0x40
    1974:	f9000c13 	str	x19, [x0, #24]
    1978:	f9400280 	ldr	x0, [x20]
    197c:	91000400 	add	x0, x0, #0x1
    1980:	f9000280 	str	x0, [x20]
    1984:	52800000 	mov	w0, #0x0                   	// #0
    1988:	a94153f3 	ldp	x19, x20, [sp, #16]
    198c:	a8c37bfd 	ldp	x29, x30, [sp], #48
    1990:	d65f03c0 	ret

0000000000001994 <__utee_call_elf_init_fn>:
__utee_call_elf_init_fn():
    1994:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
    1998:	900000c0 	adrp	x0, 19000 <_DYNAMIC>
    199c:	910003fd 	mov	x29, sp
    19a0:	f9409800 	ldr	x0, [x0, #304]
    19a4:	a90153f3 	stp	x19, x20, [sp, #16]
    19a8:	900000d4 	adrp	x20, 19000 <_DYNAMIC>
    19ac:	a9025bf5 	stp	x21, x22, [sp, #32]
    19b0:	d2800013 	mov	x19, #0x0                   	// #0
    19b4:	a90363f7 	stp	x23, x24, [sp, #48]
    19b8:	910183f8 	add	x24, sp, #0x60
    19bc:	900000d7 	adrp	x23, 19000 <_DYNAMIC>
    19c0:	f90023f9 	str	x25, [sp, #64]
    19c4:	910143f9 	add	x25, sp, #0x50
    19c8:	f9400001 	ldr	x1, [x0]
    19cc:	f90037e1 	str	x1, [sp, #104]
    19d0:	d2800001 	mov	x1, #0x0                   	// #0
    19d4:	90000000 	adrp	x0, 1000 <kprintf.constprop.0+0x76c>
    19d8:	910163e1 	add	x1, sp, #0x58
    19dc:	91240000 	add	x0, x0, #0x900
    19e0:	a9057fff 	stp	xzr, xzr, [sp, #80]
    19e4:	f90033ff 	str	xzr, [sp, #96]
    19e8:	9400148b 	bl	6c14 <dl_iterate_phdr>
    19ec:	91150280 	add	x0, x20, #0x540
    19f0:	f9400c00 	ldr	x0, [x0, #24]
    19f4:	f9400400 	ldr	x0, [x0, #8]
    19f8:	f9400015 	ldr	x21, [x0]
    19fc:	f9434ae1 	ldr	x1, [x23, #1680]
    1a00:	b5000155 	cbnz	x21, 1a28 <__utee_call_elf_init_fn+0x94>
    1a04:	91150294 	add	x20, x20, #0x540
    1a08:	8b010273 	add	x19, x19, x1
    1a0c:	f9034af3 	str	x19, [x23, #1680]
    1a10:	f9400a80 	ldr	x0, [x20, #16]
    1a14:	b40004a0 	cbz	x0, 1aa8 <__utee_call_elf_init_fn+0x114>
    1a18:	a9440413 	ldp	x19, x1, [x0, #64]
    1a1c:	b50003b3 	cbnz	x19, 1a90 <__utee_call_elf_init_fn+0xfc>
    1a20:	f9000e81 	str	x1, [x20, #24]
    1a24:	1400001c 	b	1a94 <__utee_call_elf_init_fn+0x100>
    1a28:	f9402fe0 	ldr	x0, [sp, #88]
    1a2c:	cb010000 	sub	x0, x0, x1
    1a30:	eb13001f 	cmp	x0, x19
    1a34:	54fffe80 	b.eq	1a04 <__utee_call_elf_init_fn+0x70>  // b.none
    1a38:	d2800016 	mov	x22, #0x0                   	// #0
    1a3c:	aa1803e4 	mov	x4, x24
    1a40:	aa1903e3 	mov	x3, x25
    1a44:	aa1503e0 	mov	x0, x21
    1a48:	52800362 	mov	w2, #0x1b                  	// #27
    1a4c:	52800321 	mov	w1, #0x19                  	// #25
    1a50:	97ffff1f 	bl	16cc <_get_fn_array>
    1a54:	f94033e0 	ldr	x0, [sp, #96]
    1a58:	eb16001f 	cmp	x0, x22
    1a5c:	54000108 	b.hi	1a7c <__utee_call_elf_init_fn+0xe8>  // b.pmore
    1a60:	f94026a0 	ldr	x0, [x21, #72]
    1a64:	91000673 	add	x19, x19, #0x1
    1a68:	f9002bff 	str	xzr, [sp, #80]
    1a6c:	f90033ff 	str	xzr, [sp, #96]
    1a70:	f9400400 	ldr	x0, [x0, #8]
    1a74:	f9400015 	ldr	x21, [x0]
    1a78:	17ffffe1 	b	19fc <__utee_call_elf_init_fn+0x68>
    1a7c:	f9402be0 	ldr	x0, [sp, #80]
    1a80:	f8767800 	ldr	x0, [x0, x22, lsl #3]
    1a84:	910006d6 	add	x22, x22, #0x1
    1a88:	d63f0000 	blr	x0
    1a8c:	17fffff2 	b	1a54 <__utee_call_elf_init_fn+0xc0>
    1a90:	f9002661 	str	x1, [x19, #72]
    1a94:	f9402401 	ldr	x1, [x0, #72]
    1a98:	f9000033 	str	x19, [x1]
    1a9c:	94002cab 	bl	cd48 <free>
    1aa0:	aa1303e0 	mov	x0, x19
    1aa4:	17ffffdc 	b	1a14 <__utee_call_elf_init_fn+0x80>
    1aa8:	900000c0 	adrp	x0, 19000 <_DYNAMIC>
    1aac:	f9409800 	ldr	x0, [x0, #304]
    1ab0:	f94037e2 	ldr	x2, [sp, #104]
    1ab4:	f9400001 	ldr	x1, [x0]
    1ab8:	eb010042 	subs	x2, x2, x1
    1abc:	d2800001 	mov	x1, #0x0                   	// #0
    1ac0:	54000040 	b.eq	1ac8 <__utee_call_elf_init_fn+0x134>  // b.none
    1ac4:	97fffaed 	bl	678 <__stack_chk_fail>
    1ac8:	a94153f3 	ldp	x19, x20, [sp, #16]
    1acc:	a9425bf5 	ldp	x21, x22, [sp, #32]
    1ad0:	a94363f7 	ldp	x23, x24, [sp, #48]
    1ad4:	f94023f9 	ldr	x25, [sp, #64]
    1ad8:	a8c77bfd 	ldp	x29, x30, [sp], #112
    1adc:	d65f03c0 	ret

0000000000001ae0 <__utee_call_elf_fini_fn>:
__utee_call_elf_fini_fn():
    1ae0:	d2800001 	mov	x1, #0x0                   	// #0
    1ae4:	90000000 	adrp	x0, 1000 <kprintf.constprop.0+0x76c>
    1ae8:	911df000 	add	x0, x0, #0x77c
    1aec:	1400144a 	b	6c14 <dl_iterate_phdr>

0000000000001af0 <ta_header_remove_session>:
ta_header_remove_session():
    1af0:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    1af4:	2a0003e2 	mov	w2, w0
    1af8:	910003fd 	mov	x29, sp
    1afc:	f9000bf3 	str	x19, [sp, #16]
    1b00:	900000d3 	adrp	x19, 19000 <_DYNAMIC>
    1b04:	f942a260 	ldr	x0, [x19, #1344]
    1b08:	b5000080 	cbnz	x0, 1b18 <ta_header_remove_session+0x28>
    1b0c:	f9400bf3 	ldr	x19, [sp, #16]
    1b10:	a8c27bfd 	ldp	x29, x30, [sp], #32
    1b14:	d65f03c0 	ret
    1b18:	b9400003 	ldr	w3, [x0]
    1b1c:	f9400801 	ldr	x1, [x0, #16]
    1b20:	6b02007f 	cmp	w3, w2
    1b24:	540002c1 	b.ne	1b7c <ta_header_remove_session+0x8c>  // b.any
    1b28:	f9400c02 	ldr	x2, [x0, #24]
    1b2c:	b4000221 	cbz	x1, 1b70 <ta_header_remove_session+0x80>
    1b30:	f9000c22 	str	x2, [x1, #24]
    1b34:	f9400c02 	ldr	x2, [x0, #24]
    1b38:	f9000041 	str	x1, [x2]
    1b3c:	940005c6 	bl	3254 <TEE_Free>
    1b40:	900000c0 	adrp	x0, 19000 <_DYNAMIC>
    1b44:	f940f000 	ldr	x0, [x0, #480]
    1b48:	f9400801 	ldr	x1, [x0, #16]
    1b4c:	f942a260 	ldr	x0, [x19, #1344]
    1b50:	b5fffde0 	cbnz	x0, 1b0c <ta_header_remove_session+0x1c>
    1b54:	d2c00280 	mov	x0, #0x1400000000          	// #85899345920
    1b58:	ea21001f 	bics	xzr, x0, x1
    1b5c:	54fffd80 	b.eq	1b0c <ta_header_remove_session+0x1c>  // b.none
    1b60:	97fff970 	bl	120 <TA_DestroyEntryPoint>
    1b64:	f9400bf3 	ldr	x19, [sp, #16]
    1b68:	a8c27bfd 	ldp	x29, x30, [sp], #32
    1b6c:	17ffffdd 	b	1ae0 <__utee_call_elf_fini_fn>
    1b70:	91150263 	add	x3, x19, #0x540
    1b74:	f9000462 	str	x2, [x3, #8]
    1b78:	17ffffef 	b	1b34 <ta_header_remove_session+0x44>
    1b7c:	aa0103e0 	mov	x0, x1
    1b80:	17ffffe2 	b	1b08 <ta_header_remove_session+0x18>

0000000000001b84 <__utee_entry>:
__utee_entry():
    1b84:	a9b77bfd 	stp	x29, x30, [sp, #-144]!
    1b88:	900000c4 	adrp	x4, 19000 <_DYNAMIC>
    1b8c:	f100041f 	cmp	x0, #0x1
    1b90:	910003fd 	mov	x29, sp
    1b94:	a9025bf5 	stp	x21, x22, [sp, #32]
    1b98:	aa0103f5 	mov	x21, x1
    1b9c:	aa0203f6 	mov	x22, x2
    1ba0:	f9409881 	ldr	x1, [x4, #304]
    1ba4:	a90153f3 	stp	x19, x20, [sp, #16]
    1ba8:	aa0403f4 	mov	x20, x4
    1bac:	a90363f7 	stp	x23, x24, [sp, #48]
    1bb0:	f9400022 	ldr	x2, [x1]
    1bb4:	f90047e2 	str	x2, [sp, #136]
    1bb8:	d2800002 	mov	x2, #0x0                   	// #0
    1bbc:	54000ca0 	b.eq	1d50 <__utee_entry+0x1cc>  // b.none
    1bc0:	f100081f 	cmp	x0, #0x2
    1bc4:	54000d80 	b.eq	1d74 <__utee_entry+0x1f0>  // b.none
    1bc8:	b50010e0 	cbnz	x0, 1de4 <__utee_entry+0x260>
    1bcc:	2a1503e0 	mov	w0, w21
    1bd0:	97ffff0f 	bl	180c <ta_header_get_session>
    1bd4:	b5000840 	cbnz	x0, 1cdc <__utee_entry+0x158>
    1bd8:	900000c0 	adrp	x0, 19000 <_DYNAMIC>
    1bdc:	911a4000 	add	x0, x0, #0x690
    1be0:	39402001 	ldrb	w1, [x0, #8]
    1be4:	340000e1 	cbz	w1, 1c00 <__utee_entry+0x7c>
    1be8:	52b00001 	mov	w1, #0x80000000            	// #-2147483648
    1bec:	d2800400 	mov	x0, #0x20                  	// #32
    1bf0:	9400054e 	bl	3128 <TEE_Malloc>
    1bf4:	b5000620 	cbnz	x0, 1cb8 <__utee_entry+0x134>
    1bf8:	129ffe73 	mov	w19, #0xffff000c            	// #-65524
    1bfc:	14000022 	b	1c84 <__utee_entry+0x100>
    1c00:	52800021 	mov	w1, #0x1                   	// #1
    1c04:	39002001 	strb	w1, [x0, #8]
    1c08:	97fff9c8 	bl	328 <tahead_get_trace_level>
    1c0c:	97fff9cf 	bl	348 <trace_set_level>
    1c10:	f9409e80 	ldr	x0, [x20, #312]
    1c14:	f9400001 	ldr	x1, [x0]
    1c18:	f940be80 	ldr	x0, [x20, #376]
    1c1c:	94002d1b 	bl	d088 <malloc_add_pool>
    1c20:	f940a280 	ldr	x0, [x20, #320]
    1c24:	f9400017 	ldr	x23, [x0]
    1c28:	b4000177 	cbz	x23, 1c54 <__utee_entry+0xd0>
    1c2c:	94002c51 	bl	cd70 <raw_malloc_get_ctx_size>
    1c30:	94002c22 	bl	ccb8 <malloc>
    1c34:	f940de93 	ldr	x19, [x20, #440]
    1c38:	f9000260 	str	x0, [x19]
    1c3c:	b40000c0 	cbz	x0, 1c54 <__utee_entry+0xd0>
    1c40:	94002c4e 	bl	cd78 <raw_malloc_init_ctx>
    1c44:	f940e281 	ldr	x1, [x20, #448]
    1c48:	aa1703e2 	mov	x2, x23
    1c4c:	f9400260 	ldr	x0, [x19]
    1c50:	94002c51 	bl	cd94 <raw_malloc_add_pool>
    1c54:	910113e2 	add	x2, sp, #0x44
    1c58:	d00000a1 	adrp	x1, 17000 <__text_end+0x3c08>
    1c5c:	9130a021 	add	x1, x1, #0xc28
    1c60:	12800040 	mov	w0, #0xfffffffd            	// #-3
    1c64:	b90047ff 	str	wzr, [sp, #68]
    1c68:	9400109b 	bl	5ed4 <TEE_GetPropertyAsU32>
    1c6c:	940007f0 	bl	3c2c <_TEE_MathAPI_Init>
    1c70:	94001352 	bl	69b8 <__utee_tcb_init>
    1c74:	97ffff48 	bl	1994 <__utee_call_elf_init_fn>
    1c78:	97fff91d 	bl	ec <TA_CreateEntryPoint>
    1c7c:	2a0003f3 	mov	w19, w0
    1c80:	34fffb40 	cbz	w0, 1be8 <__utee_entry+0x64>
    1c84:	f940d280 	ldr	x0, [x20, #416]
    1c88:	4f000400 	movi	v0.4s, #0x0
    1c8c:	b900001f 	str	wzr, [x0]
    1c90:	f940e680 	ldr	x0, [x20, #456]
    1c94:	f9409a94 	ldr	x20, [x20, #304]
    1c98:	ad000000 	stp	q0, q0, [x0]
    1c9c:	ad010000 	stp	q0, q0, [x0, #32]
    1ca0:	f94047e0 	ldr	x0, [sp, #136]
    1ca4:	f9400281 	ldr	x1, [x20]
    1ca8:	eb010000 	subs	x0, x0, x1
    1cac:	d2800001 	mov	x1, #0x0                   	// #0
    1cb0:	54000a20 	b.eq	1df4 <__utee_entry+0x270>  // b.none
    1cb4:	97fffa71 	bl	678 <__stack_chk_fail>
    1cb8:	900000c1 	adrp	x1, 19000 <_DYNAMIC>
    1cbc:	91150021 	add	x1, x1, #0x540
    1cc0:	f9400422 	ldr	x2, [x1, #8]
    1cc4:	b9000015 	str	w21, [x0]
    1cc8:	a900fc1f 	stp	xzr, xzr, [x0, #8]
    1ccc:	f9000c02 	str	x2, [x0, #24]
    1cd0:	f9000040 	str	x0, [x2]
    1cd4:	91004000 	add	x0, x0, #0x10
    1cd8:	f9000420 	str	x0, [x1, #8]
    1cdc:	2a1503e0 	mov	w0, w21
    1ce0:	97fffecb 	bl	180c <ta_header_get_session>
    1ce4:	aa0003f3 	mov	x19, x0
    1ce8:	b4000820 	cbz	x0, 1dec <__utee_entry+0x268>
    1cec:	910123f7 	add	x23, sp, #0x48
    1cf0:	aa1603e2 	mov	x2, x22
    1cf4:	910113e1 	add	x1, sp, #0x44
    1cf8:	aa1703e0 	mov	x0, x23
    1cfc:	97fffeea 	bl	18a4 <from_utee_params>
    1d00:	b94047f8 	ldr	w24, [sp, #68]
    1d04:	f940d280 	ldr	x0, [x20, #416]
    1d08:	aa1703e1 	mov	x1, x23
    1d0c:	d2800802 	mov	x2, #0x40                  	// #64
    1d10:	b9000018 	str	w24, [x0]
    1d14:	f940e680 	ldr	x0, [x20, #456]
    1d18:	97fff8ba 	bl	0 <memcpy>
    1d1c:	91002262 	add	x2, x19, #0x8
    1d20:	aa1703e1 	mov	x1, x23
    1d24:	2a1803e0 	mov	w0, w24
    1d28:	97fff982 	bl	330 <TA_OpenSessionEntryPoint>
    1d2c:	aa1703e2 	mov	x2, x23
    1d30:	2a0003f3 	mov	w19, w0
    1d34:	2a1803e1 	mov	w1, w24
    1d38:	aa1603e0 	mov	x0, x22
    1d3c:	97fffebe 	bl	1834 <to_utee_params>
    1d40:	34fffa33 	cbz	w19, 1c84 <__utee_entry+0x100>
    1d44:	2a1503e0 	mov	w0, w21
    1d48:	97ffff6a 	bl	1af0 <ta_header_remove_session>
    1d4c:	17ffffce 	b	1c84 <__utee_entry+0x100>
    1d50:	2a1503e0 	mov	w0, w21
    1d54:	97fffeae 	bl	180c <ta_header_get_session>
    1d58:	b40004a0 	cbz	x0, 1dec <__utee_entry+0x268>
    1d5c:	f9400400 	ldr	x0, [x0, #8]
    1d60:	52800013 	mov	w19, #0x0                   	// #0
    1d64:	97fff914 	bl	1b4 <TA_CloseSessionEntryPoint>
    1d68:	2a1503e0 	mov	w0, w21
    1d6c:	97ffff61 	bl	1af0 <ta_header_remove_session>
    1d70:	17ffffc5 	b	1c84 <__utee_entry+0x100>
    1d74:	2a1503e0 	mov	w0, w21
    1d78:	97fffea5 	bl	180c <ta_header_get_session>
    1d7c:	aa0003f3 	mov	x19, x0
    1d80:	b4000360 	cbz	x0, 1dec <__utee_entry+0x268>
    1d84:	910123f5 	add	x21, sp, #0x48
    1d88:	aa0303f7 	mov	x23, x3
    1d8c:	aa1603e2 	mov	x2, x22
    1d90:	910113e1 	add	x1, sp, #0x44
    1d94:	aa1503e0 	mov	x0, x21
    1d98:	97fffec3 	bl	18a4 <from_utee_params>
    1d9c:	f940d280 	ldr	x0, [x20, #416]
    1da0:	aa1503e1 	mov	x1, x21
    1da4:	b94047f8 	ldr	w24, [sp, #68]
    1da8:	d2800802 	mov	x2, #0x40                  	// #64
    1dac:	b9000018 	str	w24, [x0]
    1db0:	f940e680 	ldr	x0, [x20, #456]
    1db4:	97fff893 	bl	0 <memcpy>
    1db8:	f9400660 	ldr	x0, [x19, #8]
    1dbc:	aa1503e3 	mov	x3, x21
    1dc0:	2a1803e2 	mov	w2, w24
    1dc4:	2a1703e1 	mov	w1, w23
    1dc8:	97fff95d 	bl	33c <TA_InvokeCommandEntryPoint>
    1dcc:	2a0003f3 	mov	w19, w0
    1dd0:	aa1503e2 	mov	x2, x21
    1dd4:	2a1803e1 	mov	w1, w24
    1dd8:	aa1603e0 	mov	x0, x22
    1ddc:	97fffe96 	bl	1834 <to_utee_params>
    1de0:	17ffffa9 	b	1c84 <__utee_entry+0x100>
    1de4:	129ffeb3 	mov	w19, #0xffff000a            	// #-65526
    1de8:	17ffffa7 	b	1c84 <__utee_entry+0x100>
    1dec:	129fff13 	mov	w19, #0xffff0007            	// #-65529
    1df0:	17ffffa5 	b	1c84 <__utee_entry+0x100>
    1df4:	2a1303e0 	mov	w0, w19
    1df8:	a94153f3 	ldp	x19, x20, [sp, #16]
    1dfc:	a9425bf5 	ldp	x21, x22, [sp, #32]
    1e00:	a94363f7 	ldp	x23, x24, [sp, #48]
    1e04:	a8c97bfd 	ldp	x29, x30, [sp], #144
    1e08:	d65f03c0 	ret

0000000000001e0c <to_gp11_param>:
to_gp11_param():
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:11
    1e0c:	52800003 	mov	w3, #0x0                   	// #0
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:15
    1e10:	1ac32405 	lsr	w5, w0, w3
    1e14:	12000ca4 	and	w4, w5, #0xf
    1e18:	721e04bf 	tst	w5, #0xc
    1e1c:	540000e1 	b.ne	1e38 <to_gp11_param+0x2c>  // b.any
    1e20:	34000124 	cbz	w4, 1e44 <to_gp11_param+0x38>
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:19
    1e24:	b9400024 	ldr	w4, [x1]
    1e28:	b9000044 	str	w4, [x2]
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:20
    1e2c:	b9400424 	ldr	w4, [x1, #4]
    1e30:	b9000444 	str	w4, [x2, #4]
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:21
    1e34:	14000004 	b	1e44 <to_gp11_param+0x38>
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:15
    1e38:	51001484 	sub	w4, w4, #0x5
    1e3c:	7100089f 	cmp	w4, #0x2
    1e40:	540000e9 	b.ls	1e5c <to_gp11_param+0x50>  // b.plast
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:14 (discriminator 2)
    1e44:	11001063 	add	w3, w3, #0x4
    1e48:	91004021 	add	x1, x1, #0x10
    1e4c:	91004042 	add	x2, x2, #0x10
    1e50:	7100407f 	cmp	w3, #0x10
    1e54:	54fffde1 	b.ne	1e10 <to_gp11_param+0x4>  // b.any
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:32
    1e58:	d65f03c0 	ret
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:25
    1e5c:	f9400024 	ldr	x4, [x1]
    1e60:	f9000044 	str	x4, [x2]
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:26
    1e64:	f9400424 	ldr	x4, [x1, #8]
    1e68:	b9000844 	str	w4, [x2, #8]
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:27
    1e6c:	17fffff6 	b	1e44 <to_gp11_param+0x38>

0000000000001e70 <from_gp11_param>:
from_gp11_param():
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:37
    1e70:	52800003 	mov	w3, #0x0                   	// #0
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:41
    1e74:	1ac32405 	lsr	w5, w0, w3
    1e78:	12000ca4 	and	w4, w5, #0xf
    1e7c:	721e04bf 	tst	w5, #0xc
    1e80:	540000e1 	b.ne	1e9c <from_gp11_param+0x2c>  // b.any
    1e84:	34000124 	cbz	w4, 1ea8 <from_gp11_param+0x38>
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:45
    1e88:	b9400024 	ldr	w4, [x1]
    1e8c:	b9000044 	str	w4, [x2]
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:46
    1e90:	b9400424 	ldr	w4, [x1, #4]
    1e94:	b9000444 	str	w4, [x2, #4]
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:47
    1e98:	14000004 	b	1ea8 <from_gp11_param+0x38>
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:41
    1e9c:	51001484 	sub	w4, w4, #0x5
    1ea0:	7100089f 	cmp	w4, #0x2
    1ea4:	540000e9 	b.ls	1ec0 <from_gp11_param+0x50>  // b.plast
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:40 (discriminator 2)
    1ea8:	11001063 	add	w3, w3, #0x4
    1eac:	91004021 	add	x1, x1, #0x10
    1eb0:	91004042 	add	x2, x2, #0x10
    1eb4:	7100407f 	cmp	w3, #0x10
    1eb8:	54fffde1 	b.ne	1e74 <from_gp11_param+0x4>  // b.any
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:58
    1ebc:	d65f03c0 	ret
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:51
    1ec0:	f9400024 	ldr	x4, [x1]
    1ec4:	f9000044 	str	x4, [x2]
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:52
    1ec8:	b9400824 	ldr	w4, [x1, #8]
    1ecc:	f9000444 	str	x4, [x2, #8]
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:53
    1ed0:	17fffff6 	b	1ea8 <from_gp11_param+0x38>

0000000000001ed4 <__ta_open_sess>:
__ta_open_sess():
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:70
    1ed4:	a9b87bfd 	stp	x29, x30, [sp, #-128]!
    1ed8:	aa0203e7 	mov	x7, x2
    1edc:	aa0303e6 	mov	x6, x3
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:71
    1ee0:	4f000400 	movi	v0.4s, #0x0
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:70
    1ee4:	910003fd 	mov	x29, sp
    1ee8:	a90153f3 	stp	x19, x20, [sp, #16]
    1eec:	900000d4 	adrp	x20, 19000 <_DYNAMIC>
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:71
    1ef0:	9100e3f3 	add	x19, sp, #0x38
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:70
    1ef4:	f9409a82 	ldr	x2, [x20, #304]
    1ef8:	a9025bf5 	stp	x21, x22, [sp, #32]
    1efc:	aa0103f6 	mov	x22, x1
    1f00:	f9400043 	ldr	x3, [x2]
    1f04:	f9003fe3 	str	x3, [sp, #120]
    1f08:	d2800003 	mov	x3, #0x0                   	// #0
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:74
    1f0c:	aa1303e2 	mov	x2, x19
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:71
    1f10:	ad000260 	stp	q0, q0, [x19]
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:70
    1f14:	2a0003f5 	mov	w21, w0
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:71
    1f18:	ad010260 	stp	q0, q0, [x19, #32]
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:74
    1f1c:	97ffffbc 	bl	1e0c <to_gp11_param>
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:75
    1f20:	aa0703e2 	mov	x2, x7
    1f24:	aa1303e1 	mov	x1, x19
    1f28:	d63f00c0 	blr	x6
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:76
    1f2c:	aa1303e1 	mov	x1, x19
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:75
    1f30:	2a0003e6 	mov	w6, w0
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:76
    1f34:	aa1603e2 	mov	x2, x22
    1f38:	2a1503e0 	mov	w0, w21
    1f3c:	97ffffcd 	bl	1e70 <from_gp11_param>
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:79
    1f40:	f9409a94 	ldr	x20, [x20, #304]
    1f44:	f9403fe0 	ldr	x0, [sp, #120]
    1f48:	f9400281 	ldr	x1, [x20]
    1f4c:	eb010000 	subs	x0, x0, x1
    1f50:	d2800001 	mov	x1, #0x0                   	// #0
    1f54:	54000040 	b.eq	1f5c <__ta_open_sess+0x88>  // b.none
    1f58:	97fff9c8 	bl	678 <__stack_chk_fail>
    1f5c:	2a0603e0 	mov	w0, w6
    1f60:	a94153f3 	ldp	x19, x20, [sp, #16]
    1f64:	a9425bf5 	ldp	x21, x22, [sp, #32]
    1f68:	a8c87bfd 	ldp	x29, x30, [sp], #128
    1f6c:	d65f03c0 	ret

0000000000001f70 <__ta_invoke_cmd>:
__ta_invoke_cmd():
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:90
    1f70:	a9b87bfd 	stp	x29, x30, [sp, #-128]!
    1f74:	aa0003e7 	mov	x7, x0
    1f78:	2a0103e8 	mov	w8, w1
    1f7c:	910003fd 	mov	x29, sp
    1f80:	a9025bf5 	stp	x21, x22, [sp, #32]
    1f84:	900000d5 	adrp	x21, 19000 <_DYNAMIC>
    1f88:	aa0403e6 	mov	x6, x4
    1f8c:	f9409aa0 	ldr	x0, [x21, #304]
    1f90:	a90153f3 	stp	x19, x20, [sp, #16]
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:91
    1f94:	9100e3f3 	add	x19, sp, #0x38
    1f98:	4f000400 	movi	v0.4s, #0x0
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:90
    1f9c:	f9400001 	ldr	x1, [x0]
    1fa0:	f9003fe1 	str	x1, [sp, #120]
    1fa4:	d2800001 	mov	x1, #0x0                   	// #0
    1fa8:	2a0203f4 	mov	w20, w2
    1fac:	aa0303f6 	mov	x22, x3
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:94
    1fb0:	aa0303e1 	mov	x1, x3
    1fb4:	aa1303e2 	mov	x2, x19
    1fb8:	2a1403e0 	mov	w0, w20
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:91
    1fbc:	ad000260 	stp	q0, q0, [x19]
    1fc0:	ad010260 	stp	q0, q0, [x19, #32]
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:94
    1fc4:	97ffff92 	bl	1e0c <to_gp11_param>
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:95
    1fc8:	aa1303e3 	mov	x3, x19
    1fcc:	2a1403e2 	mov	w2, w20
    1fd0:	2a0803e1 	mov	w1, w8
    1fd4:	aa0703e0 	mov	x0, x7
    1fd8:	d63f00c0 	blr	x6
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:96
    1fdc:	aa1303e1 	mov	x1, x19
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:95
    1fe0:	2a0003e6 	mov	w6, w0
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:96
    1fe4:	aa1603e2 	mov	x2, x22
    1fe8:	2a1403e0 	mov	w0, w20
    1fec:	97ffffa1 	bl	1e70 <from_gp11_param>
/home/qc2335/optee/optee_os/user_ta_entry_compat.c:99
    1ff0:	f9409ab5 	ldr	x21, [x21, #304]
    1ff4:	f9403fe0 	ldr	x0, [sp, #120]
    1ff8:	f94002a1 	ldr	x1, [x21]
    1ffc:	eb010000 	subs	x0, x0, x1
    2000:	d2800001 	mov	x1, #0x0                   	// #0
    2004:	54000040 	b.eq	200c <__ta_invoke_cmd+0x9c>  // b.none
    2008:	97fff99c 	bl	678 <__stack_chk_fail>
    200c:	2a0603e0 	mov	w0, w6
    2010:	a94153f3 	ldp	x19, x20, [sp, #16]
    2014:	a9425bf5 	ldp	x21, x22, [sp, #32]
    2018:	a8c87bfd 	ldp	x29, x30, [sp], #128
    201c:	d65f03c0 	ret

0000000000002020 <_utee_panic>:
_utee_panic():
    2020:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    2024:	910003e1 	mov	x1, sp
    2028:	94000007 	bl	2044 <__utee_panic>

000000000000202c <_utee_return>:
_utee_return():
    202c:	d2800008 	mov	x8, #0x0                   	// #0
    2030:	d4000001 	svc	#0x0
    2034:	d65f03c0 	ret

0000000000002038 <_utee_log>:
_utee_log():
    2038:	d2800028 	mov	x8, #0x1                   	// #1
    203c:	d4000001 	svc	#0x0
    2040:	d65f03c0 	ret

0000000000002044 <__utee_panic>:
__utee_panic():
    2044:	d2800048 	mov	x8, #0x2                   	// #2
    2048:	d4000001 	svc	#0x0
    204c:	d65f03c0 	ret

0000000000002050 <_utee_get_property>:
_utee_get_property():
    2050:	d2800068 	mov	x8, #0x3                   	// #3
    2054:	d4000001 	svc	#0x0
    2058:	d65f03c0 	ret

000000000000205c <_utee_get_property_name_to_index>:
_utee_get_property_name_to_index():
    205c:	d2800088 	mov	x8, #0x4                   	// #4
    2060:	d4000001 	svc	#0x0
    2064:	d65f03c0 	ret

0000000000002068 <_utee_open_ta_session>:
_utee_open_ta_session():
    2068:	d28000a8 	mov	x8, #0x5                   	// #5
    206c:	d4000001 	svc	#0x0
    2070:	d65f03c0 	ret

0000000000002074 <_utee_close_ta_session>:
_utee_close_ta_session():
    2074:	d28000c8 	mov	x8, #0x6                   	// #6
    2078:	d4000001 	svc	#0x0
    207c:	d65f03c0 	ret

0000000000002080 <_utee_invoke_ta_command>:
_utee_invoke_ta_command():
    2080:	d28000e8 	mov	x8, #0x7                   	// #7
    2084:	d4000001 	svc	#0x0
    2088:	d65f03c0 	ret

000000000000208c <_utee_get_cancellation_flag>:
_utee_get_cancellation_flag():
    208c:	d2800128 	mov	x8, #0x9                   	// #9
    2090:	d4000001 	svc	#0x0
    2094:	d65f03c0 	ret

0000000000002098 <_utee_check_access_rights>:
_utee_check_access_rights():
    2098:	d2800108 	mov	x8, #0x8                   	// #8
    209c:	d4000001 	svc	#0x0
    20a0:	d65f03c0 	ret

00000000000020a4 <_utee_unmask_cancellation>:
_utee_unmask_cancellation():
    20a4:	d2800148 	mov	x8, #0xa                   	// #10
    20a8:	d4000001 	svc	#0x0
    20ac:	d65f03c0 	ret

00000000000020b0 <_utee_mask_cancellation>:
_utee_mask_cancellation():
    20b0:	d2800168 	mov	x8, #0xb                   	// #11
    20b4:	d4000001 	svc	#0x0
    20b8:	d65f03c0 	ret

00000000000020bc <_utee_wait>:
_utee_wait():
    20bc:	d2800188 	mov	x8, #0xc                   	// #12
    20c0:	d4000001 	svc	#0x0
    20c4:	d65f03c0 	ret

00000000000020c8 <_utee_get_time>:
_utee_get_time():
    20c8:	d28001a8 	mov	x8, #0xd                   	// #13
    20cc:	d4000001 	svc	#0x0
    20d0:	d65f03c0 	ret

00000000000020d4 <_utee_set_ta_time>:
_utee_set_ta_time():
    20d4:	d28001c8 	mov	x8, #0xe                   	// #14
    20d8:	d4000001 	svc	#0x0
    20dc:	d65f03c0 	ret

00000000000020e0 <_utee_cryp_state_alloc>:
_utee_cryp_state_alloc():
    20e0:	d28001e8 	mov	x8, #0xf                   	// #15
    20e4:	d4000001 	svc	#0x0
    20e8:	d65f03c0 	ret

00000000000020ec <_utee_cryp_state_copy>:
_utee_cryp_state_copy():
    20ec:	d2800208 	mov	x8, #0x10                  	// #16
    20f0:	d4000001 	svc	#0x0
    20f4:	d65f03c0 	ret

00000000000020f8 <_utee_cryp_state_free>:
_utee_cryp_state_free():
    20f8:	d2800228 	mov	x8, #0x11                  	// #17
    20fc:	d4000001 	svc	#0x0
    2100:	d65f03c0 	ret

0000000000002104 <_utee_hash_init>:
_utee_hash_init():
    2104:	d2800248 	mov	x8, #0x12                  	// #18
    2108:	d4000001 	svc	#0x0
    210c:	d65f03c0 	ret

0000000000002110 <_utee_hash_update>:
_utee_hash_update():
    2110:	d2800268 	mov	x8, #0x13                  	// #19
    2114:	d4000001 	svc	#0x0
    2118:	d65f03c0 	ret

000000000000211c <_utee_hash_final>:
_utee_hash_final():
    211c:	d2800288 	mov	x8, #0x14                  	// #20
    2120:	d4000001 	svc	#0x0
    2124:	d65f03c0 	ret

0000000000002128 <_utee_cipher_init>:
_utee_cipher_init():
    2128:	d28002a8 	mov	x8, #0x15                  	// #21
    212c:	d4000001 	svc	#0x0
    2130:	d65f03c0 	ret

0000000000002134 <_utee_cipher_update>:
_utee_cipher_update():
    2134:	d28002c8 	mov	x8, #0x16                  	// #22
    2138:	d4000001 	svc	#0x0
    213c:	d65f03c0 	ret

0000000000002140 <_utee_cipher_final>:
_utee_cipher_final():
    2140:	d28002e8 	mov	x8, #0x17                  	// #23
    2144:	d4000001 	svc	#0x0
    2148:	d65f03c0 	ret

000000000000214c <_utee_cryp_obj_get_info>:
_utee_cryp_obj_get_info():
    214c:	d2800308 	mov	x8, #0x18                  	// #24
    2150:	d4000001 	svc	#0x0
    2154:	d65f03c0 	ret

0000000000002158 <_utee_cryp_obj_restrict_usage>:
_utee_cryp_obj_restrict_usage():
    2158:	d2800328 	mov	x8, #0x19                  	// #25
    215c:	d4000001 	svc	#0x0
    2160:	d65f03c0 	ret

0000000000002164 <_utee_cryp_obj_get_attr>:
_utee_cryp_obj_get_attr():
    2164:	d2800348 	mov	x8, #0x1a                  	// #26
    2168:	d4000001 	svc	#0x0
    216c:	d65f03c0 	ret

0000000000002170 <_utee_cryp_obj_alloc>:
_utee_cryp_obj_alloc():
    2170:	d2800368 	mov	x8, #0x1b                  	// #27
    2174:	d4000001 	svc	#0x0
    2178:	d65f03c0 	ret

000000000000217c <_utee_cryp_obj_close>:
_utee_cryp_obj_close():
    217c:	d2800388 	mov	x8, #0x1c                  	// #28
    2180:	d4000001 	svc	#0x0
    2184:	d65f03c0 	ret

0000000000002188 <_utee_cryp_obj_reset>:
_utee_cryp_obj_reset():
    2188:	d28003a8 	mov	x8, #0x1d                  	// #29
    218c:	d4000001 	svc	#0x0
    2190:	d65f03c0 	ret

0000000000002194 <_utee_cryp_obj_populate>:
_utee_cryp_obj_populate():
    2194:	d28003c8 	mov	x8, #0x1e                  	// #30
    2198:	d4000001 	svc	#0x0
    219c:	d65f03c0 	ret

00000000000021a0 <_utee_cryp_obj_copy>:
_utee_cryp_obj_copy():
    21a0:	d28003e8 	mov	x8, #0x1f                  	// #31
    21a4:	d4000001 	svc	#0x0
    21a8:	d65f03c0 	ret

00000000000021ac <_utee_cryp_derive_key>:
_utee_cryp_derive_key():
    21ac:	d2800408 	mov	x8, #0x20                  	// #32
    21b0:	d4000001 	svc	#0x0
    21b4:	d65f03c0 	ret

00000000000021b8 <_utee_cryp_random_number_generate>:
_utee_cryp_random_number_generate():
    21b8:	d2800428 	mov	x8, #0x21                  	// #33
    21bc:	d4000001 	svc	#0x0
    21c0:	d65f03c0 	ret

00000000000021c4 <_utee_authenc_init>:
_utee_authenc_init():
    21c4:	d2800448 	mov	x8, #0x22                  	// #34
    21c8:	d4000001 	svc	#0x0
    21cc:	d65f03c0 	ret

00000000000021d0 <_utee_authenc_update_aad>:
_utee_authenc_update_aad():
    21d0:	d2800468 	mov	x8, #0x23                  	// #35
    21d4:	d4000001 	svc	#0x0
    21d8:	d65f03c0 	ret

00000000000021dc <_utee_authenc_update_payload>:
_utee_authenc_update_payload():
    21dc:	d2800488 	mov	x8, #0x24                  	// #36
    21e0:	d4000001 	svc	#0x0
    21e4:	d65f03c0 	ret

00000000000021e8 <_utee_authenc_enc_final>:
_utee_authenc_enc_final():
    21e8:	d28004a8 	mov	x8, #0x25                  	// #37
    21ec:	d4000001 	svc	#0x0
    21f0:	d65f03c0 	ret

00000000000021f4 <_utee_authenc_dec_final>:
_utee_authenc_dec_final():
    21f4:	d28004c8 	mov	x8, #0x26                  	// #38
    21f8:	d4000001 	svc	#0x0
    21fc:	d65f03c0 	ret

0000000000002200 <_utee_asymm_operate>:
_utee_asymm_operate():
    2200:	d28004e8 	mov	x8, #0x27                  	// #39
    2204:	d4000001 	svc	#0x0
    2208:	d65f03c0 	ret

000000000000220c <_utee_asymm_verify>:
_utee_asymm_verify():
    220c:	d2800508 	mov	x8, #0x28                  	// #40
    2210:	d4000001 	svc	#0x0
    2214:	d65f03c0 	ret

0000000000002218 <_utee_storage_obj_open>:
_utee_storage_obj_open():
    2218:	d2800528 	mov	x8, #0x29                  	// #41
    221c:	d4000001 	svc	#0x0
    2220:	d65f03c0 	ret

0000000000002224 <_utee_storage_obj_create>:
_utee_storage_obj_create():
    2224:	d2800548 	mov	x8, #0x2a                  	// #42
    2228:	d4000001 	svc	#0x0
    222c:	d65f03c0 	ret

0000000000002230 <_utee_storage_obj_del>:
_utee_storage_obj_del():
    2230:	d2800568 	mov	x8, #0x2b                  	// #43
    2234:	d4000001 	svc	#0x0
    2238:	d65f03c0 	ret

000000000000223c <_utee_storage_obj_rename>:
_utee_storage_obj_rename():
    223c:	d2800588 	mov	x8, #0x2c                  	// #44
    2240:	d4000001 	svc	#0x0
    2244:	d65f03c0 	ret

0000000000002248 <_utee_storage_alloc_enum>:
_utee_storage_alloc_enum():
    2248:	d28005a8 	mov	x8, #0x2d                  	// #45
    224c:	d4000001 	svc	#0x0
    2250:	d65f03c0 	ret

0000000000002254 <_utee_storage_free_enum>:
_utee_storage_free_enum():
    2254:	d28005c8 	mov	x8, #0x2e                  	// #46
    2258:	d4000001 	svc	#0x0
    225c:	d65f03c0 	ret

0000000000002260 <_utee_storage_reset_enum>:
_utee_storage_reset_enum():
    2260:	d28005e8 	mov	x8, #0x2f                  	// #47
    2264:	d4000001 	svc	#0x0
    2268:	d65f03c0 	ret

000000000000226c <_utee_storage_start_enum>:
_utee_storage_start_enum():
    226c:	d2800608 	mov	x8, #0x30                  	// #48
    2270:	d4000001 	svc	#0x0
    2274:	d65f03c0 	ret

0000000000002278 <_utee_storage_next_enum>:
_utee_storage_next_enum():
    2278:	d2800628 	mov	x8, #0x31                  	// #49
    227c:	d4000001 	svc	#0x0
    2280:	d65f03c0 	ret

0000000000002284 <_utee_storage_obj_read>:
_utee_storage_obj_read():
    2284:	d2800648 	mov	x8, #0x32                  	// #50
    2288:	d4000001 	svc	#0x0
    228c:	d65f03c0 	ret

0000000000002290 <_utee_storage_obj_write>:
_utee_storage_obj_write():
    2290:	d2800668 	mov	x8, #0x33                  	// #51
    2294:	d4000001 	svc	#0x0
    2298:	d65f03c0 	ret

000000000000229c <_utee_storage_obj_trunc>:
_utee_storage_obj_trunc():
    229c:	d2800688 	mov	x8, #0x34                  	// #52
    22a0:	d4000001 	svc	#0x0
    22a4:	d65f03c0 	ret

00000000000022a8 <_utee_storage_obj_seek>:
_utee_storage_obj_seek():
    22a8:	d28006a8 	mov	x8, #0x35                  	// #53
    22ac:	d4000001 	svc	#0x0
    22b0:	d65f03c0 	ret

00000000000022b4 <_utee_cryp_obj_generate_key>:
_utee_cryp_obj_generate_key():
    22b4:	d28006c8 	mov	x8, #0x36                  	// #54
    22b8:	d4000001 	svc	#0x0
    22bc:	d65f03c0 	ret

00000000000022c0 <_utee_cache_operation>:
_utee_cache_operation():
    22c0:	d28008c8 	mov	x8, #0x46                  	// #70
    22c4:	d4000001 	svc	#0x0
    22c8:	d65f03c0 	ret

00000000000022cc <abort>:
abort():
    22cc:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    22d0:	b00000a0 	adrp	x0, 17000 <__text_end+0x3c08>
    22d4:	9131d000 	add	x0, x0, #0xc74
    22d8:	910003fd 	mov	x29, sp
    22dc:	97fffcd0 	bl	161c <puts>
    22e0:	d2800000 	mov	x0, #0x0                   	// #0
    22e4:	97ffff4f 	bl	2020 <_utee_panic>
    22e8:	14000000 	b	22e8 <abort+0x1c>

00000000000022ec <copy_param>:
copy_param():
    22ec:	2a0103e3 	mov	w3, w1
    22f0:	52800004 	mov	w4, #0x0                   	// #0
    22f4:	f8008403 	str	x3, [x0], #8
    22f8:	1ac42425 	lsr	w5, w1, w4
    22fc:	12000ca3 	and	w3, w5, #0xf
    2300:	71000c7f 	cmp	w3, #0x3
    2304:	540001a0 	b.eq	2338 <copy_param+0x4c>  // b.none
    2308:	721e04bf 	tst	w5, #0xc
    230c:	540000c1 	b.ne	2324 <copy_param+0x38>  // b.any
    2310:	7100047f 	cmp	w3, #0x1
    2314:	54000120 	b.eq	2338 <copy_param+0x4c>  // b.none
    2318:	d2800003 	mov	x3, #0x0                   	// #0
    231c:	d2800005 	mov	x5, #0x0                   	// #0
    2320:	14000007 	b	233c <copy_param+0x50>
    2324:	51001463 	sub	w3, w3, #0x5
    2328:	7100087f 	cmp	w3, #0x2
    232c:	54ffff68 	b.hi	2318 <copy_param+0x2c>  // b.pmore
    2330:	a9400c45 	ldp	x5, x3, [x2]
    2334:	14000002 	b	233c <copy_param+0x50>
    2338:	29400c45 	ldp	w5, w3, [x2]
    233c:	11001084 	add	w4, w4, #0x4
    2340:	a9000c05 	stp	x5, x3, [x0]
    2344:	91004042 	add	x2, x2, #0x10
    2348:	91004000 	add	x0, x0, #0x10
    234c:	7100409f 	cmp	w4, #0x10
    2350:	54fffd41 	b.ne	22f8 <copy_param+0xc>  // b.any
    2354:	d65f03c0 	ret

0000000000002358 <copy_gp11_param>:
copy_gp11_param():
    2358:	2a0103e3 	mov	w3, w1
    235c:	52800004 	mov	w4, #0x0                   	// #0
    2360:	f8008403 	str	x3, [x0], #8
    2364:	1ac42425 	lsr	w5, w1, w4
    2368:	12000ca3 	and	w3, w5, #0xf
    236c:	71000c7f 	cmp	w3, #0x3
    2370:	540001c0 	b.eq	23a8 <copy_gp11_param+0x50>  // b.none
    2374:	721e04bf 	tst	w5, #0xc
    2378:	540000c1 	b.ne	2390 <copy_gp11_param+0x38>  // b.any
    237c:	7100047f 	cmp	w3, #0x1
    2380:	54000140 	b.eq	23a8 <copy_gp11_param+0x50>  // b.none
    2384:	d2800003 	mov	x3, #0x0                   	// #0
    2388:	d2800005 	mov	x5, #0x0                   	// #0
    238c:	14000008 	b	23ac <copy_gp11_param+0x54>
    2390:	51001463 	sub	w3, w3, #0x5
    2394:	7100087f 	cmp	w3, #0x2
    2398:	54ffff68 	b.hi	2384 <copy_gp11_param+0x2c>  // b.pmore
    239c:	b9400843 	ldr	w3, [x2, #8]
    23a0:	f9400045 	ldr	x5, [x2]
    23a4:	14000002 	b	23ac <copy_gp11_param+0x54>
    23a8:	29400c45 	ldp	w5, w3, [x2]
    23ac:	11001084 	add	w4, w4, #0x4
    23b0:	a9000c05 	stp	x5, x3, [x0]
    23b4:	91004042 	add	x2, x2, #0x10
    23b8:	91004000 	add	x0, x0, #0x10
    23bc:	7100409f 	cmp	w4, #0x10
    23c0:	54fffd21 	b.ne	2364 <copy_gp11_param+0xc>  // b.any
    23c4:	d65f03c0 	ret

00000000000023c8 <check_mem_access_rights_params>:
check_mem_access_rights_params():
    23c8:	f00000a3 	adrp	x3, 19000 <_DYNAMIC>
    23cc:	d1000447 	sub	x7, x2, #0x1
    23d0:	8b0100e7 	add	x7, x7, x1
    23d4:	52800005 	mov	w5, #0x0                   	// #0
    23d8:	f940d064 	ldr	x4, [x3, #416]
    23dc:	f940e463 	ldr	x3, [x3, #456]
    23e0:	b9400089 	ldr	w9, [x4]
    23e4:	1ac52524 	lsr	w4, w9, w5
    23e8:	12000c84 	and	w4, w4, #0xf
    23ec:	7100149f 	cmp	w4, #0x5
    23f0:	54000300 	b.eq	2450 <check_mem_access_rights_params+0x88>  // b.none
    23f4:	51001884 	sub	w4, w4, #0x6
    23f8:	7100049f 	cmp	w4, #0x1
    23fc:	540001e8 	b.hi	2438 <check_mem_access_rights_params+0x70>  // b.pmore
    2400:	528000c6 	mov	w6, #0x6                   	// #6
    2404:	f9400464 	ldr	x4, [x3, #8]
    2408:	f100005f 	cmp	x2, #0x0
    240c:	fa401884 	ccmp	x4, #0x0, #0x4, ne  // ne = any
    2410:	54000140 	b.eq	2438 <check_mem_access_rights_params+0x70>  // b.none
    2414:	f9400068 	ldr	x8, [x3]
    2418:	d1000484 	sub	x4, x4, #0x1
    241c:	8b080084 	add	x4, x4, x8
    2420:	eb07011f 	cmp	x8, x7
    2424:	fa449022 	ccmp	x1, x4, #0x2, ls  // ls = plast
    2428:	54000088 	b.hi	2438 <check_mem_access_rights_params+0x70>  // b.pmore
    242c:	320000c6 	orr	w6, w6, #0x1
    2430:	6a26001f 	bics	wzr, w0, w6
    2434:	54000121 	b.ne	2458 <check_mem_access_rights_params+0x90>  // b.any
    2438:	110010a5 	add	w5, w5, #0x4
    243c:	91004063 	add	x3, x3, #0x10
    2440:	710040bf 	cmp	w5, #0x10
    2444:	54fffd01 	b.ne	23e4 <check_mem_access_rights_params+0x1c>  // b.any
    2448:	52800000 	mov	w0, #0x0                   	// #0
    244c:	d65f03c0 	ret
    2450:	52800086 	mov	w6, #0x4                   	// #4
    2454:	17ffffec 	b	2404 <check_mem_access_rights_params+0x3c>
    2458:	129fffc0 	mov	w0, #0xffff0001            	// #-65535
    245c:	17fffffc 	b	244c <check_mem_access_rights_params+0x84>

0000000000002460 <buf_overlaps_no_share_heap>:
buf_overlaps_no_share_heap():
    2460:	aa0003e3 	mov	x3, x0
    2464:	f00000a0 	adrp	x0, 19000 <_DYNAMIC>
    2468:	f940dc00 	ldr	x0, [x0, #440]
    246c:	f9400000 	ldr	x0, [x0]
    2470:	b4000140 	cbz	x0, 2498 <buf_overlaps_no_share_heap+0x38>
    2474:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    2478:	aa0103e2 	mov	x2, x1
    247c:	aa0303e1 	mov	x1, x3
    2480:	910003fd 	mov	x29, sp
    2484:	94002a79 	bl	ce68 <raw_malloc_buffer_overlaps_heap>
    2488:	12001c00 	and	w0, w0, #0xff
    248c:	12000000 	and	w0, w0, #0x1
    2490:	a8c17bfd 	ldp	x29, x30, [sp], #16
    2494:	d65f03c0 	ret
    2498:	52800000 	mov	w0, #0x0                   	// #0
    249c:	12000000 	and	w0, w0, #0x1
    24a0:	d65f03c0 	ret

00000000000024a4 <check_invoke_param>:
check_invoke_param():
    24a4:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    24a8:	910003fd 	mov	x29, sp
    24ac:	a90153f3 	stp	x19, x20, [sp, #16]
    24b0:	aa0103f3 	mov	x19, x1
    24b4:	52800014 	mov	w20, #0x0                   	// #0
    24b8:	a9025bf5 	stp	x21, x22, [sp, #32]
    24bc:	2a0003f5 	mov	w21, w0
    24c0:	f9001bf7 	str	x23, [sp, #48]
    24c4:	1ad426a1 	lsr	w1, w21, w20
    24c8:	12000c21 	and	w1, w1, #0xf
    24cc:	7100143f 	cmp	w1, #0x5
    24d0:	540003a0 	b.eq	2544 <check_invoke_param+0xa0>  // b.none
    24d4:	51001821 	sub	w1, w1, #0x6
    24d8:	7100043f 	cmp	w1, #0x1
    24dc:	54000228 	b.hi	2520 <check_invoke_param+0x7c>  // b.pmore
    24e0:	528000c0 	mov	w0, #0x6                   	// #6
    24e4:	a9405e76 	ldp	x22, x23, [x19]
    24e8:	32000000 	orr	w0, w0, #0x1
    24ec:	aa1703e2 	mov	x2, x23
    24f0:	aa1603e1 	mov	x1, x22
    24f4:	97ffffb5 	bl	23c8 <check_mem_access_rights_params>
    24f8:	34000060 	cbz	w0, 2504 <check_invoke_param+0x60>
    24fc:	52800000 	mov	w0, #0x0                   	// #0
    2500:	94000c13 	bl	554c <TEE_Panic>
    2504:	aa1703e1 	mov	x1, x23
    2508:	aa1603e0 	mov	x0, x22
    250c:	97ffffd5 	bl	2460 <buf_overlaps_no_share_heap>
    2510:	72001c1f 	tst	w0, #0xff
    2514:	54000060 	b.eq	2520 <check_invoke_param+0x7c>  // b.none
    2518:	52800000 	mov	w0, #0x0                   	// #0
    251c:	94000c0c 	bl	554c <TEE_Panic>
    2520:	11001294 	add	w20, w20, #0x4
    2524:	91004273 	add	x19, x19, #0x10
    2528:	7100429f 	cmp	w20, #0x10
    252c:	54fffcc1 	b.ne	24c4 <check_invoke_param+0x20>  // b.any
    2530:	a94153f3 	ldp	x19, x20, [sp, #16]
    2534:	a9425bf5 	ldp	x21, x22, [sp, #32]
    2538:	f9401bf7 	ldr	x23, [sp, #48]
    253c:	a8c47bfd 	ldp	x29, x30, [sp], #64
    2540:	d65f03c0 	ret
    2544:	52800080 	mov	w0, #0x4                   	// #4
    2548:	17ffffe7 	b	24e4 <check_invoke_param+0x40>

000000000000254c <update_out_param>:
update_out_param():
    254c:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    2550:	910003fd 	mov	x29, sp
    2554:	a90153f3 	stp	x19, x20, [sp, #16]
    2558:	aa0203f4 	mov	x20, x2
    255c:	aa0003f3 	mov	x19, x0
    2560:	a90363f7 	stp	x23, x24, [sp, #48]
    2564:	aa0103f8 	mov	x24, x1
    2568:	f8408697 	ldr	x23, [x20], #8
    256c:	a9025bf5 	stp	x21, x22, [sp, #32]
    2570:	d2800015 	mov	x21, #0x0                   	// #0
    2574:	531e76a0 	lsl	w0, w21, #2
    2578:	a9405a82 	ldp	x2, x22, [x20]
    257c:	1ac026e0 	lsr	w0, w23, w0
    2580:	12000c01 	and	w1, w0, #0xf
    2584:	721e041f 	tst	w0, #0xc
    2588:	540000a1 	b.ne	259c <update_out_param+0x50>  // b.any
    258c:	721f081f 	tst	w0, #0xe
    2590:	540000c0 	b.eq	25a8 <update_out_param+0x5c>  // b.none
    2594:	29005a62 	stp	w2, w22, [x19]
    2598:	14000004 	b	25a8 <update_out_param+0x5c>
    259c:	51001820 	sub	w0, w1, #0x6
    25a0:	7100041f 	cmp	w0, #0x1
    25a4:	54000169 	b.ls	25d0 <update_out_param+0x84>  // b.plast
    25a8:	910006b5 	add	x21, x21, #0x1
    25ac:	91004294 	add	x20, x20, #0x10
    25b0:	91004273 	add	x19, x19, #0x10
    25b4:	f10012bf 	cmp	x21, #0x4
    25b8:	54fffde1 	b.ne	2574 <update_out_param+0x28>  // b.any
    25bc:	a94153f3 	ldp	x19, x20, [sp, #16]
    25c0:	a9425bf5 	ldp	x21, x22, [sp, #32]
    25c4:	a94363f7 	ldp	x23, x24, [sp, #48]
    25c8:	a8c47bfd 	ldp	x29, x30, [sp], #64
    25cc:	d65f03c0 	ret
    25d0:	f8757b01 	ldr	x1, [x24, x21, lsl #3]
    25d4:	b40000a1 	cbz	x1, 25e8 <update_out_param+0x9c>
    25d8:	a9400a60 	ldp	x0, x2, [x19]
    25dc:	eb16005f 	cmp	x2, x22
    25e0:	9a969042 	csel	x2, x2, x22, ls  // ls = plast
    25e4:	97fff687 	bl	0 <memcpy>
    25e8:	f9000676 	str	x22, [x19, #8]
    25ec:	17ffffef 	b	25a8 <update_out_param+0x5c>

00000000000025f0 <update_out_gp11_param>:
update_out_gp11_param():
    25f0:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    25f4:	910003fd 	mov	x29, sp
    25f8:	a90153f3 	stp	x19, x20, [sp, #16]
    25fc:	aa0203f4 	mov	x20, x2
    2600:	aa0003f3 	mov	x19, x0
    2604:	a90363f7 	stp	x23, x24, [sp, #48]
    2608:	aa0103f8 	mov	x24, x1
    260c:	f8408697 	ldr	x23, [x20], #8
    2610:	a9025bf5 	stp	x21, x22, [sp, #32]
    2614:	d2800015 	mov	x21, #0x0                   	// #0
    2618:	531e76a0 	lsl	w0, w21, #2
    261c:	a9405a82 	ldp	x2, x22, [x20]
    2620:	1ac026e0 	lsr	w0, w23, w0
    2624:	12000c01 	and	w1, w0, #0xf
    2628:	721e041f 	tst	w0, #0xc
    262c:	540000a1 	b.ne	2640 <update_out_gp11_param+0x50>  // b.any
    2630:	721f081f 	tst	w0, #0xe
    2634:	540000c0 	b.eq	264c <update_out_gp11_param+0x5c>  // b.none
    2638:	29005a62 	stp	w2, w22, [x19]
    263c:	14000004 	b	264c <update_out_gp11_param+0x5c>
    2640:	51001820 	sub	w0, w1, #0x6
    2644:	7100041f 	cmp	w0, #0x1
    2648:	54000169 	b.ls	2674 <update_out_gp11_param+0x84>  // b.plast
    264c:	910006b5 	add	x21, x21, #0x1
    2650:	91004294 	add	x20, x20, #0x10
    2654:	91004273 	add	x19, x19, #0x10
    2658:	f10012bf 	cmp	x21, #0x4
    265c:	54fffde1 	b.ne	2618 <update_out_gp11_param+0x28>  // b.any
    2660:	a94153f3 	ldp	x19, x20, [sp, #16]
    2664:	a9425bf5 	ldp	x21, x22, [sp, #32]
    2668:	a94363f7 	ldp	x23, x24, [sp, #48]
    266c:	a8c47bfd 	ldp	x29, x30, [sp], #64
    2670:	d65f03c0 	ret
    2674:	f8757b01 	ldr	x1, [x24, x21, lsl #3]
    2678:	b40000c1 	cbz	x1, 2690 <update_out_gp11_param+0xa0>
    267c:	b9400a62 	ldr	w2, [x19, #8]
    2680:	f9400260 	ldr	x0, [x19]
    2684:	eb16005f 	cmp	x2, x22
    2688:	9a969042 	csel	x2, x2, x22, ls  // ls = plast
    268c:	97fff65d 	bl	0 <memcpy>
    2690:	b9000a76 	str	w22, [x19, #8]
    2694:	17ffffee 	b	264c <update_out_gp11_param+0x5c>

0000000000002698 <TEE_CloseTASession>:
TEE_CloseTASession():
    2698:	b4000120 	cbz	x0, 26bc <TEE_CloseTASession+0x24>
    269c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    26a0:	910003fd 	mov	x29, sp
    26a4:	97fffe74 	bl	2074 <_utee_close_ta_session>
    26a8:	34000060 	cbz	w0, 26b4 <TEE_CloseTASession+0x1c>
    26ac:	a8c17bfd 	ldp	x29, x30, [sp], #16
    26b0:	14000ba7 	b	554c <TEE_Panic>
    26b4:	a8c17bfd 	ldp	x29, x30, [sp], #16
    26b8:	d65f03c0 	ret
    26bc:	d65f03c0 	ret

00000000000026c0 <TEE_GetCancellationFlag>:
TEE_GetCancellationFlag():
    26c0:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    26c4:	f00000a1 	adrp	x1, 19000 <_DYNAMIC>
    26c8:	910003fd 	mov	x29, sp
    26cc:	f9409821 	ldr	x1, [x1, #304]
    26d0:	f9400020 	ldr	x0, [x1]
    26d4:	f9000fe0 	str	x0, [sp, #24]
    26d8:	d2800000 	mov	x0, #0x0                   	// #0
    26dc:	910053e0 	add	x0, sp, #0x14
    26e0:	97fffe6b 	bl	208c <_utee_get_cancellation_flag>
    26e4:	34000040 	cbz	w0, 26ec <TEE_GetCancellationFlag+0x2c>
    26e8:	b90017ff 	str	wzr, [sp, #20]
    26ec:	f00000a1 	adrp	x1, 19000 <_DYNAMIC>
    26f0:	b94017e0 	ldr	w0, [sp, #20]
    26f4:	f9409821 	ldr	x1, [x1, #304]
    26f8:	7100001f 	cmp	w0, #0x0
    26fc:	1a9f07e0 	cset	w0, ne  // ne = any
    2700:	f9400fe3 	ldr	x3, [sp, #24]
    2704:	f9400022 	ldr	x2, [x1]
    2708:	eb020063 	subs	x3, x3, x2
    270c:	d2800002 	mov	x2, #0x0                   	// #0
    2710:	54000040 	b.eq	2718 <TEE_GetCancellationFlag+0x58>  // b.none
    2714:	97fff7d9 	bl	678 <__stack_chk_fail>
    2718:	a8c27bfd 	ldp	x29, x30, [sp], #32
    271c:	d65f03c0 	ret

0000000000002720 <TEE_UnmaskCancellation>:
TEE_UnmaskCancellation():
    2720:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    2724:	f00000a1 	adrp	x1, 19000 <_DYNAMIC>
    2728:	910003fd 	mov	x29, sp
    272c:	f9409821 	ldr	x1, [x1, #304]
    2730:	f9400020 	ldr	x0, [x1]
    2734:	f9000fe0 	str	x0, [sp, #24]
    2738:	d2800000 	mov	x0, #0x0                   	// #0
    273c:	910053e0 	add	x0, sp, #0x14
    2740:	97fffe59 	bl	20a4 <_utee_unmask_cancellation>
    2744:	34000040 	cbz	w0, 274c <TEE_UnmaskCancellation+0x2c>
    2748:	94000b81 	bl	554c <TEE_Panic>
    274c:	f00000a1 	adrp	x1, 19000 <_DYNAMIC>
    2750:	b94017e0 	ldr	w0, [sp, #20]
    2754:	f9409821 	ldr	x1, [x1, #304]
    2758:	7100001f 	cmp	w0, #0x0
    275c:	1a9f07e0 	cset	w0, ne  // ne = any
    2760:	f9400fe3 	ldr	x3, [sp, #24]
    2764:	f9400022 	ldr	x2, [x1]
    2768:	eb020063 	subs	x3, x3, x2
    276c:	d2800002 	mov	x2, #0x0                   	// #0
    2770:	54000040 	b.eq	2778 <TEE_UnmaskCancellation+0x58>  // b.none
    2774:	97fff7c1 	bl	678 <__stack_chk_fail>
    2778:	a8c27bfd 	ldp	x29, x30, [sp], #32
    277c:	d65f03c0 	ret

0000000000002780 <TEE_MaskCancellation>:
TEE_MaskCancellation():
    2780:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    2784:	f00000a1 	adrp	x1, 19000 <_DYNAMIC>
    2788:	910003fd 	mov	x29, sp
    278c:	f9409821 	ldr	x1, [x1, #304]
    2790:	f9400020 	ldr	x0, [x1]
    2794:	f9000fe0 	str	x0, [sp, #24]
    2798:	d2800000 	mov	x0, #0x0                   	// #0
    279c:	910053e0 	add	x0, sp, #0x14
    27a0:	97fffe44 	bl	20b0 <_utee_mask_cancellation>
    27a4:	34000040 	cbz	w0, 27ac <TEE_MaskCancellation+0x2c>
    27a8:	94000b69 	bl	554c <TEE_Panic>
    27ac:	f00000a1 	adrp	x1, 19000 <_DYNAMIC>
    27b0:	b94017e0 	ldr	w0, [sp, #20]
    27b4:	f9409821 	ldr	x1, [x1, #304]
    27b8:	7100001f 	cmp	w0, #0x0
    27bc:	1a9f07e0 	cset	w0, ne  // ne = any
    27c0:	f9400fe3 	ldr	x3, [sp, #24]
    27c4:	f9400022 	ldr	x2, [x1]
    27c8:	eb020063 	subs	x3, x3, x2
    27cc:	d2800002 	mov	x2, #0x0                   	// #0
    27d0:	54000040 	b.eq	27d8 <TEE_MaskCancellation+0x58>  // b.none
    27d4:	97fff7a9 	bl	678 <__stack_chk_fail>
    27d8:	a8c27bfd 	ldp	x29, x30, [sp], #32
    27dc:	d65f03c0 	ret

00000000000027e0 <TEE_CheckMemoryAccessRights>:
TEE_CheckMemoryAccessRights():
    27e0:	b5000102 	cbnz	x2, 2800 <TEE_CheckMemoryAccessRights+0x20>
    27e4:	52800000 	mov	w0, #0x0                   	// #0
    27e8:	d65f03c0 	ret
    27ec:	52800000 	mov	w0, #0x0                   	// #0
    27f0:	a94153f3 	ldp	x19, x20, [sp, #16]
    27f4:	f94013f5 	ldr	x21, [sp, #32]
    27f8:	a8c37bfd 	ldp	x29, x30, [sp], #48
    27fc:	d65f03c0 	ret
    2800:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    2804:	910003fd 	mov	x29, sp
    2808:	a90153f3 	stp	x19, x20, [sp, #16]
    280c:	aa0103f4 	mov	x20, x1
    2810:	aa0203f3 	mov	x19, x2
    2814:	f90013f5 	str	x21, [sp, #32]
    2818:	2a0003f5 	mov	w21, w0
    281c:	97fffe1f 	bl	2098 <_utee_check_access_rights>
    2820:	35000200 	cbnz	w0, 2860 <TEE_CheckMemoryAccessRights+0x80>
    2824:	aa1303e2 	mov	x2, x19
    2828:	aa1403e1 	mov	x1, x20
    282c:	12000aa0 	and	w0, w21, #0x7
    2830:	97fffee6 	bl	23c8 <check_mem_access_rights_params>
    2834:	35000160 	cbnz	w0, 2860 <TEE_CheckMemoryAccessRights+0x80>
    2838:	aa1303e1 	mov	x1, x19
    283c:	aa1403e0 	mov	x0, x20
    2840:	94002a1e 	bl	d0b8 <malloc_buffer_overlaps_heap>
    2844:	72001c1f 	tst	w0, #0xff
    2848:	54fffd20 	b.eq	27ec <TEE_CheckMemoryAccessRights+0xc>  // b.none
    284c:	aa1303e1 	mov	x1, x19
    2850:	aa1403e0 	mov	x0, x20
    2854:	94002a13 	bl	d0a0 <malloc_buffer_is_within_alloced>
    2858:	72001c1f 	tst	w0, #0xff
    285c:	54fffc81 	b.ne	27ec <TEE_CheckMemoryAccessRights+0xc>  // b.any
    2860:	129fffc0 	mov	w0, #0xffff0001            	// #-65535
    2864:	17ffffe3 	b	27f0 <TEE_CheckMemoryAccessRights+0x10>

0000000000002868 <map_tmp_param>:
map_tmp_param():
    2868:	a9b87bfd 	stp	x29, x30, [sp, #-128]!
    286c:	f00000a4 	adrp	x4, 19000 <_DYNAMIC>
    2870:	910003fd 	mov	x29, sp
    2874:	f9409884 	ldr	x4, [x4, #304]
    2878:	a90153f3 	stp	x19, x20, [sp, #16]
    287c:	d2800013 	mov	x19, #0x0                   	// #0
    2880:	a9025bf5 	stp	x21, x22, [sp, #32]
    2884:	aa0203f6 	mov	x22, x2
    2888:	aa0303f5 	mov	x21, x3
    288c:	a90363f7 	stp	x23, x24, [sp, #48]
    2890:	aa0103f7 	mov	x23, x1
    2894:	52800023 	mov	w3, #0x1                   	// #1
    2898:	a9046bf9 	stp	x25, x26, [sp, #64]
    289c:	aa0003f9 	mov	x25, x0
    28a0:	91002338 	add	x24, x25, #0x8
    28a4:	a90573fb 	stp	x27, x28, [sp, #80]
    28a8:	aa1803fb 	mov	x27, x24
    28ac:	9101c3fc 	add	x28, sp, #0x70
    28b0:	f9400080 	ldr	x0, [x4]
    28b4:	f9003fe0 	str	x0, [sp, #120]
    28b8:	d2800000 	mov	x0, #0x0                   	// #0
    28bc:	f900003f 	str	xzr, [x1]
    28c0:	d280001a 	mov	x26, #0x0                   	// #0
    28c4:	f900005f 	str	xzr, [x2]
    28c8:	b90073ff 	str	wzr, [sp, #112]
    28cc:	f9400321 	ldr	x1, [x25]
    28d0:	531e7660 	lsl	w0, w19, #2
    28d4:	f8337abf 	str	xzr, [x21, x19, lsl #3]
    28d8:	1ac02421 	lsr	w1, w1, w0
    28dc:	12000c21 	and	w1, w1, #0xf
    28e0:	51001421 	sub	w1, w1, #0x5
    28e4:	7100083f 	cmp	w1, #0x2
    28e8:	540001e8 	b.hi	2924 <map_tmp_param+0xbc>  // b.pmore
    28ec:	a9405361 	ldp	x1, x20, [x27]
    28f0:	f100003f 	cmp	x1, #0x0
    28f4:	fa401a84 	ccmp	x20, #0x0, #0x4, ne  // ne = any
    28f8:	54000160 	b.eq	2924 <map_tmp_param+0xbc>  // b.none
    28fc:	aa1403e2 	mov	x2, x20
    2900:	52800020 	mov	w0, #0x1                   	// #1
    2904:	b9006fe3 	str	w3, [sp, #108]
    2908:	97ffffb6 	bl	27e0 <TEE_CheckMemoryAccessRights>
    290c:	b9406fe3 	ldr	w3, [sp, #108]
    2910:	350000a0 	cbnz	w0, 2924 <map_tmp_param+0xbc>
    2914:	91003e94 	add	x20, x20, #0xf
    2918:	383c6a63 	strb	w3, [x19, x28]
    291c:	927cee94 	and	x20, x20, #0xfffffffffffffff0
    2920:	8b14035a 	add	x26, x26, x20
    2924:	91000673 	add	x19, x19, #0x1
    2928:	9100437b 	add	x27, x27, #0x10
    292c:	f100127f 	cmp	x19, #0x4
    2930:	54fffce1 	b.ne	28cc <map_tmp_param+0x64>  // b.any
    2934:	b400053a 	cbz	x26, 29d8 <map_tmp_param+0x170>
    2938:	2a1303e1 	mov	w1, w19
    293c:	aa1a03e0 	mov	x0, x26
    2940:	94000f90 	bl	6780 <tee_map_zi>
    2944:	b40004e0 	cbz	x0, 29e0 <map_tmp_param+0x178>
    2948:	f90002e0 	str	x0, [x23]
    294c:	f90002da 	str	x26, [x22]
    2950:	9101c3f6 	add	x22, sp, #0x70
    2954:	d2800013 	mov	x19, #0x0                   	// #0
    2958:	f9400323 	ldr	x3, [x25]
    295c:	531e7661 	lsl	w1, w19, #2
    2960:	1ac12463 	lsr	w3, w3, w1
    2964:	12000c63 	and	w3, w3, #0xf
    2968:	51001461 	sub	w1, w3, #0x5
    296c:	7100083f 	cmp	w1, #0x2
    2970:	540001a8 	b.hi	29a4 <map_tmp_param+0x13c>  // b.pmore
    2974:	38766a61 	ldrb	w1, [x19, x22]
    2978:	34000161 	cbz	w1, 29a4 <map_tmp_param+0x13c>
    297c:	a9400b01 	ldp	x1, x2, [x24]
    2980:	f8337aa0 	str	x0, [x21, x19, lsl #3]
    2984:	f9000300 	str	x0, [x24]
    2988:	91003c54 	add	x20, x2, #0xf
    298c:	927cee94 	and	x20, x20, #0xfffffffffffffff0
    2990:	8b140014 	add	x20, x0, x20
    2994:	7100187f 	cmp	w3, #0x6
    2998:	54000040 	b.eq	29a0 <map_tmp_param+0x138>  // b.none
    299c:	97fff599 	bl	0 <memcpy>
    29a0:	aa1403e0 	mov	x0, x20
    29a4:	91000673 	add	x19, x19, #0x1
    29a8:	91004318 	add	x24, x24, #0x10
    29ac:	f100127f 	cmp	x19, #0x4
    29b0:	54fffd41 	b.ne	2958 <map_tmp_param+0xf0>  // b.any
    29b4:	52800000 	mov	w0, #0x0                   	// #0
    29b8:	f00000a4 	adrp	x4, 19000 <_DYNAMIC>
    29bc:	f9409884 	ldr	x4, [x4, #304]
    29c0:	f9403fe1 	ldr	x1, [sp, #120]
    29c4:	f9400082 	ldr	x2, [x4]
    29c8:	eb020021 	subs	x1, x1, x2
    29cc:	d2800002 	mov	x2, #0x0                   	// #0
    29d0:	540000c0 	b.eq	29e8 <map_tmp_param+0x180>  // b.none
    29d4:	97fff729 	bl	678 <__stack_chk_fail>
    29d8:	d2800000 	mov	x0, #0x0                   	// #0
    29dc:	17ffffdd 	b	2950 <map_tmp_param+0xe8>
    29e0:	129ffe60 	mov	w0, #0xffff000c            	// #-65524
    29e4:	17fffff5 	b	29b8 <map_tmp_param+0x150>
    29e8:	a94153f3 	ldp	x19, x20, [sp, #16]
    29ec:	a9425bf5 	ldp	x21, x22, [sp, #32]
    29f0:	a94363f7 	ldp	x23, x24, [sp, #48]
    29f4:	a9446bf9 	ldp	x25, x26, [sp, #64]
    29f8:	a94573fb 	ldp	x27, x28, [sp, #80]
    29fc:	a8c87bfd 	ldp	x29, x30, [sp], #128
    2a00:	d65f03c0 	ret

0000000000002a04 <TEE_OpenTASession>:
TEE_OpenTASession():
    2a04:	a9b27bfd 	stp	x29, x30, [sp, #-224]!
    2a08:	f00000a6 	adrp	x6, 19000 <_DYNAMIC>
    2a0c:	910003fd 	mov	x29, sp
    2a10:	f94098c6 	ldr	x6, [x6, #304]
    2a14:	a90153f3 	stp	x19, x20, [sp, #16]
    2a18:	2a0203f3 	mov	w19, w2
    2a1c:	a9025bf5 	stp	x21, x22, [sp, #32]
    2a20:	aa0303f4 	mov	x20, x3
    2a24:	aa0403f5 	mov	x21, x4
    2a28:	a90363f7 	stp	x23, x24, [sp, #48]
    2a2c:	aa0003f7 	mov	x23, x0
    2a30:	2a0103f8 	mov	w24, w1
    2a34:	a9046bf9 	stp	x25, x26, [sp, #64]
    2a38:	aa0503f9 	mov	x25, x5
    2a3c:	f94000c0 	ldr	x0, [x6]
    2a40:	f9006fe0 	str	x0, [sp, #216]
    2a44:	d2800000 	mov	x0, #0x0                   	// #0
    2a48:	b9005fff 	str	wzr, [sp, #92]
    2a4c:	a9067fff 	stp	xzr, xzr, [sp, #96]
    2a50:	a9077fff 	stp	xzr, xzr, [sp, #112]
    2a54:	a9087fff 	stp	xzr, xzr, [sp, #128]
    2a58:	a9097fff 	stp	xzr, xzr, [sp, #144]
    2a5c:	a90a7fff 	stp	xzr, xzr, [sp, #160]
    2a60:	a90b7fff 	stp	xzr, xzr, [sp, #176]
    2a64:	a90c7fff 	stp	xzr, xzr, [sp, #192]
    2a68:	f9006bff 	str	xzr, [sp, #208]
    2a6c:	340000e2 	cbz	w2, 2a88 <TEE_OpenTASession+0x84>
    2a70:	aa0303e0 	mov	x0, x3
    2a74:	d2800801 	mov	x1, #0x40                  	// #64
    2a78:	94000b25 	bl	570c <__utee_check_inout_annotation>
    2a7c:	aa1403e1 	mov	x1, x20
    2a80:	2a1303e0 	mov	w0, w19
    2a84:	97fffe88 	bl	24a4 <check_invoke_param>
    2a88:	aa1503e0 	mov	x0, x21
    2a8c:	910243f6 	add	x22, sp, #0x90
    2a90:	d2800101 	mov	x1, #0x8                   	// #8
    2a94:	94000b0c 	bl	56c4 <__utee_check_out_annotation>
    2a98:	2a1303e1 	mov	w1, w19
    2a9c:	aa1403e2 	mov	x2, x20
    2aa0:	aa1603e0 	mov	x0, x22
    2aa4:	9101c3fa 	add	x26, sp, #0x70
    2aa8:	97fffe11 	bl	22ec <copy_param>
    2aac:	910183e1 	add	x1, sp, #0x60
    2ab0:	aa1a03e3 	mov	x3, x26
    2ab4:	9101a3e2 	add	x2, sp, #0x68
    2ab8:	aa1603e0 	mov	x0, x22
    2abc:	97ffff6b 	bl	2868 <map_tmp_param>
    2ac0:	2a0003f3 	mov	w19, w0
    2ac4:	35000260 	cbnz	w0, 2b10 <TEE_OpenTASession+0x10c>
    2ac8:	aa1903e4 	mov	x4, x25
    2acc:	910173e3 	add	x3, sp, #0x5c
    2ad0:	aa1603e2 	mov	x2, x22
    2ad4:	2a1803e1 	mov	w1, w24
    2ad8:	aa1703e0 	mov	x0, x23
    2adc:	97fffd63 	bl	2068 <_utee_open_ta_session>
    2ae0:	aa1603e2 	mov	x2, x22
    2ae4:	2a0003f3 	mov	w19, w0
    2ae8:	aa1a03e1 	mov	x1, x26
    2aec:	aa1403e0 	mov	x0, x20
    2af0:	97fffe97 	bl	254c <update_out_param>
    2af4:	f94033e0 	ldr	x0, [sp, #96]
    2af8:	b40000a0 	cbz	x0, 2b0c <TEE_OpenTASession+0x108>
    2afc:	f94037e1 	ldr	x1, [sp, #104]
    2b00:	94000f45 	bl	6814 <tee_unmap>
    2b04:	34000040 	cbz	w0, 2b0c <TEE_OpenTASession+0x108>
    2b08:	94000a91 	bl	554c <TEE_Panic>
    2b0c:	34000053 	cbz	w19, 2b14 <TEE_OpenTASession+0x110>
    2b10:	b9005fff 	str	wzr, [sp, #92]
    2b14:	f00000a6 	adrp	x6, 19000 <_DYNAMIC>
    2b18:	b9405fe0 	ldr	w0, [sp, #92]
    2b1c:	f90002a0 	str	x0, [x21]
    2b20:	f94098c6 	ldr	x6, [x6, #304]
    2b24:	f9406fe0 	ldr	x0, [sp, #216]
    2b28:	f94000c1 	ldr	x1, [x6]
    2b2c:	eb010000 	subs	x0, x0, x1
    2b30:	d2800001 	mov	x1, #0x0                   	// #0
    2b34:	54000040 	b.eq	2b3c <TEE_OpenTASession+0x138>  // b.none
    2b38:	97fff6d0 	bl	678 <__stack_chk_fail>
    2b3c:	2a1303e0 	mov	w0, w19
    2b40:	a94153f3 	ldp	x19, x20, [sp, #16]
    2b44:	a9425bf5 	ldp	x21, x22, [sp, #32]
    2b48:	a94363f7 	ldp	x23, x24, [sp, #48]
    2b4c:	a9446bf9 	ldp	x25, x26, [sp, #64]
    2b50:	a8ce7bfd 	ldp	x29, x30, [sp], #224
    2b54:	d65f03c0 	ret

0000000000002b58 <__GP11_TEE_OpenTASession>:
__GP11_TEE_OpenTASession():
    2b58:	a9b27bfd 	stp	x29, x30, [sp, #-224]!
    2b5c:	f00000a6 	adrp	x6, 19000 <_DYNAMIC>
    2b60:	910003fd 	mov	x29, sp
    2b64:	f94098c6 	ldr	x6, [x6, #304]
    2b68:	a90153f3 	stp	x19, x20, [sp, #16]
    2b6c:	2a0203f3 	mov	w19, w2
    2b70:	a9025bf5 	stp	x21, x22, [sp, #32]
    2b74:	aa0303f4 	mov	x20, x3
    2b78:	aa0403f5 	mov	x21, x4
    2b7c:	a90363f7 	stp	x23, x24, [sp, #48]
    2b80:	aa0003f7 	mov	x23, x0
    2b84:	2a0103f8 	mov	w24, w1
    2b88:	a9046bf9 	stp	x25, x26, [sp, #64]
    2b8c:	aa0503f9 	mov	x25, x5
    2b90:	f94000c0 	ldr	x0, [x6]
    2b94:	f9006fe0 	str	x0, [sp, #216]
    2b98:	d2800000 	mov	x0, #0x0                   	// #0
    2b9c:	b9005fff 	str	wzr, [sp, #92]
    2ba0:	a9067fff 	stp	xzr, xzr, [sp, #96]
    2ba4:	a9077fff 	stp	xzr, xzr, [sp, #112]
    2ba8:	a9087fff 	stp	xzr, xzr, [sp, #128]
    2bac:	a9097fff 	stp	xzr, xzr, [sp, #144]
    2bb0:	a90a7fff 	stp	xzr, xzr, [sp, #160]
    2bb4:	a90b7fff 	stp	xzr, xzr, [sp, #176]
    2bb8:	a90c7fff 	stp	xzr, xzr, [sp, #192]
    2bbc:	f9006bff 	str	xzr, [sp, #208]
    2bc0:	34000082 	cbz	w2, 2bd0 <__GP11_TEE_OpenTASession+0x78>
    2bc4:	aa0303e0 	mov	x0, x3
    2bc8:	d2800801 	mov	x1, #0x40                  	// #64
    2bcc:	94000ad0 	bl	570c <__utee_check_inout_annotation>
    2bd0:	aa1503e0 	mov	x0, x21
    2bd4:	910243f6 	add	x22, sp, #0x90
    2bd8:	d2800101 	mov	x1, #0x8                   	// #8
    2bdc:	94000aba 	bl	56c4 <__utee_check_out_annotation>
    2be0:	2a1303e1 	mov	w1, w19
    2be4:	aa1403e2 	mov	x2, x20
    2be8:	aa1603e0 	mov	x0, x22
    2bec:	9101c3fa 	add	x26, sp, #0x70
    2bf0:	97fffdda 	bl	2358 <copy_gp11_param>
    2bf4:	910183e1 	add	x1, sp, #0x60
    2bf8:	aa1a03e3 	mov	x3, x26
    2bfc:	9101a3e2 	add	x2, sp, #0x68
    2c00:	aa1603e0 	mov	x0, x22
    2c04:	97ffff19 	bl	2868 <map_tmp_param>
    2c08:	2a0003f3 	mov	w19, w0
    2c0c:	35000260 	cbnz	w0, 2c58 <__GP11_TEE_OpenTASession+0x100>
    2c10:	aa1903e4 	mov	x4, x25
    2c14:	910173e3 	add	x3, sp, #0x5c
    2c18:	aa1603e2 	mov	x2, x22
    2c1c:	2a1803e1 	mov	w1, w24
    2c20:	aa1703e0 	mov	x0, x23
    2c24:	97fffd11 	bl	2068 <_utee_open_ta_session>
    2c28:	aa1603e2 	mov	x2, x22
    2c2c:	2a0003f3 	mov	w19, w0
    2c30:	aa1a03e1 	mov	x1, x26
    2c34:	aa1403e0 	mov	x0, x20
    2c38:	97fffe6e 	bl	25f0 <update_out_gp11_param>
    2c3c:	f94033e0 	ldr	x0, [sp, #96]
    2c40:	b40000a0 	cbz	x0, 2c54 <__GP11_TEE_OpenTASession+0xfc>
    2c44:	f94037e1 	ldr	x1, [sp, #104]
    2c48:	94000ef3 	bl	6814 <tee_unmap>
    2c4c:	34000040 	cbz	w0, 2c54 <__GP11_TEE_OpenTASession+0xfc>
    2c50:	94000a3f 	bl	554c <TEE_Panic>
    2c54:	34000053 	cbz	w19, 2c5c <__GP11_TEE_OpenTASession+0x104>
    2c58:	b9005fff 	str	wzr, [sp, #92]
    2c5c:	f00000a6 	adrp	x6, 19000 <_DYNAMIC>
    2c60:	b9405fe0 	ldr	w0, [sp, #92]
    2c64:	f90002a0 	str	x0, [x21]
    2c68:	f94098c6 	ldr	x6, [x6, #304]
    2c6c:	f9406fe0 	ldr	x0, [sp, #216]
    2c70:	f94000c1 	ldr	x1, [x6]
    2c74:	eb010000 	subs	x0, x0, x1
    2c78:	d2800001 	mov	x1, #0x0                   	// #0
    2c7c:	54000040 	b.eq	2c84 <__GP11_TEE_OpenTASession+0x12c>  // b.none
    2c80:	97fff67e 	bl	678 <__stack_chk_fail>
    2c84:	2a1303e0 	mov	w0, w19
    2c88:	a94153f3 	ldp	x19, x20, [sp, #16]
    2c8c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    2c90:	a94363f7 	ldp	x23, x24, [sp, #48]
    2c94:	a9446bf9 	ldp	x25, x26, [sp, #64]
    2c98:	a8ce7bfd 	ldp	x29, x30, [sp], #224
    2c9c:	d65f03c0 	ret

0000000000002ca0 <TEE_InvokeTACommand>:
TEE_InvokeTACommand():
    2ca0:	a9b27bfd 	stp	x29, x30, [sp, #-224]!
    2ca4:	f00000a6 	adrp	x6, 19000 <_DYNAMIC>
    2ca8:	910003fd 	mov	x29, sp
    2cac:	f94098c6 	ldr	x6, [x6, #304]
    2cb0:	a90153f3 	stp	x19, x20, [sp, #16]
    2cb4:	2a0303f3 	mov	w19, w3
    2cb8:	a9025bf5 	stp	x21, x22, [sp, #32]
    2cbc:	aa0003f6 	mov	x22, x0
    2cc0:	aa0403f5 	mov	x21, x4
    2cc4:	a90363f7 	stp	x23, x24, [sp, #48]
    2cc8:	aa0503f4 	mov	x20, x5
    2ccc:	2a0103f7 	mov	w23, w1
    2cd0:	a9046bf9 	stp	x25, x26, [sp, #64]
    2cd4:	2a0203f8 	mov	w24, w2
    2cd8:	f94000c0 	ldr	x0, [x6]
    2cdc:	f9006fe0 	str	x0, [sp, #216]
    2ce0:	d2800000 	mov	x0, #0x0                   	// #0
    2ce4:	a9067fff 	stp	xzr, xzr, [sp, #96]
    2ce8:	52800060 	mov	w0, #0x3                   	// #3
    2cec:	b9005fe0 	str	w0, [sp, #92]
    2cf0:	a9077fff 	stp	xzr, xzr, [sp, #112]
    2cf4:	a9087fff 	stp	xzr, xzr, [sp, #128]
    2cf8:	a9097fff 	stp	xzr, xzr, [sp, #144]
    2cfc:	a90a7fff 	stp	xzr, xzr, [sp, #160]
    2d00:	a90b7fff 	stp	xzr, xzr, [sp, #176]
    2d04:	a90c7fff 	stp	xzr, xzr, [sp, #192]
    2d08:	f9006bff 	str	xzr, [sp, #208]
    2d0c:	340000e3 	cbz	w3, 2d28 <TEE_InvokeTACommand+0x88>
    2d10:	aa0403e0 	mov	x0, x4
    2d14:	d2800801 	mov	x1, #0x40                  	// #64
    2d18:	94000a7d 	bl	570c <__utee_check_inout_annotation>
    2d1c:	aa1503e1 	mov	x1, x21
    2d20:	2a1303e0 	mov	w0, w19
    2d24:	97fffde0 	bl	24a4 <check_invoke_param>
    2d28:	b4000094 	cbz	x20, 2d38 <TEE_InvokeTACommand+0x98>
    2d2c:	aa1403e0 	mov	x0, x20
    2d30:	d2800081 	mov	x1, #0x4                   	// #4
    2d34:	94000a64 	bl	56c4 <__utee_check_out_annotation>
    2d38:	910243f9 	add	x25, sp, #0x90
    2d3c:	2a1303e1 	mov	w1, w19
    2d40:	aa1503e2 	mov	x2, x21
    2d44:	aa1903e0 	mov	x0, x25
    2d48:	9101c3fa 	add	x26, sp, #0x70
    2d4c:	97fffd68 	bl	22ec <copy_param>
    2d50:	aa1a03e3 	mov	x3, x26
    2d54:	9101a3e2 	add	x2, sp, #0x68
    2d58:	910183e1 	add	x1, sp, #0x60
    2d5c:	aa1903e0 	mov	x0, x25
    2d60:	97fffec2 	bl	2868 <map_tmp_param>
    2d64:	2a0003f3 	mov	w19, w0
    2d68:	35000240 	cbnz	w0, 2db0 <TEE_InvokeTACommand+0x110>
    2d6c:	910173e4 	add	x4, sp, #0x5c
    2d70:	aa1903e3 	mov	x3, x25
    2d74:	2a1803e2 	mov	w2, w24
    2d78:	2a1703e1 	mov	w1, w23
    2d7c:	aa1603e0 	mov	x0, x22
    2d80:	97fffcc0 	bl	2080 <_utee_invoke_ta_command>
    2d84:	aa1903e2 	mov	x2, x25
    2d88:	2a0003f3 	mov	w19, w0
    2d8c:	aa1a03e1 	mov	x1, x26
    2d90:	aa1503e0 	mov	x0, x21
    2d94:	97fffdee 	bl	254c <update_out_param>
    2d98:	f94033e0 	ldr	x0, [sp, #96]
    2d9c:	b40000a0 	cbz	x0, 2db0 <TEE_InvokeTACommand+0x110>
    2da0:	f94037e1 	ldr	x1, [sp, #104]
    2da4:	94000e9c 	bl	6814 <tee_unmap>
    2da8:	34000040 	cbz	w0, 2db0 <TEE_InvokeTACommand+0x110>
    2dac:	940009e8 	bl	554c <TEE_Panic>
    2db0:	b9405fe0 	ldr	w0, [sp, #92]
    2db4:	b4000054 	cbz	x20, 2dbc <TEE_InvokeTACommand+0x11c>
    2db8:	b9000280 	str	w0, [x20]
    2dbc:	7100101f 	cmp	w0, #0x4
    2dc0:	54000140 	b.eq	2de8 <TEE_InvokeTACommand+0x148>  // b.none
    2dc4:	7100027f 	cmp	w19, #0x0
    2dc8:	129ffe60 	mov	w0, #0xffff000c            	// #-65524
    2dcc:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
    2dd0:	540000c0 	b.eq	2de8 <TEE_InvokeTACommand+0x148>  // b.none
    2dd4:	1299fb60 	mov	w0, #0xffff3024            	// #-53212
    2dd8:	6b00027f 	cmp	w19, w0
    2ddc:	54000060 	b.eq	2de8 <TEE_InvokeTACommand+0x148>  // b.none
    2de0:	2a1303e0 	mov	w0, w19
    2de4:	940009da 	bl	554c <TEE_Panic>
    2de8:	f00000a6 	adrp	x6, 19000 <_DYNAMIC>
    2dec:	f94098c6 	ldr	x6, [x6, #304]
    2df0:	f9406fe0 	ldr	x0, [sp, #216]
    2df4:	f94000c1 	ldr	x1, [x6]
    2df8:	eb010000 	subs	x0, x0, x1
    2dfc:	d2800001 	mov	x1, #0x0                   	// #0
    2e00:	54000040 	b.eq	2e08 <TEE_InvokeTACommand+0x168>  // b.none
    2e04:	97fff61d 	bl	678 <__stack_chk_fail>
    2e08:	2a1303e0 	mov	w0, w19
    2e0c:	a94153f3 	ldp	x19, x20, [sp, #16]
    2e10:	a9425bf5 	ldp	x21, x22, [sp, #32]
    2e14:	a94363f7 	ldp	x23, x24, [sp, #48]
    2e18:	a9446bf9 	ldp	x25, x26, [sp, #64]
    2e1c:	a8ce7bfd 	ldp	x29, x30, [sp], #224
    2e20:	d65f03c0 	ret

0000000000002e24 <__GP11_TEE_InvokeTACommand>:
__GP11_TEE_InvokeTACommand():
    2e24:	a9b27bfd 	stp	x29, x30, [sp, #-224]!
    2e28:	f00000a6 	adrp	x6, 19000 <_DYNAMIC>
    2e2c:	910003fd 	mov	x29, sp
    2e30:	f94098c6 	ldr	x6, [x6, #304]
    2e34:	a90153f3 	stp	x19, x20, [sp, #16]
    2e38:	2a0303f3 	mov	w19, w3
    2e3c:	a9025bf5 	stp	x21, x22, [sp, #32]
    2e40:	aa0503f4 	mov	x20, x5
    2e44:	aa0403f5 	mov	x21, x4
    2e48:	a90363f7 	stp	x23, x24, [sp, #48]
    2e4c:	aa0003f7 	mov	x23, x0
    2e50:	2a0103f8 	mov	w24, w1
    2e54:	a9046bf9 	stp	x25, x26, [sp, #64]
    2e58:	2a0203f9 	mov	w25, w2
    2e5c:	f94000c0 	ldr	x0, [x6]
    2e60:	f9006fe0 	str	x0, [sp, #216]
    2e64:	d2800000 	mov	x0, #0x0                   	// #0
    2e68:	a9067fff 	stp	xzr, xzr, [sp, #96]
    2e6c:	52800060 	mov	w0, #0x3                   	// #3
    2e70:	b9005fe0 	str	w0, [sp, #92]
    2e74:	a9077fff 	stp	xzr, xzr, [sp, #112]
    2e78:	a9087fff 	stp	xzr, xzr, [sp, #128]
    2e7c:	a9097fff 	stp	xzr, xzr, [sp, #144]
    2e80:	a90a7fff 	stp	xzr, xzr, [sp, #160]
    2e84:	a90b7fff 	stp	xzr, xzr, [sp, #176]
    2e88:	a90c7fff 	stp	xzr, xzr, [sp, #192]
    2e8c:	f9006bff 	str	xzr, [sp, #208]
    2e90:	34000083 	cbz	w3, 2ea0 <__GP11_TEE_InvokeTACommand+0x7c>
    2e94:	aa0403e0 	mov	x0, x4
    2e98:	d2800801 	mov	x1, #0x40                  	// #64
    2e9c:	94000a1c 	bl	570c <__utee_check_inout_annotation>
    2ea0:	b4000094 	cbz	x20, 2eb0 <__GP11_TEE_InvokeTACommand+0x8c>
    2ea4:	aa1403e0 	mov	x0, x20
    2ea8:	d2800081 	mov	x1, #0x4                   	// #4
    2eac:	94000a06 	bl	56c4 <__utee_check_out_annotation>
    2eb0:	910243f6 	add	x22, sp, #0x90
    2eb4:	2a1303e1 	mov	w1, w19
    2eb8:	aa1503e2 	mov	x2, x21
    2ebc:	aa1603e0 	mov	x0, x22
    2ec0:	9101c3fa 	add	x26, sp, #0x70
    2ec4:	97fffd25 	bl	2358 <copy_gp11_param>
    2ec8:	aa1a03e3 	mov	x3, x26
    2ecc:	9101a3e2 	add	x2, sp, #0x68
    2ed0:	910183e1 	add	x1, sp, #0x60
    2ed4:	aa1603e0 	mov	x0, x22
    2ed8:	97fffe64 	bl	2868 <map_tmp_param>
    2edc:	2a0003f3 	mov	w19, w0
    2ee0:	35000240 	cbnz	w0, 2f28 <__GP11_TEE_InvokeTACommand+0x104>
    2ee4:	910173e4 	add	x4, sp, #0x5c
    2ee8:	aa1603e3 	mov	x3, x22
    2eec:	2a1903e2 	mov	w2, w25
    2ef0:	2a1803e1 	mov	w1, w24
    2ef4:	aa1703e0 	mov	x0, x23
    2ef8:	97fffc62 	bl	2080 <_utee_invoke_ta_command>
    2efc:	aa1603e2 	mov	x2, x22
    2f00:	2a0003f3 	mov	w19, w0
    2f04:	aa1a03e1 	mov	x1, x26
    2f08:	aa1503e0 	mov	x0, x21
    2f0c:	97fffdb9 	bl	25f0 <update_out_gp11_param>
    2f10:	f94033e0 	ldr	x0, [sp, #96]
    2f14:	b40000a0 	cbz	x0, 2f28 <__GP11_TEE_InvokeTACommand+0x104>
    2f18:	f94037e1 	ldr	x1, [sp, #104]
    2f1c:	94000e3e 	bl	6814 <tee_unmap>
    2f20:	34000040 	cbz	w0, 2f28 <__GP11_TEE_InvokeTACommand+0x104>
    2f24:	9400098a 	bl	554c <TEE_Panic>
    2f28:	b9405fe0 	ldr	w0, [sp, #92]
    2f2c:	b4000054 	cbz	x20, 2f34 <__GP11_TEE_InvokeTACommand+0x110>
    2f30:	b9000280 	str	w0, [x20]
    2f34:	7100101f 	cmp	w0, #0x4
    2f38:	54000140 	b.eq	2f60 <__GP11_TEE_InvokeTACommand+0x13c>  // b.none
    2f3c:	7100027f 	cmp	w19, #0x0
    2f40:	129ffe60 	mov	w0, #0xffff000c            	// #-65524
    2f44:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
    2f48:	540000c0 	b.eq	2f60 <__GP11_TEE_InvokeTACommand+0x13c>  // b.none
    2f4c:	1299fb60 	mov	w0, #0xffff3024            	// #-53212
    2f50:	6b00027f 	cmp	w19, w0
    2f54:	54000060 	b.eq	2f60 <__GP11_TEE_InvokeTACommand+0x13c>  // b.none
    2f58:	2a1303e0 	mov	w0, w19
    2f5c:	9400097c 	bl	554c <TEE_Panic>
    2f60:	f00000a6 	adrp	x6, 19000 <_DYNAMIC>
    2f64:	f94098c6 	ldr	x6, [x6, #304]
    2f68:	f9406fe0 	ldr	x0, [sp, #216]
    2f6c:	f94000c1 	ldr	x1, [x6]
    2f70:	eb010000 	subs	x0, x0, x1
    2f74:	d2800001 	mov	x1, #0x0                   	// #0
    2f78:	54000040 	b.eq	2f80 <__GP11_TEE_InvokeTACommand+0x15c>  // b.none
    2f7c:	97fff5bf 	bl	678 <__stack_chk_fail>
    2f80:	2a1303e0 	mov	w0, w19
    2f84:	a94153f3 	ldp	x19, x20, [sp, #16]
    2f88:	a9425bf5 	ldp	x21, x22, [sp, #32]
    2f8c:	a94363f7 	ldp	x23, x24, [sp, #48]
    2f90:	a9446bf9 	ldp	x25, x26, [sp, #64]
    2f94:	a8ce7bfd 	ldp	x29, x30, [sp], #224
    2f98:	d65f03c0 	ret

0000000000002f9c <__GP11_TEE_CheckMemoryAccessRights>:
__GP11_TEE_CheckMemoryAccessRights():
    2f9c:	2a0203e2 	mov	w2, w2
    2fa0:	17fffe10 	b	27e0 <TEE_CheckMemoryAccessRights>

0000000000002fa4 <TEE_SetInstanceData>:
TEE_SetInstanceData():
    2fa4:	f00000a1 	adrp	x1, 19000 <_DYNAMIC>
    2fa8:	f9038020 	str	x0, [x1, #1792]
    2fac:	d65f03c0 	ret

0000000000002fb0 <TEE_GetInstanceData>:
TEE_GetInstanceData():
    2fb0:	f00000a0 	adrp	x0, 19000 <_DYNAMIC>
    2fb4:	f9438000 	ldr	x0, [x0, #1792]
    2fb8:	d65f03c0 	ret

0000000000002fbc <TEE_MemMove>:
TEE_MemMove():
    2fbc:	14002890 	b	d1fc <memmove>

0000000000002fc0 <__GP11_TEE_MemMove>:
__GP11_TEE_MemMove():
    2fc0:	2a0203e2 	mov	w2, w2
    2fc4:	17fffffe 	b	2fbc <TEE_MemMove>

0000000000002fc8 <TEE_MemCompare>:
TEE_MemCompare():
    2fc8:	14002928 	b	d468 <consttime_memcmp>

0000000000002fcc <__GP11_TEE_MemCompare>:
__GP11_TEE_MemCompare():
    2fcc:	2a0203e2 	mov	w2, w2
    2fd0:	17fffffe 	b	2fc8 <TEE_MemCompare>

0000000000002fd4 <TEE_MemFill>:
TEE_MemFill():
    2fd4:	140028a1 	b	d258 <memset>

0000000000002fd8 <__GP11_TEE_MemFill>:
__GP11_TEE_MemFill():
    2fd8:	2a0203e2 	mov	w2, w2
    2fdc:	17fffffe 	b	2fd4 <TEE_MemFill>

0000000000002fe0 <TEE_GetSystemTime>:
TEE_GetSystemTime():
    2fe0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    2fe4:	aa0003e1 	mov	x1, x0
    2fe8:	d2800000 	mov	x0, #0x0                   	// #0
    2fec:	910003fd 	mov	x29, sp
    2ff0:	97fffc36 	bl	20c8 <_utee_get_time>
    2ff4:	34000060 	cbz	w0, 3000 <TEE_GetSystemTime+0x20>
    2ff8:	a8c17bfd 	ldp	x29, x30, [sp], #16
    2ffc:	14000954 	b	554c <TEE_Panic>
    3000:	a8c17bfd 	ldp	x29, x30, [sp], #16
    3004:	d65f03c0 	ret

0000000000003008 <TEE_Wait>:
TEE_Wait():
    3008:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    300c:	2a0003e0 	mov	w0, w0
    3010:	910003fd 	mov	x29, sp
    3014:	f9000bf3 	str	x19, [sp, #16]
    3018:	97fffc29 	bl	20bc <_utee_wait>
    301c:	7100001f 	cmp	w0, #0x0
    3020:	129fffa1 	mov	w1, #0xffff0002            	// #-65534
    3024:	2a0003f3 	mov	w19, w0
    3028:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
    302c:	54000040 	b.eq	3034 <TEE_Wait+0x2c>  // b.none
    3030:	94000947 	bl	554c <TEE_Panic>
    3034:	2a1303e0 	mov	w0, w19
    3038:	f9400bf3 	ldr	x19, [sp, #16]
    303c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    3040:	d65f03c0 	ret

0000000000003044 <TEE_GetTAPersistentTime>:
TEE_GetTAPersistentTime():
    3044:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    3048:	aa0003e1 	mov	x1, x0
    304c:	910003fd 	mov	x29, sp
    3050:	a90153f3 	stp	x19, x20, [sp, #16]
    3054:	aa0003f4 	mov	x20, x0
    3058:	d2800020 	mov	x0, #0x1                   	// #1
    305c:	97fffc1b 	bl	20c8 <_utee_get_time>
    3060:	7100001f 	cmp	w0, #0x0
    3064:	2a0003f3 	mov	w19, w0
    3068:	1a9f07e2 	cset	w2, ne  // ne = any
    306c:	1299fe00 	mov	w0, #0xffff300f            	// #-53233
    3070:	6b00027f 	cmp	w19, w0
    3074:	1a9f07e0 	cset	w0, ne  // ne = any
    3078:	6a000040 	ands	w0, w2, w0
    307c:	54000040 	b.eq	3084 <TEE_GetTAPersistentTime+0x40>  // b.none
    3080:	29007e9f 	stp	wzr, wzr, [x20]
    3084:	11402e61 	add	w1, w19, #0xb, lsl #12
    3088:	7100005f 	cmp	w2, #0x0
    308c:	7a411820 	ccmp	w1, #0x1, #0x0, ne  // ne = any
    3090:	540000e9 	b.ls	30ac <TEE_GetTAPersistentTime+0x68>  // b.plast
    3094:	340000c0 	cbz	w0, 30ac <TEE_GetTAPersistentTime+0x68>
    3098:	129ffe60 	mov	w0, #0xffff000c            	// #-65524
    309c:	6b00027f 	cmp	w19, w0
    30a0:	54000060 	b.eq	30ac <TEE_GetTAPersistentTime+0x68>  // b.none
    30a4:	2a1303e0 	mov	w0, w19
    30a8:	94000929 	bl	554c <TEE_Panic>
    30ac:	2a1303e0 	mov	w0, w19
    30b0:	a94153f3 	ldp	x19, x20, [sp, #16]
    30b4:	a8c27bfd 	ldp	x29, x30, [sp], #32
    30b8:	d65f03c0 	ret

00000000000030bc <TEE_SetTAPersistentTime>:
TEE_SetTAPersistentTime():
    30bc:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    30c0:	910003fd 	mov	x29, sp
    30c4:	f9000bf3 	str	x19, [sp, #16]
    30c8:	97fffc03 	bl	20d4 <_utee_set_ta_time>
    30cc:	7100001f 	cmp	w0, #0x0
    30d0:	129ffe61 	mov	w1, #0xffff000c            	// #-65524
    30d4:	2a0003f3 	mov	w19, w0
    30d8:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
    30dc:	540000a0 	b.eq	30f0 <TEE_SetTAPersistentTime+0x34>  // b.none
    30e0:	1299f7c1 	mov	w1, #0xffff3041            	// #-53183
    30e4:	6b01001f 	cmp	w0, w1
    30e8:	54000040 	b.eq	30f0 <TEE_SetTAPersistentTime+0x34>  // b.none
    30ec:	94000918 	bl	554c <TEE_Panic>
    30f0:	2a1303e0 	mov	w0, w19
    30f4:	f9400bf3 	ldr	x19, [sp, #16]
    30f8:	a8c27bfd 	ldp	x29, x30, [sp], #32
    30fc:	d65f03c0 	ret

0000000000003100 <TEE_GetREETime>:
TEE_GetREETime():
    3100:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    3104:	aa0003e1 	mov	x1, x0
    3108:	d2800040 	mov	x0, #0x2                   	// #2
    310c:	910003fd 	mov	x29, sp
    3110:	97fffbee 	bl	20c8 <_utee_get_time>
    3114:	34000060 	cbz	w0, 3120 <TEE_GetREETime+0x20>
    3118:	a8c17bfd 	ldp	x29, x30, [sp], #16
    311c:	1400090c 	b	554c <TEE_Panic>
    3120:	a8c17bfd 	ldp	x29, x30, [sp], #16
    3124:	d65f03c0 	ret

0000000000003128 <TEE_Malloc>:
TEE_Malloc():
    3128:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    312c:	aa0003e2 	mov	x2, x0
    3130:	910003fd 	mov	x29, sp
    3134:	f9000bf3 	str	x19, [sp, #16]
    3138:	2a0103f3 	mov	w19, w1
    313c:	71000c3f 	cmp	w1, #0x3
    3140:	54000148 	b.hi	3168 <TEE_Malloc+0x40>  // b.pmore
    3144:	51000421 	sub	w1, w1, #0x1
    3148:	7100083f 	cmp	w1, #0x2
    314c:	54000308 	b.hi	31ac <TEE_Malloc+0x84>  // b.pmore
    3150:	900000a0 	adrp	x0, 17000 <__text_end+0x3c08>
    3154:	91146000 	add	x0, x0, #0x518
    3158:	38614800 	ldrb	w0, [x0, w1, uxtw]
    315c:	10000061 	adr	x1, 3168 <TEE_Malloc+0x40>
    3160:	8b208820 	add	x0, x1, w0, sxtb #2
    3164:	d61f0000 	br	x0
    3168:	52b00001 	mov	w1, #0x80000000            	// #-2147483648
    316c:	6b01027f 	cmp	w19, w1
    3170:	540005e0 	b.eq	322c <TEE_Malloc+0x104>  // b.none
    3174:	2a1303e5 	mov	w5, w19
    3178:	900000a4 	adrp	x4, 17000 <__text_end+0x3c08>
    317c:	52800023 	mov	w3, #0x1                   	// #1
    3180:	9131ec84 	add	x4, x4, #0xc7b
    3184:	52800022 	mov	w2, #0x1                   	// #1
    3188:	52805c61 	mov	w1, #0x2e3                 	// #739
    318c:	900000a0 	adrp	x0, 17000 <__text_end+0x3c08>
    3190:	91148000 	add	x0, x0, #0x520
    3194:	97fff4ff 	bl	590 <trace_printf>
    3198:	d2800004 	mov	x4, #0x0                   	// #0
    319c:	aa0403e0 	mov	x0, x4
    31a0:	f9400bf3 	ldr	x19, [sp, #16]
    31a4:	a8c27bfd 	ldp	x29, x30, [sp], #32
    31a8:	d65f03c0 	ret
    31ac:	b40004c0 	cbz	x0, 3244 <TEE_Malloc+0x11c>
    31b0:	f9400bf3 	ldr	x19, [sp, #16]
    31b4:	aa0003e1 	mov	x1, x0
    31b8:	a8c27bfd 	ldp	x29, x30, [sp], #32
    31bc:	d2800020 	mov	x0, #0x1                   	// #1
    31c0:	140026c5 	b	ccd4 <calloc>
    31c4:	52800000 	mov	w0, #0x0                   	// #0
    31c8:	940008e1 	bl	554c <TEE_Panic>
    31cc:	17ffffea 	b	3174 <TEE_Malloc+0x4c>
    31d0:	b4000362 	cbz	x2, 323c <TEE_Malloc+0x114>
    31d4:	d00000a0 	adrp	x0, 19000 <_DYNAMIC>
    31d8:	f940dc00 	ldr	x0, [x0, #440]
    31dc:	f9400004 	ldr	x4, [x0]
    31e0:	b4fffde4 	cbz	x4, 319c <TEE_Malloc+0x74>
    31e4:	f9400bf3 	ldr	x19, [sp, #16]
    31e8:	aa0203e3 	mov	x3, x2
    31ec:	a8c27bfd 	ldp	x29, x30, [sp], #32
    31f0:	d2800022 	mov	x2, #0x1                   	// #1
    31f4:	d2800001 	mov	x1, #0x0                   	// #0
    31f8:	d2800000 	mov	x0, #0x0                   	// #0
    31fc:	14002656 	b	cb54 <raw_calloc>
    3200:	b40001e2 	cbz	x2, 323c <TEE_Malloc+0x114>
    3204:	d00000a0 	adrp	x0, 19000 <_DYNAMIC>
    3208:	f940dc00 	ldr	x0, [x0, #440]
    320c:	f9400004 	ldr	x4, [x0]
    3210:	b4fffc64 	cbz	x4, 319c <TEE_Malloc+0x74>
    3214:	f9400bf3 	ldr	x19, [sp, #16]
    3218:	aa0403e3 	mov	x3, x4
    321c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    3220:	d2800001 	mov	x1, #0x0                   	// #0
    3224:	d2800000 	mov	x0, #0x0                   	// #0
    3228:	14002643 	b	cb34 <raw_malloc>
    322c:	b40000c0 	cbz	x0, 3244 <TEE_Malloc+0x11c>
    3230:	f9400bf3 	ldr	x19, [sp, #16]
    3234:	a8c27bfd 	ldp	x29, x30, [sp], #32
    3238:	140026a0 	b	ccb8 <malloc>
    323c:	d2800044 	mov	x4, #0x2                   	// #2
    3240:	17ffffd7 	b	319c <TEE_Malloc+0x74>
    3244:	d2800024 	mov	x4, #0x1                   	// #1
    3248:	17ffffd5 	b	319c <TEE_Malloc+0x74>

000000000000324c <__GP11_TEE_Malloc>:
__GP11_TEE_Malloc():
    324c:	2a0003e0 	mov	w0, w0
    3250:	17ffffb6 	b	3128 <TEE_Malloc>

0000000000003254 <TEE_Free>:
TEE_Free():
    3254:	d1000401 	sub	x1, x0, #0x1
    3258:	f100043f 	cmp	x1, #0x1
    325c:	540002a9 	b.ls	32b0 <TEE_Free+0x5c>  // b.plast
    3260:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    3264:	d2800021 	mov	x1, #0x1                   	// #1
    3268:	910003fd 	mov	x29, sp
    326c:	f9000bf3 	str	x19, [sp, #16]
    3270:	aa0003f3 	mov	x19, x0
    3274:	97fffc7b 	bl	2460 <buf_overlaps_no_share_heap>
    3278:	72001c1f 	tst	w0, #0xff
    327c:	54000120 	b.eq	32a0 <TEE_Free+0x4c>  // b.none
    3280:	d00000a0 	adrp	x0, 19000 <_DYNAMIC>
    3284:	52800002 	mov	w2, #0x0                   	// #0
    3288:	f940dc00 	ldr	x0, [x0, #440]
    328c:	f9400001 	ldr	x1, [x0]
    3290:	aa1303e0 	mov	x0, x19
    3294:	f9400bf3 	ldr	x19, [sp, #16]
    3298:	a8c27bfd 	ldp	x29, x30, [sp], #32
    329c:	1400262a 	b	cb44 <raw_free>
    32a0:	aa1303e0 	mov	x0, x19
    32a4:	f9400bf3 	ldr	x19, [sp, #16]
    32a8:	a8c27bfd 	ldp	x29, x30, [sp], #32
    32ac:	140026a7 	b	cd48 <free>
    32b0:	d65f03c0 	ret

00000000000032b4 <TEE_Realloc>:
TEE_Realloc():
    32b4:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    32b8:	910003fd 	mov	x29, sp
    32bc:	a90153f3 	stp	x19, x20, [sp, #16]
    32c0:	aa0003f3 	mov	x19, x0
    32c4:	f90013f5 	str	x21, [sp, #32]
    32c8:	b50001a1 	cbnz	x1, 32fc <TEE_Realloc+0x48>
    32cc:	d2800021 	mov	x1, #0x1                   	// #1
    32d0:	97fffc64 	bl	2460 <buf_overlaps_no_share_heap>
    32d4:	72001c1f 	tst	w0, #0xff
    32d8:	aa1303e0 	mov	x0, x19
    32dc:	9a9f07f4 	cset	x20, ne  // ne = any
    32e0:	91000694 	add	x20, x20, #0x1
    32e4:	97ffffdc 	bl	3254 <TEE_Free>
    32e8:	aa1403e0 	mov	x0, x20
    32ec:	a94153f3 	ldp	x19, x20, [sp, #16]
    32f0:	f94013f5 	ldr	x21, [sp, #32]
    32f4:	a8c37bfd 	ldp	x29, x30, [sp], #48
    32f8:	d65f03c0 	ret
    32fc:	f100041f 	cmp	x0, #0x1
    3300:	540000a1 	b.ne	3314 <TEE_Realloc+0x60>  // b.any
    3304:	a94153f3 	ldp	x19, x20, [sp, #16]
    3308:	f94013f5 	ldr	x21, [sp, #32]
    330c:	a8c37bfd 	ldp	x29, x30, [sp], #48
    3310:	14002671 	b	ccd4 <calloc>
    3314:	aa0103f5 	mov	x21, x1
    3318:	f100081f 	cmp	x0, #0x2
    331c:	540001c1 	b.ne	3354 <TEE_Realloc+0xa0>  // b.any
    3320:	d00000a0 	adrp	x0, 19000 <_DYNAMIC>
    3324:	f940dc00 	ldr	x0, [x0, #440]
    3328:	f9400014 	ldr	x20, [x0]
    332c:	b4fffdf4 	cbz	x20, 32e8 <TEE_Realloc+0x34>
    3330:	aa1403e4 	mov	x4, x20
    3334:	aa0103e3 	mov	x3, x1
    3338:	a94153f3 	ldp	x19, x20, [sp, #16]
    333c:	d2800022 	mov	x2, #0x1                   	// #1
    3340:	f94013f5 	ldr	x21, [sp, #32]
    3344:	d2800001 	mov	x1, #0x0                   	// #0
    3348:	a8c37bfd 	ldp	x29, x30, [sp], #48
    334c:	d2800000 	mov	x0, #0x0                   	// #0
    3350:	14002601 	b	cb54 <raw_calloc>
    3354:	d2800021 	mov	x1, #0x1                   	// #1
    3358:	97fffc42 	bl	2460 <buf_overlaps_no_share_heap>
    335c:	72001c1f 	tst	w0, #0xff
    3360:	54000180 	b.eq	3390 <TEE_Realloc+0xdc>  // b.none
    3364:	d00000a0 	adrp	x0, 19000 <_DYNAMIC>
    3368:	aa1503e3 	mov	x3, x21
    336c:	f94013f5 	ldr	x21, [sp, #32]
    3370:	d2800002 	mov	x2, #0x0                   	// #0
    3374:	f940dc00 	ldr	x0, [x0, #440]
    3378:	d2800001 	mov	x1, #0x0                   	// #0
    337c:	f9400004 	ldr	x4, [x0]
    3380:	aa1303e0 	mov	x0, x19
    3384:	a94153f3 	ldp	x19, x20, [sp, #16]
    3388:	a8c37bfd 	ldp	x29, x30, [sp], #48
    338c:	1400260e 	b	cbc4 <raw_realloc>
    3390:	aa1503e1 	mov	x1, x21
    3394:	aa1303e0 	mov	x0, x19
    3398:	a94153f3 	ldp	x19, x20, [sp, #16]
    339c:	f94013f5 	ldr	x21, [sp, #32]
    33a0:	a8c37bfd 	ldp	x29, x30, [sp], #48
    33a4:	14002654 	b	ccf4 <realloc>

00000000000033a8 <__GP11_TEE_Realloc>:
__GP11_TEE_Realloc():
    33a8:	2a0103e1 	mov	w1, w1
    33ac:	17ffffc2 	b	32b4 <TEE_Realloc>

00000000000033b0 <TEE_CacheClean>:
TEE_CacheClean():
    33b0:	d2800002 	mov	x2, #0x0                   	// #0
    33b4:	17fffbc3 	b	22c0 <_utee_cache_operation>

00000000000033b8 <TEE_CacheFlush>:
TEE_CacheFlush():
    33b8:	d2800022 	mov	x2, #0x1                   	// #1
    33bc:	17fffbc1 	b	22c0 <_utee_cache_operation>

00000000000033c0 <TEE_CacheInvalidate>:
TEE_CacheInvalidate():
    33c0:	d2800042 	mov	x2, #0x2                   	// #2
    33c4:	17fffbbf 	b	22c0 <_utee_cache_operation>

00000000000033c8 <api_panic>:
api_panic():
    33c8:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    33cc:	aa0203e3 	mov	x3, x2
    33d0:	2a0103e2 	mov	w2, w1
    33d4:	aa0003e1 	mov	x1, x0
    33d8:	910003fd 	mov	x29, sp
    33dc:	900000a0 	adrp	x0, 17000 <__text_end+0x3c08>
    33e0:	91323000 	add	x0, x0, #0xc8c
    33e4:	97fff84e 	bl	151c <printf>
    33e8:	528c24e0 	mov	w0, #0x6127                	// #24871
    33ec:	72a01620 	movk	w0, #0xb1, lsl #16
    33f0:	94000857 	bl	554c <TEE_Panic>
    33f4:	14000000 	b	33f4 <api_panic+0x2c>

00000000000033f8 <mpi_panic>:
mpi_panic():
    33f8:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    33fc:	2a0203e3 	mov	w3, w2
    3400:	2a0103e2 	mov	w2, w1
    3404:	aa0003e1 	mov	x1, x0
    3408:	910003fd 	mov	x29, sp
    340c:	900000a0 	adrp	x0, 17000 <__text_end+0x3c08>
    3410:	9132b000 	add	x0, x0, #0xcac
    3414:	97fff842 	bl	151c <printf>
    3418:	528c24e0 	mov	w0, #0x6127                	// #24871
    341c:	72a01620 	movk	w0, #0xb1, lsl #16
    3420:	9400084b 	bl	554c <TEE_Panic>
    3424:	14000000 	b	3424 <mpi_panic+0x2c>

0000000000003428 <get_mpi>:
get_mpi():
    3428:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    342c:	910003fd 	mov	x29, sp
    3430:	a90153f3 	stp	x19, x20, [sp, #16]
    3434:	aa0103f3 	mov	x19, x1
    3438:	a9025bf5 	stp	x21, x22, [sp, #32]
    343c:	aa0003f5 	mov	x21, x0
    3440:	94000f38 	bl	7120 <mbedtls_mpi_init_mempool>
    3444:	b4000373 	cbz	x19, 34b0 <get_mpi+0x88>
    3448:	79400e74 	ldrh	w20, [x19, #6]
    344c:	91002276 	add	x22, x19, #0x8
    3450:	91001261 	add	x1, x19, #0x4
    3454:	b4000074 	cbz	x20, 3460 <get_mpi+0x38>
    3458:	b8747820 	ldr	w0, [x1, x20, lsl #2]
    345c:	34000140 	cbz	w0, 3484 <get_mpi+0x5c>
    3460:	aa1403e1 	mov	x1, x20
    3464:	aa1503e0 	mov	x0, x21
    3468:	94000f53 	bl	71b4 <mbedtls_mpi_grow>
    346c:	2a0003e2 	mov	w2, w0
    3470:	340000e0 	cbz	w0, 348c <get_mpi+0x64>
    3474:	900000a0 	adrp	x0, 17000 <__text_end+0x3c08>
    3478:	52800e01 	mov	w1, #0x70                  	// #112
    347c:	91355400 	add	x0, x0, #0xd55
    3480:	97ffffde 	bl	33f8 <mpi_panic>
    3484:	d1000694 	sub	x20, x20, #0x1
    3488:	17fffff3 	b	3454 <get_mpi+0x2c>
    348c:	b9400260 	ldr	w0, [x19]
    3490:	d37ef682 	lsl	x2, x20, #2
    3494:	a94153f3 	ldp	x19, x20, [sp, #16]
    3498:	b90002a0 	str	w0, [x21]
    349c:	aa1603e1 	mov	x1, x22
    34a0:	f9400aa0 	ldr	x0, [x21, #16]
    34a4:	a9425bf5 	ldp	x21, x22, [sp, #32]
    34a8:	a8c37bfd 	ldp	x29, x30, [sp], #48
    34ac:	17fff2d5 	b	0 <memcpy>
    34b0:	a94153f3 	ldp	x19, x20, [sp, #16]
    34b4:	a9425bf5 	ldp	x21, x22, [sp, #32]
    34b8:	a8c37bfd 	ldp	x29, x30, [sp], #48
    34bc:	d65f03c0 	ret

00000000000034c0 <copy_mpi_to_bigint>:
copy_mpi_to_bigint():
    34c0:	aa0003e4 	mov	x4, x0
    34c4:	aa0103e0 	mov	x0, x1
    34c8:	a9408482 	ldp	x2, x1, [x4, #8]
    34cc:	aa0203e3 	mov	x3, x2
    34d0:	b40000e3 	cbz	x3, 34ec <copy_mpi_to_bigint+0x2c>
    34d4:	8b030825 	add	x5, x1, x3, lsl #2
    34d8:	b85fc0a5 	ldur	w5, [x5, #-4]
    34dc:	340001c5 	cbz	w5, 3514 <copy_mpi_to_bigint+0x54>
    34e0:	79400805 	ldrh	w5, [x0, #4]
    34e4:	eb0300bf 	cmp	x5, x3
    34e8:	540001a3 	b.cc	351c <copy_mpi_to_bigint+0x5c>  // b.lo, b.ul, b.last
    34ec:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    34f0:	d37ef442 	lsl	x2, x2, #2
    34f4:	910003fd 	mov	x29, sp
    34f8:	79000c03 	strh	w3, [x0, #6]
    34fc:	b9400083 	ldr	w3, [x4]
    3500:	b8008403 	str	w3, [x0], #8
    3504:	97fff2bf 	bl	0 <memcpy>
    3508:	52800000 	mov	w0, #0x0                   	// #0
    350c:	a8c17bfd 	ldp	x29, x30, [sp], #16
    3510:	d65f03c0 	ret
    3514:	d1000463 	sub	x3, x3, #0x1
    3518:	17ffffee 	b	34d0 <copy_mpi_to_bigint+0x10>
    351c:	1299fe00 	mov	w0, #0xffff300f            	// #-53233
    3520:	d65f03c0 	ret

0000000000003524 <bigint_binary>:
bigint_binary():
    3524:	a9b47bfd 	stp	x29, x30, [sp, #-192]!
    3528:	d00000a4 	adrp	x4, 19000 <_DYNAMIC>
    352c:	910003fd 	mov	x29, sp
    3530:	f9409884 	ldr	x4, [x4, #304]
    3534:	a90153f3 	stp	x19, x20, [sp, #16]
    3538:	aa0003f4 	mov	x20, x0
    353c:	a9025bf5 	stp	x21, x22, [sp, #32]
    3540:	910163f3 	add	x19, sp, #0x58
    3544:	aa0203f5 	mov	x21, x2
    3548:	a90363f7 	stp	x23, x24, [sp, #48]
    354c:	aa0103f7 	mov	x23, x1
    3550:	aa1403e1 	mov	x1, x20
    3554:	a9046bf9 	stp	x25, x26, [sp, #64]
    3558:	aa0303f9 	mov	x25, x3
    355c:	9101e3fa 	add	x26, sp, #0x78
    3560:	f9400080 	ldr	x0, [x4]
    3564:	f9005fe0 	str	x0, [sp, #184]
    3568:	d2800000 	mov	x0, #0x0                   	// #0
    356c:	aa1303e0 	mov	x0, x19
    3570:	97ffffae 	bl	3428 <get_mpi>
    3574:	eb17029f 	cmp	x20, x23
    3578:	54000320 	b.eq	35dc <bigint_binary+0xb8>  // b.none
    357c:	aa1a03f6 	mov	x22, x26
    3580:	aa1703e1 	mov	x1, x23
    3584:	aa1a03e0 	mov	x0, x26
    3588:	97ffffa8 	bl	3428 <get_mpi>
    358c:	eb15029f 	cmp	x20, x21
    3590:	910263f8 	add	x24, sp, #0x98
    3594:	54000280 	b.eq	35e4 <bigint_binary+0xc0>  // b.none
    3598:	eb1502ff 	cmp	x23, x21
    359c:	54000280 	b.eq	35ec <bigint_binary+0xc8>  // b.none
    35a0:	aa1503e1 	mov	x1, x21
    35a4:	aa1803f5 	mov	x21, x24
    35a8:	aa1803e0 	mov	x0, x24
    35ac:	97ffff9f 	bl	3428 <get_mpi>
    35b0:	aa1503e2 	mov	x2, x21
    35b4:	aa1603e1 	mov	x1, x22
    35b8:	aa1303e0 	mov	x0, x19
    35bc:	d63f0320 	blr	x25
    35c0:	2a0003e2 	mov	w2, w0
    35c4:	34000180 	cbz	w0, 35f4 <bigint_binary+0xd0>
    35c8:	528034e1 	mov	w1, #0x1a7                 	// #423
    35cc:	900000a0 	adrp	x0, 17000 <__text_end+0x3c08>
    35d0:	91355400 	add	x0, x0, #0xd55
    35d4:	91002000 	add	x0, x0, #0x8
    35d8:	97ffff88 	bl	33f8 <mpi_panic>
    35dc:	aa1303f6 	mov	x22, x19
    35e0:	17ffffeb 	b	358c <bigint_binary+0x68>
    35e4:	aa1303f5 	mov	x21, x19
    35e8:	17fffff2 	b	35b0 <bigint_binary+0x8c>
    35ec:	aa1603f5 	mov	x21, x22
    35f0:	17fffff0 	b	35b0 <bigint_binary+0x8c>
    35f4:	aa1403e1 	mov	x1, x20
    35f8:	aa1303e0 	mov	x0, x19
    35fc:	97ffffb1 	bl	34c0 <copy_mpi_to_bigint>
    3600:	2a0003e2 	mov	w2, w0
    3604:	34000060 	cbz	w0, 3610 <bigint_binary+0xec>
    3608:	52803521 	mov	w1, #0x1a9                 	// #425
    360c:	17fffff0 	b	35cc <bigint_binary+0xa8>
    3610:	aa1303e0 	mov	x0, x19
    3614:	94000ecd 	bl	7148 <mbedtls_mpi_free>
    3618:	eb1a02df 	cmp	x22, x26
    361c:	54000061 	b.ne	3628 <bigint_binary+0x104>  // b.any
    3620:	aa1603e0 	mov	x0, x22
    3624:	94000ec9 	bl	7148 <mbedtls_mpi_free>
    3628:	eb1802bf 	cmp	x21, x24
    362c:	54000061 	b.ne	3638 <bigint_binary+0x114>  // b.any
    3630:	aa1503e0 	mov	x0, x21
    3634:	94000ec5 	bl	7148 <mbedtls_mpi_free>
    3638:	d00000a4 	adrp	x4, 19000 <_DYNAMIC>
    363c:	f9409884 	ldr	x4, [x4, #304]
    3640:	f9405fe0 	ldr	x0, [sp, #184]
    3644:	f9400081 	ldr	x1, [x4]
    3648:	eb010000 	subs	x0, x0, x1
    364c:	d2800001 	mov	x1, #0x0                   	// #0
    3650:	54000040 	b.eq	3658 <bigint_binary+0x134>  // b.none
    3654:	97fff409 	bl	678 <__stack_chk_fail>
    3658:	a94153f3 	ldp	x19, x20, [sp, #16]
    365c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    3660:	a94363f7 	ldp	x23, x24, [sp, #48]
    3664:	a9446bf9 	ldp	x25, x26, [sp, #64]
    3668:	a8cc7bfd 	ldp	x29, x30, [sp], #192
    366c:	d65f03c0 	ret

0000000000003670 <mpi_is_odd>:
mpi_is_odd():
    3670:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    3674:	d2800001 	mov	x1, #0x0                   	// #0
    3678:	910003fd 	mov	x29, sp
    367c:	94000fd9 	bl	75e0 <mbedtls_mpi_get_bit>
    3680:	7100001f 	cmp	w0, #0x0
    3684:	1a9f07e0 	cset	w0, ne  // ne = any
    3688:	a8c17bfd 	ldp	x29, x30, [sp], #16
    368c:	d65f03c0 	ret

0000000000003690 <rng_read>:
rng_read():
    3690:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    3694:	aa0103e0 	mov	x0, x1
    3698:	aa0203e1 	mov	x1, x2
    369c:	910003fd 	mov	x29, sp
    36a0:	97fffac6 	bl	21b8 <_utee_cryp_random_number_generate>
    36a4:	7100001f 	cmp	w0, #0x0
    36a8:	a8c17bfd 	ldp	x29, x30, [sp], #16
    36ac:	12800020 	mov	w0, #0xfffffffe            	// #-2
    36b0:	1a9f1000 	csel	w0, w0, wzr, ne  // ne = any
    36b4:	d65f03c0 	ret

00000000000036b8 <mpi_egcd>:
mpi_egcd():
    36b8:	a9aa7bfd 	stp	x29, x30, [sp, #-352]!
    36bc:	910003fd 	mov	x29, sp
    36c0:	a9025bf5 	stp	x21, x22, [sp, #32]
    36c4:	aa0003f5 	mov	x21, x0
    36c8:	d00000a0 	adrp	x0, 19000 <_DYNAMIC>
    36cc:	a90153f3 	stp	x19, x20, [sp, #16]
    36d0:	9102e3f4 	add	x20, sp, #0xb8
    36d4:	910363f3 	add	x19, sp, #0xd8
    36d8:	f9409800 	ldr	x0, [x0, #304]
    36dc:	a90363f7 	stp	x23, x24, [sp, #48]
    36e0:	9101e3f8 	add	x24, sp, #0x78
    36e4:	a9046bf9 	stp	x25, x26, [sp, #64]
    36e8:	910263f7 	add	x23, sp, #0x98
    36ec:	9103e3fa 	add	x26, sp, #0xf8
    36f0:	a90573fb 	stp	x27, x28, [sp, #80]
    36f4:	aa0103fb 	mov	x27, x1
    36f8:	aa0303fc 	mov	x28, x3
    36fc:	a90613e2 	stp	x2, x4, [sp, #96]
    3700:	910463f9 	add	x25, sp, #0x118
    3704:	9104e3f6 	add	x22, sp, #0x138
    3708:	f9400001 	ldr	x1, [x0]
    370c:	f900afe1 	str	x1, [sp, #344]
    3710:	d2800001 	mov	x1, #0x0                   	// #0
    3714:	aa1803e0 	mov	x0, x24
    3718:	94000e82 	bl	7120 <mbedtls_mpi_init_mempool>
    371c:	aa1703e0 	mov	x0, x23
    3720:	94000e80 	bl	7120 <mbedtls_mpi_init_mempool>
    3724:	aa1403e0 	mov	x0, x20
    3728:	94000e7e 	bl	7120 <mbedtls_mpi_init_mempool>
    372c:	aa1303e0 	mov	x0, x19
    3730:	94000e7c 	bl	7120 <mbedtls_mpi_init_mempool>
    3734:	aa1a03e0 	mov	x0, x26
    3738:	94000e7a 	bl	7120 <mbedtls_mpi_init_mempool>
    373c:	aa1903e0 	mov	x0, x25
    3740:	94000e78 	bl	7120 <mbedtls_mpi_init_mempool>
    3744:	aa1603e0 	mov	x0, x22
    3748:	94000e76 	bl	7120 <mbedtls_mpi_init_mempool>
    374c:	f94037e0 	ldr	x0, [sp, #104]
    3750:	52800001 	mov	w1, #0x0                   	// #0
    3754:	940010d0 	bl	7a94 <mbedtls_mpi_cmp_int>
    3758:	35000320 	cbnz	w0, 37bc <mpi_egcd+0x104>
    375c:	aa1b03e0 	mov	x0, x27
    3760:	52800021 	mov	w1, #0x1                   	// #1
    3764:	94000f85 	bl	7578 <mbedtls_mpi_lset>
    3768:	2a0003e2 	mov	w2, w0
    376c:	340000c0 	cbz	w0, 3784 <mpi_egcd+0xcc>
    3770:	52805de1 	mov	w1, #0x2ef                 	// #751
    3774:	900000a0 	adrp	x0, 17000 <__text_end+0x3c08>
    3778:	91355400 	add	x0, x0, #0xd55
    377c:	91005800 	add	x0, x0, #0x16
    3780:	97ffff1e 	bl	33f8 <mpi_panic>
    3784:	f94033e0 	ldr	x0, [sp, #96]
    3788:	52800001 	mov	w1, #0x0                   	// #0
    378c:	94000f7b 	bl	7578 <mbedtls_mpi_lset>
    3790:	2a0003e2 	mov	w2, w0
    3794:	34000060 	cbz	w0, 37a0 <mpi_egcd+0xe8>
    3798:	52805e01 	mov	w1, #0x2f0                 	// #752
    379c:	17fffff6 	b	3774 <mpi_egcd+0xbc>
    37a0:	aa1c03e1 	mov	x1, x28
    37a4:	aa1503e0 	mov	x0, x21
    37a8:	94000f1e 	bl	7420 <mbedtls_mpi_copy>
    37ac:	2a0003e2 	mov	w2, w0
    37b0:	34002040 	cbz	w0, 3bb8 <mpi_egcd+0x500>
    37b4:	52805e21 	mov	w1, #0x2f1                 	// #753
    37b8:	17ffffef 	b	3774 <mpi_egcd+0xbc>
    37bc:	aa1c03e1 	mov	x1, x28
    37c0:	aa1a03e0 	mov	x0, x26
    37c4:	94000f17 	bl	7420 <mbedtls_mpi_copy>
    37c8:	2a0003e2 	mov	w2, w0
    37cc:	34000060 	cbz	w0, 37d8 <mpi_egcd+0x120>
    37d0:	52805ea1 	mov	w1, #0x2f5                 	// #757
    37d4:	17ffffe8 	b	3774 <mpi_egcd+0xbc>
    37d8:	f94037e1 	ldr	x1, [sp, #104]
    37dc:	aa1903e0 	mov	x0, x25
    37e0:	5280001c 	mov	w28, #0x0                   	// #0
    37e4:	94000f0f 	bl	7420 <mbedtls_mpi_copy>
    37e8:	2a0003e2 	mov	w2, w0
    37ec:	34000140 	cbz	w0, 3814 <mpi_egcd+0x15c>
    37f0:	52805ec1 	mov	w1, #0x2f6                 	// #758
    37f4:	17ffffe0 	b	3774 <mpi_egcd+0xbc>
    37f8:	aa1903e0 	mov	x0, x25
    37fc:	d2800021 	mov	x1, #0x1                   	// #1
    3800:	9400103e 	bl	78f8 <mbedtls_mpi_shift_r>
    3804:	2a0003e2 	mov	w2, w0
    3808:	34000060 	cbz	w0, 3814 <mpi_egcd+0x15c>
    380c:	52805f81 	mov	w1, #0x2fc                 	// #764
    3810:	17ffffd9 	b	3774 <mpi_egcd+0xbc>
    3814:	aa1a03e0 	mov	x0, x26
    3818:	97ffff96 	bl	3670 <mpi_is_odd>
    381c:	72001c1f 	tst	w0, #0xff
    3820:	54000100 	b.eq	3840 <mpi_egcd+0x188>  // b.none
    3824:	aa1a03e1 	mov	x1, x26
    3828:	aa1603e0 	mov	x0, x22
    382c:	94000efd 	bl	7420 <mbedtls_mpi_copy>
    3830:	2a0003e2 	mov	w2, w0
    3834:	340001e0 	cbz	w0, 3870 <mpi_egcd+0x1b8>
    3838:	52805fe1 	mov	w1, #0x2ff                 	// #767
    383c:	17ffffce 	b	3774 <mpi_egcd+0xbc>
    3840:	aa1903e0 	mov	x0, x25
    3844:	97ffff8b 	bl	3670 <mpi_is_odd>
    3848:	72001c1f 	tst	w0, #0xff
    384c:	54fffec1 	b.ne	3824 <mpi_egcd+0x16c>  // b.any
    3850:	aa1a03e0 	mov	x0, x26
    3854:	d2800021 	mov	x1, #0x1                   	// #1
    3858:	1100079c 	add	w28, w28, #0x1
    385c:	94001027 	bl	78f8 <mbedtls_mpi_shift_r>
    3860:	2a0003e2 	mov	w2, w0
    3864:	34fffca0 	cbz	w0, 37f8 <mpi_egcd+0x140>
    3868:	52805f61 	mov	w1, #0x2fb                 	// #763
    386c:	17ffffc2 	b	3774 <mpi_egcd+0xbc>
    3870:	aa1903e1 	mov	x1, x25
    3874:	aa1503e0 	mov	x0, x21
    3878:	94000eea 	bl	7420 <mbedtls_mpi_copy>
    387c:	2a0003e2 	mov	w2, w0
    3880:	34000060 	cbz	w0, 388c <mpi_egcd+0x1d4>
    3884:	52806001 	mov	w1, #0x300                 	// #768
    3888:	17ffffbb 	b	3774 <mpi_egcd+0xbc>
    388c:	aa1803e0 	mov	x0, x24
    3890:	52800021 	mov	w1, #0x1                   	// #1
    3894:	94000f39 	bl	7578 <mbedtls_mpi_lset>
    3898:	2a0003e2 	mov	w2, w0
    389c:	34000060 	cbz	w0, 38a8 <mpi_egcd+0x1f0>
    38a0:	52806021 	mov	w1, #0x301                 	// #769
    38a4:	17ffffb4 	b	3774 <mpi_egcd+0xbc>
    38a8:	aa1703e0 	mov	x0, x23
    38ac:	52800001 	mov	w1, #0x0                   	// #0
    38b0:	94000f32 	bl	7578 <mbedtls_mpi_lset>
    38b4:	2a0003e2 	mov	w2, w0
    38b8:	34000060 	cbz	w0, 38c4 <mpi_egcd+0x20c>
    38bc:	52806041 	mov	w1, #0x302                 	// #770
    38c0:	17ffffad 	b	3774 <mpi_egcd+0xbc>
    38c4:	aa1403e0 	mov	x0, x20
    38c8:	52800001 	mov	w1, #0x0                   	// #0
    38cc:	94000f2b 	bl	7578 <mbedtls_mpi_lset>
    38d0:	2a0003e2 	mov	w2, w0
    38d4:	34000060 	cbz	w0, 38e0 <mpi_egcd+0x228>
    38d8:	52806061 	mov	w1, #0x303                 	// #771
    38dc:	17ffffa6 	b	3774 <mpi_egcd+0xbc>
    38e0:	aa1303e0 	mov	x0, x19
    38e4:	52800021 	mov	w1, #0x1                   	// #1
    38e8:	94000f24 	bl	7578 <mbedtls_mpi_lset>
    38ec:	2a0003e2 	mov	w2, w0
    38f0:	34001320 	cbz	w0, 3b54 <mpi_egcd+0x49c>
    38f4:	52806081 	mov	w1, #0x304                 	// #772
    38f8:	17ffff9f 	b	3774 <mpi_egcd+0xbc>
    38fc:	aa1603e0 	mov	x0, x22
    3900:	d2800021 	mov	x1, #0x1                   	// #1
    3904:	94000ffd 	bl	78f8 <mbedtls_mpi_shift_r>
    3908:	2a0003e2 	mov	w2, w0
    390c:	34000060 	cbz	w0, 3918 <mpi_egcd+0x260>
    3910:	52806101 	mov	w1, #0x308                 	// #776
    3914:	17ffff98 	b	3774 <mpi_egcd+0xbc>
    3918:	aa1803e0 	mov	x0, x24
    391c:	97ffff55 	bl	3670 <mpi_is_odd>
    3920:	72001c1f 	tst	w0, #0xff
    3924:	54000120 	b.eq	3948 <mpi_egcd+0x290>  // b.none
    3928:	aa1903e2 	mov	x2, x25
    392c:	aa1803e1 	mov	x1, x24
    3930:	aa1803e0 	mov	x0, x24
    3934:	94001122 	bl	7dbc <mbedtls_mpi_add_mpi>
    3938:	2a0003e2 	mov	w2, w0
    393c:	340001c0 	cbz	w0, 3974 <mpi_egcd+0x2bc>
    3940:	52806141 	mov	w1, #0x30a                 	// #778
    3944:	17ffff8c 	b	3774 <mpi_egcd+0xbc>
    3948:	aa1703e0 	mov	x0, x23
    394c:	97ffff49 	bl	3670 <mpi_is_odd>
    3950:	72001c1f 	tst	w0, #0xff
    3954:	54fffea1 	b.ne	3928 <mpi_egcd+0x270>  // b.any
    3958:	aa1803e0 	mov	x0, x24
    395c:	d2800021 	mov	x1, #0x1                   	// #1
    3960:	94000fe6 	bl	78f8 <mbedtls_mpi_shift_r>
    3964:	2a0003e2 	mov	w2, w0
    3968:	34000160 	cbz	w0, 3994 <mpi_egcd+0x2dc>
    396c:	528061a1 	mov	w1, #0x30d                 	// #781
    3970:	17ffff81 	b	3774 <mpi_egcd+0xbc>
    3974:	aa1a03e2 	mov	x2, x26
    3978:	aa1703e1 	mov	x1, x23
    397c:	aa1703e0 	mov	x0, x23
    3980:	94001111 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    3984:	2a0003e2 	mov	w2, w0
    3988:	34fffe80 	cbz	w0, 3958 <mpi_egcd+0x2a0>
    398c:	52806161 	mov	w1, #0x30b                 	// #779
    3990:	17ffff79 	b	3774 <mpi_egcd+0xbc>
    3994:	aa1703e0 	mov	x0, x23
    3998:	d2800021 	mov	x1, #0x1                   	// #1
    399c:	94000fd7 	bl	78f8 <mbedtls_mpi_shift_r>
    39a0:	2a0003e2 	mov	w2, w0
    39a4:	34000060 	cbz	w0, 39b0 <mpi_egcd+0x2f8>
    39a8:	528061c1 	mov	w1, #0x30e                 	// #782
    39ac:	17ffff72 	b	3774 <mpi_egcd+0xbc>
    39b0:	aa1603e0 	mov	x0, x22
    39b4:	97ffff2f 	bl	3670 <mpi_is_odd>
    39b8:	72001c1f 	tst	w0, #0xff
    39bc:	54fffa00 	b.eq	38fc <mpi_egcd+0x244>  // b.none
    39c0:	aa1503e0 	mov	x0, x21
    39c4:	97ffff2b 	bl	3670 <mpi_is_odd>
    39c8:	72001c1f 	tst	w0, #0xff
    39cc:	540001a0 	b.eq	3a00 <mpi_egcd+0x348>  // b.none
    39d0:	aa1503e1 	mov	x1, x21
    39d4:	aa1603e0 	mov	x0, x22
    39d8:	94000ffb 	bl	79c4 <mbedtls_mpi_cmp_mpi>
    39dc:	37f808c0 	tbnz	w0, #31, 3af4 <mpi_egcd+0x43c>
    39e0:	aa1503e2 	mov	x2, x21
    39e4:	aa1603e1 	mov	x1, x22
    39e8:	aa1603e0 	mov	x0, x22
    39ec:	940010f6 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    39f0:	2a0003e2 	mov	w2, w0
    39f4:	34000600 	cbz	w0, 3ab4 <mpi_egcd+0x3fc>
    39f8:	528063a1 	mov	w1, #0x31d                 	// #797
    39fc:	17ffff5e 	b	3774 <mpi_egcd+0xbc>
    3a00:	aa1503e0 	mov	x0, x21
    3a04:	d2800021 	mov	x1, #0x1                   	// #1
    3a08:	94000fbc 	bl	78f8 <mbedtls_mpi_shift_r>
    3a0c:	2a0003e2 	mov	w2, w0
    3a10:	34000060 	cbz	w0, 3a1c <mpi_egcd+0x364>
    3a14:	52806241 	mov	w1, #0x312                 	// #786
    3a18:	17ffff57 	b	3774 <mpi_egcd+0xbc>
    3a1c:	aa1403e0 	mov	x0, x20
    3a20:	97ffff14 	bl	3670 <mpi_is_odd>
    3a24:	72001c1f 	tst	w0, #0xff
    3a28:	54000120 	b.eq	3a4c <mpi_egcd+0x394>  // b.none
    3a2c:	aa1903e2 	mov	x2, x25
    3a30:	aa1403e1 	mov	x1, x20
    3a34:	aa1403e0 	mov	x0, x20
    3a38:	940010e1 	bl	7dbc <mbedtls_mpi_add_mpi>
    3a3c:	2a0003e2 	mov	w2, w0
    3a40:	340001c0 	cbz	w0, 3a78 <mpi_egcd+0x3c0>
    3a44:	52806281 	mov	w1, #0x314                 	// #788
    3a48:	17ffff4b 	b	3774 <mpi_egcd+0xbc>
    3a4c:	aa1303e0 	mov	x0, x19
    3a50:	97ffff08 	bl	3670 <mpi_is_odd>
    3a54:	72001c1f 	tst	w0, #0xff
    3a58:	54fffea1 	b.ne	3a2c <mpi_egcd+0x374>  // b.any
    3a5c:	aa1403e0 	mov	x0, x20
    3a60:	d2800021 	mov	x1, #0x1                   	// #1
    3a64:	94000fa5 	bl	78f8 <mbedtls_mpi_shift_r>
    3a68:	2a0003e2 	mov	w2, w0
    3a6c:	34000160 	cbz	w0, 3a98 <mpi_egcd+0x3e0>
    3a70:	528062e1 	mov	w1, #0x317                 	// #791
    3a74:	17ffff40 	b	3774 <mpi_egcd+0xbc>
    3a78:	aa1a03e2 	mov	x2, x26
    3a7c:	aa1303e1 	mov	x1, x19
    3a80:	aa1303e0 	mov	x0, x19
    3a84:	940010d0 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    3a88:	2a0003e2 	mov	w2, w0
    3a8c:	34fffe80 	cbz	w0, 3a5c <mpi_egcd+0x3a4>
    3a90:	528062a1 	mov	w1, #0x315                 	// #789
    3a94:	17ffff38 	b	3774 <mpi_egcd+0xbc>
    3a98:	aa1303e0 	mov	x0, x19
    3a9c:	d2800021 	mov	x1, #0x1                   	// #1
    3aa0:	94000f96 	bl	78f8 <mbedtls_mpi_shift_r>
    3aa4:	2a0003e2 	mov	w2, w0
    3aa8:	34fff8c0 	cbz	w0, 39c0 <mpi_egcd+0x308>
    3aac:	52806301 	mov	w1, #0x318                 	// #792
    3ab0:	17ffff31 	b	3774 <mpi_egcd+0xbc>
    3ab4:	aa1403e2 	mov	x2, x20
    3ab8:	aa1803e1 	mov	x1, x24
    3abc:	aa1803e0 	mov	x0, x24
    3ac0:	940010c1 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    3ac4:	2a0003e2 	mov	w2, w0
    3ac8:	34000060 	cbz	w0, 3ad4 <mpi_egcd+0x41c>
    3acc:	528063c1 	mov	w1, #0x31e                 	// #798
    3ad0:	17ffff29 	b	3774 <mpi_egcd+0xbc>
    3ad4:	aa1303e2 	mov	x2, x19
    3ad8:	aa1703e1 	mov	x1, x23
    3adc:	aa1703e0 	mov	x0, x23
    3ae0:	940010b9 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    3ae4:	2a0003e2 	mov	w2, w0
    3ae8:	34000360 	cbz	w0, 3b54 <mpi_egcd+0x49c>
    3aec:	528063e1 	mov	w1, #0x31f                 	// #799
    3af0:	17ffff21 	b	3774 <mpi_egcd+0xbc>
    3af4:	aa1603e2 	mov	x2, x22
    3af8:	aa1503e1 	mov	x1, x21
    3afc:	aa1503e0 	mov	x0, x21
    3b00:	940010b1 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    3b04:	2a0003e2 	mov	w2, w0
    3b08:	34000060 	cbz	w0, 3b14 <mpi_egcd+0x45c>
    3b0c:	52806421 	mov	w1, #0x321                 	// #801
    3b10:	17ffff19 	b	3774 <mpi_egcd+0xbc>
    3b14:	aa1803e2 	mov	x2, x24
    3b18:	aa1403e1 	mov	x1, x20
    3b1c:	aa1403e0 	mov	x0, x20
    3b20:	940010a9 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    3b24:	2a0003e2 	mov	w2, w0
    3b28:	34000060 	cbz	w0, 3b34 <mpi_egcd+0x47c>
    3b2c:	52806441 	mov	w1, #0x322                 	// #802
    3b30:	17ffff11 	b	3774 <mpi_egcd+0xbc>
    3b34:	aa1703e2 	mov	x2, x23
    3b38:	aa1303e1 	mov	x1, x19
    3b3c:	aa1303e0 	mov	x0, x19
    3b40:	940010a1 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    3b44:	2a0003e2 	mov	w2, w0
    3b48:	34000060 	cbz	w0, 3b54 <mpi_egcd+0x49c>
    3b4c:	52806461 	mov	w1, #0x323                 	// #803
    3b50:	17ffff09 	b	3774 <mpi_egcd+0xbc>
    3b54:	aa1603e0 	mov	x0, x22
    3b58:	52800001 	mov	w1, #0x0                   	// #0
    3b5c:	94000fce 	bl	7a94 <mbedtls_mpi_cmp_int>
    3b60:	35fff280 	cbnz	w0, 39b0 <mpi_egcd+0x2f8>
    3b64:	aa1403e1 	mov	x1, x20
    3b68:	aa1b03e0 	mov	x0, x27
    3b6c:	94000e2d 	bl	7420 <mbedtls_mpi_copy>
    3b70:	2a0003e2 	mov	w2, w0
    3b74:	34000060 	cbz	w0, 3b80 <mpi_egcd+0x4c8>
    3b78:	528064e1 	mov	w1, #0x327                 	// #807
    3b7c:	17fffefe 	b	3774 <mpi_egcd+0xbc>
    3b80:	f94033e0 	ldr	x0, [sp, #96]
    3b84:	aa1303e1 	mov	x1, x19
    3b88:	94000e26 	bl	7420 <mbedtls_mpi_copy>
    3b8c:	2a0003e2 	mov	w2, w0
    3b90:	34000060 	cbz	w0, 3b9c <mpi_egcd+0x4e4>
    3b94:	52806501 	mov	w1, #0x328                 	// #808
    3b98:	17fffef7 	b	3774 <mpi_egcd+0xbc>
    3b9c:	2a1c03e1 	mov	w1, w28
    3ba0:	aa1503e0 	mov	x0, x21
    3ba4:	94000f11 	bl	77e8 <mbedtls_mpi_shift_l>
    3ba8:	2a0003e2 	mov	w2, w0
    3bac:	34000060 	cbz	w0, 3bb8 <mpi_egcd+0x500>
    3bb0:	52806521 	mov	w1, #0x329                 	// #809
    3bb4:	17fffef0 	b	3774 <mpi_egcd+0xbc>
    3bb8:	aa1803e0 	mov	x0, x24
    3bbc:	94000d63 	bl	7148 <mbedtls_mpi_free>
    3bc0:	aa1703e0 	mov	x0, x23
    3bc4:	94000d61 	bl	7148 <mbedtls_mpi_free>
    3bc8:	aa1403e0 	mov	x0, x20
    3bcc:	94000d5f 	bl	7148 <mbedtls_mpi_free>
    3bd0:	aa1303e0 	mov	x0, x19
    3bd4:	94000d5d 	bl	7148 <mbedtls_mpi_free>
    3bd8:	aa1a03e0 	mov	x0, x26
    3bdc:	94000d5b 	bl	7148 <mbedtls_mpi_free>
    3be0:	aa1903e0 	mov	x0, x25
    3be4:	94000d59 	bl	7148 <mbedtls_mpi_free>
    3be8:	aa1603e0 	mov	x0, x22
    3bec:	94000d57 	bl	7148 <mbedtls_mpi_free>
    3bf0:	d00000a0 	adrp	x0, 19000 <_DYNAMIC>
    3bf4:	f9409800 	ldr	x0, [x0, #304]
    3bf8:	f940afe2 	ldr	x2, [sp, #344]
    3bfc:	f9400001 	ldr	x1, [x0]
    3c00:	eb010042 	subs	x2, x2, x1
    3c04:	d2800001 	mov	x1, #0x0                   	// #0
    3c08:	54000040 	b.eq	3c10 <mpi_egcd+0x558>  // b.none
    3c0c:	97fff29b 	bl	678 <__stack_chk_fail>
    3c10:	a94153f3 	ldp	x19, x20, [sp, #16]
    3c14:	a9425bf5 	ldp	x21, x22, [sp, #32]
    3c18:	a94363f7 	ldp	x23, x24, [sp, #48]
    3c1c:	a9446bf9 	ldp	x25, x26, [sp, #64]
    3c20:	a94573fb 	ldp	x27, x28, [sp, #80]
    3c24:	a8d67bfd 	ldp	x29, x30, [sp], #352
    3c28:	d65f03c0 	ret

0000000000003c2c <_TEE_MathAPI_Init>:
_TEE_MathAPI_Init():
    3c2c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    3c30:	d2870001 	mov	x1, #0x3800                	// #14336
    3c34:	d2800002 	mov	x2, #0x0                   	// #0
    3c38:	910003fd 	mov	x29, sp
    3c3c:	d00000a0 	adrp	x0, 19000 <_DYNAMIC>
    3c40:	911c4000 	add	x0, x0, #0x710
    3c44:	940025a3 	bl	d2d0 <mempool_alloc_pool>
    3c48:	d00000a1 	adrp	x1, 19000 <_DYNAMIC>
    3c4c:	f940f421 	ldr	x1, [x1, #488]
    3c50:	f9000020 	str	x0, [x1]
    3c54:	b5000100 	cbnz	x0, 3c74 <_TEE_MathAPI_Init+0x48>
    3c58:	900000a0 	adrp	x0, 17000 <__text_end+0x3c08>
    3c5c:	91355400 	add	x0, x0, #0xd55
    3c60:	900000a2 	adrp	x2, 17000 <__text_end+0x3c08>
    3c64:	91007c00 	add	x0, x0, #0x1f
    3c68:	91334442 	add	x2, x2, #0xcd1
    3c6c:	52800621 	mov	w1, #0x31                  	// #49
    3c70:	97fffdd6 	bl	33c8 <api_panic>
    3c74:	a8c17bfd 	ldp	x29, x30, [sp], #16
    3c78:	d65f03c0 	ret

0000000000003c7c <TEE_BigIntInit>:
TEE_BigIntInit():
    3c7c:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    3c80:	d37ef422 	lsl	x2, x1, #2
    3c84:	910003fd 	mov	x29, sp
    3c88:	a90153f3 	stp	x19, x20, [sp, #16]
    3c8c:	aa0003f4 	mov	x20, x0
    3c90:	aa0103f3 	mov	x19, x1
    3c94:	52800001 	mov	w1, #0x0                   	// #0
    3c98:	94002570 	bl	d258 <memset>
    3c9c:	52800020 	mov	w0, #0x1                   	// #1
    3ca0:	b9000280 	str	w0, [x20]
    3ca4:	f108027f 	cmp	x19, #0x200
    3ca8:	54000109 	b.ls	3cc8 <TEE_BigIntInit+0x4c>  // b.plast
    3cac:	900000a0 	adrp	x0, 17000 <__text_end+0x3c08>
    3cb0:	91355400 	add	x0, x0, #0xd55
    3cb4:	900000a2 	adrp	x2, 17000 <__text_end+0x3c08>
    3cb8:	9100c400 	add	x0, x0, #0x31
    3cbc:	9133c842 	add	x2, x2, #0xcf2
    3cc0:	52801041 	mov	w1, #0x82                  	// #130
    3cc4:	97fffdc1 	bl	33c8 <api_panic>
    3cc8:	51000a73 	sub	w19, w19, #0x2
    3ccc:	79000a93 	strh	w19, [x20, #4]
    3cd0:	a94153f3 	ldp	x19, x20, [sp, #16]
    3cd4:	a8c27bfd 	ldp	x29, x30, [sp], #32
    3cd8:	d65f03c0 	ret

0000000000003cdc <__GP11_TEE_BigIntInit>:
__GP11_TEE_BigIntInit():
    3cdc:	2a0103e1 	mov	w1, w1
    3ce0:	17ffffe7 	b	3c7c <TEE_BigIntInit>

0000000000003ce4 <TEE_BigIntConvertFromOctetString>:
TEE_BigIntConvertFromOctetString():
    3ce4:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
    3ce8:	d00000a4 	adrp	x4, 19000 <_DYNAMIC>
    3cec:	910003fd 	mov	x29, sp
    3cf0:	f9409884 	ldr	x4, [x4, #304]
    3cf4:	a90153f3 	stp	x19, x20, [sp, #16]
    3cf8:	910123f4 	add	x20, sp, #0x48
    3cfc:	a9025bf5 	stp	x21, x22, [sp, #32]
    3d00:	aa0003f5 	mov	x21, x0
    3d04:	aa0103f6 	mov	x22, x1
    3d08:	f9001bf7 	str	x23, [sp, #48]
    3d0c:	2a0303f3 	mov	w19, w3
    3d10:	aa0203f7 	mov	x23, x2
    3d14:	f9400080 	ldr	x0, [x4]
    3d18:	f90037e0 	str	x0, [sp, #104]
    3d1c:	d2800000 	mov	x0, #0x0                   	// #0
    3d20:	aa1403e0 	mov	x0, x20
    3d24:	94000cff 	bl	7120 <mbedtls_mpi_init_mempool>
    3d28:	aa1703e2 	mov	x2, x23
    3d2c:	aa1603e1 	mov	x1, x22
    3d30:	aa1403e0 	mov	x0, x20
    3d34:	94000e8e 	bl	776c <mbedtls_mpi_read_binary>
    3d38:	35000240 	cbnz	w0, 3d80 <TEE_BigIntConvertFromOctetString+0x9c>
    3d3c:	36f80073 	tbz	w19, #31, 3d48 <TEE_BigIntConvertFromOctetString+0x64>
    3d40:	12800000 	mov	w0, #0xffffffff            	// #-1
    3d44:	b9004be0 	str	w0, [sp, #72]
    3d48:	aa1503e1 	mov	x1, x21
    3d4c:	aa1403e0 	mov	x0, x20
    3d50:	97fffddc 	bl	34c0 <copy_mpi_to_bigint>
    3d54:	2a0003f3 	mov	w19, w0
    3d58:	aa1403e0 	mov	x0, x20
    3d5c:	94000cfb 	bl	7148 <mbedtls_mpi_free>
    3d60:	d00000a4 	adrp	x4, 19000 <_DYNAMIC>
    3d64:	f9409884 	ldr	x4, [x4, #304]
    3d68:	f94037e0 	ldr	x0, [sp, #104]
    3d6c:	f9400081 	ldr	x1, [x4]
    3d70:	eb010000 	subs	x0, x0, x1
    3d74:	d2800001 	mov	x1, #0x0                   	// #0
    3d78:	540000e0 	b.eq	3d94 <TEE_BigIntConvertFromOctetString+0xb0>  // b.none
    3d7c:	97fff23f 	bl	678 <__stack_chk_fail>
    3d80:	36f80073 	tbz	w19, #31, 3d8c <TEE_BigIntConvertFromOctetString+0xa8>
    3d84:	12800000 	mov	w0, #0xffffffff            	// #-1
    3d88:	b9004be0 	str	w0, [sp, #72]
    3d8c:	1299fe13 	mov	w19, #0xffff300f            	// #-53233
    3d90:	17fffff2 	b	3d58 <TEE_BigIntConvertFromOctetString+0x74>
    3d94:	2a1303e0 	mov	w0, w19
    3d98:	a94153f3 	ldp	x19, x20, [sp, #16]
    3d9c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    3da0:	f9401bf7 	ldr	x23, [sp, #48]
    3da4:	a8c77bfd 	ldp	x29, x30, [sp], #112
    3da8:	d65f03c0 	ret

0000000000003dac <__GP11_TEE_BigIntConvertFromOctetString>:
__GP11_TEE_BigIntConvertFromOctetString():
    3dac:	2a0203e2 	mov	w2, w2
    3db0:	17ffffcd 	b	3ce4 <TEE_BigIntConvertFromOctetString>

0000000000003db4 <TEE_BigIntConvertToOctetString>:
TEE_BigIntConvertToOctetString():
    3db4:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    3db8:	d00000a3 	adrp	x3, 19000 <_DYNAMIC>
    3dbc:	910003fd 	mov	x29, sp
    3dc0:	f9409863 	ldr	x3, [x3, #304]
    3dc4:	a90153f3 	stp	x19, x20, [sp, #16]
    3dc8:	9100e3f4 	add	x20, sp, #0x38
    3dcc:	a9025bf5 	stp	x21, x22, [sp, #32]
    3dd0:	aa0103f5 	mov	x21, x1
    3dd4:	aa0203e1 	mov	x1, x2
    3dd8:	aa0003f6 	mov	x22, x0
    3ddc:	f9400060 	ldr	x0, [x3]
    3de0:	f9002fe0 	str	x0, [sp, #88]
    3de4:	d2800000 	mov	x0, #0x0                   	// #0
    3de8:	aa1403e0 	mov	x0, x20
    3dec:	97fffd8f 	bl	3428 <get_mpi>
    3df0:	aa1403e0 	mov	x0, x20
    3df4:	94000e40 	bl	76f4 <mbedtls_mpi_size>
    3df8:	aa0003f3 	mov	x19, x0
    3dfc:	f94002a0 	ldr	x0, [x21]
    3e00:	eb13001f 	cmp	x0, x19
    3e04:	540001a3 	b.cc	3e38 <TEE_BigIntConvertToOctetString+0x84>  // b.lo, b.ul, b.last
    3e08:	aa1303e2 	mov	x2, x19
    3e0c:	aa1603e1 	mov	x1, x22
    3e10:	aa1403e0 	mov	x0, x20
    3e14:	52800016 	mov	w22, #0x0                   	// #0
    3e18:	94000e70 	bl	77d8 <mbedtls_mpi_write_binary>
    3e1c:	2a0003e2 	mov	w2, w0
    3e20:	340000e0 	cbz	w0, 3e3c <TEE_BigIntConvertToOctetString+0x88>
    3e24:	900000a0 	adrp	x0, 17000 <__text_end+0x3c08>
    3e28:	91355400 	add	x0, x0, #0xd55
    3e2c:	91010000 	add	x0, x0, #0x40
    3e30:	528016e1 	mov	w1, #0xb7                  	// #183
    3e34:	97fffd71 	bl	33f8 <mpi_panic>
    3e38:	129ffdf6 	mov	w22, #0xffff0010            	// #-65520
    3e3c:	f90002b3 	str	x19, [x21]
    3e40:	aa1403e0 	mov	x0, x20
    3e44:	94000cc1 	bl	7148 <mbedtls_mpi_free>
    3e48:	d00000a3 	adrp	x3, 19000 <_DYNAMIC>
    3e4c:	f9409863 	ldr	x3, [x3, #304]
    3e50:	f9402fe0 	ldr	x0, [sp, #88]
    3e54:	f9400061 	ldr	x1, [x3]
    3e58:	eb010000 	subs	x0, x0, x1
    3e5c:	d2800001 	mov	x1, #0x0                   	// #0
    3e60:	54000040 	b.eq	3e68 <TEE_BigIntConvertToOctetString+0xb4>  // b.none
    3e64:	97fff205 	bl	678 <__stack_chk_fail>
    3e68:	2a1603e0 	mov	w0, w22
    3e6c:	a94153f3 	ldp	x19, x20, [sp, #16]
    3e70:	a9425bf5 	ldp	x21, x22, [sp, #32]
    3e74:	a8c67bfd 	ldp	x29, x30, [sp], #96
    3e78:	d65f03c0 	ret

0000000000003e7c <__GP11_TEE_BigIntConvertToOctetString>:
__GP11_TEE_BigIntConvertToOctetString():
    3e7c:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    3e80:	910003fd 	mov	x29, sp
    3e84:	a90153f3 	stp	x19, x20, [sp, #16]
    3e88:	d00000b3 	adrp	x19, 19000 <_DYNAMIC>
    3e8c:	aa0103f4 	mov	x20, x1
    3e90:	f9409a61 	ldr	x1, [x19, #304]
    3e94:	f9400023 	ldr	x3, [x1]
    3e98:	f90017e3 	str	x3, [sp, #40]
    3e9c:	d2800003 	mov	x3, #0x0                   	// #0
    3ea0:	b9400281 	ldr	w1, [x20]
    3ea4:	f90013e1 	str	x1, [sp, #32]
    3ea8:	910083e1 	add	x1, sp, #0x20
    3eac:	97ffffc2 	bl	3db4 <TEE_BigIntConvertToOctetString>
    3eb0:	f9409a73 	ldr	x19, [x19, #304]
    3eb4:	f94013e1 	ldr	x1, [sp, #32]
    3eb8:	b9000281 	str	w1, [x20]
    3ebc:	f94017e1 	ldr	x1, [sp, #40]
    3ec0:	f9400262 	ldr	x2, [x19]
    3ec4:	eb020021 	subs	x1, x1, x2
    3ec8:	d2800002 	mov	x2, #0x0                   	// #0
    3ecc:	54000040 	b.eq	3ed4 <__GP11_TEE_BigIntConvertToOctetString+0x58>  // b.none
    3ed0:	97fff1ea 	bl	678 <__stack_chk_fail>
    3ed4:	a94153f3 	ldp	x19, x20, [sp, #16]
    3ed8:	a8c37bfd 	ldp	x29, x30, [sp], #48
    3edc:	d65f03c0 	ret

0000000000003ee0 <TEE_BigIntConvertFromS32>:
TEE_BigIntConvertFromS32():
    3ee0:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    3ee4:	910003fd 	mov	x29, sp
    3ee8:	a90153f3 	stp	x19, x20, [sp, #16]
    3eec:	d00000b3 	adrp	x19, 19000 <_DYNAMIC>
    3ef0:	9100e3f4 	add	x20, sp, #0x38
    3ef4:	a9025bf5 	stp	x21, x22, [sp, #32]
    3ef8:	aa0003f5 	mov	x21, x0
    3efc:	2a0103f6 	mov	w22, w1
    3f00:	f9409a60 	ldr	x0, [x19, #304]
    3f04:	f9400001 	ldr	x1, [x0]
    3f08:	f9002fe1 	str	x1, [sp, #88]
    3f0c:	d2800001 	mov	x1, #0x0                   	// #0
    3f10:	aa1403e0 	mov	x0, x20
    3f14:	aa1503e1 	mov	x1, x21
    3f18:	97fffd44 	bl	3428 <get_mpi>
    3f1c:	2a1603e1 	mov	w1, w22
    3f20:	aa1403e0 	mov	x0, x20
    3f24:	94000d95 	bl	7578 <mbedtls_mpi_lset>
    3f28:	340000e0 	cbz	w0, 3f44 <TEE_BigIntConvertFromS32+0x64>
    3f2c:	2a0003e2 	mov	w2, w0
    3f30:	52801a81 	mov	w1, #0xd4                  	// #212
    3f34:	900000a0 	adrp	x0, 17000 <__text_end+0x3c08>
    3f38:	91355400 	add	x0, x0, #0xd55
    3f3c:	91017c00 	add	x0, x0, #0x5f
    3f40:	97fffd2e 	bl	33f8 <mpi_panic>
    3f44:	aa1503e1 	mov	x1, x21
    3f48:	aa1403e0 	mov	x0, x20
    3f4c:	97fffd5d 	bl	34c0 <copy_mpi_to_bigint>
    3f50:	2a0003e2 	mov	w2, w0
    3f54:	34000060 	cbz	w0, 3f60 <TEE_BigIntConvertFromS32+0x80>
    3f58:	52801ac1 	mov	w1, #0xd6                  	// #214
    3f5c:	17fffff6 	b	3f34 <TEE_BigIntConvertFromS32+0x54>
    3f60:	aa1403e0 	mov	x0, x20
    3f64:	94000c79 	bl	7148 <mbedtls_mpi_free>
    3f68:	f9409a73 	ldr	x19, [x19, #304]
    3f6c:	f9402fe0 	ldr	x0, [sp, #88]
    3f70:	f9400261 	ldr	x1, [x19]
    3f74:	eb010000 	subs	x0, x0, x1
    3f78:	d2800001 	mov	x1, #0x0                   	// #0
    3f7c:	54000040 	b.eq	3f84 <TEE_BigIntConvertFromS32+0xa4>  // b.none
    3f80:	97fff1be 	bl	678 <__stack_chk_fail>
    3f84:	a94153f3 	ldp	x19, x20, [sp, #16]
    3f88:	a9425bf5 	ldp	x21, x22, [sp, #32]
    3f8c:	a8c67bfd 	ldp	x29, x30, [sp], #96
    3f90:	d65f03c0 	ret

0000000000003f94 <TEE_BigIntConvertToS32>:
TEE_BigIntConvertToS32():
    3f94:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    3f98:	d00000a2 	adrp	x2, 19000 <_DYNAMIC>
    3f9c:	910003fd 	mov	x29, sp
    3fa0:	f9409842 	ldr	x2, [x2, #304]
    3fa4:	a90153f3 	stp	x19, x20, [sp, #16]
    3fa8:	9100a3f4 	add	x20, sp, #0x28
    3fac:	aa0003f3 	mov	x19, x0
    3fb0:	f9400040 	ldr	x0, [x2]
    3fb4:	f90027e0 	str	x0, [sp, #72]
    3fb8:	d2800000 	mov	x0, #0x0                   	// #0
    3fbc:	aa1403e0 	mov	x0, x20
    3fc0:	97fffd1a 	bl	3428 <get_mpi>
    3fc4:	910093e1 	add	x1, sp, #0x24
    3fc8:	aa1403e0 	mov	x0, x20
    3fcc:	d2800082 	mov	x2, #0x4                   	// #4
    3fd0:	94000e02 	bl	77d8 <mbedtls_mpi_write_binary>
    3fd4:	34000180 	cbz	w0, 4004 <TEE_BigIntConvertToS32+0x70>
    3fd8:	1299fe13 	mov	w19, #0xffff300f            	// #-53233
    3fdc:	aa1403e0 	mov	x0, x20
    3fe0:	94000c5a 	bl	7148 <mbedtls_mpi_free>
    3fe4:	d00000a2 	adrp	x2, 19000 <_DYNAMIC>
    3fe8:	f9409842 	ldr	x2, [x2, #304]
    3fec:	f94027e0 	ldr	x0, [sp, #72]
    3ff0:	f9400041 	ldr	x1, [x2]
    3ff4:	eb010000 	subs	x0, x0, x1
    3ff8:	d2800001 	mov	x1, #0x0                   	// #0
    3ffc:	54000200 	b.eq	403c <TEE_BigIntConvertToS32+0xa8>  // b.none
    4000:	97fff19e 	bl	678 <__stack_chk_fail>
    4004:	29448be1 	ldp	w1, w2, [sp, #36]
    4008:	5ac00820 	rev	w0, w1
    400c:	7100005f 	cmp	w2, #0x0
    4010:	5ac00821 	rev	w1, w1
    4014:	540000cd 	b.le	402c <TEE_BigIntConvertToS32+0x98>
    4018:	eb20c03f 	cmp	x1, w0, sxtw
    401c:	b9000260 	str	w0, [x19]
    4020:	54fffdc1 	b.ne	3fd8 <TEE_BigIntConvertToS32+0x44>  // b.any
    4024:	52800013 	mov	w19, #0x0                   	// #0
    4028:	17ffffed 	b	3fdc <TEE_BigIntConvertToS32+0x48>
    402c:	cb0103e1 	neg	x1, x1
    4030:	b9000261 	str	w1, [x19]
    4034:	eb21c03f 	cmp	x1, w1, sxtw
    4038:	17fffffa 	b	4020 <TEE_BigIntConvertToS32+0x8c>
    403c:	2a1303e0 	mov	w0, w19
    4040:	a94153f3 	ldp	x19, x20, [sp, #16]
    4044:	a8c57bfd 	ldp	x29, x30, [sp], #80
    4048:	d65f03c0 	ret

000000000000404c <TEE_BigIntCmp>:
TEE_BigIntCmp():
    404c:	a9b87bfd 	stp	x29, x30, [sp, #-128]!
    4050:	910003fd 	mov	x29, sp
    4054:	a9025bf5 	stp	x21, x22, [sp, #32]
    4058:	b00000b5 	adrp	x21, 19000 <_DYNAMIC>
    405c:	aa0103f6 	mov	x22, x1
    4060:	f9409aa1 	ldr	x1, [x21, #304]
    4064:	a90153f3 	stp	x19, x20, [sp, #16]
    4068:	9100e3f4 	add	x20, sp, #0x38
    406c:	f9400022 	ldr	x2, [x1]
    4070:	f9003fe2 	str	x2, [sp, #120]
    4074:	d2800002 	mov	x2, #0x0                   	// #0
    4078:	910163f3 	add	x19, sp, #0x58
    407c:	aa0003e1 	mov	x1, x0
    4080:	aa1403e0 	mov	x0, x20
    4084:	97fffce9 	bl	3428 <get_mpi>
    4088:	aa1603e1 	mov	x1, x22
    408c:	aa1303e0 	mov	x0, x19
    4090:	97fffce6 	bl	3428 <get_mpi>
    4094:	aa1303e1 	mov	x1, x19
    4098:	aa1403e0 	mov	x0, x20
    409c:	94000e4a 	bl	79c4 <mbedtls_mpi_cmp_mpi>
    40a0:	2a0003f6 	mov	w22, w0
    40a4:	aa1403e0 	mov	x0, x20
    40a8:	94000c28 	bl	7148 <mbedtls_mpi_free>
    40ac:	aa1303e0 	mov	x0, x19
    40b0:	94000c26 	bl	7148 <mbedtls_mpi_free>
    40b4:	f9409ab5 	ldr	x21, [x21, #304]
    40b8:	f9403fe0 	ldr	x0, [sp, #120]
    40bc:	f94002a1 	ldr	x1, [x21]
    40c0:	eb010000 	subs	x0, x0, x1
    40c4:	d2800001 	mov	x1, #0x0                   	// #0
    40c8:	54000040 	b.eq	40d0 <TEE_BigIntCmp+0x84>  // b.none
    40cc:	97fff16b 	bl	678 <__stack_chk_fail>
    40d0:	2a1603e0 	mov	w0, w22
    40d4:	a94153f3 	ldp	x19, x20, [sp, #16]
    40d8:	a9425bf5 	ldp	x21, x22, [sp, #32]
    40dc:	a8c87bfd 	ldp	x29, x30, [sp], #128
    40e0:	d65f03c0 	ret

00000000000040e4 <TEE_BigIntCmpS32>:
TEE_BigIntCmpS32():
    40e4:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    40e8:	910003fd 	mov	x29, sp
    40ec:	a90153f3 	stp	x19, x20, [sp, #16]
    40f0:	b00000b4 	adrp	x20, 19000 <_DYNAMIC>
    40f4:	9100e3f3 	add	x19, sp, #0x38
    40f8:	f90013f5 	str	x21, [sp, #32]
    40fc:	2a0103f5 	mov	w21, w1
    4100:	f9409a81 	ldr	x1, [x20, #304]
    4104:	f9400022 	ldr	x2, [x1]
    4108:	f9002fe2 	str	x2, [sp, #88]
    410c:	d2800002 	mov	x2, #0x0                   	// #0
    4110:	aa0003e1 	mov	x1, x0
    4114:	aa1303e0 	mov	x0, x19
    4118:	97fffcc4 	bl	3428 <get_mpi>
    411c:	2a1503e1 	mov	w1, w21
    4120:	aa1303e0 	mov	x0, x19
    4124:	94000e5c 	bl	7a94 <mbedtls_mpi_cmp_int>
    4128:	2a0003f5 	mov	w21, w0
    412c:	aa1303e0 	mov	x0, x19
    4130:	94000c06 	bl	7148 <mbedtls_mpi_free>
    4134:	f9409a94 	ldr	x20, [x20, #304]
    4138:	f9402fe0 	ldr	x0, [sp, #88]
    413c:	f9400281 	ldr	x1, [x20]
    4140:	eb010000 	subs	x0, x0, x1
    4144:	d2800001 	mov	x1, #0x0                   	// #0
    4148:	54000040 	b.eq	4150 <TEE_BigIntCmpS32+0x6c>  // b.none
    414c:	97fff14b 	bl	678 <__stack_chk_fail>
    4150:	2a1503e0 	mov	w0, w21
    4154:	a94153f3 	ldp	x19, x20, [sp, #16]
    4158:	f94013f5 	ldr	x21, [sp, #32]
    415c:	a8c67bfd 	ldp	x29, x30, [sp], #96
    4160:	d65f03c0 	ret

0000000000004164 <bigint_binary_mod>:
bigint_binary_mod():
    4164:	a9af7bfd 	stp	x29, x30, [sp, #-272]!
    4168:	b00000a5 	adrp	x5, 19000 <_DYNAMIC>
    416c:	910003fd 	mov	x29, sp
    4170:	f94098a5 	ldr	x5, [x5, #304]
    4174:	a90153f3 	stp	x19, x20, [sp, #16]
    4178:	aa0003f4 	mov	x20, x0
    417c:	a9025bf5 	stp	x21, x22, [sp, #32]
    4180:	aa0203f5 	mov	x21, x2
    4184:	aa0303f6 	mov	x22, x3
    4188:	a90363f7 	stp	x23, x24, [sp, #48]
    418c:	aa0103f7 	mov	x23, x1
    4190:	52800041 	mov	w1, #0x2                   	// #2
    4194:	a9046bf9 	stp	x25, x26, [sp, #64]
    4198:	aa0403f9 	mov	x25, x4
    419c:	f9002bfb 	str	x27, [sp, #80]
    41a0:	f94000a0 	ldr	x0, [x5]
    41a4:	f90087e0 	str	x0, [sp, #264]
    41a8:	d2800000 	mov	x0, #0x0                   	// #0
    41ac:	aa0303e0 	mov	x0, x3
    41b0:	97ffffcd 	bl	40e4 <TEE_BigIntCmpS32>
    41b4:	36f80100 	tbz	w0, #31, 41d4 <bigint_binary_mod+0x70>
    41b8:	f0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    41bc:	91355400 	add	x0, x0, #0xd55
    41c0:	f0000082 	adrp	x2, 17000 <__text_end+0x3c08>
    41c4:	9101e000 	add	x0, x0, #0x78
    41c8:	91340c42 	add	x2, x2, #0xd03
    41cc:	528037e1 	mov	w1, #0x1bf                 	// #447
    41d0:	97fffc7e 	bl	33c8 <api_panic>
    41d4:	9101a3f3 	add	x19, sp, #0x68
    41d8:	aa1403e1 	mov	x1, x20
    41dc:	aa1303e0 	mov	x0, x19
    41e0:	910323f8 	add	x24, sp, #0xc8
    41e4:	97fffc91 	bl	3428 <get_mpi>
    41e8:	910223fb 	add	x27, sp, #0x88
    41ec:	aa1603e1 	mov	x1, x22
    41f0:	aa1803e0 	mov	x0, x24
    41f4:	97fffc8d 	bl	3428 <get_mpi>
    41f8:	eb17029f 	cmp	x20, x23
    41fc:	54000380 	b.eq	426c <bigint_binary_mod+0x108>  // b.none
    4200:	aa1b03f6 	mov	x22, x27
    4204:	aa1703e1 	mov	x1, x23
    4208:	aa1b03e0 	mov	x0, x27
    420c:	97fffc87 	bl	3428 <get_mpi>
    4210:	eb15029f 	cmp	x20, x21
    4214:	9102a3fa 	add	x26, sp, #0xa8
    4218:	540002e0 	b.eq	4274 <bigint_binary_mod+0x110>  // b.none
    421c:	eb1502ff 	cmp	x23, x21
    4220:	540002e0 	b.eq	427c <bigint_binary_mod+0x118>  // b.none
    4224:	aa1503e1 	mov	x1, x21
    4228:	aa1a03f5 	mov	x21, x26
    422c:	aa1a03e0 	mov	x0, x26
    4230:	97fffc7e 	bl	3428 <get_mpi>
    4234:	9103a3f7 	add	x23, sp, #0xe8
    4238:	aa1703e0 	mov	x0, x23
    423c:	94000bb9 	bl	7120 <mbedtls_mpi_init_mempool>
    4240:	aa1503e2 	mov	x2, x21
    4244:	aa1603e1 	mov	x1, x22
    4248:	aa1703e0 	mov	x0, x23
    424c:	d63f0320 	blr	x25
    4250:	2a0003e2 	mov	w2, w0
    4254:	34000180 	cbz	w0, 4284 <bigint_binary_mod+0x120>
    4258:	52803a41 	mov	w1, #0x1d2                 	// #466
    425c:	f0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    4260:	91355400 	add	x0, x0, #0xd55
    4264:	9101e000 	add	x0, x0, #0x78
    4268:	97fffc64 	bl	33f8 <mpi_panic>
    426c:	aa1303f6 	mov	x22, x19
    4270:	17ffffe8 	b	4210 <bigint_binary_mod+0xac>
    4274:	aa1303f5 	mov	x21, x19
    4278:	17ffffef 	b	4234 <bigint_binary_mod+0xd0>
    427c:	aa1603f5 	mov	x21, x22
    4280:	17ffffed 	b	4234 <bigint_binary_mod+0xd0>
    4284:	aa1803e2 	mov	x2, x24
    4288:	aa1703e1 	mov	x1, x23
    428c:	aa1303e0 	mov	x0, x19
    4290:	94001190 	bl	88d0 <mbedtls_mpi_mod_mpi>
    4294:	2a0003e2 	mov	w2, w0
    4298:	34000060 	cbz	w0, 42a4 <bigint_binary_mod+0x140>
    429c:	52803a61 	mov	w1, #0x1d3                 	// #467
    42a0:	17ffffef 	b	425c <bigint_binary_mod+0xf8>
    42a4:	aa1403e1 	mov	x1, x20
    42a8:	aa1303e0 	mov	x0, x19
    42ac:	97fffc85 	bl	34c0 <copy_mpi_to_bigint>
    42b0:	2a0003e2 	mov	w2, w0
    42b4:	34000060 	cbz	w0, 42c0 <bigint_binary_mod+0x15c>
    42b8:	52803aa1 	mov	w1, #0x1d5                 	// #469
    42bc:	17ffffe8 	b	425c <bigint_binary_mod+0xf8>
    42c0:	aa1303e0 	mov	x0, x19
    42c4:	94000ba1 	bl	7148 <mbedtls_mpi_free>
    42c8:	eb1b02df 	cmp	x22, x27
    42cc:	54000061 	b.ne	42d8 <bigint_binary_mod+0x174>  // b.any
    42d0:	aa1603e0 	mov	x0, x22
    42d4:	94000b9d 	bl	7148 <mbedtls_mpi_free>
    42d8:	eb1a02bf 	cmp	x21, x26
    42dc:	54000061 	b.ne	42e8 <bigint_binary_mod+0x184>  // b.any
    42e0:	aa1503e0 	mov	x0, x21
    42e4:	94000b99 	bl	7148 <mbedtls_mpi_free>
    42e8:	aa1703e0 	mov	x0, x23
    42ec:	94000b97 	bl	7148 <mbedtls_mpi_free>
    42f0:	aa1803e0 	mov	x0, x24
    42f4:	94000b95 	bl	7148 <mbedtls_mpi_free>
    42f8:	b00000a5 	adrp	x5, 19000 <_DYNAMIC>
    42fc:	f94098a5 	ldr	x5, [x5, #304]
    4300:	f94087e0 	ldr	x0, [sp, #264]
    4304:	f94000a1 	ldr	x1, [x5]
    4308:	eb010000 	subs	x0, x0, x1
    430c:	d2800001 	mov	x1, #0x0                   	// #0
    4310:	54000040 	b.eq	4318 <bigint_binary_mod+0x1b4>  // b.none
    4314:	97fff0d9 	bl	678 <__stack_chk_fail>
    4318:	a94153f3 	ldp	x19, x20, [sp, #16]
    431c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    4320:	a94363f7 	ldp	x23, x24, [sp, #48]
    4324:	a9446bf9 	ldp	x25, x26, [sp, #64]
    4328:	f9402bfb 	ldr	x27, [sp, #80]
    432c:	a8d17bfd 	ldp	x29, x30, [sp], #272
    4330:	d65f03c0 	ret

0000000000004334 <TEE_BigIntShiftRight>:
TEE_BigIntShiftRight():
    4334:	a9b57bfd 	stp	x29, x30, [sp, #-176]!
    4338:	b00000a3 	adrp	x3, 19000 <_DYNAMIC>
    433c:	910003fd 	mov	x29, sp
    4340:	f9409863 	ldr	x3, [x3, #304]
    4344:	a90153f3 	stp	x19, x20, [sp, #16]
    4348:	aa0003f4 	mov	x20, x0
    434c:	a9025bf5 	stp	x21, x22, [sp, #32]
    4350:	910123f3 	add	x19, sp, #0x48
    4354:	aa0103f6 	mov	x22, x1
    4358:	f9001bf7 	str	x23, [sp, #48]
    435c:	aa0003e1 	mov	x1, x0
    4360:	aa0203f7 	mov	x23, x2
    4364:	f9400060 	ldr	x0, [x3]
    4368:	f90057e0 	str	x0, [sp, #168]
    436c:	d2800000 	mov	x0, #0x0                   	// #0
    4370:	aa1303e0 	mov	x0, x19
    4374:	97fffc2d 	bl	3428 <get_mpi>
    4378:	eb16029f 	cmp	x20, x22
    437c:	54000161 	b.ne	43a8 <TEE_BigIntShiftRight+0x74>  // b.any
    4380:	aa1703e1 	mov	x1, x23
    4384:	aa1303e0 	mov	x0, x19
    4388:	94000d5c 	bl	78f8 <mbedtls_mpi_shift_r>
    438c:	2a0003e2 	mov	w2, w0
    4390:	34000760 	cbz	w0, 447c <TEE_BigIntShiftRight+0x148>
    4394:	52802381 	mov	w1, #0x11c                 	// #284
    4398:	f0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    439c:	91355400 	add	x0, x0, #0xd55
    43a0:	91022800 	add	x0, x0, #0x8a
    43a4:	97fffc15 	bl	33f8 <mpi_panic>
    43a8:	aa1603e1 	mov	x1, x22
    43ac:	9101a3f5 	add	x21, sp, #0x68
    43b0:	aa1503e0 	mov	x0, x21
    43b4:	97fffc1d 	bl	3428 <get_mpi>
    43b8:	aa1303e0 	mov	x0, x19
    43bc:	94000cce 	bl	76f4 <mbedtls_mpi_size>
    43c0:	aa0003f6 	mov	x22, x0
    43c4:	aa1503e0 	mov	x0, x21
    43c8:	94000ccb 	bl	76f4 <mbedtls_mpi_size>
    43cc:	eb0002df 	cmp	x22, x0
    43d0:	540001e3 	b.cc	440c <TEE_BigIntShiftRight+0xd8>  // b.lo, b.ul, b.last
    43d4:	aa1503e1 	mov	x1, x21
    43d8:	aa1303e0 	mov	x0, x19
    43dc:	94000c11 	bl	7420 <mbedtls_mpi_copy>
    43e0:	2a0003e2 	mov	w2, w0
    43e4:	34000060 	cbz	w0, 43f0 <TEE_BigIntShiftRight+0xbc>
    43e8:	52802461 	mov	w1, #0x123                 	// #291
    43ec:	17ffffeb 	b	4398 <TEE_BigIntShiftRight+0x64>
    43f0:	aa1703e1 	mov	x1, x23
    43f4:	aa1303e0 	mov	x0, x19
    43f8:	94000d40 	bl	78f8 <mbedtls_mpi_shift_r>
    43fc:	2a0003e2 	mov	w2, w0
    4400:	340003a0 	cbz	w0, 4474 <TEE_BigIntShiftRight+0x140>
    4404:	52802481 	mov	w1, #0x124                 	// #292
    4408:	17ffffe4 	b	4398 <TEE_BigIntShiftRight+0x64>
    440c:	910223f6 	add	x22, sp, #0x88
    4410:	aa1603e0 	mov	x0, x22
    4414:	94000b43 	bl	7120 <mbedtls_mpi_init_mempool>
    4418:	aa1503e1 	mov	x1, x21
    441c:	aa1603e0 	mov	x0, x22
    4420:	94000c00 	bl	7420 <mbedtls_mpi_copy>
    4424:	2a0003e2 	mov	w2, w0
    4428:	34000060 	cbz	w0, 4434 <TEE_BigIntShiftRight+0x100>
    442c:	528025e1 	mov	w1, #0x12f                 	// #303
    4430:	17ffffda 	b	4398 <TEE_BigIntShiftRight+0x64>
    4434:	aa1703e1 	mov	x1, x23
    4438:	aa1603e0 	mov	x0, x22
    443c:	94000d2f 	bl	78f8 <mbedtls_mpi_shift_r>
    4440:	2a0003e2 	mov	w2, w0
    4444:	34000060 	cbz	w0, 4450 <TEE_BigIntShiftRight+0x11c>
    4448:	52802601 	mov	w1, #0x130                 	// #304
    444c:	17ffffd3 	b	4398 <TEE_BigIntShiftRight+0x64>
    4450:	aa1603e1 	mov	x1, x22
    4454:	aa1303e0 	mov	x0, x19
    4458:	94000bf2 	bl	7420 <mbedtls_mpi_copy>
    445c:	2a0003e2 	mov	w2, w0
    4460:	34000060 	cbz	w0, 446c <TEE_BigIntShiftRight+0x138>
    4464:	52802621 	mov	w1, #0x131                 	// #305
    4468:	17ffffcc 	b	4398 <TEE_BigIntShiftRight+0x64>
    446c:	aa1603e0 	mov	x0, x22
    4470:	94000b36 	bl	7148 <mbedtls_mpi_free>
    4474:	aa1503e0 	mov	x0, x21
    4478:	94000b34 	bl	7148 <mbedtls_mpi_free>
    447c:	aa1403e1 	mov	x1, x20
    4480:	aa1303e0 	mov	x0, x19
    4484:	97fffc0f 	bl	34c0 <copy_mpi_to_bigint>
    4488:	2a0003e2 	mov	w2, w0
    448c:	34000060 	cbz	w0, 4498 <TEE_BigIntShiftRight+0x164>
    4490:	52802721 	mov	w1, #0x139                 	// #313
    4494:	17ffffc1 	b	4398 <TEE_BigIntShiftRight+0x64>
    4498:	aa1303e0 	mov	x0, x19
    449c:	94000b2b 	bl	7148 <mbedtls_mpi_free>
    44a0:	b00000a3 	adrp	x3, 19000 <_DYNAMIC>
    44a4:	f9409863 	ldr	x3, [x3, #304]
    44a8:	f94057e0 	ldr	x0, [sp, #168]
    44ac:	f9400061 	ldr	x1, [x3]
    44b0:	eb010000 	subs	x0, x0, x1
    44b4:	d2800001 	mov	x1, #0x0                   	// #0
    44b8:	54000040 	b.eq	44c0 <TEE_BigIntShiftRight+0x18c>  // b.none
    44bc:	97fff06f 	bl	678 <__stack_chk_fail>
    44c0:	a94153f3 	ldp	x19, x20, [sp, #16]
    44c4:	a9425bf5 	ldp	x21, x22, [sp, #32]
    44c8:	f9401bf7 	ldr	x23, [sp, #48]
    44cc:	a8cb7bfd 	ldp	x29, x30, [sp], #176
    44d0:	d65f03c0 	ret

00000000000044d4 <__GP11_TEE_BigIntShiftRight>:
__GP11_TEE_BigIntShiftRight():
    44d4:	2a0203e2 	mov	w2, w2
    44d8:	17ffff97 	b	4334 <TEE_BigIntShiftRight>

00000000000044dc <TEE_BigIntGetBit>:
TEE_BigIntGetBit():
    44dc:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    44e0:	910003fd 	mov	x29, sp
    44e4:	a90153f3 	stp	x19, x20, [sp, #16]
    44e8:	b00000b4 	adrp	x20, 19000 <_DYNAMIC>
    44ec:	9100e3f3 	add	x19, sp, #0x38
    44f0:	f90013f5 	str	x21, [sp, #32]
    44f4:	2a0103f5 	mov	w21, w1
    44f8:	f9409a81 	ldr	x1, [x20, #304]
    44fc:	f9400022 	ldr	x2, [x1]
    4500:	f9002fe2 	str	x2, [sp, #88]
    4504:	d2800002 	mov	x2, #0x0                   	// #0
    4508:	aa0003e1 	mov	x1, x0
    450c:	aa1303e0 	mov	x0, x19
    4510:	97fffbc6 	bl	3428 <get_mpi>
    4514:	2a1503e1 	mov	w1, w21
    4518:	aa1303e0 	mov	x0, x19
    451c:	94000c31 	bl	75e0 <mbedtls_mpi_get_bit>
    4520:	2a0003f5 	mov	w21, w0
    4524:	aa1303e0 	mov	x0, x19
    4528:	94000b08 	bl	7148 <mbedtls_mpi_free>
    452c:	f9409a94 	ldr	x20, [x20, #304]
    4530:	710002bf 	cmp	w21, #0x0
    4534:	1a9f07e0 	cset	w0, ne  // ne = any
    4538:	f9402fe1 	ldr	x1, [sp, #88]
    453c:	f9400282 	ldr	x2, [x20]
    4540:	eb020021 	subs	x1, x1, x2
    4544:	d2800002 	mov	x2, #0x0                   	// #0
    4548:	54000040 	b.eq	4550 <TEE_BigIntGetBit+0x74>  // b.none
    454c:	97fff04b 	bl	678 <__stack_chk_fail>
    4550:	a94153f3 	ldp	x19, x20, [sp, #16]
    4554:	f94013f5 	ldr	x21, [sp, #32]
    4558:	a8c67bfd 	ldp	x29, x30, [sp], #96
    455c:	d65f03c0 	ret

0000000000004560 <TEE_BigIntGetBitCount>:
TEE_BigIntGetBitCount():
    4560:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    4564:	910003fd 	mov	x29, sp
    4568:	a90153f3 	stp	x19, x20, [sp, #16]
    456c:	b00000b4 	adrp	x20, 19000 <_DYNAMIC>
    4570:	9100e3f3 	add	x19, sp, #0x38
    4574:	f9409a81 	ldr	x1, [x20, #304]
    4578:	f90013f5 	str	x21, [sp, #32]
    457c:	f9400022 	ldr	x2, [x1]
    4580:	f9002fe2 	str	x2, [sp, #88]
    4584:	d2800002 	mov	x2, #0x0                   	// #0
    4588:	aa0003e1 	mov	x1, x0
    458c:	aa1303e0 	mov	x0, x19
    4590:	97fffba6 	bl	3428 <get_mpi>
    4594:	aa1303e0 	mov	x0, x19
    4598:	94000c55 	bl	76ec <mbedtls_mpi_bitlen>
    459c:	aa0003f5 	mov	x21, x0
    45a0:	aa1303e0 	mov	x0, x19
    45a4:	94000ae9 	bl	7148 <mbedtls_mpi_free>
    45a8:	f9409a94 	ldr	x20, [x20, #304]
    45ac:	f9402fe0 	ldr	x0, [sp, #88]
    45b0:	f9400281 	ldr	x1, [x20]
    45b4:	eb010000 	subs	x0, x0, x1
    45b8:	d2800001 	mov	x1, #0x0                   	// #0
    45bc:	54000040 	b.eq	45c4 <TEE_BigIntGetBitCount+0x64>  // b.none
    45c0:	97fff02e 	bl	678 <__stack_chk_fail>
    45c4:	2a1503e0 	mov	w0, w21
    45c8:	a94153f3 	ldp	x19, x20, [sp, #16]
    45cc:	f94013f5 	ldr	x21, [sp, #32]
    45d0:	a8c67bfd 	ldp	x29, x30, [sp], #96
    45d4:	d65f03c0 	ret

00000000000045d8 <TEE_BigIntSetBit>:
TEE_BigIntSetBit():
    45d8:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    45dc:	b00000a3 	adrp	x3, 19000 <_DYNAMIC>
    45e0:	910003fd 	mov	x29, sp
    45e4:	f9409863 	ldr	x3, [x3, #304]
    45e8:	a90153f3 	stp	x19, x20, [sp, #16]
    45ec:	aa0003f3 	mov	x19, x0
    45f0:	a9025bf5 	stp	x21, x22, [sp, #32]
    45f4:	9100e3f4 	add	x20, sp, #0x38
    45f8:	2a0103f5 	mov	w21, w1
    45fc:	f9400060 	ldr	x0, [x3]
    4600:	f9002fe0 	str	x0, [sp, #88]
    4604:	d2800000 	mov	x0, #0x0                   	// #0
    4608:	12001c56 	and	w22, w2, #0xff
    460c:	aa1303e1 	mov	x1, x19
    4610:	aa1403e0 	mov	x0, x20
    4614:	a903ffff 	stp	xzr, xzr, [sp, #56]
    4618:	a904ffff 	stp	xzr, xzr, [sp, #72]
    461c:	97fffb83 	bl	3428 <get_mpi>
    4620:	2a1603e2 	mov	w2, w22
    4624:	2a1503e1 	mov	w1, w21
    4628:	aa1403e0 	mov	x0, x20
    462c:	94000bf8 	bl	760c <mbedtls_mpi_set_bit>
    4630:	350001e0 	cbnz	w0, 466c <TEE_BigIntSetBit+0x94>
    4634:	aa1303e1 	mov	x1, x19
    4638:	aa1403e0 	mov	x0, x20
    463c:	97fffba1 	bl	34c0 <copy_mpi_to_bigint>
    4640:	2a0003f3 	mov	w19, w0
    4644:	aa1403e0 	mov	x0, x20
    4648:	94000ac0 	bl	7148 <mbedtls_mpi_free>
    464c:	b00000a3 	adrp	x3, 19000 <_DYNAMIC>
    4650:	f9409863 	ldr	x3, [x3, #304]
    4654:	f9402fe0 	ldr	x0, [sp, #88]
    4658:	f9400061 	ldr	x1, [x3]
    465c:	eb010000 	subs	x0, x0, x1
    4660:	d2800001 	mov	x1, #0x0                   	// #0
    4664:	54000080 	b.eq	4674 <TEE_BigIntSetBit+0x9c>  // b.none
    4668:	97fff004 	bl	678 <__stack_chk_fail>
    466c:	1299fe13 	mov	w19, #0xffff300f            	// #-53233
    4670:	17fffff5 	b	4644 <TEE_BigIntSetBit+0x6c>
    4674:	2a1303e0 	mov	w0, w19
    4678:	a94153f3 	ldp	x19, x20, [sp, #16]
    467c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    4680:	a8c67bfd 	ldp	x29, x30, [sp], #96
    4684:	d65f03c0 	ret

0000000000004688 <TEE_BigIntAssign>:
TEE_BigIntAssign():
    4688:	eb00003f 	cmp	x1, x0
    468c:	540001e0 	b.eq	46c8 <TEE_BigIntAssign+0x40>  // b.none
    4690:	79400c22 	ldrh	w2, [x1, #6]
    4694:	79400803 	ldrh	w3, [x0, #4]
    4698:	6b02007f 	cmp	w3, w2
    469c:	540001a3 	b.cc	46d0 <TEE_BigIntAssign+0x48>  // b.lo, b.ul, b.last
    46a0:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    46a4:	910003fd 	mov	x29, sp
    46a8:	b8408423 	ldr	w3, [x1], #8
    46ac:	79000c02 	strh	w2, [x0, #6]
    46b0:	d37e3c42 	ubfiz	x2, x2, #2, #16
    46b4:	b8008403 	str	w3, [x0], #8
    46b8:	97ffee52 	bl	0 <memcpy>
    46bc:	52800000 	mov	w0, #0x0                   	// #0
    46c0:	a8c17bfd 	ldp	x29, x30, [sp], #16
    46c4:	d65f03c0 	ret
    46c8:	52800000 	mov	w0, #0x0                   	// #0
    46cc:	d65f03c0 	ret
    46d0:	1299fe00 	mov	w0, #0xffff300f            	// #-53233
    46d4:	d65f03c0 	ret

00000000000046d8 <TEE_BigIntAbs>:
TEE_BigIntAbs():
    46d8:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    46dc:	910003fd 	mov	x29, sp
    46e0:	f9000bf3 	str	x19, [sp, #16]
    46e4:	aa0003f3 	mov	x19, x0
    46e8:	97ffffe8 	bl	4688 <TEE_BigIntAssign>
    46ec:	35000060 	cbnz	w0, 46f8 <TEE_BigIntAbs+0x20>
    46f0:	52800021 	mov	w1, #0x1                   	// #1
    46f4:	b9000261 	str	w1, [x19]
    46f8:	f9400bf3 	ldr	x19, [sp, #16]
    46fc:	a8c27bfd 	ldp	x29, x30, [sp], #32
    4700:	d65f03c0 	ret

0000000000004704 <TEE_BigIntAdd>:
TEE_BigIntAdd():
    4704:	b00000a3 	adrp	x3, 19000 <_DYNAMIC>
    4708:	f940b863 	ldr	x3, [x3, #368]
    470c:	17fffb86 	b	3524 <bigint_binary>

0000000000004710 <TEE_BigIntSub>:
TEE_BigIntSub():
    4710:	b00000a3 	adrp	x3, 19000 <_DYNAMIC>
    4714:	f940c463 	ldr	x3, [x3, #392]
    4718:	17fffb83 	b	3524 <bigint_binary>

000000000000471c <TEE_BigIntNeg>:
TEE_BigIntNeg():
    471c:	a9b87bfd 	stp	x29, x30, [sp, #-128]!
    4720:	b00000a2 	adrp	x2, 19000 <_DYNAMIC>
    4724:	910003fd 	mov	x29, sp
    4728:	f9409842 	ldr	x2, [x2, #304]
    472c:	a90153f3 	stp	x19, x20, [sp, #16]
    4730:	aa0003f3 	mov	x19, x0
    4734:	a9025bf5 	stp	x21, x22, [sp, #32]
    4738:	9100e3f4 	add	x20, sp, #0x38
    473c:	aa0103f5 	mov	x21, x1
    4740:	f9400040 	ldr	x0, [x2]
    4744:	f9003fe0 	str	x0, [sp, #120]
    4748:	d2800000 	mov	x0, #0x0                   	// #0
    474c:	aa1303e1 	mov	x1, x19
    4750:	aa1403e0 	mov	x0, x20
    4754:	97fffb35 	bl	3428 <get_mpi>
    4758:	eb15027f 	cmp	x19, x21
    475c:	54000220 	b.eq	47a0 <TEE_BigIntNeg+0x84>  // b.none
    4760:	910163f6 	add	x22, sp, #0x58
    4764:	aa1503e1 	mov	x1, x21
    4768:	aa1603e0 	mov	x0, x22
    476c:	97fffb2f 	bl	3428 <get_mpi>
    4770:	aa1603e1 	mov	x1, x22
    4774:	aa1403e0 	mov	x0, x20
    4778:	94000b2a 	bl	7420 <mbedtls_mpi_copy>
    477c:	2a0003e2 	mov	w2, w0
    4780:	340000c0 	cbz	w0, 4798 <TEE_BigIntNeg+0x7c>
    4784:	52803ec1 	mov	w1, #0x1f6                 	// #502
    4788:	f0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    478c:	91355400 	add	x0, x0, #0xd55
    4790:	91027c00 	add	x0, x0, #0x9f
    4794:	97fffb19 	bl	33f8 <mpi_panic>
    4798:	aa1603e0 	mov	x0, x22
    479c:	94000a6b 	bl	7148 <mbedtls_mpi_free>
    47a0:	b9403be0 	ldr	w0, [sp, #56]
    47a4:	aa1303e1 	mov	x1, x19
    47a8:	4b0003e0 	neg	w0, w0
    47ac:	b9003be0 	str	w0, [sp, #56]
    47b0:	aa1403e0 	mov	x0, x20
    47b4:	97fffb43 	bl	34c0 <copy_mpi_to_bigint>
    47b8:	2a0003e2 	mov	w2, w0
    47bc:	34000060 	cbz	w0, 47c8 <TEE_BigIntNeg+0xac>
    47c0:	52803fa1 	mov	w1, #0x1fd                 	// #509
    47c4:	17fffff1 	b	4788 <TEE_BigIntNeg+0x6c>
    47c8:	aa1403e0 	mov	x0, x20
    47cc:	94000a5f 	bl	7148 <mbedtls_mpi_free>
    47d0:	b00000a2 	adrp	x2, 19000 <_DYNAMIC>
    47d4:	f9409842 	ldr	x2, [x2, #304]
    47d8:	f9403fe0 	ldr	x0, [sp, #120]
    47dc:	f9400041 	ldr	x1, [x2]
    47e0:	eb010000 	subs	x0, x0, x1
    47e4:	d2800001 	mov	x1, #0x0                   	// #0
    47e8:	54000040 	b.eq	47f0 <TEE_BigIntNeg+0xd4>  // b.none
    47ec:	97ffefa3 	bl	678 <__stack_chk_fail>
    47f0:	a94153f3 	ldp	x19, x20, [sp, #16]
    47f4:	a9425bf5 	ldp	x21, x22, [sp, #32]
    47f8:	a8c87bfd 	ldp	x29, x30, [sp], #128
    47fc:	d65f03c0 	ret

0000000000004800 <TEE_BigIntMul>:
TEE_BigIntMul():
    4800:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
    4804:	910003fd 	mov	x29, sp
    4808:	f90023f9 	str	x25, [sp, #64]
    480c:	b00000b9 	adrp	x25, 19000 <_DYNAMIC>
    4810:	a90363f7 	stp	x23, x24, [sp, #48]
    4814:	aa0003f7 	mov	x23, x0
    4818:	aa1903f8 	mov	x24, x25
    481c:	f9409b20 	ldr	x0, [x25, #304]
    4820:	a90153f3 	stp	x19, x20, [sp, #16]
    4824:	a9025bf5 	stp	x21, x22, [sp, #32]
    4828:	aa0103f5 	mov	x21, x1
    482c:	aa0203f6 	mov	x22, x2
    4830:	f9400001 	ldr	x1, [x0]
    4834:	f90037e1 	str	x1, [sp, #104]
    4838:	d2800001 	mov	x1, #0x0                   	// #0
    483c:	aa1503e0 	mov	x0, x21
    4840:	97ffff48 	bl	4560 <TEE_BigIntGetBitCount>
    4844:	2a0003f3 	mov	w19, w0
    4848:	aa1603e0 	mov	x0, x22
    484c:	97ffff45 	bl	4560 <TEE_BigIntGetBitCount>
    4850:	2a0003e0 	mov	w0, w0
    4854:	91007e73 	add	x19, x19, #0x1f
    4858:	91007c00 	add	x0, x0, #0x1f
    485c:	f9002fff 	str	xzr, [sp, #88]
    4860:	b90063ff 	str	wzr, [sp, #96]
    4864:	d345fc00 	lsr	x0, x0, #5
    4868:	8b531413 	add	x19, x0, x19, lsr #5
    486c:	f940f720 	ldr	x0, [x25, #488]
    4870:	91001273 	add	x19, x19, #0x4
    4874:	d37ef661 	lsl	x1, x19, #2
    4878:	f9400000 	ldr	x0, [x0]
    487c:	940022c7 	bl	d398 <mempool_alloc>
    4880:	aa0003f4 	mov	x20, x0
    4884:	b5000060 	cbnz	x0, 4890 <TEE_BigIntMul+0x90>
    4888:	129ffe60 	mov	w0, #0xffff000c            	// #-65524
    488c:	94000330 	bl	554c <TEE_Panic>
    4890:	aa1303e1 	mov	x1, x19
    4894:	aa1403e0 	mov	x0, x20
    4898:	910163f3 	add	x19, sp, #0x58
    489c:	97fffcf8 	bl	3c7c <TEE_BigIntInit>
    48a0:	aa1303e0 	mov	x0, x19
    48a4:	d2800061 	mov	x1, #0x3                   	// #3
    48a8:	97fffcf5 	bl	3c7c <TEE_BigIntInit>
    48ac:	f940b703 	ldr	x3, [x24, #360]
    48b0:	aa1603e2 	mov	x2, x22
    48b4:	aa1503e1 	mov	x1, x21
    48b8:	aa1403e0 	mov	x0, x20
    48bc:	97fffb1a 	bl	3524 <bigint_binary>
    48c0:	aa1303e2 	mov	x2, x19
    48c4:	aa1403e1 	mov	x1, x20
    48c8:	aa1703e0 	mov	x0, x23
    48cc:	97ffff8e 	bl	4704 <TEE_BigIntAdd>
    48d0:	f940f700 	ldr	x0, [x24, #488]
    48d4:	aa1403e1 	mov	x1, x20
    48d8:	f9400000 	ldr	x0, [x0]
    48dc:	940022dc 	bl	d44c <mempool_free>
    48e0:	f9409b18 	ldr	x24, [x24, #304]
    48e4:	f94037e0 	ldr	x0, [sp, #104]
    48e8:	f9400301 	ldr	x1, [x24]
    48ec:	eb010000 	subs	x0, x0, x1
    48f0:	d2800001 	mov	x1, #0x0                   	// #0
    48f4:	54000040 	b.eq	48fc <TEE_BigIntMul+0xfc>  // b.none
    48f8:	97ffef60 	bl	678 <__stack_chk_fail>
    48fc:	a94153f3 	ldp	x19, x20, [sp, #16]
    4900:	a9425bf5 	ldp	x21, x22, [sp, #32]
    4904:	a94363f7 	ldp	x23, x24, [sp, #48]
    4908:	f94023f9 	ldr	x25, [sp, #64]
    490c:	a8c77bfd 	ldp	x29, x30, [sp], #112
    4910:	d65f03c0 	ret

0000000000004914 <TEE_BigIntSquare>:
TEE_BigIntSquare():
    4914:	aa0103e2 	mov	x2, x1
    4918:	17ffffba 	b	4800 <TEE_BigIntMul>

000000000000491c <TEE_BigIntDiv>:
TEE_BigIntDiv():
    491c:	a9b17bfd 	stp	x29, x30, [sp, #-240]!
    4920:	b00000a4 	adrp	x4, 19000 <_DYNAMIC>
    4924:	910003fd 	mov	x29, sp
    4928:	f9409884 	ldr	x4, [x4, #304]
    492c:	a90153f3 	stp	x19, x20, [sp, #16]
    4930:	aa0003f4 	mov	x20, x0
    4934:	a9025bf5 	stp	x21, x22, [sp, #32]
    4938:	aa0103f3 	mov	x19, x1
    493c:	aa0003e1 	mov	x1, x0
    4940:	a90363f7 	stp	x23, x24, [sp, #48]
    4944:	9101a3f8 	add	x24, sp, #0x68
    4948:	aa0303f5 	mov	x21, x3
    494c:	a9046bf9 	stp	x25, x26, [sp, #64]
    4950:	910223f7 	add	x23, sp, #0x88
    4954:	aa0203f9 	mov	x25, x2
    4958:	f9002bfb 	str	x27, [sp, #80]
    495c:	9102a3fb 	add	x27, sp, #0xa8
    4960:	f9400080 	ldr	x0, [x4]
    4964:	f90077e0 	str	x0, [sp, #232]
    4968:	d2800000 	mov	x0, #0x0                   	// #0
    496c:	aa1803e0 	mov	x0, x24
    4970:	97fffaae 	bl	3428 <get_mpi>
    4974:	aa1303e1 	mov	x1, x19
    4978:	aa1703e0 	mov	x0, x23
    497c:	97fffaab 	bl	3428 <get_mpi>
    4980:	eb19029f 	cmp	x20, x25
    4984:	540003c0 	b.eq	49fc <TEE_BigIntDiv+0xe0>  // b.none
    4988:	eb19027f 	cmp	x19, x25
    498c:	540003c0 	b.eq	4a04 <TEE_BigIntDiv+0xe8>  // b.none
    4990:	aa1b03f6 	mov	x22, x27
    4994:	aa1903e1 	mov	x1, x25
    4998:	aa1b03e0 	mov	x0, x27
    499c:	97fffaa3 	bl	3428 <get_mpi>
    49a0:	eb15029f 	cmp	x20, x21
    49a4:	910323fa 	add	x26, sp, #0xc8
    49a8:	54000320 	b.eq	4a0c <TEE_BigIntDiv+0xf0>  // b.none
    49ac:	eb15027f 	cmp	x19, x21
    49b0:	54000320 	b.eq	4a14 <TEE_BigIntDiv+0xf8>  // b.none
    49b4:	eb15033f 	cmp	x25, x21
    49b8:	54000320 	b.eq	4a1c <TEE_BigIntDiv+0x100>  // b.none
    49bc:	aa1503e1 	mov	x1, x21
    49c0:	aa1a03f5 	mov	x21, x26
    49c4:	aa1a03e0 	mov	x0, x26
    49c8:	97fffa98 	bl	3428 <get_mpi>
    49cc:	aa1603e2 	mov	x2, x22
    49d0:	aa1503e3 	mov	x3, x21
    49d4:	aa1703e1 	mov	x1, x23
    49d8:	aa1803e0 	mov	x0, x24
    49dc:	94000e57 	bl	8338 <mbedtls_mpi_div_mpi>
    49e0:	2a0003e2 	mov	w2, w0
    49e4:	34000200 	cbz	w0, 4a24 <TEE_BigIntDiv+0x108>
    49e8:	52804741 	mov	w1, #0x23a                 	// #570
    49ec:	f0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    49f0:	91355400 	add	x0, x0, #0xd55
    49f4:	9102b400 	add	x0, x0, #0xad
    49f8:	97fffa80 	bl	33f8 <mpi_panic>
    49fc:	aa1803f6 	mov	x22, x24
    4a00:	17ffffe8 	b	49a0 <TEE_BigIntDiv+0x84>
    4a04:	aa1703f6 	mov	x22, x23
    4a08:	17ffffe6 	b	49a0 <TEE_BigIntDiv+0x84>
    4a0c:	aa1803f5 	mov	x21, x24
    4a10:	17ffffef 	b	49cc <TEE_BigIntDiv+0xb0>
    4a14:	aa1703f5 	mov	x21, x23
    4a18:	17ffffed 	b	49cc <TEE_BigIntDiv+0xb0>
    4a1c:	aa1603f5 	mov	x21, x22
    4a20:	17ffffeb 	b	49cc <TEE_BigIntDiv+0xb0>
    4a24:	b4000114 	cbz	x20, 4a44 <TEE_BigIntDiv+0x128>
    4a28:	aa1403e1 	mov	x1, x20
    4a2c:	aa1803e0 	mov	x0, x24
    4a30:	97fffaa4 	bl	34c0 <copy_mpi_to_bigint>
    4a34:	2a0003e2 	mov	w2, w0
    4a38:	34000060 	cbz	w0, 4a44 <TEE_BigIntDiv+0x128>
    4a3c:	528047a1 	mov	w1, #0x23d                 	// #573
    4a40:	17ffffeb 	b	49ec <TEE_BigIntDiv+0xd0>
    4a44:	b4000113 	cbz	x19, 4a64 <TEE_BigIntDiv+0x148>
    4a48:	aa1303e1 	mov	x1, x19
    4a4c:	aa1703e0 	mov	x0, x23
    4a50:	97fffa9c 	bl	34c0 <copy_mpi_to_bigint>
    4a54:	2a0003e2 	mov	w2, w0
    4a58:	34000060 	cbz	w0, 4a64 <TEE_BigIntDiv+0x148>
    4a5c:	528047e1 	mov	w1, #0x23f                 	// #575
    4a60:	17ffffe3 	b	49ec <TEE_BigIntDiv+0xd0>
    4a64:	aa1803e0 	mov	x0, x24
    4a68:	940009b8 	bl	7148 <mbedtls_mpi_free>
    4a6c:	aa1703e0 	mov	x0, x23
    4a70:	940009b6 	bl	7148 <mbedtls_mpi_free>
    4a74:	eb1b02df 	cmp	x22, x27
    4a78:	54000061 	b.ne	4a84 <TEE_BigIntDiv+0x168>  // b.any
    4a7c:	aa1603e0 	mov	x0, x22
    4a80:	940009b2 	bl	7148 <mbedtls_mpi_free>
    4a84:	eb1a02bf 	cmp	x21, x26
    4a88:	54000061 	b.ne	4a94 <TEE_BigIntDiv+0x178>  // b.any
    4a8c:	aa1503e0 	mov	x0, x21
    4a90:	940009ae 	bl	7148 <mbedtls_mpi_free>
    4a94:	b00000a4 	adrp	x4, 19000 <_DYNAMIC>
    4a98:	f9409884 	ldr	x4, [x4, #304]
    4a9c:	f94077e0 	ldr	x0, [sp, #232]
    4aa0:	f9400081 	ldr	x1, [x4]
    4aa4:	eb010000 	subs	x0, x0, x1
    4aa8:	d2800001 	mov	x1, #0x0                   	// #0
    4aac:	54000040 	b.eq	4ab4 <TEE_BigIntDiv+0x198>  // b.none
    4ab0:	97ffeef2 	bl	678 <__stack_chk_fail>
    4ab4:	a94153f3 	ldp	x19, x20, [sp, #16]
    4ab8:	a9425bf5 	ldp	x21, x22, [sp, #32]
    4abc:	a94363f7 	ldp	x23, x24, [sp, #48]
    4ac0:	a9446bf9 	ldp	x25, x26, [sp, #64]
    4ac4:	f9402bfb 	ldr	x27, [sp, #80]
    4ac8:	a8cf7bfd 	ldp	x29, x30, [sp], #240
    4acc:	d65f03c0 	ret

0000000000004ad0 <TEE_BigIntMod>:
TEE_BigIntMod():
    4ad0:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    4ad4:	910003fd 	mov	x29, sp
    4ad8:	a90153f3 	stp	x19, x20, [sp, #16]
    4adc:	aa0003f4 	mov	x20, x0
    4ae0:	aa0203f3 	mov	x19, x2
    4ae4:	aa0203e0 	mov	x0, x2
    4ae8:	f90013f5 	str	x21, [sp, #32]
    4aec:	aa0103f5 	mov	x21, x1
    4af0:	52800041 	mov	w1, #0x2                   	// #2
    4af4:	97fffd7c 	bl	40e4 <TEE_BigIntCmpS32>
    4af8:	36f80100 	tbz	w0, #31, 4b18 <TEE_BigIntMod+0x48>
    4afc:	f0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    4b00:	91355400 	add	x0, x0, #0xd55
    4b04:	f0000082 	adrp	x2, 17000 <__text_end+0x3c08>
    4b08:	9102ec00 	add	x0, x0, #0xbb
    4b0c:	91340c42 	add	x2, x2, #0xd03
    4b10:	52804961 	mov	w1, #0x24b                 	// #587
    4b14:	97fffa2d 	bl	33c8 <api_panic>
    4b18:	aa1303e2 	mov	x2, x19
    4b1c:	aa1503e1 	mov	x1, x21
    4b20:	aa1403e0 	mov	x0, x20
    4b24:	b00000a3 	adrp	x3, 19000 <_DYNAMIC>
    4b28:	a94153f3 	ldp	x19, x20, [sp, #16]
    4b2c:	f94013f5 	ldr	x21, [sp, #32]
    4b30:	a8c37bfd 	ldp	x29, x30, [sp], #48
    4b34:	f940d863 	ldr	x3, [x3, #432]
    4b38:	17fffa7b 	b	3524 <bigint_binary>

0000000000004b3c <TEE_BigIntAddMod>:
TEE_BigIntAddMod():
    4b3c:	b00000a4 	adrp	x4, 19000 <_DYNAMIC>
    4b40:	f940b884 	ldr	x4, [x4, #368]
    4b44:	17fffd88 	b	4164 <bigint_binary_mod>

0000000000004b48 <TEE_BigIntSubMod>:
TEE_BigIntSubMod():
    4b48:	b00000a4 	adrp	x4, 19000 <_DYNAMIC>
    4b4c:	f940c484 	ldr	x4, [x4, #392]
    4b50:	17fffd85 	b	4164 <bigint_binary_mod>

0000000000004b54 <TEE_BigIntMulMod>:
TEE_BigIntMulMod():
    4b54:	b00000a4 	adrp	x4, 19000 <_DYNAMIC>
    4b58:	f940b484 	ldr	x4, [x4, #360]
    4b5c:	17fffd82 	b	4164 <bigint_binary_mod>

0000000000004b60 <TEE_BigIntSquareMod>:
TEE_BigIntSquareMod():
    4b60:	aa0203e3 	mov	x3, x2
    4b64:	aa0103e2 	mov	x2, x1
    4b68:	17fffffb 	b	4b54 <TEE_BigIntMulMod>

0000000000004b6c <TEE_BigIntInvMod>:
TEE_BigIntInvMod():
    4b6c:	a9b57bfd 	stp	x29, x30, [sp, #-176]!
    4b70:	b00000a3 	adrp	x3, 19000 <_DYNAMIC>
    4b74:	910003fd 	mov	x29, sp
    4b78:	f9409863 	ldr	x3, [x3, #304]
    4b7c:	a90153f3 	stp	x19, x20, [sp, #16]
    4b80:	aa0003f4 	mov	x20, x0
    4b84:	a9025bf5 	stp	x21, x22, [sp, #32]
    4b88:	aa0103f5 	mov	x21, x1
    4b8c:	aa0203f6 	mov	x22, x2
    4b90:	f9001bf7 	str	x23, [sp, #48]
    4b94:	52800041 	mov	w1, #0x2                   	// #2
    4b98:	f9400060 	ldr	x0, [x3]
    4b9c:	f90057e0 	str	x0, [sp, #168]
    4ba0:	d2800000 	mov	x0, #0x0                   	// #0
    4ba4:	aa0203e0 	mov	x0, x2
    4ba8:	97fffd4f 	bl	40e4 <TEE_BigIntCmpS32>
    4bac:	36f80100 	tbz	w0, #31, 4bcc <TEE_BigIntInvMod+0x60>
    4bb0:	f0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    4bb4:	91355400 	add	x0, x0, #0xd55
    4bb8:	f0000082 	adrp	x2, 17000 <__text_end+0x3c08>
    4bbc:	91032400 	add	x0, x0, #0xc9
    4bc0:	91346042 	add	x2, x2, #0xd18
    4bc4:	52804e21 	mov	w1, #0x271                 	// #625
    4bc8:	97fffa00 	bl	33c8 <api_panic>
    4bcc:	aa1503e0 	mov	x0, x21
    4bd0:	52800001 	mov	w1, #0x0                   	// #0
    4bd4:	97fffd44 	bl	40e4 <TEE_BigIntCmpS32>
    4bd8:	34fffec0 	cbz	w0, 4bb0 <TEE_BigIntInvMod+0x44>
    4bdc:	910123f3 	add	x19, sp, #0x48
    4be0:	aa1403e1 	mov	x1, x20
    4be4:	aa1303e0 	mov	x0, x19
    4be8:	910223f7 	add	x23, sp, #0x88
    4bec:	97fffa0f 	bl	3428 <get_mpi>
    4bf0:	aa1603e1 	mov	x1, x22
    4bf4:	aa1703e0 	mov	x0, x23
    4bf8:	97fffa0c 	bl	3428 <get_mpi>
    4bfc:	9101a3f6 	add	x22, sp, #0x68
    4c00:	eb1402bf 	cmp	x21, x20
    4c04:	54000200 	b.eq	4c44 <TEE_BigIntInvMod+0xd8>  // b.none
    4c08:	aa1503e1 	mov	x1, x21
    4c0c:	aa1603f5 	mov	x21, x22
    4c10:	aa1603e0 	mov	x0, x22
    4c14:	97fffa05 	bl	3428 <get_mpi>
    4c18:	aa1703e2 	mov	x2, x23
    4c1c:	aa1503e1 	mov	x1, x21
    4c20:	aa1303e0 	mov	x0, x19
    4c24:	9400135f 	bl	99a0 <mbedtls_mpi_inv_mod>
    4c28:	2a0003e2 	mov	w2, w0
    4c2c:	34000100 	cbz	w0, 4c4c <TEE_BigIntInvMod+0xe0>
    4c30:	52804f61 	mov	w1, #0x27b                 	// #635
    4c34:	f0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    4c38:	91355400 	add	x0, x0, #0xd55
    4c3c:	91032400 	add	x0, x0, #0xc9
    4c40:	97fff9ee 	bl	33f8 <mpi_panic>
    4c44:	aa1303f5 	mov	x21, x19
    4c48:	17fffff4 	b	4c18 <TEE_BigIntInvMod+0xac>
    4c4c:	aa1403e1 	mov	x1, x20
    4c50:	aa1303e0 	mov	x0, x19
    4c54:	97fffa1b 	bl	34c0 <copy_mpi_to_bigint>
    4c58:	2a0003e2 	mov	w2, w0
    4c5c:	34000060 	cbz	w0, 4c68 <TEE_BigIntInvMod+0xfc>
    4c60:	52804fa1 	mov	w1, #0x27d                 	// #637
    4c64:	17fffff4 	b	4c34 <TEE_BigIntInvMod+0xc8>
    4c68:	aa1303e0 	mov	x0, x19
    4c6c:	94000937 	bl	7148 <mbedtls_mpi_free>
    4c70:	aa1703e0 	mov	x0, x23
    4c74:	94000935 	bl	7148 <mbedtls_mpi_free>
    4c78:	eb1602bf 	cmp	x21, x22
    4c7c:	54000061 	b.ne	4c88 <TEE_BigIntInvMod+0x11c>  // b.any
    4c80:	aa1503e0 	mov	x0, x21
    4c84:	94000931 	bl	7148 <mbedtls_mpi_free>
    4c88:	b00000a3 	adrp	x3, 19000 <_DYNAMIC>
    4c8c:	f9409863 	ldr	x3, [x3, #304]
    4c90:	f94057e0 	ldr	x0, [sp, #168]
    4c94:	f9400061 	ldr	x1, [x3]
    4c98:	eb010000 	subs	x0, x0, x1
    4c9c:	d2800001 	mov	x1, #0x0                   	// #0
    4ca0:	54000040 	b.eq	4ca8 <TEE_BigIntInvMod+0x13c>  // b.none
    4ca4:	97ffee75 	bl	678 <__stack_chk_fail>
    4ca8:	a94153f3 	ldp	x19, x20, [sp, #16]
    4cac:	a9425bf5 	ldp	x21, x22, [sp, #32]
    4cb0:	f9401bf7 	ldr	x23, [sp, #48]
    4cb4:	a8cb7bfd 	ldp	x29, x30, [sp], #176
    4cb8:	d65f03c0 	ret

0000000000004cbc <TEE_BigIntRelativePrime>:
TEE_BigIntRelativePrime():
    4cbc:	a9b57bfd 	stp	x29, x30, [sp, #-176]!
    4cc0:	b00000a2 	adrp	x2, 19000 <_DYNAMIC>
    4cc4:	910003fd 	mov	x29, sp
    4cc8:	f9409842 	ldr	x2, [x2, #304]
    4ccc:	a90153f3 	stp	x19, x20, [sp, #16]
    4cd0:	aa0003f3 	mov	x19, x0
    4cd4:	a9025bf5 	stp	x21, x22, [sp, #32]
    4cd8:	910123f4 	add	x20, sp, #0x48
    4cdc:	aa0103f5 	mov	x21, x1
    4ce0:	f9001bf7 	str	x23, [sp, #48]
    4ce4:	aa0003e1 	mov	x1, x0
    4ce8:	f9400040 	ldr	x0, [x2]
    4cec:	f90057e0 	str	x0, [sp, #168]
    4cf0:	d2800000 	mov	x0, #0x0                   	// #0
    4cf4:	aa1403e0 	mov	x0, x20
    4cf8:	97fff9cc 	bl	3428 <get_mpi>
    4cfc:	eb15027f 	cmp	x19, x21
    4d00:	9101a3f3 	add	x19, sp, #0x68
    4d04:	54000260 	b.eq	4d50 <TEE_BigIntRelativePrime+0x94>  // b.none
    4d08:	aa1303f6 	mov	x22, x19
    4d0c:	aa1503e1 	mov	x1, x21
    4d10:	aa1303e0 	mov	x0, x19
    4d14:	97fff9c5 	bl	3428 <get_mpi>
    4d18:	910223f5 	add	x21, sp, #0x88
    4d1c:	aa1503e0 	mov	x0, x21
    4d20:	94000900 	bl	7120 <mbedtls_mpi_init_mempool>
    4d24:	aa1303e2 	mov	x2, x19
    4d28:	aa1403e1 	mov	x1, x20
    4d2c:	aa1503e0 	mov	x0, x21
    4d30:	940011be 	bl	9428 <mbedtls_mpi_gcd>
    4d34:	2a0003e2 	mov	w2, w0
    4d38:	34000100 	cbz	w0, 4d58 <TEE_BigIntRelativePrime+0x9c>
    4d3c:	f0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    4d40:	91355400 	add	x0, x0, #0xd55
    4d44:	91036800 	add	x0, x0, #0xda
    4d48:	528052a1 	mov	w1, #0x295                 	// #661
    4d4c:	97fff9ab 	bl	33f8 <mpi_panic>
    4d50:	aa1403f6 	mov	x22, x20
    4d54:	17fffff1 	b	4d18 <TEE_BigIntRelativePrime+0x5c>
    4d58:	52800021 	mov	w1, #0x1                   	// #1
    4d5c:	aa1503e0 	mov	x0, x21
    4d60:	94000b4d 	bl	7a94 <mbedtls_mpi_cmp_int>
    4d64:	7100001f 	cmp	w0, #0x0
    4d68:	1a9f17f7 	cset	w23, eq  // eq = none
    4d6c:	aa1503e0 	mov	x0, x21
    4d70:	940008f6 	bl	7148 <mbedtls_mpi_free>
    4d74:	aa1403e0 	mov	x0, x20
    4d78:	940008f4 	bl	7148 <mbedtls_mpi_free>
    4d7c:	eb1302df 	cmp	x22, x19
    4d80:	54000061 	b.ne	4d8c <TEE_BigIntRelativePrime+0xd0>  // b.any
    4d84:	aa1603e0 	mov	x0, x22
    4d88:	940008f0 	bl	7148 <mbedtls_mpi_free>
    4d8c:	b00000a2 	adrp	x2, 19000 <_DYNAMIC>
    4d90:	f9409842 	ldr	x2, [x2, #304]
    4d94:	f94057e0 	ldr	x0, [sp, #168]
    4d98:	f9400041 	ldr	x1, [x2]
    4d9c:	eb010000 	subs	x0, x0, x1
    4da0:	d2800001 	mov	x1, #0x0                   	// #0
    4da4:	54000040 	b.eq	4dac <TEE_BigIntRelativePrime+0xf0>  // b.none
    4da8:	97ffee34 	bl	678 <__stack_chk_fail>
    4dac:	2a1703e0 	mov	w0, w23
    4db0:	a94153f3 	ldp	x19, x20, [sp, #16]
    4db4:	a9425bf5 	ldp	x21, x22, [sp, #32]
    4db8:	f9401bf7 	ldr	x23, [sp, #48]
    4dbc:	a8cb7bfd 	ldp	x29, x30, [sp], #176
    4dc0:	d65f03c0 	ret

0000000000004dc4 <TEE_BigIntExpMod>:
TEE_BigIntExpMod():
    4dc4:	a9b27bfd 	stp	x29, x30, [sp, #-224]!
    4dc8:	b00000a4 	adrp	x4, 19000 <_DYNAMIC>
    4dcc:	910003fd 	mov	x29, sp
    4dd0:	f9409884 	ldr	x4, [x4, #304]
    4dd4:	a90153f3 	stp	x19, x20, [sp, #16]
    4dd8:	aa0003f4 	mov	x20, x0
    4ddc:	a9025bf5 	stp	x21, x22, [sp, #32]
    4de0:	910163f3 	add	x19, sp, #0x58
    4de4:	aa0303f6 	mov	x22, x3
    4de8:	a90363f7 	stp	x23, x24, [sp, #48]
    4dec:	aa0203f5 	mov	x21, x2
    4df0:	aa0103f8 	mov	x24, x1
    4df4:	a9046bf9 	stp	x25, x26, [sp, #64]
    4df8:	aa1403e1 	mov	x1, x20
    4dfc:	9102e3f7 	add	x23, sp, #0xb8
    4e00:	f9400080 	ldr	x0, [x4]
    4e04:	f9006fe0 	str	x0, [sp, #216]
    4e08:	d2800000 	mov	x0, #0x0                   	// #0
    4e0c:	a905ffff 	stp	xzr, xzr, [sp, #88]
    4e10:	aa1303e0 	mov	x0, x19
    4e14:	a906ffff 	stp	xzr, xzr, [sp, #104]
    4e18:	9101e3fa 	add	x26, sp, #0x78
    4e1c:	a907ffff 	stp	xzr, xzr, [sp, #120]
    4e20:	a908ffff 	stp	xzr, xzr, [sp, #136]
    4e24:	a909ffff 	stp	xzr, xzr, [sp, #152]
    4e28:	a90affff 	stp	xzr, xzr, [sp, #168]
    4e2c:	a90bffff 	stp	xzr, xzr, [sp, #184]
    4e30:	a90cffff 	stp	xzr, xzr, [sp, #200]
    4e34:	97fff97d 	bl	3428 <get_mpi>
    4e38:	aa1603e1 	mov	x1, x22
    4e3c:	aa1703e0 	mov	x0, x23
    4e40:	97fff97a 	bl	3428 <get_mpi>
    4e44:	eb18029f 	cmp	x20, x24
    4e48:	54000340 	b.eq	4eb0 <TEE_BigIntExpMod+0xec>  // b.none
    4e4c:	aa1a03f6 	mov	x22, x26
    4e50:	aa1803e1 	mov	x1, x24
    4e54:	aa1a03e0 	mov	x0, x26
    4e58:	97fff974 	bl	3428 <get_mpi>
    4e5c:	eb15029f 	cmp	x20, x21
    4e60:	910263f9 	add	x25, sp, #0x98
    4e64:	540002a0 	b.eq	4eb8 <TEE_BigIntExpMod+0xf4>  // b.none
    4e68:	eb15031f 	cmp	x24, x21
    4e6c:	540002a0 	b.eq	4ec0 <TEE_BigIntExpMod+0xfc>  // b.none
    4e70:	aa1503e1 	mov	x1, x21
    4e74:	aa1903f5 	mov	x21, x25
    4e78:	aa1903e0 	mov	x0, x25
    4e7c:	97fff96b 	bl	3428 <get_mpi>
    4e80:	aa1703e0 	mov	x0, x23
    4e84:	52800041 	mov	w1, #0x2                   	// #2
    4e88:	94000b03 	bl	7a94 <mbedtls_mpi_cmp_int>
    4e8c:	7100001f 	cmp	w0, #0x0
    4e90:	540001cc 	b.gt	4ec8 <TEE_BigIntExpMod+0x104>
    4e94:	f0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    4e98:	91355400 	add	x0, x0, #0xd55
    4e9c:	f0000082 	adrp	x2, 17000 <__text_end+0x3c08>
    4ea0:	9103c800 	add	x0, x0, #0xf2
    4ea4:	91350c42 	add	x2, x2, #0xd43
    4ea8:	528058c1 	mov	w1, #0x2c6                 	// #710
    4eac:	97fff947 	bl	33c8 <api_panic>
    4eb0:	aa1303f6 	mov	x22, x19
    4eb4:	17ffffea 	b	4e5c <TEE_BigIntExpMod+0x98>
    4eb8:	aa1303f5 	mov	x21, x19
    4ebc:	17fffff1 	b	4e80 <TEE_BigIntExpMod+0xbc>
    4ec0:	aa1603f5 	mov	x21, x22
    4ec4:	17ffffef 	b	4e80 <TEE_BigIntExpMod+0xbc>
    4ec8:	aa1703e0 	mov	x0, x23
    4ecc:	97fff9e9 	bl	3670 <mpi_is_odd>
    4ed0:	72001c1f 	tst	w0, #0xff
    4ed4:	540002c0 	b.eq	4f2c <TEE_BigIntExpMod+0x168>  // b.none
    4ed8:	aa1503e2 	mov	x2, x21
    4edc:	aa1703e3 	mov	x3, x23
    4ee0:	aa1603e1 	mov	x1, x22
    4ee4:	aa1303e0 	mov	x0, x19
    4ee8:	d2800004 	mov	x4, #0x0                   	// #0
    4eec:	94000fa9 	bl	8d90 <mbedtls_mpi_exp_mod>
    4ef0:	2a0003e2 	mov	w2, w0
    4ef4:	340000c0 	cbz	w0, 4f0c <TEE_BigIntExpMod+0x148>
    4ef8:	52805981 	mov	w1, #0x2cc                 	// #716
    4efc:	f0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    4f00:	91355400 	add	x0, x0, #0xd55
    4f04:	9103c800 	add	x0, x0, #0xf2
    4f08:	97fff93c 	bl	33f8 <mpi_panic>
    4f0c:	aa1403e1 	mov	x1, x20
    4f10:	aa1303e0 	mov	x0, x19
    4f14:	52800014 	mov	w20, #0x0                   	// #0
    4f18:	97fff96a 	bl	34c0 <copy_mpi_to_bigint>
    4f1c:	2a0003e2 	mov	w2, w0
    4f20:	34000080 	cbz	w0, 4f30 <TEE_BigIntExpMod+0x16c>
    4f24:	528059a1 	mov	w1, #0x2cd                 	// #717
    4f28:	17fffff5 	b	4efc <TEE_BigIntExpMod+0x138>
    4f2c:	129ffeb4 	mov	w20, #0xffff000a            	// #-65526
    4f30:	aa1303e0 	mov	x0, x19
    4f34:	94000885 	bl	7148 <mbedtls_mpi_free>
    4f38:	aa1703e0 	mov	x0, x23
    4f3c:	94000883 	bl	7148 <mbedtls_mpi_free>
    4f40:	eb1a02df 	cmp	x22, x26
    4f44:	54000061 	b.ne	4f50 <TEE_BigIntExpMod+0x18c>  // b.any
    4f48:	aa1603e0 	mov	x0, x22
    4f4c:	9400087f 	bl	7148 <mbedtls_mpi_free>
    4f50:	eb1902bf 	cmp	x21, x25
    4f54:	54000061 	b.ne	4f60 <TEE_BigIntExpMod+0x19c>  // b.any
    4f58:	aa1503e0 	mov	x0, x21
    4f5c:	9400087b 	bl	7148 <mbedtls_mpi_free>
    4f60:	b00000a4 	adrp	x4, 19000 <_DYNAMIC>
    4f64:	f9409884 	ldr	x4, [x4, #304]
    4f68:	f9406fe0 	ldr	x0, [sp, #216]
    4f6c:	f9400081 	ldr	x1, [x4]
    4f70:	eb010000 	subs	x0, x0, x1
    4f74:	d2800001 	mov	x1, #0x0                   	// #0
    4f78:	54000040 	b.eq	4f80 <TEE_BigIntExpMod+0x1bc>  // b.none
    4f7c:	97ffedbf 	bl	678 <__stack_chk_fail>
    4f80:	2a1403e0 	mov	w0, w20
    4f84:	a94153f3 	ldp	x19, x20, [sp, #16]
    4f88:	a9425bf5 	ldp	x21, x22, [sp, #32]
    4f8c:	a94363f7 	ldp	x23, x24, [sp, #48]
    4f90:	a9446bf9 	ldp	x25, x26, [sp, #64]
    4f94:	a8ce7bfd 	ldp	x29, x30, [sp], #224
    4f98:	d65f03c0 	ret

0000000000004f9c <TEE_BigIntComputeExtendedGcd>:
TEE_BigIntComputeExtendedGcd():
    4f9c:	a9ae7bfd 	stp	x29, x30, [sp, #-288]!
    4fa0:	910003fd 	mov	x29, sp
    4fa4:	a9046bf9 	stp	x25, x26, [sp, #64]
    4fa8:	aa0003fa 	mov	x26, x0
    4fac:	b00000a0 	adrp	x0, 19000 <_DYNAMIC>
    4fb0:	a90153f3 	stp	x19, x20, [sp, #16]
    4fb4:	aa0103f9 	mov	x25, x1
    4fb8:	aa0403f3 	mov	x19, x4
    4fbc:	f9409800 	ldr	x0, [x0, #304]
    4fc0:	a9025bf5 	stp	x21, x22, [sp, #32]
    4fc4:	9101e3f5 	add	x21, sp, #0x78
    4fc8:	a90363f7 	stp	x23, x24, [sp, #48]
    4fcc:	aa0303f6 	mov	x22, x3
    4fd0:	aa0203f8 	mov	x24, x2
    4fd4:	a90573fb 	stp	x27, x28, [sp, #80]
    4fd8:	910263f4 	add	x20, sp, #0x98
    4fdc:	9102e3fb 	add	x27, sp, #0xb8
    4fe0:	f9400001 	ldr	x1, [x0]
    4fe4:	f9008fe1 	str	x1, [sp, #280]
    4fe8:	d2800001 	mov	x1, #0x0                   	// #0
    4fec:	aa1503e0 	mov	x0, x21
    4ff0:	aa1a03e1 	mov	x1, x26
    4ff4:	97fff90d 	bl	3428 <get_mpi>
    4ff8:	aa1603e1 	mov	x1, x22
    4ffc:	aa1403e0 	mov	x0, x20
    5000:	97fff90a 	bl	3428 <get_mpi>
    5004:	eb1302df 	cmp	x22, x19
    5008:	54000240 	b.eq	5050 <TEE_BigIntComputeExtendedGcd+0xb4>  // b.none
    500c:	aa1303e1 	mov	x1, x19
    5010:	aa1b03f3 	mov	x19, x27
    5014:	aa1b03e0 	mov	x0, x27
    5018:	97fff904 	bl	3428 <get_mpi>
    501c:	aa180320 	orr	x0, x25, x24
    5020:	b50001c0 	cbnz	x0, 5058 <TEE_BigIntComputeExtendedGcd+0xbc>
    5024:	aa1303e2 	mov	x2, x19
    5028:	aa1403e1 	mov	x1, x20
    502c:	aa1503e0 	mov	x0, x21
    5030:	940010fe 	bl	9428 <mbedtls_mpi_gcd>
    5034:	2a0003e2 	mov	w2, w0
    5038:	34000ae0 	cbz	w0, 5194 <TEE_BigIntComputeExtendedGcd+0x1f8>
    503c:	528068e1 	mov	w1, #0x347                 	// #839
    5040:	d0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    5044:	91355400 	add	x0, x0, #0xd55
    5048:	91040c00 	add	x0, x0, #0x103
    504c:	97fff8eb 	bl	33f8 <mpi_panic>
    5050:	aa1403f3 	mov	x19, x20
    5054:	17fffff2 	b	501c <TEE_BigIntComputeExtendedGcd+0x80>
    5058:	39c263e0 	ldrsb	w0, [sp, #152]
    505c:	5280003c 	mov	w28, #0x1                   	// #1
    5060:	b9006be0 	str	w0, [sp, #104]
    5064:	910363f7 	add	x23, sp, #0xd8
    5068:	39c00260 	ldrsb	w0, [x19]
    506c:	aa1903e1 	mov	x1, x25
    5070:	b9009bfc 	str	w28, [sp, #152]
    5074:	9103e3f6 	add	x22, sp, #0xf8
    5078:	b900027c 	str	w28, [x19]
    507c:	b9006fe0 	str	w0, [sp, #108]
    5080:	aa1703e0 	mov	x0, x23
    5084:	97fff8e9 	bl	3428 <get_mpi>
    5088:	aa1803e1 	mov	x1, x24
    508c:	aa1603e0 	mov	x0, x22
    5090:	97fff8e6 	bl	3428 <get_mpi>
    5094:	aa1303e1 	mov	x1, x19
    5098:	aa1403e0 	mov	x0, x20
    509c:	94000a23 	bl	7928 <mbedtls_mpi_cmp_abs>
    50a0:	7100001f 	cmp	w0, #0x0
    50a4:	350002c0 	cbnz	w0, 50fc <TEE_BigIntComputeExtendedGcd+0x160>
    50a8:	aa1403e1 	mov	x1, x20
    50ac:	aa1503e0 	mov	x0, x21
    50b0:	940008dc 	bl	7420 <mbedtls_mpi_copy>
    50b4:	2a0003e2 	mov	w2, w0
    50b8:	34000060 	cbz	w0, 50c4 <TEE_BigIntComputeExtendedGcd+0x128>
    50bc:	52806ae1 	mov	w1, #0x357                 	// #855
    50c0:	17ffffe0 	b	5040 <TEE_BigIntComputeExtendedGcd+0xa4>
    50c4:	2a1c03e1 	mov	w1, w28
    50c8:	aa1703e0 	mov	x0, x23
    50cc:	9400092b 	bl	7578 <mbedtls_mpi_lset>
    50d0:	2a0003e2 	mov	w2, w0
    50d4:	34000060 	cbz	w0, 50e0 <TEE_BigIntComputeExtendedGcd+0x144>
    50d8:	52806b01 	mov	w1, #0x358                 	// #856
    50dc:	17ffffd9 	b	5040 <TEE_BigIntComputeExtendedGcd+0xa4>
    50e0:	aa1603e0 	mov	x0, x22
    50e4:	52800001 	mov	w1, #0x0                   	// #0
    50e8:	94000924 	bl	7578 <mbedtls_mpi_lset>
    50ec:	2a0003e2 	mov	w2, w0
    50f0:	34000140 	cbz	w0, 5118 <TEE_BigIntComputeExtendedGcd+0x17c>
    50f4:	52806b21 	mov	w1, #0x359                 	// #857
    50f8:	17ffffd2 	b	5040 <TEE_BigIntComputeExtendedGcd+0xa4>
    50fc:	540002cd 	b.le	5154 <TEE_BigIntComputeExtendedGcd+0x1b8>
    5100:	aa1303e4 	mov	x4, x19
    5104:	aa1403e3 	mov	x3, x20
    5108:	aa1603e2 	mov	x2, x22
    510c:	aa1703e1 	mov	x1, x23
    5110:	aa1503e0 	mov	x0, x21
    5114:	97fff969 	bl	36b8 <mpi_egcd>
    5118:	b9406be1 	ldr	w1, [sp, #104]
    511c:	b940dbe0 	ldr	w0, [sp, #216]
    5120:	1b017c00 	mul	w0, w0, w1
    5124:	b9406fe1 	ldr	w1, [sp, #108]
    5128:	b900dbe0 	str	w0, [sp, #216]
    512c:	b940fbe0 	ldr	w0, [sp, #248]
    5130:	1b017c00 	mul	w0, w0, w1
    5134:	aa1903e1 	mov	x1, x25
    5138:	b900fbe0 	str	w0, [sp, #248]
    513c:	aa1703e0 	mov	x0, x23
    5140:	97fff8e0 	bl	34c0 <copy_mpi_to_bigint>
    5144:	2a0003e2 	mov	w2, w0
    5148:	34000100 	cbz	w0, 5168 <TEE_BigIntComputeExtendedGcd+0x1cc>
    514c:	52806c61 	mov	w1, #0x363                 	// #867
    5150:	17ffffbc 	b	5040 <TEE_BigIntComputeExtendedGcd+0xa4>
    5154:	aa1403e4 	mov	x4, x20
    5158:	aa1303e3 	mov	x3, x19
    515c:	aa1703e2 	mov	x2, x23
    5160:	aa1603e1 	mov	x1, x22
    5164:	17ffffeb 	b	5110 <TEE_BigIntComputeExtendedGcd+0x174>
    5168:	aa1803e1 	mov	x1, x24
    516c:	aa1603e0 	mov	x0, x22
    5170:	97fff8d4 	bl	34c0 <copy_mpi_to_bigint>
    5174:	2a0003e2 	mov	w2, w0
    5178:	34000060 	cbz	w0, 5184 <TEE_BigIntComputeExtendedGcd+0x1e8>
    517c:	52806c81 	mov	w1, #0x364                 	// #868
    5180:	17ffffb0 	b	5040 <TEE_BigIntComputeExtendedGcd+0xa4>
    5184:	aa1703e0 	mov	x0, x23
    5188:	940007f0 	bl	7148 <mbedtls_mpi_free>
    518c:	aa1603e0 	mov	x0, x22
    5190:	940007ee 	bl	7148 <mbedtls_mpi_free>
    5194:	aa1a03e1 	mov	x1, x26
    5198:	aa1503e0 	mov	x0, x21
    519c:	97fff8c9 	bl	34c0 <copy_mpi_to_bigint>
    51a0:	2a0003e2 	mov	w2, w0
    51a4:	34000060 	cbz	w0, 51b0 <TEE_BigIntComputeExtendedGcd+0x214>
    51a8:	52806d21 	mov	w1, #0x369                 	// #873
    51ac:	17ffffa5 	b	5040 <TEE_BigIntComputeExtendedGcd+0xa4>
    51b0:	aa1503e0 	mov	x0, x21
    51b4:	940007e5 	bl	7148 <mbedtls_mpi_free>
    51b8:	aa1403e0 	mov	x0, x20
    51bc:	940007e3 	bl	7148 <mbedtls_mpi_free>
    51c0:	eb1b027f 	cmp	x19, x27
    51c4:	54000061 	b.ne	51d0 <TEE_BigIntComputeExtendedGcd+0x234>  // b.any
    51c8:	aa1303e0 	mov	x0, x19
    51cc:	940007df 	bl	7148 <mbedtls_mpi_free>
    51d0:	900000a0 	adrp	x0, 19000 <_DYNAMIC>
    51d4:	f9409800 	ldr	x0, [x0, #304]
    51d8:	f9408fe2 	ldr	x2, [sp, #280]
    51dc:	f9400001 	ldr	x1, [x0]
    51e0:	eb010042 	subs	x2, x2, x1
    51e4:	d2800001 	mov	x1, #0x0                   	// #0
    51e8:	54000040 	b.eq	51f0 <TEE_BigIntComputeExtendedGcd+0x254>  // b.none
    51ec:	97ffed23 	bl	678 <__stack_chk_fail>
    51f0:	a94153f3 	ldp	x19, x20, [sp, #16]
    51f4:	a9425bf5 	ldp	x21, x22, [sp, #32]
    51f8:	a94363f7 	ldp	x23, x24, [sp, #48]
    51fc:	a9446bf9 	ldp	x25, x26, [sp, #64]
    5200:	a94573fb 	ldp	x27, x28, [sp, #80]
    5204:	a8d27bfd 	ldp	x29, x30, [sp], #288
    5208:	d65f03c0 	ret

000000000000520c <TEE_BigIntIsProbablePrime>:
TEE_BigIntIsProbablePrime():
    520c:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    5210:	910003fd 	mov	x29, sp
    5214:	a90153f3 	stp	x19, x20, [sp, #16]
    5218:	900000b4 	adrp	x20, 19000 <_DYNAMIC>
    521c:	9100e3f3 	add	x19, sp, #0x38
    5220:	f90013f5 	str	x21, [sp, #32]
    5224:	2a0103f5 	mov	w21, w1
    5228:	f9409a81 	ldr	x1, [x20, #304]
    522c:	f9400022 	ldr	x2, [x1]
    5230:	f9002fe2 	str	x2, [sp, #88]
    5234:	d2800002 	mov	x2, #0x0                   	// #0
    5238:	aa0003e1 	mov	x1, x0
    523c:	aa1303e0 	mov	x0, x19
    5240:	97fff87a 	bl	3428 <get_mpi>
    5244:	710142bf 	cmp	w21, #0x50
    5248:	d0ffffe2 	adrp	x2, 3000 <TEE_GetSystemTime+0x20>
    524c:	52800a01 	mov	w1, #0x50                  	// #80
    5250:	911a4042 	add	x2, x2, #0x690
    5254:	1a8122a1 	csel	w1, w21, w1, cs  // cs = hs, nlast
    5258:	d2800003 	mov	x3, #0x0                   	// #0
    525c:	aa1303e0 	mov	x0, x19
    5260:	940012e6 	bl	9df8 <mbedtls_mpi_is_prime_ext>
    5264:	2a0003f5 	mov	w21, w0
    5268:	aa1303e0 	mov	x0, x19
    526c:	940007b7 	bl	7148 <mbedtls_mpi_free>
    5270:	f9409a94 	ldr	x20, [x20, #304]
    5274:	710002bf 	cmp	w21, #0x0
    5278:	1a9f17e0 	cset	w0, eq  // eq = none
    527c:	f9402fe1 	ldr	x1, [sp, #88]
    5280:	f9400282 	ldr	x2, [x20]
    5284:	eb020021 	subs	x1, x1, x2
    5288:	d2800002 	mov	x2, #0x0                   	// #0
    528c:	54000040 	b.eq	5294 <TEE_BigIntIsProbablePrime+0x88>  // b.none
    5290:	97ffecfa 	bl	678 <__stack_chk_fail>
    5294:	a94153f3 	ldp	x19, x20, [sp, #16]
    5298:	f94013f5 	ldr	x21, [sp, #32]
    529c:	a8c67bfd 	ldp	x29, x30, [sp], #96
    52a0:	d65f03c0 	ret

00000000000052a4 <TEE_BigIntInitFMM>:
TEE_BigIntInitFMM():
    52a4:	17fffa76 	b	3c7c <TEE_BigIntInit>

00000000000052a8 <__GP11_TEE_BigIntInitFMM>:
__GP11_TEE_BigIntInitFMM():
    52a8:	2a0103e1 	mov	w1, w1
    52ac:	17fffffe 	b	52a4 <TEE_BigIntInitFMM>

00000000000052b0 <TEE_BigIntInitFMMContext>:
TEE_BigIntInitFMMContext():
    52b0:	d65f03c0 	ret

00000000000052b4 <__GP11_TEE_BigIntInitFMMContext>:
__GP11_TEE_BigIntInitFMMContext():
    52b4:	2a0103e1 	mov	w1, w1
    52b8:	17fffffe 	b	52b0 <TEE_BigIntInitFMMContext>

00000000000052bc <TEE_BigIntInitFMMContext1>:
TEE_BigIntInitFMMContext1():
    52bc:	52800000 	mov	w0, #0x0                   	// #0
    52c0:	d65f03c0 	ret

00000000000052c4 <TEE_BigIntFMMSizeInU32>:
TEE_BigIntFMMSizeInU32():
    52c4:	91007c00 	add	x0, x0, #0x1f
    52c8:	d345fc00 	lsr	x0, x0, #5
    52cc:	91000800 	add	x0, x0, #0x2
    52d0:	d65f03c0 	ret

00000000000052d4 <__GP11_TEE_BigIntFMMSizeInU32>:
__GP11_TEE_BigIntFMMSizeInU32():
    52d4:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    52d8:	2a0003e0 	mov	w0, w0
    52dc:	910003fd 	mov	x29, sp
    52e0:	97fffff9 	bl	52c4 <TEE_BigIntFMMSizeInU32>
    52e4:	a8c17bfd 	ldp	x29, x30, [sp], #16
    52e8:	d65f03c0 	ret

00000000000052ec <TEE_BigIntFMMContextSizeInU32>:
TEE_BigIntFMMContextSizeInU32():
    52ec:	d2800020 	mov	x0, #0x1                   	// #1
    52f0:	d65f03c0 	ret

00000000000052f4 <__GP11_TEE_BigIntFMMContextSizeInU32>:
__GP11_TEE_BigIntFMMContextSizeInU32():
    52f4:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    52f8:	2a0003e0 	mov	w0, w0
    52fc:	910003fd 	mov	x29, sp
    5300:	97fffffb 	bl	52ec <TEE_BigIntFMMContextSizeInU32>
    5304:	a8c17bfd 	ldp	x29, x30, [sp], #16
    5308:	d65f03c0 	ret

000000000000530c <TEE_BigIntConvertToFMM>:
TEE_BigIntConvertToFMM():
    530c:	17fffdf1 	b	4ad0 <TEE_BigIntMod>

0000000000005310 <TEE_BigIntConvertFromFMM>:
TEE_BigIntConvertFromFMM():
    5310:	a9b77bfd 	stp	x29, x30, [sp, #-144]!
    5314:	910003fd 	mov	x29, sp
    5318:	a90153f3 	stp	x19, x20, [sp, #16]
    531c:	900000b3 	adrp	x19, 19000 <_DYNAMIC>
    5320:	910123f4 	add	x20, sp, #0x48
    5324:	a9025bf5 	stp	x21, x22, [sp, #32]
    5328:	aa0003f5 	mov	x21, x0
    532c:	9101a3f6 	add	x22, sp, #0x68
    5330:	f9409a60 	ldr	x0, [x19, #304]
    5334:	f9001bf7 	str	x23, [sp, #48]
    5338:	aa0103f7 	mov	x23, x1
    533c:	f9400001 	ldr	x1, [x0]
    5340:	f90047e1 	str	x1, [sp, #136]
    5344:	d2800001 	mov	x1, #0x0                   	// #0
    5348:	aa1403e0 	mov	x0, x20
    534c:	aa1503e1 	mov	x1, x21
    5350:	97fff836 	bl	3428 <get_mpi>
    5354:	aa1703e1 	mov	x1, x23
    5358:	aa1603e0 	mov	x0, x22
    535c:	97fff833 	bl	3428 <get_mpi>
    5360:	aa1603e1 	mov	x1, x22
    5364:	aa1403e0 	mov	x0, x20
    5368:	9400082e 	bl	7420 <mbedtls_mpi_copy>
    536c:	340000e0 	cbz	w0, 5388 <TEE_BigIntConvertFromFMM+0x78>
    5370:	2a0003e2 	mov	w2, w0
    5374:	52807aa1 	mov	w1, #0x3d5                 	// #981
    5378:	d0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    537c:	91355400 	add	x0, x0, #0xd55
    5380:	91048000 	add	x0, x0, #0x120
    5384:	97fff81d 	bl	33f8 <mpi_panic>
    5388:	aa1503e1 	mov	x1, x21
    538c:	aa1403e0 	mov	x0, x20
    5390:	97fff84c 	bl	34c0 <copy_mpi_to_bigint>
    5394:	2a0003e2 	mov	w2, w0
    5398:	34000060 	cbz	w0, 53a4 <TEE_BigIntConvertFromFMM+0x94>
    539c:	52807ae1 	mov	w1, #0x3d7                 	// #983
    53a0:	17fffff6 	b	5378 <TEE_BigIntConvertFromFMM+0x68>
    53a4:	aa1403e0 	mov	x0, x20
    53a8:	94000768 	bl	7148 <mbedtls_mpi_free>
    53ac:	aa1603e0 	mov	x0, x22
    53b0:	94000766 	bl	7148 <mbedtls_mpi_free>
    53b4:	f9409a73 	ldr	x19, [x19, #304]
    53b8:	f94047e0 	ldr	x0, [sp, #136]
    53bc:	f9400261 	ldr	x1, [x19]
    53c0:	eb010000 	subs	x0, x0, x1
    53c4:	d2800001 	mov	x1, #0x0                   	// #0
    53c8:	54000040 	b.eq	53d0 <TEE_BigIntConvertFromFMM+0xc0>  // b.none
    53cc:	97ffecab 	bl	678 <__stack_chk_fail>
    53d0:	a94153f3 	ldp	x19, x20, [sp, #16]
    53d4:	a9425bf5 	ldp	x21, x22, [sp, #32]
    53d8:	f9401bf7 	ldr	x23, [sp, #48]
    53dc:	a8c97bfd 	ldp	x29, x30, [sp], #144
    53e0:	d65f03c0 	ret

00000000000053e4 <TEE_BigIntComputeFMM>:
TEE_BigIntComputeFMM():
    53e4:	a9b07bfd 	stp	x29, x30, [sp, #-256]!
    53e8:	910003fd 	mov	x29, sp
    53ec:	a90153f3 	stp	x19, x20, [sp, #16]
    53f0:	900000b3 	adrp	x19, 19000 <_DYNAMIC>
    53f4:	910163f4 	add	x20, sp, #0x58
    53f8:	a9025bf5 	stp	x21, x22, [sp, #32]
    53fc:	aa0003f5 	mov	x21, x0
    5400:	aa0303f6 	mov	x22, x3
    5404:	f9409a60 	ldr	x0, [x19, #304]
    5408:	a90363f7 	stp	x23, x24, [sp, #48]
    540c:	aa0103f8 	mov	x24, x1
    5410:	f90023f9 	str	x25, [sp, #64]
    5414:	9101e3f7 	add	x23, sp, #0x78
    5418:	aa0203f9 	mov	x25, x2
    541c:	f9400001 	ldr	x1, [x0]
    5420:	f9007fe1 	str	x1, [sp, #248]
    5424:	d2800001 	mov	x1, #0x0                   	// #0
    5428:	aa1403e0 	mov	x0, x20
    542c:	aa1503e1 	mov	x1, x21
    5430:	97fff7fe 	bl	3428 <get_mpi>
    5434:	aa1803e1 	mov	x1, x24
    5438:	aa1703e0 	mov	x0, x23
    543c:	910263f8 	add	x24, sp, #0x98
    5440:	97fff7fa 	bl	3428 <get_mpi>
    5444:	aa1903e1 	mov	x1, x25
    5448:	aa1803e0 	mov	x0, x24
    544c:	97fff7f7 	bl	3428 <get_mpi>
    5450:	9102e3f9 	add	x25, sp, #0xb8
    5454:	aa1603e1 	mov	x1, x22
    5458:	aa1903e0 	mov	x0, x25
    545c:	910363f6 	add	x22, sp, #0xd8
    5460:	97fff7f2 	bl	3428 <get_mpi>
    5464:	aa1603e0 	mov	x0, x22
    5468:	9400072e 	bl	7120 <mbedtls_mpi_init_mempool>
    546c:	aa1803e2 	mov	x2, x24
    5470:	aa1703e1 	mov	x1, x23
    5474:	aa1603e0 	mov	x0, x22
    5478:	94000a91 	bl	7ebc <mbedtls_mpi_mul_mpi>
    547c:	340000e0 	cbz	w0, 5498 <TEE_BigIntComputeFMM+0xb4>
    5480:	2a0003e2 	mov	w2, w0
    5484:	52807d81 	mov	w1, #0x3ec                 	// #1004
    5488:	d0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    548c:	91355400 	add	x0, x0, #0xd55
    5490:	9104e400 	add	x0, x0, #0x139
    5494:	97fff7d9 	bl	33f8 <mpi_panic>
    5498:	aa1903e2 	mov	x2, x25
    549c:	aa1603e1 	mov	x1, x22
    54a0:	aa1403e0 	mov	x0, x20
    54a4:	94000d0b 	bl	88d0 <mbedtls_mpi_mod_mpi>
    54a8:	2a0003e2 	mov	w2, w0
    54ac:	34000060 	cbz	w0, 54b8 <TEE_BigIntComputeFMM+0xd4>
    54b0:	52807da1 	mov	w1, #0x3ed                 	// #1005
    54b4:	17fffff5 	b	5488 <TEE_BigIntComputeFMM+0xa4>
    54b8:	aa1603e0 	mov	x0, x22
    54bc:	94000723 	bl	7148 <mbedtls_mpi_free>
    54c0:	aa1903e0 	mov	x0, x25
    54c4:	94000721 	bl	7148 <mbedtls_mpi_free>
    54c8:	aa1803e0 	mov	x0, x24
    54cc:	9400071f 	bl	7148 <mbedtls_mpi_free>
    54d0:	aa1703e0 	mov	x0, x23
    54d4:	9400071d 	bl	7148 <mbedtls_mpi_free>
    54d8:	aa1503e1 	mov	x1, x21
    54dc:	aa1403e0 	mov	x0, x20
    54e0:	97fff7f8 	bl	34c0 <copy_mpi_to_bigint>
    54e4:	2a0003e2 	mov	w2, w0
    54e8:	34000060 	cbz	w0, 54f4 <TEE_BigIntComputeFMM+0x110>
    54ec:	52807e61 	mov	w1, #0x3f3                 	// #1011
    54f0:	17ffffe6 	b	5488 <TEE_BigIntComputeFMM+0xa4>
    54f4:	aa1403e0 	mov	x0, x20
    54f8:	94000714 	bl	7148 <mbedtls_mpi_free>
    54fc:	f9409a73 	ldr	x19, [x19, #304]
    5500:	f9407fe0 	ldr	x0, [sp, #248]
    5504:	f9400261 	ldr	x1, [x19]
    5508:	eb010000 	subs	x0, x0, x1
    550c:	d2800001 	mov	x1, #0x0                   	// #0
    5510:	54000040 	b.eq	5518 <TEE_BigIntComputeFMM+0x134>  // b.none
    5514:	97ffec59 	bl	678 <__stack_chk_fail>
    5518:	a94153f3 	ldp	x19, x20, [sp, #16]
    551c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    5520:	a94363f7 	ldp	x23, x24, [sp, #48]
    5524:	f94023f9 	ldr	x25, [sp, #64]
    5528:	a8d07bfd 	ldp	x29, x30, [sp], #256
    552c:	d65f03c0 	ret

0000000000005530 <check_access>:
check_access():
    5530:	b4000062 	cbz	x2, 553c <check_access+0xc>
    5534:	b4000081 	cbz	x1, 5544 <check_access+0x14>
    5538:	17fff4aa 	b	27e0 <TEE_CheckMemoryAccessRights>
    553c:	52800000 	mov	w0, #0x0                   	// #0
    5540:	d65f03c0 	ret
    5544:	129ffe00 	mov	w0, #0xffff000f            	// #-65521
    5548:	17fffffe 	b	5540 <check_access+0x10>

000000000000554c <TEE_Panic>:
TEE_Panic():
    554c:	2a0003e0 	mov	w0, w0
    5550:	17fff2b4 	b	2020 <_utee_panic>

0000000000005554 <check_res.constprop.0>:
check_res.constprop.0():
    5554:	34000060 	cbz	w0, 5560 <check_res.constprop.0+0xc>
    5558:	52800000 	mov	w0, #0x0                   	// #0
    555c:	17fffffc 	b	554c <TEE_Panic>
    5560:	d65f03c0 	ret

0000000000005564 <__utee_check_outbuf_annotation>:
__utee_check_outbuf_annotation():
    5564:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    5568:	910003fd 	mov	x29, sp
    556c:	a90153f3 	stp	x19, x20, [sp, #16]
    5570:	aa0003f4 	mov	x20, x0
    5574:	aa0103f3 	mov	x19, x1
    5578:	b4000181 	cbz	x1, 55a8 <__utee_check_outbuf_annotation+0x44>
    557c:	d2800102 	mov	x2, #0x8                   	// #8
    5580:	52800060 	mov	w0, #0x3                   	// #3
    5584:	97fff497 	bl	27e0 <TEE_CheckMemoryAccessRights>
    5588:	97fffff3 	bl	5554 <check_res.constprop.0>
    558c:	f9400262 	ldr	x2, [x19]
    5590:	aa1403e1 	mov	x1, x20
    5594:	528000c0 	mov	w0, #0x6                   	// #6
    5598:	97ffffe6 	bl	5530 <check_access>
    559c:	a94153f3 	ldp	x19, x20, [sp, #16]
    55a0:	a8c27bfd 	ldp	x29, x30, [sp], #32
    55a4:	17ffffec 	b	5554 <check_res.constprop.0>
    55a8:	129ffe00 	mov	w0, #0xffff000f            	// #-65521
    55ac:	17fffff7 	b	5588 <__utee_check_outbuf_annotation+0x24>

00000000000055b0 <__utee_check_gp11_outbuf_annotation>:
__utee_check_gp11_outbuf_annotation():
    55b0:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    55b4:	910003fd 	mov	x29, sp
    55b8:	a90153f3 	stp	x19, x20, [sp, #16]
    55bc:	aa0003f4 	mov	x20, x0
    55c0:	aa0103f3 	mov	x19, x1
    55c4:	b4000181 	cbz	x1, 55f4 <__utee_check_gp11_outbuf_annotation+0x44>
    55c8:	d2800082 	mov	x2, #0x4                   	// #4
    55cc:	52800060 	mov	w0, #0x3                   	// #3
    55d0:	97fff484 	bl	27e0 <TEE_CheckMemoryAccessRights>
    55d4:	97ffffe0 	bl	5554 <check_res.constprop.0>
    55d8:	b9400262 	ldr	w2, [x19]
    55dc:	aa1403e1 	mov	x1, x20
    55e0:	528000c0 	mov	w0, #0x6                   	// #6
    55e4:	97ffffd3 	bl	5530 <check_access>
    55e8:	a94153f3 	ldp	x19, x20, [sp, #16]
    55ec:	a8c27bfd 	ldp	x29, x30, [sp], #32
    55f0:	17ffffd9 	b	5554 <check_res.constprop.0>
    55f4:	129ffe00 	mov	w0, #0xffff000f            	// #-65521
    55f8:	17fffff7 	b	55d4 <__utee_check_gp11_outbuf_annotation+0x24>

00000000000055fc <__utee_check_instring_annotation>:
__utee_check_instring_annotation():
    55fc:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    5600:	910003fd 	mov	x29, sp
    5604:	f9000bf3 	str	x19, [sp, #16]
    5608:	aa0003f3 	mov	x19, x0
    560c:	97ffefb1 	bl	14d0 <strlen>
    5610:	91000402 	add	x2, x0, #0x1
    5614:	aa1303e1 	mov	x1, x19
    5618:	52800020 	mov	w0, #0x1                   	// #1
    561c:	97ffffc5 	bl	5530 <check_access>
    5620:	f9400bf3 	ldr	x19, [sp, #16]
    5624:	a8c27bfd 	ldp	x29, x30, [sp], #32
    5628:	17ffffcb 	b	5554 <check_res.constprop.0>

000000000000562c <__utee_check_outstring_annotation>:
__utee_check_outstring_annotation():
    562c:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    5630:	910003fd 	mov	x29, sp
    5634:	a90153f3 	stp	x19, x20, [sp, #16]
    5638:	aa0003f4 	mov	x20, x0
    563c:	aa0103f3 	mov	x19, x1
    5640:	b4000181 	cbz	x1, 5670 <__utee_check_outstring_annotation+0x44>
    5644:	d2800102 	mov	x2, #0x8                   	// #8
    5648:	52800060 	mov	w0, #0x3                   	// #3
    564c:	97fff465 	bl	27e0 <TEE_CheckMemoryAccessRights>
    5650:	97ffffc1 	bl	5554 <check_res.constprop.0>
    5654:	f9400262 	ldr	x2, [x19]
    5658:	aa1403e1 	mov	x1, x20
    565c:	528000c0 	mov	w0, #0x6                   	// #6
    5660:	97ffffb4 	bl	5530 <check_access>
    5664:	a94153f3 	ldp	x19, x20, [sp, #16]
    5668:	a8c27bfd 	ldp	x29, x30, [sp], #32
    566c:	17ffffba 	b	5554 <check_res.constprop.0>
    5670:	129ffe00 	mov	w0, #0xffff000f            	// #-65521
    5674:	17fffff7 	b	5650 <__utee_check_outstring_annotation+0x24>

0000000000005678 <__utee_check_gp11_outstring_annotation>:
__utee_check_gp11_outstring_annotation():
    5678:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    567c:	910003fd 	mov	x29, sp
    5680:	a90153f3 	stp	x19, x20, [sp, #16]
    5684:	aa0003f4 	mov	x20, x0
    5688:	aa0103f3 	mov	x19, x1
    568c:	b4000181 	cbz	x1, 56bc <__utee_check_gp11_outstring_annotation+0x44>
    5690:	d2800082 	mov	x2, #0x4                   	// #4
    5694:	52800060 	mov	w0, #0x3                   	// #3
    5698:	97fff452 	bl	27e0 <TEE_CheckMemoryAccessRights>
    569c:	97ffffae 	bl	5554 <check_res.constprop.0>
    56a0:	b9400262 	ldr	w2, [x19]
    56a4:	aa1403e1 	mov	x1, x20
    56a8:	528000c0 	mov	w0, #0x6                   	// #6
    56ac:	97ffffa1 	bl	5530 <check_access>
    56b0:	a94153f3 	ldp	x19, x20, [sp, #16]
    56b4:	a8c27bfd 	ldp	x29, x30, [sp], #32
    56b8:	17ffffa7 	b	5554 <check_res.constprop.0>
    56bc:	129ffe00 	mov	w0, #0xffff000f            	// #-65521
    56c0:	17fffff7 	b	569c <__utee_check_gp11_outstring_annotation+0x24>

00000000000056c4 <__utee_check_out_annotation>:
__utee_check_out_annotation():
    56c4:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    56c8:	aa0103e2 	mov	x2, x1
    56cc:	aa0003e1 	mov	x1, x0
    56d0:	910003fd 	mov	x29, sp
    56d4:	52800040 	mov	w0, #0x2                   	// #2
    56d8:	97ffff96 	bl	5530 <check_access>
    56dc:	a8c17bfd 	ldp	x29, x30, [sp], #16
    56e0:	17ffff9d 	b	5554 <check_res.constprop.0>

00000000000056e4 <__utee_check_attr_in_annotation>:
__utee_check_attr_in_annotation.localalias():
    56e4:	d2800302 	mov	x2, #0x18                  	// #24
    56e8:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    56ec:	9b027c22 	mul	x2, x1, x2
    56f0:	910003fd 	mov	x29, sp
    56f4:	aa0003e1 	mov	x1, x0
    56f8:	52800020 	mov	w0, #0x1                   	// #1
    56fc:	97ffff8d 	bl	5530 <check_access>
    5700:	a8c17bfd 	ldp	x29, x30, [sp], #16
    5704:	17ffff94 	b	5554 <check_res.constprop.0>

0000000000005708 <__utee_check_gp11_attr_in_annotation>:
__utee_check_gp11_attr_in_annotation():
    5708:	17fffff7 	b	56e4 <__utee_check_attr_in_annotation>

000000000000570c <__utee_check_inout_annotation>:
__utee_check_inout_annotation():
    570c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    5710:	aa0103e2 	mov	x2, x1
    5714:	aa0003e1 	mov	x1, x0
    5718:	910003fd 	mov	x29, sp
    571c:	52800060 	mov	w0, #0x3                   	// #3
    5720:	97ffff84 	bl	5530 <check_access>
    5724:	a8c17bfd 	ldp	x29, x30, [sp], #16
    5728:	17ffff8b 	b	5554 <check_res.constprop.0>

000000000000572c <propset_get>:
propset_get():
    572c:	b2407fe3 	mov	x3, #0xffffffff            	// #4294967295
    5730:	eb03001f 	cmp	x0, x3
    5734:	54000101 	b.ne	5754 <propset_get+0x28>  // b.any
    5738:	900000a0 	adrp	x0, 19000 <_DYNAMIC>
    573c:	f940a403 	ldr	x3, [x0, #328]
    5740:	f9000023 	str	x3, [x1]
    5744:	f940ac00 	ldr	x0, [x0, #344]
    5748:	f9400000 	ldr	x0, [x0]
    574c:	f9000040 	str	x0, [x2]
    5750:	14000006 	b	5768 <propset_get+0x3c>
    5754:	b27f7be3 	mov	x3, #0xfffffffe            	// #4294967294
    5758:	eb03001f 	cmp	x0, x3
    575c:	540000a1 	b.ne	5770 <propset_get+0x44>  // b.any
    5760:	f900003f 	str	xzr, [x1]
    5764:	f900005f 	str	xzr, [x2]
    5768:	52800000 	mov	w0, #0x0                   	// #0
    576c:	d65f03c0 	ret
    5770:	12800043 	mov	w3, #0xfffffffd            	// #-3
    5774:	eb03001f 	cmp	x0, x3
    5778:	540000c1 	b.ne	5790 <propset_get+0x64>  // b.any
    577c:	900000a0 	adrp	x0, 19000 <_DYNAMIC>
    5780:	f940c800 	ldr	x0, [x0, #400]
    5784:	f9000020 	str	x0, [x1]
    5788:	d2800080 	mov	x0, #0x4                   	// #4
    578c:	17fffff0 	b	574c <propset_get+0x20>
    5790:	129ffee0 	mov	w0, #0xffff0008            	// #-65528
    5794:	17fffff6 	b	576c <propset_get+0x40>

0000000000005798 <is_propset_pseudo_handle>:
is_propset_pseudo_handle():
    5798:	929fffa1 	mov	x1, #0xffffffffffff0002    	// #-65534
    579c:	f2a00001 	movk	x1, #0x0, lsl #16
    57a0:	8b010001 	add	x1, x0, x1
    57a4:	f100043f 	cmp	x1, #0x1
    57a8:	540000a9 	b.ls	57bc <is_propset_pseudo_handle+0x24>  // b.plast
    57ac:	12800041 	mov	w1, #0xfffffffd            	// #-3
    57b0:	eb01001f 	cmp	x0, x1
    57b4:	1a9f17e0 	cset	w0, eq  // eq = none
    57b8:	d65f03c0 	ret
    57bc:	52800020 	mov	w0, #0x1                   	// #1
    57c0:	17fffffe 	b	57b8 <is_propset_pseudo_handle+0x20>

00000000000057c4 <propget_get_ext_prop>:
propget_get_ext_prop():
    57c4:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    57c8:	910003fd 	mov	x29, sp
    57cc:	a90153f3 	stp	x19, x20, [sp, #16]
    57d0:	aa0303f3 	mov	x19, x3
    57d4:	900000a3 	adrp	x3, 19000 <_DYNAMIC>
    57d8:	aa0003f4 	mov	x20, x0
    57dc:	a9025bf5 	stp	x21, x22, [sp, #32]
    57e0:	aa0203f5 	mov	x21, x2
    57e4:	f9409863 	ldr	x3, [x3, #304]
    57e8:	b9400a82 	ldr	w2, [x20, #8]
    57ec:	f9400060 	ldr	x0, [x3]
    57f0:	f9001fe0 	str	x0, [sp, #56]
    57f4:	d2800000 	mov	x0, #0x0                   	// #0
    57f8:	b9000022 	str	w2, [x1]
    57fc:	7100185f 	cmp	w2, #0x6
    5800:	54000508 	b.hi	58a0 <propget_get_ext_prop+0xdc>  // b.pmore
    5804:	d0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    5808:	b9400276 	ldr	w22, [x19]
    580c:	91179000 	add	x0, x0, #0x5e4
    5810:	38624800 	ldrb	w0, [x0, w2, uxtw]
    5814:	10000062 	adr	x2, 5820 <propget_get_ext_prop+0x5c>
    5818:	8b208840 	add	x0, x2, w0, sxtb #2
    581c:	d61f0000 	br	x0
    5820:	d2800102 	mov	x2, #0x8                   	// #8
    5824:	b9000262 	str	w2, [x19]
    5828:	f9001be2 	str	x2, [sp, #48]
    582c:	eb16005f 	cmp	x2, x22
    5830:	54000428 	b.hi	58b4 <propget_get_ext_prop+0xf0>  // b.pmore
    5834:	f9400a81 	ldr	x1, [x20, #16]
    5838:	aa1503e0 	mov	x0, x21
    583c:	97ffe9f1 	bl	0 <memcpy>
    5840:	14000027 	b	58dc <propget_get_ext_prop+0x118>
    5844:	d2800202 	mov	x2, #0x10                  	// #16
    5848:	17fffff7 	b	5824 <propget_get_ext_prop+0x60>
    584c:	d2800282 	mov	x2, #0x14                  	// #20
    5850:	17fffff5 	b	5824 <propget_get_ext_prop+0x60>
    5854:	f9400a80 	ldr	x0, [x20, #16]
    5858:	97ffef1e 	bl	14d0 <strlen>
    585c:	91000402 	add	x2, x0, #0x1
    5860:	17fffff1 	b	5824 <propget_get_ext_prop+0x60>
    5864:	f9400a94 	ldr	x20, [x20, #16]
    5868:	f9001bf6 	str	x22, [sp, #48]
    586c:	aa1403e0 	mov	x0, x20
    5870:	97ffef18 	bl	14d0 <strlen>
    5874:	9100c3e3 	add	x3, sp, #0x30
    5878:	aa0003e1 	mov	x1, x0
    587c:	aa1503e2 	mov	x2, x21
    5880:	aa1403e0 	mov	x0, x20
    5884:	94000581 	bl	6e88 <_base64_dec>
    5888:	72001c1f 	tst	w0, #0xff
    588c:	b9400261 	ldr	w1, [x19]
    5890:	f9401be0 	ldr	x0, [sp, #48]
    5894:	540000a1 	b.ne	58a8 <propget_get_ext_prop+0xe4>  // b.any
    5898:	eb00003f 	cmp	x1, x0
    589c:	540000a3 	b.cc	58b0 <propget_get_ext_prop+0xec>  // b.lo, b.ul, b.last
    58a0:	52bfffe0 	mov	w0, #0xffff0000            	// #-65536
    58a4:	14000005 	b	58b8 <propget_get_ext_prop+0xf4>
    58a8:	eb00003f 	cmp	x1, x0
    58ac:	54000162 	b.cs	58d8 <propget_get_ext_prop+0x114>  // b.hs, b.nlast
    58b0:	b9000260 	str	w0, [x19]
    58b4:	129ffde0 	mov	w0, #0xffff0010            	// #-65520
    58b8:	900000a3 	adrp	x3, 19000 <_DYNAMIC>
    58bc:	f9409863 	ldr	x3, [x3, #304]
    58c0:	f9401fe1 	ldr	x1, [sp, #56]
    58c4:	f9400062 	ldr	x2, [x3]
    58c8:	eb020021 	subs	x1, x1, x2
    58cc:	d2800002 	mov	x2, #0x0                   	// #0
    58d0:	54000120 	b.eq	58f4 <propget_get_ext_prop+0x130>  // b.none
    58d4:	97ffeb69 	bl	678 <__stack_chk_fail>
    58d8:	b9000260 	str	w0, [x19]
    58dc:	52800000 	mov	w0, #0x0                   	// #0
    58e0:	17fffff6 	b	58b8 <propget_get_ext_prop+0xf4>
    58e4:	d2800022 	mov	x2, #0x1                   	// #1
    58e8:	17ffffcf 	b	5824 <propget_get_ext_prop+0x60>
    58ec:	d2800082 	mov	x2, #0x4                   	// #4
    58f0:	17ffffcd 	b	5824 <propget_get_ext_prop+0x60>
    58f4:	a94153f3 	ldp	x19, x20, [sp, #16]
    58f8:	a9425bf5 	ldp	x21, x22, [sp, #32]
    58fc:	a8c47bfd 	ldp	x29, x30, [sp], #64
    5900:	d65f03c0 	ret

0000000000005904 <propget_get_property>:
propget_get_property():
    5904:	a9b87bfd 	stp	x29, x30, [sp, #-128]!
    5908:	900000a6 	adrp	x6, 19000 <_DYNAMIC>
    590c:	910003fd 	mov	x29, sp
    5910:	a90363f7 	stp	x23, x24, [sp, #48]
    5914:	aa0103f8 	mov	x24, x1
    5918:	aa0003f7 	mov	x23, x0
    591c:	f94098c1 	ldr	x1, [x6, #304]
    5920:	a90153f3 	stp	x19, x20, [sp, #16]
    5924:	aa0203f4 	mov	x20, x2
    5928:	a9025bf5 	stp	x21, x22, [sp, #32]
    592c:	aa0603f3 	mov	x19, x6
    5930:	aa0303f5 	mov	x21, x3
    5934:	a9046bf9 	stp	x25, x26, [sp, #64]
    5938:	aa0403f6 	mov	x22, x4
    593c:	a90573fb 	stp	x27, x28, [sp, #80]
    5940:	f9400022 	ldr	x2, [x1]
    5944:	f9003fe2 	str	x2, [sp, #120]
    5948:	d2800002 	mov	x2, #0x0                   	// #0
    594c:	97ffff93 	bl	5798 <is_propset_pseudo_handle>
    5950:	72001c1f 	tst	w0, #0xff
    5954:	54000840 	b.eq	5a5c <propget_get_property+0x158>  // b.none
    5958:	9101c3e2 	add	x2, sp, #0x70
    595c:	9101a3e1 	add	x1, sp, #0x68
    5960:	aa1703e0 	mov	x0, x23
    5964:	97ffff72 	bl	572c <propset_get>
    5968:	350002e0 	cbnz	w0, 59c4 <propget_get_property+0xc0>
    596c:	a946effa 	ldp	x26, x27, [sp, #104]
    5970:	d2800019 	mov	x25, #0x0                   	// #0
    5974:	eb19037f 	cmp	x27, x25
    5978:	54000401 	b.ne	59f8 <propget_get_property+0xf4>  // b.any
    597c:	aa1803e0 	mov	x0, x24
    5980:	97ffeed4 	bl	14d0 <strlen>
    5984:	910193e3 	add	x3, sp, #0x64
    5988:	91000402 	add	x2, x0, #0x1
    598c:	aa1803e1 	mov	x1, x24
    5990:	aa1703e0 	mov	x0, x23
    5994:	97fff1b2 	bl	205c <_utee_get_property_name_to_index>
    5998:	35000160 	cbnz	w0, 59c4 <propget_get_property+0xc0>
    599c:	b94067e1 	ldr	w1, [sp, #100]
    59a0:	910183e6 	add	x6, sp, #0x60
    59a4:	aa1603e5 	mov	x5, x22
    59a8:	aa1503e4 	mov	x4, x21
    59ac:	aa1703e0 	mov	x0, x23
    59b0:	d2800003 	mov	x3, #0x0                   	// #0
    59b4:	d2800002 	mov	x2, #0x0                   	// #0
    59b8:	97fff1a6 	bl	2050 <_utee_get_property>
    59bc:	b94063e1 	ldr	w1, [sp, #96]
    59c0:	b9000281 	str	w1, [x20]
    59c4:	f9409a73 	ldr	x19, [x19, #304]
    59c8:	f9403fe1 	ldr	x1, [sp, #120]
    59cc:	f9400262 	ldr	x2, [x19]
    59d0:	eb020021 	subs	x1, x1, x2
    59d4:	d2800002 	mov	x2, #0x0                   	// #0
    59d8:	54000261 	b.ne	5a24 <propget_get_property+0x120>  // b.any
    59dc:	a94153f3 	ldp	x19, x20, [sp, #16]
    59e0:	a9425bf5 	ldp	x21, x22, [sp, #32]
    59e4:	a94363f7 	ldp	x23, x24, [sp, #48]
    59e8:	a9446bf9 	ldp	x25, x26, [sp, #64]
    59ec:	a94573fb 	ldp	x27, x28, [sp, #80]
    59f0:	a8c87bfd 	ldp	x29, x30, [sp], #128
    59f4:	d65f03c0 	ret
    59f8:	aa1a03fc 	mov	x28, x26
    59fc:	aa1803e0 	mov	x0, x24
    5a00:	f8418741 	ldr	x1, [x26], #24
    5a04:	94001e1c 	bl	d274 <strcmp>
    5a08:	35000260 	cbnz	w0, 5a54 <propget_get_property+0x150>
    5a0c:	f9409a73 	ldr	x19, [x19, #304]
    5a10:	f9403fe0 	ldr	x0, [sp, #120]
    5a14:	f9400261 	ldr	x1, [x19]
    5a18:	eb010000 	subs	x0, x0, x1
    5a1c:	d2800001 	mov	x1, #0x0                   	// #0
    5a20:	54000040 	b.eq	5a28 <propget_get_property+0x124>  // b.none
    5a24:	97ffeb15 	bl	678 <__stack_chk_fail>
    5a28:	aa1603e3 	mov	x3, x22
    5a2c:	aa1503e2 	mov	x2, x21
    5a30:	aa1403e1 	mov	x1, x20
    5a34:	aa1c03e0 	mov	x0, x28
    5a38:	a94153f3 	ldp	x19, x20, [sp, #16]
    5a3c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    5a40:	a94363f7 	ldp	x23, x24, [sp, #48]
    5a44:	a9446bf9 	ldp	x25, x26, [sp, #64]
    5a48:	a94573fb 	ldp	x27, x28, [sp, #80]
    5a4c:	a8c87bfd 	ldp	x29, x30, [sp], #128
    5a50:	17ffff5d 	b	57c4 <propget_get_ext_prop>
    5a54:	91000739 	add	x25, x25, #0x1
    5a58:	17ffffc7 	b	5974 <propget_get_property+0x70>
    5a5c:	b94002e7 	ldr	w7, [x23]
    5a60:	310004ff 	cmn	w7, #0x1
    5a64:	54000480 	b.eq	5af4 <propget_get_property+0x1f0>  // b.none
    5a68:	f94006e8 	ldr	x8, [x23, #8]
    5a6c:	9101c3e2 	add	x2, sp, #0x70
    5a70:	9101a3e1 	add	x1, sp, #0x68
    5a74:	aa0803e0 	mov	x0, x8
    5a78:	97ffff2d 	bl	572c <propset_get>
    5a7c:	35fffa40 	cbnz	w0, 59c4 <propget_get_property+0xc0>
    5a80:	f9403be1 	ldr	x1, [sp, #112]
    5a84:	eb27403f 	cmp	x1, w7, uxtw
    5a88:	540001c9 	b.ls	5ac0 <propget_get_property+0x1bc>  // b.plast
    5a8c:	f94098c6 	ldr	x6, [x6, #304]
    5a90:	f9403fe0 	ldr	x0, [sp, #120]
    5a94:	f94000c1 	ldr	x1, [x6]
    5a98:	eb010000 	subs	x0, x0, x1
    5a9c:	d2800001 	mov	x1, #0x0                   	// #0
    5aa0:	54fffc21 	b.ne	5a24 <propget_get_property+0x120>  // b.any
    5aa4:	f94037e0 	ldr	x0, [sp, #104]
    5aa8:	aa0403e3 	mov	x3, x4
    5aac:	52800304 	mov	w4, #0x18                  	// #24
    5ab0:	aa1503e2 	mov	x2, x21
    5ab4:	aa1403e1 	mov	x1, x20
    5ab8:	9ba400e0 	umaddl	x0, w7, w4, x0
    5abc:	17ffffdf 	b	5a38 <propget_get_property+0x134>
    5ac0:	aa0403e5 	mov	x5, x4
    5ac4:	4b0100e1 	sub	w1, w7, w1
    5ac8:	910183e6 	add	x6, sp, #0x60
    5acc:	aa1503e4 	mov	x4, x21
    5ad0:	aa0803e0 	mov	x0, x8
    5ad4:	d2800003 	mov	x3, #0x0                   	// #0
    5ad8:	d2800002 	mov	x2, #0x0                   	// #0
    5adc:	97fff15d 	bl	2050 <_utee_get_property>
    5ae0:	129ffee1 	mov	w1, #0xffff0008            	// #-65528
    5ae4:	6b01001f 	cmp	w0, w1
    5ae8:	129fff21 	mov	w1, #0xffff0006            	// #-65530
    5aec:	1a811000 	csel	w0, w0, w1, ne  // ne = any
    5af0:	17ffffb3 	b	59bc <propget_get_property+0xb8>
    5af4:	129ffee0 	mov	w0, #0xffff0008            	// #-65528
    5af8:	17ffffb3 	b	59c4 <propget_get_property+0xc0>

0000000000005afc <TEE_GetPropertyAsString>:
TEE_GetPropertyAsString():
    5afc:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    5b00:	910003fd 	mov	x29, sp
    5b04:	a9025bf5 	stp	x21, x22, [sp, #32]
    5b08:	aa0203f6 	mov	x22, x2
    5b0c:	900000a2 	adrp	x2, 19000 <_DYNAMIC>
    5b10:	a90153f3 	stp	x19, x20, [sp, #16]
    5b14:	aa0103f5 	mov	x21, x1
    5b18:	aa0303f3 	mov	x19, x3
    5b1c:	f9409842 	ldr	x2, [x2, #304]
    5b20:	f9001bf7 	str	x23, [sp, #48]
    5b24:	aa0003f7 	mov	x23, x0
    5b28:	f9400041 	ldr	x1, [x2]
    5b2c:	f9002fe1 	str	x1, [sp, #88]
    5b30:	d2800001 	mov	x1, #0x0                   	// #0
    5b34:	f9002bff 	str	xzr, [sp, #80]
    5b38:	528000e1 	mov	w1, #0x7                   	// #7
    5b3c:	29097fe1 	stp	w1, wzr, [sp, #72]
    5b40:	97ffff16 	bl	5798 <is_propset_pseudo_handle>
    5b44:	72001c1f 	tst	w0, #0xff
    5b48:	54000060 	b.eq	5b54 <TEE_GetPropertyAsString+0x58>  // b.none
    5b4c:	aa1503e0 	mov	x0, x21
    5b50:	97fffeab 	bl	55fc <__utee_check_instring_annotation>
    5b54:	aa1303e1 	mov	x1, x19
    5b58:	aa1603e0 	mov	x0, x22
    5b5c:	97fffeb4 	bl	562c <__utee_check_outstring_annotation>
    5b60:	f9400262 	ldr	x2, [x19]
    5b64:	52800280 	mov	w0, #0x14                  	// #20
    5b68:	52b00001 	mov	w1, #0x80000000            	// #-2147483648
    5b6c:	71004c5f 	cmp	w2, #0x13
    5b70:	1a808040 	csel	w0, w2, w0, hi  // hi = pmore
    5b74:	b9004fe0 	str	w0, [sp, #76]
    5b78:	2a0003e0 	mov	w0, w0
    5b7c:	97fff56b 	bl	3128 <TEE_Malloc>
    5b80:	aa0003f4 	mov	x20, x0
    5b84:	b4000de0 	cbz	x0, 5d40 <TEE_GetPropertyAsString+0x244>
    5b88:	aa0003e3 	mov	x3, x0
    5b8c:	aa1503e1 	mov	x1, x21
    5b90:	910133e4 	add	x4, sp, #0x4c
    5b94:	910123e2 	add	x2, sp, #0x48
    5b98:	aa1703e0 	mov	x0, x23
    5b9c:	97ffff5a 	bl	5904 <propget_get_property>
    5ba0:	2a0003f5 	mov	w21, w0
    5ba4:	340003e0 	cbz	w0, 5c20 <TEE_GetPropertyAsString+0x124>
    5ba8:	129ffde0 	mov	w0, #0xffff0010            	// #-65520
    5bac:	6b0002bf 	cmp	w21, w0
    5bb0:	54000121 	b.ne	5bd4 <TEE_GetPropertyAsString+0xd8>  // b.any
    5bb4:	b9404be0 	ldr	w0, [sp, #72]
    5bb8:	7100141f 	cmp	w0, #0x5
    5bbc:	54000081 	b.ne	5bcc <TEE_GetPropertyAsString+0xd0>  // b.any
    5bc0:	b9404fe0 	ldr	w0, [sp, #76]
    5bc4:	94000466 	bl	6d5c <_base64_enc_len>
    5bc8:	b9004fe0 	str	w0, [sp, #76]
    5bcc:	b9404fe0 	ldr	w0, [sp, #76]
    5bd0:	f9000260 	str	x0, [x19]
    5bd4:	aa1403e0 	mov	x0, x20
    5bd8:	97fff59f 	bl	3254 <TEE_Free>
    5bdc:	710002bf 	cmp	w21, #0x0
    5be0:	129ffee0 	mov	w0, #0xffff0008            	// #-65528
    5be4:	7a4012a4 	ccmp	w21, w0, #0x4, ne  // ne = any
    5be8:	540000c0 	b.eq	5c00 <TEE_GetPropertyAsString+0x104>  // b.none
    5bec:	129ffde0 	mov	w0, #0xffff0010            	// #-65520
    5bf0:	6b0002bf 	cmp	w21, w0
    5bf4:	54000060 	b.eq	5c00 <TEE_GetPropertyAsString+0x104>  // b.none
    5bf8:	52800000 	mov	w0, #0x0                   	// #0
    5bfc:	97fffe54 	bl	554c <TEE_Panic>
    5c00:	900000a2 	adrp	x2, 19000 <_DYNAMIC>
    5c04:	f9409842 	ldr	x2, [x2, #304]
    5c08:	f9402fe0 	ldr	x0, [sp, #88]
    5c0c:	f9400041 	ldr	x1, [x2]
    5c10:	eb010000 	subs	x0, x0, x1
    5c14:	d2800001 	mov	x1, #0x0                   	// #0
    5c18:	54000980 	b.eq	5d48 <TEE_GetPropertyAsString+0x24c>  // b.none
    5c1c:	97ffea97 	bl	678 <__stack_chk_fail>
    5c20:	b9404be1 	ldr	w1, [sp, #72]
    5c24:	7100143f 	cmp	w1, #0x5
    5c28:	54000848 	b.hi	5d30 <TEE_GetPropertyAsString+0x234>  // b.pmore
    5c2c:	d0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    5c30:	9117b000 	add	x0, x0, #0x5ec
    5c34:	38614800 	ldrb	w0, [x0, w1, uxtw]
    5c38:	10000061 	adr	x1, 5c44 <TEE_GetPropertyAsString+0x148>
    5c3c:	8b208820 	add	x0, x1, w0, sxtb #2
    5c40:	d61f0000 	br	x0
    5c44:	39400282 	ldrb	w2, [x20]
    5c48:	d0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    5c4c:	d0000081 	adrp	x1, 17000 <__text_end+0x3c08>
    5c50:	913aa000 	add	x0, x0, #0xea8
    5c54:	7100005f 	cmp	w2, #0x0
    5c58:	913a8c21 	add	x1, x1, #0xea3
    5c5c:	f9400262 	ldr	x2, [x19]
    5c60:	9a801021 	csel	x1, x1, x0, ne  // ne = any
    5c64:	aa1603e0 	mov	x0, x22
    5c68:	94001d8c 	bl	d298 <strlcpy>
    5c6c:	14000008 	b	5c8c <TEE_GetPropertyAsString+0x190>
    5c70:	b9400283 	ldr	w3, [x20]
    5c74:	d0000082 	adrp	x2, 17000 <__text_end+0x3c08>
    5c78:	f9400261 	ldr	x1, [x19]
    5c7c:	91274c42 	add	x2, x2, #0x9d3
    5c80:	aa1603e0 	mov	x0, x22
    5c84:	94001d13 	bl	d0d0 <snprintf>
    5c88:	93407c00 	sxtw	x0, w0
    5c8c:	91000402 	add	x2, x0, #0x1
    5c90:	129ffdf5 	mov	w21, #0xffff0010            	// #-65520
    5c94:	f9400260 	ldr	x0, [x19]
    5c98:	f9000262 	str	x2, [x19]
    5c9c:	f9002be2 	str	x2, [sp, #80]
    5ca0:	eb00005f 	cmp	x2, x0
    5ca4:	1a9593f5 	csel	w21, wzr, w21, ls  // ls = plast
    5ca8:	17ffffcb 	b	5bd4 <TEE_GetPropertyAsString+0xd8>
    5cac:	f9400261 	ldr	x1, [x19]
    5cb0:	aa1403e3 	mov	x3, x20
    5cb4:	aa1603e0 	mov	x0, x22
    5cb8:	d0000082 	adrp	x2, 17000 <__text_end+0x3c08>
    5cbc:	913ac442 	add	x2, x2, #0xeb1
    5cc0:	97ffeac1 	bl	7c4 <snprintk>
    5cc4:	17fffff1 	b	5c88 <TEE_GetPropertyAsString+0x18c>
    5cc8:	b9400283 	ldr	w3, [x20]
    5ccc:	91001284 	add	x4, x20, #0x4
    5cd0:	f9400261 	ldr	x1, [x19]
    5cd4:	aa1603e0 	mov	x0, x22
    5cd8:	d0000082 	adrp	x2, 17000 <__text_end+0x3c08>
    5cdc:	913ab842 	add	x2, x2, #0xeae
    5ce0:	97ffeab9 	bl	7c4 <snprintk>
    5ce4:	17ffffe9 	b	5c88 <TEE_GetPropertyAsString+0x18c>
    5ce8:	aa1403e1 	mov	x1, x20
    5cec:	f9400262 	ldr	x2, [x19]
    5cf0:	17ffffdd 	b	5c64 <TEE_GetPropertyAsString+0x168>
    5cf4:	b9404fe1 	ldr	w1, [sp, #76]
    5cf8:	910143e3 	add	x3, sp, #0x50
    5cfc:	f9400260 	ldr	x0, [x19]
    5d00:	aa1603e2 	mov	x2, x22
    5d04:	f9002be0 	str	x0, [sp, #80]
    5d08:	aa1403e0 	mov	x0, x20
    5d0c:	9400041a 	bl	6d74 <_base64_enc>
    5d10:	72001c1f 	tst	w0, #0xff
    5d14:	f9402be0 	ldr	x0, [sp, #80]
    5d18:	54000081 	b.ne	5d28 <TEE_GetPropertyAsString+0x22c>  // b.any
    5d1c:	f9400261 	ldr	x1, [x19]
    5d20:	eb00003f 	cmp	x1, x0
    5d24:	540000a2 	b.cs	5d38 <TEE_GetPropertyAsString+0x23c>  // b.hs, b.nlast
    5d28:	d1000400 	sub	x0, x0, #0x1
    5d2c:	17ffffd8 	b	5c8c <TEE_GetPropertyAsString+0x190>
    5d30:	129fff55 	mov	w21, #0xffff0005            	// #-65531
    5d34:	17ffffa8 	b	5bd4 <TEE_GetPropertyAsString+0xd8>
    5d38:	52bffff5 	mov	w21, #0xffff0000            	// #-65536
    5d3c:	17ffffa6 	b	5bd4 <TEE_GetPropertyAsString+0xd8>
    5d40:	129ffe75 	mov	w21, #0xffff000c            	// #-65524
    5d44:	17ffffad 	b	5bf8 <TEE_GetPropertyAsString+0xfc>
    5d48:	2a1503e0 	mov	w0, w21
    5d4c:	a94153f3 	ldp	x19, x20, [sp, #16]
    5d50:	a9425bf5 	ldp	x21, x22, [sp, #32]
    5d54:	f9401bf7 	ldr	x23, [sp, #48]
    5d58:	a8c67bfd 	ldp	x29, x30, [sp], #96
    5d5c:	d65f03c0 	ret

0000000000005d60 <__GP11_TEE_GetPropertyAsString>:
__GP11_TEE_GetPropertyAsString():
    5d60:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    5d64:	910003fd 	mov	x29, sp
    5d68:	a90153f3 	stp	x19, x20, [sp, #16]
    5d6c:	900000b4 	adrp	x20, 19000 <_DYNAMIC>
    5d70:	aa0303f3 	mov	x19, x3
    5d74:	a9025bf5 	stp	x21, x22, [sp, #32]
    5d78:	aa0003f6 	mov	x22, x0
    5d7c:	aa0203f5 	mov	x21, x2
    5d80:	f9409a80 	ldr	x0, [x20, #304]
    5d84:	f9001bf7 	str	x23, [sp, #48]
    5d88:	aa0103f7 	mov	x23, x1
    5d8c:	f9400001 	ldr	x1, [x0]
    5d90:	f90027e1 	str	x1, [sp, #72]
    5d94:	d2800001 	mov	x1, #0x0                   	// #0
    5d98:	aa0203e0 	mov	x0, x2
    5d9c:	aa0303e1 	mov	x1, x3
    5da0:	f90023ff 	str	xzr, [sp, #64]
    5da4:	97fffe35 	bl	5678 <__utee_check_gp11_outstring_annotation>
    5da8:	b9400260 	ldr	w0, [x19]
    5dac:	aa1503e2 	mov	x2, x21
    5db0:	aa1703e1 	mov	x1, x23
    5db4:	910103e3 	add	x3, sp, #0x40
    5db8:	f90023e0 	str	x0, [sp, #64]
    5dbc:	aa1603e0 	mov	x0, x22
    5dc0:	97ffff4f 	bl	5afc <TEE_GetPropertyAsString>
    5dc4:	f9409a94 	ldr	x20, [x20, #304]
    5dc8:	f94023e1 	ldr	x1, [sp, #64]
    5dcc:	b9000261 	str	w1, [x19]
    5dd0:	f94027e1 	ldr	x1, [sp, #72]
    5dd4:	f9400282 	ldr	x2, [x20]
    5dd8:	eb020021 	subs	x1, x1, x2
    5ddc:	d2800002 	mov	x2, #0x0                   	// #0
    5de0:	54000040 	b.eq	5de8 <__GP11_TEE_GetPropertyAsString+0x88>  // b.none
    5de4:	97ffea25 	bl	678 <__stack_chk_fail>
    5de8:	a94153f3 	ldp	x19, x20, [sp, #16]
    5dec:	a9425bf5 	ldp	x21, x22, [sp, #32]
    5df0:	f9401bf7 	ldr	x23, [sp, #48]
    5df4:	a8c57bfd 	ldp	x29, x30, [sp], #80
    5df8:	d65f03c0 	ret

0000000000005dfc <TEE_GetPropertyAsBool>:
TEE_GetPropertyAsBool():
    5dfc:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    5e00:	900000a4 	adrp	x4, 19000 <_DYNAMIC>
    5e04:	910003fd 	mov	x29, sp
    5e08:	f9409884 	ldr	x4, [x4, #304]
    5e0c:	a90153f3 	stp	x19, x20, [sp, #16]
    5e10:	aa0103f3 	mov	x19, x1
    5e14:	f90013f5 	str	x21, [sp, #32]
    5e18:	aa0203f4 	mov	x20, x2
    5e1c:	aa0003f5 	mov	x21, x0
    5e20:	f9400081 	ldr	x1, [x4]
    5e24:	f9001fe1 	str	x1, [sp, #56]
    5e28:	d2800001 	mov	x1, #0x0                   	// #0
    5e2c:	52800021 	mov	w1, #0x1                   	// #1
    5e30:	b90037e1 	str	w1, [sp, #52]
    5e34:	97fffe59 	bl	5798 <is_propset_pseudo_handle>
    5e38:	72001c1f 	tst	w0, #0xff
    5e3c:	54000060 	b.eq	5e48 <TEE_GetPropertyAsBool+0x4c>  // b.none
    5e40:	aa1303e0 	mov	x0, x19
    5e44:	97fffdee 	bl	55fc <__utee_check_instring_annotation>
    5e48:	aa1403e0 	mov	x0, x20
    5e4c:	d2800021 	mov	x1, #0x1                   	// #1
    5e50:	97fffe1d 	bl	56c4 <__utee_check_out_annotation>
    5e54:	b90033ff 	str	wzr, [sp, #48]
    5e58:	aa1303e1 	mov	x1, x19
    5e5c:	9100c3e2 	add	x2, sp, #0x30
    5e60:	9100d3e4 	add	x4, sp, #0x34
    5e64:	aa1403e3 	mov	x3, x20
    5e68:	aa1503e0 	mov	x0, x21
    5e6c:	97fffea6 	bl	5904 <propget_get_property>
    5e70:	b94033e2 	ldr	w2, [sp, #48]
    5e74:	129fff41 	mov	w1, #0xffff0005            	// #-65531
    5e78:	7100005f 	cmp	w2, #0x0
    5e7c:	1a810013 	csel	w19, w0, w1, eq  // eq = none
    5e80:	129ffee0 	mov	w0, #0xffff0008            	// #-65528
    5e84:	7100027f 	cmp	w19, #0x0
    5e88:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
    5e8c:	540000a0 	b.eq	5ea0 <TEE_GetPropertyAsBool+0xa4>  // b.none
    5e90:	6b01027f 	cmp	w19, w1
    5e94:	54000060 	b.eq	5ea0 <TEE_GetPropertyAsBool+0xa4>  // b.none
    5e98:	52800000 	mov	w0, #0x0                   	// #0
    5e9c:	97fffdac 	bl	554c <TEE_Panic>
    5ea0:	900000a4 	adrp	x4, 19000 <_DYNAMIC>
    5ea4:	f9409884 	ldr	x4, [x4, #304]
    5ea8:	f9401fe0 	ldr	x0, [sp, #56]
    5eac:	f9400081 	ldr	x1, [x4]
    5eb0:	eb010000 	subs	x0, x0, x1
    5eb4:	d2800001 	mov	x1, #0x0                   	// #0
    5eb8:	54000040 	b.eq	5ec0 <TEE_GetPropertyAsBool+0xc4>  // b.none
    5ebc:	97ffe9ef 	bl	678 <__stack_chk_fail>
    5ec0:	2a1303e0 	mov	w0, w19
    5ec4:	a94153f3 	ldp	x19, x20, [sp, #16]
    5ec8:	f94013f5 	ldr	x21, [sp, #32]
    5ecc:	a8c47bfd 	ldp	x29, x30, [sp], #64
    5ed0:	d65f03c0 	ret

0000000000005ed4 <TEE_GetPropertyAsU32>:
TEE_GetPropertyAsU32():
    5ed4:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    5ed8:	900000a4 	adrp	x4, 19000 <_DYNAMIC>
    5edc:	910003fd 	mov	x29, sp
    5ee0:	f9409884 	ldr	x4, [x4, #304]
    5ee4:	a90153f3 	stp	x19, x20, [sp, #16]
    5ee8:	aa0103f3 	mov	x19, x1
    5eec:	f90013f5 	str	x21, [sp, #32]
    5ef0:	aa0203f4 	mov	x20, x2
    5ef4:	aa0003f5 	mov	x21, x0
    5ef8:	f9400081 	ldr	x1, [x4]
    5efc:	f9001fe1 	str	x1, [sp, #56]
    5f00:	d2800001 	mov	x1, #0x0                   	// #0
    5f04:	52800081 	mov	w1, #0x4                   	// #4
    5f08:	b90037e1 	str	w1, [sp, #52]
    5f0c:	97fffe23 	bl	5798 <is_propset_pseudo_handle>
    5f10:	72001c1f 	tst	w0, #0xff
    5f14:	54000060 	b.eq	5f20 <TEE_GetPropertyAsU32+0x4c>  // b.none
    5f18:	aa1303e0 	mov	x0, x19
    5f1c:	97fffdb8 	bl	55fc <__utee_check_instring_annotation>
    5f20:	aa1403e0 	mov	x0, x20
    5f24:	d2800081 	mov	x1, #0x4                   	// #4
    5f28:	97fffde7 	bl	56c4 <__utee_check_out_annotation>
    5f2c:	52800020 	mov	w0, #0x1                   	// #1
    5f30:	aa1303e1 	mov	x1, x19
    5f34:	9100d3e4 	add	x4, sp, #0x34
    5f38:	aa1403e3 	mov	x3, x20
    5f3c:	9100c3e2 	add	x2, sp, #0x30
    5f40:	b90033e0 	str	w0, [sp, #48]
    5f44:	aa1503e0 	mov	x0, x21
    5f48:	97fffe6f 	bl	5904 <propget_get_property>
    5f4c:	2a0003f3 	mov	w19, w0
    5f50:	b94033e0 	ldr	w0, [sp, #48]
    5f54:	7100041f 	cmp	w0, #0x1
    5f58:	54000241 	b.ne	5fa0 <TEE_GetPropertyAsU32+0xcc>  // b.any
    5f5c:	7100027f 	cmp	w19, #0x0
    5f60:	129ffee0 	mov	w0, #0xffff0008            	// #-65528
    5f64:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
    5f68:	540000c0 	b.eq	5f80 <TEE_GetPropertyAsU32+0xac>  // b.none
    5f6c:	129fff40 	mov	w0, #0xffff0005            	// #-65531
    5f70:	6b00027f 	cmp	w19, w0
    5f74:	54000060 	b.eq	5f80 <TEE_GetPropertyAsU32+0xac>  // b.none
    5f78:	52800000 	mov	w0, #0x0                   	// #0
    5f7c:	97fffd74 	bl	554c <TEE_Panic>
    5f80:	900000a4 	adrp	x4, 19000 <_DYNAMIC>
    5f84:	f9409884 	ldr	x4, [x4, #304]
    5f88:	f9401fe0 	ldr	x0, [sp, #56]
    5f8c:	f9400081 	ldr	x1, [x4]
    5f90:	eb010000 	subs	x0, x0, x1
    5f94:	d2800001 	mov	x1, #0x0                   	// #0
    5f98:	54000080 	b.eq	5fa8 <TEE_GetPropertyAsU32+0xd4>  // b.none
    5f9c:	97ffe9b7 	bl	678 <__stack_chk_fail>
    5fa0:	129fff53 	mov	w19, #0xffff0005            	// #-65531
    5fa4:	17fffff7 	b	5f80 <TEE_GetPropertyAsU32+0xac>
    5fa8:	2a1303e0 	mov	w0, w19
    5fac:	a94153f3 	ldp	x19, x20, [sp, #16]
    5fb0:	f94013f5 	ldr	x21, [sp, #32]
    5fb4:	a8c47bfd 	ldp	x29, x30, [sp], #64
    5fb8:	d65f03c0 	ret

0000000000005fbc <TEE_GetPropertyAsU64>:
TEE_GetPropertyAsU64():
    5fbc:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    5fc0:	900000a4 	adrp	x4, 19000 <_DYNAMIC>
    5fc4:	910003fd 	mov	x29, sp
    5fc8:	f9409884 	ldr	x4, [x4, #304]
    5fcc:	a90153f3 	stp	x19, x20, [sp, #16]
    5fd0:	aa0103f3 	mov	x19, x1
    5fd4:	f90013f5 	str	x21, [sp, #32]
    5fd8:	aa0203f4 	mov	x20, x2
    5fdc:	aa0003f5 	mov	x21, x0
    5fe0:	f9400081 	ldr	x1, [x4]
    5fe4:	f9001fe1 	str	x1, [sp, #56]
    5fe8:	d2800001 	mov	x1, #0x0                   	// #0
    5fec:	52800101 	mov	w1, #0x8                   	// #8
    5ff0:	b90037e1 	str	w1, [sp, #52]
    5ff4:	97fffde9 	bl	5798 <is_propset_pseudo_handle>
    5ff8:	72001c1f 	tst	w0, #0xff
    5ffc:	54000060 	b.eq	6008 <TEE_GetPropertyAsU64+0x4c>  // b.none
    6000:	aa1303e0 	mov	x0, x19
    6004:	97fffd7e 	bl	55fc <__utee_check_instring_annotation>
    6008:	aa1403e0 	mov	x0, x20
    600c:	d2800101 	mov	x1, #0x8                   	// #8
    6010:	97fffdad 	bl	56c4 <__utee_check_out_annotation>
    6014:	528000c0 	mov	w0, #0x6                   	// #6
    6018:	aa1303e1 	mov	x1, x19
    601c:	9100d3e4 	add	x4, sp, #0x34
    6020:	aa1403e3 	mov	x3, x20
    6024:	9100c3e2 	add	x2, sp, #0x30
    6028:	b90033e0 	str	w0, [sp, #48]
    602c:	aa1503e0 	mov	x0, x21
    6030:	97fffe35 	bl	5904 <propget_get_property>
    6034:	2a0003f3 	mov	w19, w0
    6038:	b94033e0 	ldr	w0, [sp, #48]
    603c:	7100181f 	cmp	w0, #0x6
    6040:	54000241 	b.ne	6088 <TEE_GetPropertyAsU64+0xcc>  // b.any
    6044:	7100027f 	cmp	w19, #0x0
    6048:	129ffee0 	mov	w0, #0xffff0008            	// #-65528
    604c:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
    6050:	540000c0 	b.eq	6068 <TEE_GetPropertyAsU64+0xac>  // b.none
    6054:	129fff40 	mov	w0, #0xffff0005            	// #-65531
    6058:	6b00027f 	cmp	w19, w0
    605c:	54000060 	b.eq	6068 <TEE_GetPropertyAsU64+0xac>  // b.none
    6060:	52800000 	mov	w0, #0x0                   	// #0
    6064:	97fffd3a 	bl	554c <TEE_Panic>
    6068:	f0000084 	adrp	x4, 19000 <_DYNAMIC>
    606c:	f9409884 	ldr	x4, [x4, #304]
    6070:	f9401fe0 	ldr	x0, [sp, #56]
    6074:	f9400081 	ldr	x1, [x4]
    6078:	eb010000 	subs	x0, x0, x1
    607c:	d2800001 	mov	x1, #0x0                   	// #0
    6080:	54000080 	b.eq	6090 <TEE_GetPropertyAsU64+0xd4>  // b.none
    6084:	97ffe97d 	bl	678 <__stack_chk_fail>
    6088:	129fff53 	mov	w19, #0xffff0005            	// #-65531
    608c:	17fffff7 	b	6068 <TEE_GetPropertyAsU64+0xac>
    6090:	2a1303e0 	mov	w0, w19
    6094:	a94153f3 	ldp	x19, x20, [sp, #16]
    6098:	f94013f5 	ldr	x21, [sp, #32]
    609c:	a8c47bfd 	ldp	x29, x30, [sp], #64
    60a0:	d65f03c0 	ret

00000000000060a4 <__GP11_TEE_GetPropertyAsBinaryBlock>:
__GP11_TEE_GetPropertyAsBinaryBlock():
    60a4:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    60a8:	f0000085 	adrp	x5, 19000 <_DYNAMIC>
    60ac:	910003fd 	mov	x29, sp
    60b0:	f94098a5 	ldr	x5, [x5, #304]
    60b4:	a90153f3 	stp	x19, x20, [sp, #16]
    60b8:	aa0103f3 	mov	x19, x1
    60bc:	a9025bf5 	stp	x21, x22, [sp, #32]
    60c0:	aa0203f4 	mov	x20, x2
    60c4:	aa0003f6 	mov	x22, x0
    60c8:	f94000a1 	ldr	x1, [x5]
    60cc:	f9001fe1 	str	x1, [sp, #56]
    60d0:	d2800001 	mov	x1, #0x0                   	// #0
    60d4:	aa0303f5 	mov	x21, x3
    60d8:	97fffdb0 	bl	5798 <is_propset_pseudo_handle>
    60dc:	72001c1f 	tst	w0, #0xff
    60e0:	54000060 	b.eq	60ec <__GP11_TEE_GetPropertyAsBinaryBlock+0x48>  // b.none
    60e4:	aa1303e0 	mov	x0, x19
    60e8:	97fffd45 	bl	55fc <__utee_check_instring_annotation>
    60ec:	aa1503e1 	mov	x1, x21
    60f0:	aa1403e0 	mov	x0, x20
    60f4:	97fffd2f 	bl	55b0 <__utee_check_gp11_outbuf_annotation>
    60f8:	528000a0 	mov	w0, #0x5                   	// #5
    60fc:	aa1303e1 	mov	x1, x19
    6100:	aa1503e4 	mov	x4, x21
    6104:	aa1403e3 	mov	x3, x20
    6108:	9100d3e2 	add	x2, sp, #0x34
    610c:	b90037e0 	str	w0, [sp, #52]
    6110:	aa1603e0 	mov	x0, x22
    6114:	97fffdfc 	bl	5904 <propget_get_property>
    6118:	2a0003f3 	mov	w19, w0
    611c:	b94037e0 	ldr	w0, [sp, #52]
    6120:	7100141f 	cmp	w0, #0x5
    6124:	54000261 	b.ne	6170 <__GP11_TEE_GetPropertyAsBinaryBlock+0xcc>  // b.any
    6128:	34000153 	cbz	w19, 6150 <__GP11_TEE_GetPropertyAsBinaryBlock+0xac>
    612c:	529fff60 	mov	w0, #0xfffb                	// #65531
    6130:	0b000261 	add	w1, w19, w0
    6134:	71002c3f 	cmp	w1, #0xb
    6138:	54000088 	b.hi	6148 <__GP11_TEE_GetPropertyAsBinaryBlock+0xa4>  // b.pmore
    613c:	92810120 	mov	x0, #0xfffffffffffff7f6    	// #-2058
    6140:	9ac12800 	asr	x0, x0, x1
    6144:	36000060 	tbz	w0, #0, 6150 <__GP11_TEE_GetPropertyAsBinaryBlock+0xac>
    6148:	52800000 	mov	w0, #0x0                   	// #0
    614c:	97fffd00 	bl	554c <TEE_Panic>
    6150:	f0000085 	adrp	x5, 19000 <_DYNAMIC>
    6154:	f94098a5 	ldr	x5, [x5, #304]
    6158:	f9401fe0 	ldr	x0, [sp, #56]
    615c:	f94000a1 	ldr	x1, [x5]
    6160:	eb010000 	subs	x0, x0, x1
    6164:	d2800001 	mov	x1, #0x0                   	// #0
    6168:	54000080 	b.eq	6178 <__GP11_TEE_GetPropertyAsBinaryBlock+0xd4>  // b.none
    616c:	97ffe943 	bl	678 <__stack_chk_fail>
    6170:	129fff53 	mov	w19, #0xffff0005            	// #-65531
    6174:	17fffff7 	b	6150 <__GP11_TEE_GetPropertyAsBinaryBlock+0xac>
    6178:	2a1303e0 	mov	w0, w19
    617c:	a94153f3 	ldp	x19, x20, [sp, #16]
    6180:	a9425bf5 	ldp	x21, x22, [sp, #32]
    6184:	a8c47bfd 	ldp	x29, x30, [sp], #64
    6188:	d65f03c0 	ret

000000000000618c <TEE_GetPropertyAsBinaryBlock>:
TEE_GetPropertyAsBinaryBlock():
    618c:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    6190:	910003fd 	mov	x29, sp
    6194:	a90153f3 	stp	x19, x20, [sp, #16]
    6198:	f0000094 	adrp	x20, 19000 <_DYNAMIC>
    619c:	aa0303f3 	mov	x19, x3
    61a0:	a9025bf5 	stp	x21, x22, [sp, #32]
    61a4:	aa0003f6 	mov	x22, x0
    61a8:	aa0203f5 	mov	x21, x2
    61ac:	f9409a80 	ldr	x0, [x20, #304]
    61b0:	f9001bf7 	str	x23, [sp, #48]
    61b4:	aa0103f7 	mov	x23, x1
    61b8:	f9400001 	ldr	x1, [x0]
    61bc:	f90027e1 	str	x1, [sp, #72]
    61c0:	d2800001 	mov	x1, #0x0                   	// #0
    61c4:	aa0203e0 	mov	x0, x2
    61c8:	aa0303e1 	mov	x1, x3
    61cc:	b90047ff 	str	wzr, [sp, #68]
    61d0:	97fffce5 	bl	5564 <__utee_check_outbuf_annotation>
    61d4:	f9400260 	ldr	x0, [x19]
    61d8:	aa1503e2 	mov	x2, x21
    61dc:	aa1703e1 	mov	x1, x23
    61e0:	910113e3 	add	x3, sp, #0x44
    61e4:	b90047e0 	str	w0, [sp, #68]
    61e8:	aa1603e0 	mov	x0, x22
    61ec:	97ffffae 	bl	60a4 <__GP11_TEE_GetPropertyAsBinaryBlock>
    61f0:	b94047e1 	ldr	w1, [sp, #68]
    61f4:	f9409a94 	ldr	x20, [x20, #304]
    61f8:	f9000261 	str	x1, [x19]
    61fc:	f94027e1 	ldr	x1, [sp, #72]
    6200:	f9400282 	ldr	x2, [x20]
    6204:	eb020021 	subs	x1, x1, x2
    6208:	d2800002 	mov	x2, #0x0                   	// #0
    620c:	54000040 	b.eq	6214 <TEE_GetPropertyAsBinaryBlock+0x88>  // b.none
    6210:	97ffe91a 	bl	678 <__stack_chk_fail>
    6214:	a94153f3 	ldp	x19, x20, [sp, #16]
    6218:	a9425bf5 	ldp	x21, x22, [sp, #32]
    621c:	f9401bf7 	ldr	x23, [sp, #48]
    6220:	a8c57bfd 	ldp	x29, x30, [sp], #80
    6224:	d65f03c0 	ret

0000000000006228 <TEE_GetPropertyAsUUID>:
TEE_GetPropertyAsUUID():
    6228:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    622c:	f0000084 	adrp	x4, 19000 <_DYNAMIC>
    6230:	910003fd 	mov	x29, sp
    6234:	f9409884 	ldr	x4, [x4, #304]
    6238:	a90153f3 	stp	x19, x20, [sp, #16]
    623c:	aa0103f3 	mov	x19, x1
    6240:	f90013f5 	str	x21, [sp, #32]
    6244:	aa0203f4 	mov	x20, x2
    6248:	aa0003f5 	mov	x21, x0
    624c:	f9400081 	ldr	x1, [x4]
    6250:	f9001fe1 	str	x1, [sp, #56]
    6254:	d2800001 	mov	x1, #0x0                   	// #0
    6258:	52800201 	mov	w1, #0x10                  	// #16
    625c:	b90037e1 	str	w1, [sp, #52]
    6260:	97fffd4e 	bl	5798 <is_propset_pseudo_handle>
    6264:	72001c1f 	tst	w0, #0xff
    6268:	54000060 	b.eq	6274 <TEE_GetPropertyAsUUID+0x4c>  // b.none
    626c:	aa1303e0 	mov	x0, x19
    6270:	97fffce3 	bl	55fc <__utee_check_instring_annotation>
    6274:	aa1403e0 	mov	x0, x20
    6278:	d2800201 	mov	x1, #0x10                  	// #16
    627c:	97fffd12 	bl	56c4 <__utee_check_out_annotation>
    6280:	52800040 	mov	w0, #0x2                   	// #2
    6284:	aa1303e1 	mov	x1, x19
    6288:	9100d3e4 	add	x4, sp, #0x34
    628c:	aa1403e3 	mov	x3, x20
    6290:	9100c3e2 	add	x2, sp, #0x30
    6294:	b90033e0 	str	w0, [sp, #48]
    6298:	aa1503e0 	mov	x0, x21
    629c:	97fffd9a 	bl	5904 <propget_get_property>
    62a0:	2a0003f3 	mov	w19, w0
    62a4:	b94033e0 	ldr	w0, [sp, #48]
    62a8:	7100081f 	cmp	w0, #0x2
    62ac:	54000241 	b.ne	62f4 <TEE_GetPropertyAsUUID+0xcc>  // b.any
    62b0:	7100027f 	cmp	w19, #0x0
    62b4:	129ffee0 	mov	w0, #0xffff0008            	// #-65528
    62b8:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
    62bc:	540000c0 	b.eq	62d4 <TEE_GetPropertyAsUUID+0xac>  // b.none
    62c0:	129fff40 	mov	w0, #0xffff0005            	// #-65531
    62c4:	6b00027f 	cmp	w19, w0
    62c8:	54000060 	b.eq	62d4 <TEE_GetPropertyAsUUID+0xac>  // b.none
    62cc:	52800000 	mov	w0, #0x0                   	// #0
    62d0:	97fffc9f 	bl	554c <TEE_Panic>
    62d4:	f0000084 	adrp	x4, 19000 <_DYNAMIC>
    62d8:	f9409884 	ldr	x4, [x4, #304]
    62dc:	f9401fe0 	ldr	x0, [sp, #56]
    62e0:	f9400081 	ldr	x1, [x4]
    62e4:	eb010000 	subs	x0, x0, x1
    62e8:	d2800001 	mov	x1, #0x0                   	// #0
    62ec:	54000080 	b.eq	62fc <TEE_GetPropertyAsUUID+0xd4>  // b.none
    62f0:	97ffe8e2 	bl	678 <__stack_chk_fail>
    62f4:	129fff53 	mov	w19, #0xffff0005            	// #-65531
    62f8:	17fffff7 	b	62d4 <TEE_GetPropertyAsUUID+0xac>
    62fc:	2a1303e0 	mov	w0, w19
    6300:	a94153f3 	ldp	x19, x20, [sp, #16]
    6304:	f94013f5 	ldr	x21, [sp, #32]
    6308:	a8c47bfd 	ldp	x29, x30, [sp], #64
    630c:	d65f03c0 	ret

0000000000006310 <TEE_GetPropertyAsIdentity>:
TEE_GetPropertyAsIdentity():
    6310:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    6314:	f0000084 	adrp	x4, 19000 <_DYNAMIC>
    6318:	910003fd 	mov	x29, sp
    631c:	f9409884 	ldr	x4, [x4, #304]
    6320:	a90153f3 	stp	x19, x20, [sp, #16]
    6324:	aa0103f3 	mov	x19, x1
    6328:	f90013f5 	str	x21, [sp, #32]
    632c:	aa0203f4 	mov	x20, x2
    6330:	aa0003f5 	mov	x21, x0
    6334:	f9400081 	ldr	x1, [x4]
    6338:	f9001fe1 	str	x1, [sp, #56]
    633c:	d2800001 	mov	x1, #0x0                   	// #0
    6340:	52800281 	mov	w1, #0x14                  	// #20
    6344:	b90037e1 	str	w1, [sp, #52]
    6348:	97fffd14 	bl	5798 <is_propset_pseudo_handle>
    634c:	72001c1f 	tst	w0, #0xff
    6350:	54000060 	b.eq	635c <TEE_GetPropertyAsIdentity+0x4c>  // b.none
    6354:	aa1303e0 	mov	x0, x19
    6358:	97fffca9 	bl	55fc <__utee_check_instring_annotation>
    635c:	aa1403e0 	mov	x0, x20
    6360:	d2800281 	mov	x1, #0x14                  	// #20
    6364:	97fffcd8 	bl	56c4 <__utee_check_out_annotation>
    6368:	52800060 	mov	w0, #0x3                   	// #3
    636c:	aa1303e1 	mov	x1, x19
    6370:	9100d3e4 	add	x4, sp, #0x34
    6374:	aa1403e3 	mov	x3, x20
    6378:	9100c3e2 	add	x2, sp, #0x30
    637c:	b90033e0 	str	w0, [sp, #48]
    6380:	aa1503e0 	mov	x0, x21
    6384:	97fffd60 	bl	5904 <propget_get_property>
    6388:	2a0003f3 	mov	w19, w0
    638c:	b94033e0 	ldr	w0, [sp, #48]
    6390:	71000c1f 	cmp	w0, #0x3
    6394:	54000241 	b.ne	63dc <TEE_GetPropertyAsIdentity+0xcc>  // b.any
    6398:	7100027f 	cmp	w19, #0x0
    639c:	129ffee0 	mov	w0, #0xffff0008            	// #-65528
    63a0:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
    63a4:	540000c0 	b.eq	63bc <TEE_GetPropertyAsIdentity+0xac>  // b.none
    63a8:	129fff40 	mov	w0, #0xffff0005            	// #-65531
    63ac:	6b00027f 	cmp	w19, w0
    63b0:	54000060 	b.eq	63bc <TEE_GetPropertyAsIdentity+0xac>  // b.none
    63b4:	52800000 	mov	w0, #0x0                   	// #0
    63b8:	97fffc65 	bl	554c <TEE_Panic>
    63bc:	f0000084 	adrp	x4, 19000 <_DYNAMIC>
    63c0:	f9409884 	ldr	x4, [x4, #304]
    63c4:	f9401fe0 	ldr	x0, [sp, #56]
    63c8:	f9400081 	ldr	x1, [x4]
    63cc:	eb010000 	subs	x0, x0, x1
    63d0:	d2800001 	mov	x1, #0x0                   	// #0
    63d4:	54000080 	b.eq	63e4 <TEE_GetPropertyAsIdentity+0xd4>  // b.none
    63d8:	97ffe8a8 	bl	678 <__stack_chk_fail>
    63dc:	129fff53 	mov	w19, #0xffff0005            	// #-65531
    63e0:	17fffff7 	b	63bc <TEE_GetPropertyAsIdentity+0xac>
    63e4:	2a1303e0 	mov	w0, w19
    63e8:	a94153f3 	ldp	x19, x20, [sp, #16]
    63ec:	f94013f5 	ldr	x21, [sp, #32]
    63f0:	a8c47bfd 	ldp	x29, x30, [sp], #64
    63f4:	d65f03c0 	ret

00000000000063f8 <TEE_ResetPropertyEnumerator>:
TEE_ResetPropertyEnumerator():
    63f8:	12800001 	mov	w1, #0xffffffff            	// #-1
    63fc:	b9000001 	str	w1, [x0]
    6400:	d65f03c0 	ret

0000000000006404 <TEE_AllocatePropertyEnumerator>:
TEE_AllocatePropertyEnumerator():
    6404:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    6408:	d2800101 	mov	x1, #0x8                   	// #8
    640c:	910003fd 	mov	x29, sp
    6410:	f9000bf3 	str	x19, [sp, #16]
    6414:	aa0003f3 	mov	x19, x0
    6418:	97fffcab 	bl	56c4 <__utee_check_out_annotation>
    641c:	52b00001 	mov	w1, #0x80000000            	// #-2147483648
    6420:	d2800200 	mov	x0, #0x10                  	// #16
    6424:	97fff341 	bl	3128 <TEE_Malloc>
    6428:	b40000e0 	cbz	x0, 6444 <TEE_AllocatePropertyEnumerator+0x40>
    642c:	f9000260 	str	x0, [x19]
    6430:	97fffff2 	bl	63f8 <TEE_ResetPropertyEnumerator>
    6434:	52800000 	mov	w0, #0x0                   	// #0
    6438:	f9400bf3 	ldr	x19, [sp, #16]
    643c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    6440:	d65f03c0 	ret
    6444:	129ffe60 	mov	w0, #0xffff000c            	// #-65524
    6448:	17fffffc 	b	6438 <TEE_AllocatePropertyEnumerator+0x34>

000000000000644c <TEE_FreePropertyEnumerator>:
TEE_FreePropertyEnumerator():
    644c:	17fff382 	b	3254 <TEE_Free>

0000000000006450 <TEE_StartPropertyEnumerator>:
TEE_StartPropertyEnumerator():
    6450:	b4000060 	cbz	x0, 645c <TEE_StartPropertyEnumerator+0xc>
    6454:	b900001f 	str	wzr, [x0]
    6458:	f9000401 	str	x1, [x0, #8]
    645c:	d65f03c0 	ret

0000000000006460 <__GP11_TEE_GetPropertyName>:
__GP11_TEE_GetPropertyName():
    6460:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    6464:	f0000084 	adrp	x4, 19000 <_DYNAMIC>
    6468:	910003fd 	mov	x29, sp
    646c:	f9409884 	ldr	x4, [x4, #304]
    6470:	a90153f3 	stp	x19, x20, [sp, #16]
    6474:	a9025bf5 	stp	x21, x22, [sp, #32]
    6478:	aa0003f6 	mov	x22, x0
    647c:	f9400080 	ldr	x0, [x4]
    6480:	f90027e0 	str	x0, [sp, #72]
    6484:	d2800000 	mov	x0, #0x0                   	// #0
    6488:	b4000776 	cbz	x22, 6574 <__GP11_TEE_GetPropertyName+0x114>
    648c:	aa0103f5 	mov	x21, x1
    6490:	aa0203f4 	mov	x20, x2
    6494:	aa0203e1 	mov	x1, x2
    6498:	aa1503e0 	mov	x0, x21
    649c:	97fffc77 	bl	5678 <__utee_check_gp11_outstring_annotation>
    64a0:	f94006c7 	ldr	x7, [x22, #8]
    64a4:	910103e2 	add	x2, sp, #0x40
    64a8:	b9400284 	ldr	w4, [x20]
    64ac:	9100e3e1 	add	x1, sp, #0x38
    64b0:	aa0703e0 	mov	x0, x7
    64b4:	97fffc9e 	bl	572c <propset_get>
    64b8:	2a0003f3 	mov	w19, w0
    64bc:	35000260 	cbnz	w0, 6508 <__GP11_TEE_GetPropertyName+0xa8>
    64c0:	f94023e1 	ldr	x1, [sp, #64]
    64c4:	b94002c0 	ldr	w0, [x22]
    64c8:	2a0003e8 	mov	w8, w0
    64cc:	eb20403f 	cmp	x1, w0, uxtw
    64d0:	540003e9 	b.ls	654c <__GP11_TEE_GetPropertyName+0xec>  // b.plast
    64d4:	52800301 	mov	w1, #0x18                  	// #24
    64d8:	2a0403e2 	mov	w2, w4
    64dc:	129ffdf3 	mov	w19, #0xffff0010            	// #-65520
    64e0:	9ba17c00 	umull	x0, w0, w1
    64e4:	f9401fe1 	ldr	x1, [sp, #56]
    64e8:	f8606821 	ldr	x1, [x1, x0]
    64ec:	aa1503e0 	mov	x0, x21
    64f0:	94001b6a 	bl	d298 <strlcpy>
    64f4:	91000400 	add	x0, x0, #0x1
    64f8:	b9400281 	ldr	w1, [x20]
    64fc:	b9000280 	str	w0, [x20]
    6500:	eb00003f 	cmp	x1, x0
    6504:	1a9323f3 	csel	w19, wzr, w19, cs  // cs = hs, nlast
    6508:	7100027f 	cmp	w19, #0x0
    650c:	129ffee0 	mov	w0, #0xffff0008            	// #-65528
    6510:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
    6514:	540000c0 	b.eq	652c <__GP11_TEE_GetPropertyName+0xcc>  // b.none
    6518:	129ffde0 	mov	w0, #0xffff0010            	// #-65520
    651c:	6b00027f 	cmp	w19, w0
    6520:	54000060 	b.eq	652c <__GP11_TEE_GetPropertyName+0xcc>  // b.none
    6524:	52800000 	mov	w0, #0x0                   	// #0
    6528:	97fffc09 	bl	554c <TEE_Panic>
    652c:	f0000084 	adrp	x4, 19000 <_DYNAMIC>
    6530:	f9409884 	ldr	x4, [x4, #304]
    6534:	f94027e0 	ldr	x0, [sp, #72]
    6538:	f9400081 	ldr	x1, [x4]
    653c:	eb010000 	subs	x0, x0, x1
    6540:	d2800001 	mov	x1, #0x0                   	// #0
    6544:	540001c0 	b.eq	657c <__GP11_TEE_GetPropertyName+0x11c>  // b.none
    6548:	97ffe84c 	bl	678 <__stack_chk_fail>
    654c:	aa1403e3 	mov	x3, x20
    6550:	aa1503e2 	mov	x2, x21
    6554:	cb010101 	sub	x1, x8, x1
    6558:	aa0703e0 	mov	x0, x7
    655c:	d2800006 	mov	x6, #0x0                   	// #0
    6560:	d2800005 	mov	x5, #0x0                   	// #0
    6564:	d2800004 	mov	x4, #0x0                   	// #0
    6568:	97ffeeba 	bl	2050 <_utee_get_property>
    656c:	2a0003f3 	mov	w19, w0
    6570:	17ffffe6 	b	6508 <__GP11_TEE_GetPropertyName+0xa8>
    6574:	129fff33 	mov	w19, #0xffff0006            	// #-65530
    6578:	17ffffe4 	b	6508 <__GP11_TEE_GetPropertyName+0xa8>
    657c:	2a1303e0 	mov	w0, w19
    6580:	a94153f3 	ldp	x19, x20, [sp, #16]
    6584:	a9425bf5 	ldp	x21, x22, [sp, #32]
    6588:	a8c57bfd 	ldp	x29, x30, [sp], #80
    658c:	d65f03c0 	ret

0000000000006590 <TEE_GetPropertyName>:
TEE_GetPropertyName():
    6590:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    6594:	910003fd 	mov	x29, sp
    6598:	a90153f3 	stp	x19, x20, [sp, #16]
    659c:	f0000094 	adrp	x20, 19000 <_DYNAMIC>
    65a0:	aa0203f3 	mov	x19, x2
    65a4:	a9025bf5 	stp	x21, x22, [sp, #32]
    65a8:	aa0003f6 	mov	x22, x0
    65ac:	aa0103f5 	mov	x21, x1
    65b0:	f9409a80 	ldr	x0, [x20, #304]
    65b4:	f9400001 	ldr	x1, [x0]
    65b8:	f9001fe1 	str	x1, [sp, #56]
    65bc:	d2800001 	mov	x1, #0x0                   	// #0
    65c0:	aa1503e0 	mov	x0, x21
    65c4:	aa0203e1 	mov	x1, x2
    65c8:	b90037ff 	str	wzr, [sp, #52]
    65cc:	97fffc18 	bl	562c <__utee_check_outstring_annotation>
    65d0:	f9400260 	ldr	x0, [x19]
    65d4:	9100d3e2 	add	x2, sp, #0x34
    65d8:	aa1503e1 	mov	x1, x21
    65dc:	b90037e0 	str	w0, [sp, #52]
    65e0:	aa1603e0 	mov	x0, x22
    65e4:	97ffff9f 	bl	6460 <__GP11_TEE_GetPropertyName>
    65e8:	b94037e1 	ldr	w1, [sp, #52]
    65ec:	f9409a94 	ldr	x20, [x20, #304]
    65f0:	f9000261 	str	x1, [x19]
    65f4:	f9401fe1 	ldr	x1, [sp, #56]
    65f8:	f9400282 	ldr	x2, [x20]
    65fc:	eb020021 	subs	x1, x1, x2
    6600:	d2800002 	mov	x2, #0x0                   	// #0
    6604:	54000040 	b.eq	660c <TEE_GetPropertyName+0x7c>  // b.none
    6608:	97ffe81c 	bl	678 <__stack_chk_fail>
    660c:	a94153f3 	ldp	x19, x20, [sp, #16]
    6610:	a9425bf5 	ldp	x21, x22, [sp, #32]
    6614:	a8c47bfd 	ldp	x29, x30, [sp], #64
    6618:	d65f03c0 	ret

000000000000661c <TEE_GetNextProperty>:
TEE_GetNextProperty():
    661c:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    6620:	f0000081 	adrp	x1, 19000 <_DYNAMIC>
    6624:	aa0003e5 	mov	x5, x0
    6628:	910003fd 	mov	x29, sp
    662c:	f9409821 	ldr	x1, [x1, #304]
    6630:	f9000bf3 	str	x19, [sp, #16]
    6634:	f9400020 	ldr	x0, [x1]
    6638:	f9001fe0 	str	x0, [sp, #56]
    663c:	d2800000 	mov	x0, #0x0                   	// #0
    6640:	b40004e5 	cbz	x5, 66dc <TEE_GetNextProperty+0xc0>
    6644:	b94000a4 	ldr	w4, [x5]
    6648:	3100049f 	cmn	w4, #0x1
    664c:	540004c0 	b.eq	66e4 <TEE_GetNextProperty+0xc8>  // b.none
    6650:	f94004a7 	ldr	x7, [x5, #8]
    6654:	9100c3e2 	add	x2, sp, #0x30
    6658:	9100a3e1 	add	x1, sp, #0x28
    665c:	aa0703e0 	mov	x0, x7
    6660:	97fffc33 	bl	572c <propset_get>
    6664:	2a0003f3 	mov	w19, w0
    6668:	350001e0 	cbnz	w0, 66a4 <TEE_GetNextProperty+0x88>
    666c:	f9401be0 	ldr	x0, [sp, #48]
    6670:	11000481 	add	w1, w4, #0x1
    6674:	b90000a1 	str	w1, [x5]
    6678:	eb21401f 	cmp	x0, w1, uxtw
    667c:	54000148 	b.hi	66a4 <TEE_GetNextProperty+0x88>  // b.pmore
    6680:	cb000021 	sub	x1, x1, x0
    6684:	d2800006 	mov	x6, #0x0                   	// #0
    6688:	aa0703e0 	mov	x0, x7
    668c:	d2800005 	mov	x5, #0x0                   	// #0
    6690:	d2800004 	mov	x4, #0x0                   	// #0
    6694:	d2800003 	mov	x3, #0x0                   	// #0
    6698:	d2800002 	mov	x2, #0x0                   	// #0
    669c:	97ffee6d 	bl	2050 <_utee_get_property>
    66a0:	2a0003f3 	mov	w19, w0
    66a4:	7100027f 	cmp	w19, #0x0
    66a8:	129ffee0 	mov	w0, #0xffff0008            	// #-65528
    66ac:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
    66b0:	54000060 	b.eq	66bc <TEE_GetNextProperty+0xa0>  // b.none
    66b4:	52800000 	mov	w0, #0x0                   	// #0
    66b8:	97fffba5 	bl	554c <TEE_Panic>
    66bc:	f0000081 	adrp	x1, 19000 <_DYNAMIC>
    66c0:	f9409821 	ldr	x1, [x1, #304]
    66c4:	f9401fe0 	ldr	x0, [sp, #56]
    66c8:	f9400022 	ldr	x2, [x1]
    66cc:	eb020000 	subs	x0, x0, x2
    66d0:	d2800002 	mov	x2, #0x0                   	// #0
    66d4:	540000c0 	b.eq	66ec <TEE_GetNextProperty+0xd0>  // b.none
    66d8:	97ffe7e8 	bl	678 <__stack_chk_fail>
    66dc:	129fff33 	mov	w19, #0xffff0006            	// #-65530
    66e0:	17fffff1 	b	66a4 <TEE_GetNextProperty+0x88>
    66e4:	129ffef3 	mov	w19, #0xffff0008            	// #-65528
    66e8:	17ffffef 	b	66a4 <TEE_GetNextProperty+0x88>
    66ec:	2a1303e0 	mov	w0, w19
    66f0:	f9400bf3 	ldr	x19, [sp, #16]
    66f4:	a8c47bfd 	ldp	x29, x30, [sp], #64
    66f8:	d65f03c0 	ret

00000000000066fc <invoke_system_pta>:
invoke_system_pta():
    66fc:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    6700:	910003fd 	mov	x29, sp
    6704:	a9025bf5 	stp	x21, x22, [sp, #32]
    6708:	d00000b6 	adrp	x22, 1c000 <data.18+0x28f0>
    670c:	aa0203f5 	mov	x21, x2
    6710:	a90153f3 	stp	x19, x20, [sp, #16]
    6714:	2a0003f3 	mov	w19, w0
    6718:	2a0103f4 	mov	w20, w1
    671c:	f9478ac0 	ldr	x0, [x22, #3856]
    6720:	b4000160 	cbz	x0, 674c <invoke_system_pta+0x50>
    6724:	f9478ac0 	ldr	x0, [x22, #3856]
    6728:	aa1503e4 	mov	x4, x21
    672c:	2a1403e3 	mov	w3, w20
    6730:	2a1303e2 	mov	w2, w19
    6734:	a94153f3 	ldp	x19, x20, [sp, #16]
    6738:	d2800005 	mov	x5, #0x0                   	// #0
    673c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    6740:	12800001 	mov	w1, #0xffffffff            	// #-1
    6744:	a8c37bfd 	ldp	x29, x30, [sp], #48
    6748:	17fff156 	b	2ca0 <TEE_InvokeTACommand>
    674c:	b0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    6750:	913c42c4 	add	x4, x22, #0xf10
    6754:	91181000 	add	x0, x0, #0x604
    6758:	d2800005 	mov	x5, #0x0                   	// #0
    675c:	d2800003 	mov	x3, #0x0                   	// #0
    6760:	52800002 	mov	w2, #0x0                   	// #0
    6764:	12800001 	mov	w1, #0xffffffff            	// #-1
    6768:	97fff0a7 	bl	2a04 <TEE_OpenTASession>
    676c:	34fffdc0 	cbz	w0, 6724 <invoke_system_pta+0x28>
    6770:	a94153f3 	ldp	x19, x20, [sp, #16]
    6774:	a9425bf5 	ldp	x21, x22, [sp, #32]
    6778:	a8c37bfd 	ldp	x29, x30, [sp], #48
    677c:	d65f03c0 	ret

0000000000006780 <tee_map_zi>:
tee_map_zi():
    6780:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    6784:	f0000082 	adrp	x2, 19000 <_DYNAMIC>
    6788:	4f000400 	movi	v0.4s, #0x0
    678c:	910003fd 	mov	x29, sp
    6790:	f9409842 	ldr	x2, [x2, #304]
    6794:	f9400043 	ldr	x3, [x2]
    6798:	f9002fe3 	str	x3, [sp, #88]
    679c:	d2800003 	mov	x3, #0x0                   	// #0
    67a0:	910063e2 	add	x2, sp, #0x18
    67a4:	ad000040 	stp	q0, q0, [x2]
    67a8:	b9001be0 	str	w0, [sp, #24]
    67ac:	ad010040 	stp	q0, q0, [x2, #32]
    67b0:	f2607c1f 	tst	x0, #0xffffffff00000000
    67b4:	54000060 	b.eq	67c0 <tee_map_zi+0x40>  // b.none
    67b8:	d2800000 	mov	x0, #0x0                   	// #0
    67bc:	1400000c 	b	67ec <tee_map_zi+0x6c>
    67c0:	340000a1 	cbz	w1, 67d4 <tee_map_zi+0x54>
    67c4:	7100103f 	cmp	w1, #0x4
    67c8:	54ffff81 	b.ne	67b8 <tee_map_zi+0x38>  // b.any
    67cc:	52800020 	mov	w0, #0x1                   	// #1
    67d0:	b9001fe0 	str	w0, [sp, #28]
    67d4:	52802621 	mov	w1, #0x131                 	// #305
    67d8:	52800040 	mov	w0, #0x2                   	// #2
    67dc:	97ffffc8 	bl	66fc <invoke_system_pta>
    67e0:	35fffec0 	cbnz	w0, 67b8 <tee_map_zi+0x38>
    67e4:	294507e0 	ldp	w0, w1, [sp, #40]
    67e8:	aa008020 	orr	x0, x1, x0, lsl #32
    67ec:	f0000082 	adrp	x2, 19000 <_DYNAMIC>
    67f0:	f9409842 	ldr	x2, [x2, #304]
    67f4:	f9402fe1 	ldr	x1, [sp, #88]
    67f8:	f9400043 	ldr	x3, [x2]
    67fc:	eb030021 	subs	x1, x1, x3
    6800:	d2800003 	mov	x3, #0x0                   	// #0
    6804:	54000040 	b.eq	680c <tee_map_zi+0x8c>  // b.none
    6808:	97ffe79c 	bl	678 <__stack_chk_fail>
    680c:	a8c67bfd 	ldp	x29, x30, [sp], #96
    6810:	d65f03c0 	ret

0000000000006814 <tee_unmap>:
tee_unmap():
    6814:	a9b87bfd 	stp	x29, x30, [sp, #-128]!
    6818:	f0000082 	adrp	x2, 19000 <_DYNAMIC>
    681c:	4f000400 	movi	v0.4s, #0x0
    6820:	910003fd 	mov	x29, sp
    6824:	f9409842 	ldr	x2, [x2, #304]
    6828:	a90153f3 	stp	x19, x20, [sp, #16]
    682c:	aa0003f3 	mov	x19, x0
    6830:	f90013f5 	str	x21, [sp, #32]
    6834:	aa0103f5 	mov	x21, x1
    6838:	f9400040 	ldr	x0, [x2]
    683c:	f9003fe0 	str	x0, [sp, #120]
    6840:	d2800000 	mov	x0, #0x0                   	// #0
    6844:	9100e3e2 	add	x2, sp, #0x38
    6848:	d360fe60 	lsr	x0, x19, #32
    684c:	ad000040 	stp	q0, q0, [x2]
    6850:	ad010040 	stp	q0, q0, [x2, #32]
    6854:	b9003be1 	str	w1, [sp, #56]
    6858:	52800221 	mov	w1, #0x11                  	// #17
    685c:	29094fe0 	stp	w0, w19, [sp, #72]
    6860:	52800060 	mov	w0, #0x3                   	// #3
    6864:	97ffffa6 	bl	66fc <invoke_system_pta>
    6868:	2a0003f4 	mov	w20, w0
    686c:	34000180 	cbz	w0, 689c <tee_unmap+0x88>
    6870:	b0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    6874:	91181000 	add	x0, x0, #0x604
    6878:	b0000084 	adrp	x4, 17000 <__text_end+0x3c08>
    687c:	aa1503e6 	mov	x6, x21
    6880:	aa1303e5 	mov	x5, x19
    6884:	913c8c84 	add	x4, x4, #0xf23
    6888:	91004000 	add	x0, x0, #0x10
    688c:	52800023 	mov	w3, #0x1                   	// #1
    6890:	52800022 	mov	w2, #0x1                   	// #1
    6894:	52800981 	mov	w1, #0x4c                  	// #76
    6898:	97ffe73e 	bl	590 <trace_printf>
    689c:	f0000082 	adrp	x2, 19000 <_DYNAMIC>
    68a0:	f9409842 	ldr	x2, [x2, #304]
    68a4:	f9403fe0 	ldr	x0, [sp, #120]
    68a8:	f9400041 	ldr	x1, [x2]
    68ac:	eb010000 	subs	x0, x0, x1
    68b0:	d2800001 	mov	x1, #0x0                   	// #0
    68b4:	54000040 	b.eq	68bc <tee_unmap+0xa8>  // b.none
    68b8:	97ffe770 	bl	678 <__stack_chk_fail>
    68bc:	2a1403e0 	mov	w0, w20
    68c0:	a94153f3 	ldp	x19, x20, [sp, #16]
    68c4:	f94013f5 	ldr	x21, [sp, #32]
    68c8:	a8c87bfd 	ldp	x29, x30, [sp], #128
    68cc:	d65f03c0 	ret

00000000000068d0 <tee_invoke_supp_plugin>:
tee_invoke_supp_plugin():
    68d0:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
    68d4:	f0000086 	adrp	x6, 19000 <_DYNAMIC>
    68d8:	2a0203e7 	mov	w7, w2
    68dc:	4f000400 	movi	v0.4s, #0x0
    68e0:	910003fd 	mov	x29, sp
    68e4:	f94098c6 	ldr	x6, [x6, #304]
    68e8:	a90153f3 	stp	x19, x20, [sp, #16]
    68ec:	f94000c2 	ldr	x2, [x6]
    68f0:	f90037e2 	str	x2, [sp, #104]
    68f4:	d2800002 	mov	x2, #0x0                   	// #0
    68f8:	9100a3e2 	add	x2, sp, #0x28
    68fc:	ad000040 	stp	q0, q0, [x2]
    6900:	ad010040 	stp	q0, q0, [x2, #32]
    6904:	b40004e0 	cbz	x0, 69a0 <tee_invoke_supp_plugin+0xd0>
    6908:	f100009f 	cmp	x4, #0x0
    690c:	fa401860 	ccmp	x3, #0x0, #0x0, ne  // ne = any
    6910:	54000480 	b.eq	69a0 <tee_invoke_supp_plugin+0xd0>  // b.none
    6914:	f100009f 	cmp	x4, #0x0
    6918:	fa400864 	ccmp	x3, #0x0, #0x4, eq  // eq = none
    691c:	54000421 	b.ne	69a0 <tee_invoke_supp_plugin+0xd0>  // b.any
    6920:	f90017e0 	str	x0, [sp, #40]
    6924:	d2800200 	mov	x0, #0x10                  	// #16
    6928:	aa0503f4 	mov	x20, x5
    692c:	f9001be0 	str	x0, [sp, #48]
    6930:	528001a0 	mov	w0, #0xd                   	// #13
    6934:	29071fe1 	stp	w1, w7, [sp, #56]
    6938:	5284e2a1 	mov	w1, #0x2715                	// #10005
    693c:	a90493e3 	stp	x3, x4, [sp, #72]
    6940:	97ffff6f 	bl	66fc <invoke_system_pta>
    6944:	2a0003f3 	mov	w19, w0
    6948:	34000160 	cbz	w0, 6974 <tee_invoke_supp_plugin+0xa4>
    694c:	2a0003e5 	mov	w5, w0
    6950:	b0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    6954:	91181000 	add	x0, x0, #0x604
    6958:	b0000084 	adrp	x4, 17000 <__text_end+0x3c08>
    695c:	91006800 	add	x0, x0, #0x1a
    6960:	913d3484 	add	x4, x4, #0xf4d
    6964:	52800023 	mov	w3, #0x1                   	// #1
    6968:	52800022 	mov	w2, #0x1                   	// #1
    696c:	52800d21 	mov	w1, #0x69                  	// #105
    6970:	97ffe708 	bl	590 <trace_printf>
    6974:	b4000074 	cbz	x20, 6980 <tee_invoke_supp_plugin+0xb0>
    6978:	b9405be0 	ldr	w0, [sp, #88]
    697c:	f9000280 	str	x0, [x20]
    6980:	f0000086 	adrp	x6, 19000 <_DYNAMIC>
    6984:	f94098c6 	ldr	x6, [x6, #304]
    6988:	f94037e0 	ldr	x0, [sp, #104]
    698c:	f94000c1 	ldr	x1, [x6]
    6990:	eb010000 	subs	x0, x0, x1
    6994:	d2800001 	mov	x1, #0x0                   	// #0
    6998:	54000080 	b.eq	69a8 <tee_invoke_supp_plugin+0xd8>  // b.none
    699c:	97ffe737 	bl	678 <__stack_chk_fail>
    69a0:	129fff33 	mov	w19, #0xffff0006            	// #-65530
    69a4:	17fffff7 	b	6980 <tee_invoke_supp_plugin+0xb0>
    69a8:	2a1303e0 	mov	w0, w19
    69ac:	a94153f3 	ldp	x19, x20, [sp, #16]
    69b0:	a8c77bfd 	ldp	x29, x30, [sp], #112
    69b4:	d65f03c0 	ret

00000000000069b8 <__utee_tcb_init>:
__utee_tcb_init():
    69b8:	a9b87bfd 	stp	x29, x30, [sp, #-128]!
    69bc:	f0000081 	adrp	x1, 19000 <_DYNAMIC>
    69c0:	d2800003 	mov	x3, #0x0                   	// #0
    69c4:	910003fd 	mov	x29, sp
    69c8:	f940ec20 	ldr	x0, [x1, #472]
    69cc:	a90363f7 	stp	x23, x24, [sp, #48]
    69d0:	aa0103f7 	mov	x23, x1
    69d4:	d2800706 	mov	x6, #0x38                  	// #56
    69d8:	a90153f3 	stp	x19, x20, [sp, #16]
    69dc:	79400805 	ldrh	w5, [x0, #4]
    69e0:	f9400400 	ldr	x0, [x0, #8]
    69e4:	a9025bf5 	stp	x21, x22, [sp, #32]
    69e8:	91004000 	add	x0, x0, #0x10
    69ec:	a9046bf9 	stp	x25, x26, [sp, #64]
    69f0:	d2800019 	mov	x25, #0x0                   	// #0
    69f4:	a90573fb 	stp	x27, x28, [sp, #80]
    69f8:	eb0300bf 	cmp	x5, x3
    69fc:	540001e8 	b.hi	6a38 <__utee_tcb_init+0x80>  // b.pmore
    6a00:	d00000b6 	adrp	x22, 1c000 <data.18+0x28f0>
    6a04:	913c62d5 	add	x21, x22, #0xf18
    6a08:	f9478ed8 	ldr	x24, [x22, #3864]
    6a0c:	eb19031f 	cmp	x24, x25
    6a10:	54000369 	b.ls	6a7c <__utee_tcb_init+0xc4>  // b.plast
    6a14:	d0000083 	adrp	x3, 18000 <__func__.0+0x172>
    6a18:	b0000081 	adrp	x1, 17000 <__text_end+0x3c08>
    6a1c:	91001463 	add	x3, x3, #0x5
    6a20:	913de021 	add	x1, x1, #0xf78
    6a24:	b0000080 	adrp	x0, 17000 <__text_end+0x3c08>
    6a28:	913e2800 	add	x0, x0, #0xf8a
    6a2c:	52800d82 	mov	w2, #0x6c                  	// #108
    6a30:	940000b5 	bl	6d04 <_assert_log>
    6a34:	940000c5 	bl	6d48 <_assert_break>
    6a38:	79401007 	ldrh	w7, [x0, #8]
    6a3c:	d2800001 	mov	x1, #0x0                   	// #0
    6a40:	eb0100ff 	cmp	x7, x1
    6a44:	54000129 	b.ls	6a68 <__utee_tcb_init+0xb0>  // b.plast
    6a48:	9b067c22 	mul	x2, x1, x6
    6a4c:	f9400004 	ldr	x4, [x0]
    6a50:	8b020088 	add	x8, x4, x2
    6a54:	b8626882 	ldr	w2, [x4, x2]
    6a58:	71001c5f 	cmp	w2, #0x7
    6a5c:	540000c1 	b.ne	6a74 <__utee_tcb_init+0xbc>  // b.any
    6a60:	f9401501 	ldr	x1, [x8, #40]
    6a64:	8b010339 	add	x25, x25, x1
    6a68:	91000463 	add	x3, x3, #0x1
    6a6c:	91010000 	add	x0, x0, #0x40
    6a70:	17ffffe2 	b	69f8 <__utee_tcb_init+0x40>
    6a74:	91000421 	add	x1, x1, #0x1
    6a78:	17fffff2 	b	6a40 <__utee_tcb_init+0x88>
    6a7c:	54000b00 	b.eq	6bdc <__utee_tcb_init+0x224>  // b.none
    6a80:	f94006a0 	ldr	x0, [x21, #8]
    6a84:	91004334 	add	x20, x25, #0x10
    6a88:	aa1403e1 	mov	x1, x20
    6a8c:	9400189a 	bl	ccf4 <realloc>
    6a90:	f90006a0 	str	x0, [x21, #8]
    6a94:	aa0003f3 	mov	x19, x0
    6a98:	b5000160 	cbnz	x0, 6ac4 <__utee_tcb_init+0x10c>
    6a9c:	b0000084 	adrp	x4, 17000 <__text_end+0x3c08>
    6aa0:	aa1403e5 	mov	x5, x20
    6aa4:	913e8884 	add	x4, x4, #0xfa2
    6aa8:	52800023 	mov	w3, #0x1                   	// #1
    6aac:	52800022 	mov	w2, #0x1                   	// #1
    6ab0:	52800e81 	mov	w1, #0x74                  	// #116
    6ab4:	d0000080 	adrp	x0, 18000 <__func__.0+0x172>
    6ab8:	91001400 	add	x0, x0, #0x5
    6abc:	97ffe6b5 	bl	590 <trace_printf>
    6ac0:	97ffee03 	bl	22cc <abort>
    6ac4:	f940eee0 	ldr	x0, [x23, #472]
    6ac8:	79400814 	ldrh	w20, [x0, #4]
    6acc:	f9400260 	ldr	x0, [x19]
    6ad0:	91000a94 	add	x20, x20, #0x2
    6ad4:	d37df294 	lsl	x20, x20, #3
    6ad8:	aa1403e1 	mov	x1, x20
    6adc:	94001886 	bl	ccf4 <realloc>
    6ae0:	f9000260 	str	x0, [x19]
    6ae4:	b5000640 	cbnz	x0, 6bac <__utee_tcb_init+0x1f4>
    6ae8:	b0000084 	adrp	x4, 17000 <__text_end+0x3c08>
    6aec:	aa1403e5 	mov	x5, x20
    6af0:	913f1084 	add	x4, x4, #0xfc4
    6af4:	52800023 	mov	w3, #0x1                   	// #1
    6af8:	52800022 	mov	w2, #0x1                   	// #1
    6afc:	52800f81 	mov	w1, #0x7c                  	// #124
    6b00:	17ffffed 	b	6ab4 <__utee_tcb_init+0xfc>
    6b04:	f940043c 	ldr	x28, [x1, #8]
    6b08:	91000414 	add	x20, x0, #0x1
    6b0c:	d2800003 	mov	x3, #0x0                   	// #0
    6b10:	d37df285 	lsl	x5, x20, #3
    6b14:	8b001b9c 	add	x28, x28, x0, lsl #6
    6b18:	79403380 	ldrh	w0, [x28, #24]
    6b1c:	eb03001f 	cmp	x0, x3
    6b20:	54000068 	b.hi	6b2c <__utee_tcb_init+0x174>  // b.pmore
    6b24:	aa1403e0 	mov	x0, x20
    6b28:	14000025 	b	6bbc <__utee_tcb_init+0x204>
    6b2c:	9b047c60 	mul	x0, x3, x4
    6b30:	f9400b81 	ldr	x1, [x28, #16]
    6b34:	8b000035 	add	x21, x1, x0
    6b38:	b8606820 	ldr	w0, [x1, x0]
    6b3c:	71001c1f 	cmp	w0, #0x7
    6b40:	54000321 	b.ne	6ba4 <__utee_tcb_init+0x1ec>  // b.any
    6b44:	f94016a0 	ldr	x0, [x21, #40]
    6b48:	f9003fe3 	str	x3, [sp, #120]
    6b4c:	8b000340 	add	x0, x26, x0
    6b50:	eb00031f 	cmp	x24, x0
    6b54:	54fffe82 	b.cs	6b24 <__utee_tcb_init+0x16c>  // b.hs, b.nlast
    6b58:	f9400261 	ldr	x1, [x19]
    6b5c:	8b1a0360 	add	x0, x27, x26
    6b60:	f9400386 	ldr	x6, [x28]
    6b64:	a90693e5 	stp	x5, x4, [sp, #104]
    6b68:	f94012a2 	ldr	x2, [x21, #32]
    6b6c:	f8256820 	str	x0, [x1, x5]
    6b70:	f9400aa1 	ldr	x1, [x21, #16]
    6b74:	8b0100c1 	add	x1, x6, x1
    6b78:	97ffe522 	bl	0 <memcpy>
    6b7c:	a9420aa1 	ldp	x1, x2, [x21, #32]
    6b80:	8b1a0020 	add	x0, x1, x26
    6b84:	cb010042 	sub	x2, x2, x1
    6b88:	8b000360 	add	x0, x27, x0
    6b8c:	52800001 	mov	w1, #0x0                   	// #0
    6b90:	940019b2 	bl	d258 <memset>
    6b94:	f94016a0 	ldr	x0, [x21, #40]
    6b98:	a94693e5 	ldp	x5, x4, [sp, #104]
    6b9c:	8b00035a 	add	x26, x26, x0
    6ba0:	f9403fe3 	ldr	x3, [sp, #120]
    6ba4:	91000463 	add	x3, x3, #0x1
    6ba8:	17ffffdc 	b	6b18 <__utee_tcb_init+0x160>
    6bac:	9100427b 	add	x27, x19, #0x10
    6bb0:	d2800000 	mov	x0, #0x0                   	// #0
    6bb4:	d280001a 	mov	x26, #0x0                   	// #0
    6bb8:	d2800704 	mov	x4, #0x38                  	// #56
    6bbc:	f940eee1 	ldr	x1, [x23, #472]
    6bc0:	79400822 	ldrh	w2, [x1, #4]
    6bc4:	eb02001f 	cmp	x0, x2
    6bc8:	54fff9e3 	b.cc	6b04 <__utee_tcb_init+0x14c>  // b.lo, b.ul, b.last
    6bcc:	f9400261 	ldr	x1, [x19]
    6bd0:	f9078ed9 	str	x25, [x22, #3864]
    6bd4:	f9000020 	str	x0, [x1]
    6bd8:	d51bd053 	msr	tpidr_el0, x19
    6bdc:	a94153f3 	ldp	x19, x20, [sp, #16]
    6be0:	a9425bf5 	ldp	x21, x22, [sp, #32]
    6be4:	a94363f7 	ldp	x23, x24, [sp, #48]
    6be8:	a9446bf9 	ldp	x25, x26, [sp, #64]
    6bec:	a94573fb 	ldp	x27, x28, [sp, #80]
    6bf0:	a8c87bfd 	ldp	x29, x30, [sp], #128
    6bf4:	d65f03c0 	ret

0000000000006bf8 <__tls_get_addr>:
__tls_get_addr():
    6bf8:	d00000a1 	adrp	x1, 1c000 <data.18+0x28f0>
    6bfc:	a9400002 	ldp	x2, x0, [x0]
    6c00:	f9479021 	ldr	x1, [x1, #3872]
    6c04:	f9400021 	ldr	x1, [x1]
    6c08:	f8627821 	ldr	x1, [x1, x2, lsl #3]
    6c0c:	8b000020 	add	x0, x1, x0
    6c10:	d65f03c0 	ret

0000000000006c14 <dl_iterate_phdr>:
dl_iterate_phdr():
    6c14:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    6c18:	910003fd 	mov	x29, sp
    6c1c:	a90153f3 	stp	x19, x20, [sp, #16]
    6c20:	a9025bf5 	stp	x21, x22, [sp, #32]
    6c24:	a90363f7 	stp	x23, x24, [sp, #48]
    6c28:	aa0003f7 	mov	x23, x0
    6c2c:	aa0103f8 	mov	x24, x1
    6c30:	d2800020 	mov	x0, #0x1                   	// #1
    6c34:	d2800801 	mov	x1, #0x40                  	// #64
    6c38:	f90023f9 	str	x25, [sp, #64]
    6c3c:	94001826 	bl	ccd4 <calloc>
    6c40:	b5000520 	cbnz	x0, 6ce4 <dl_iterate_phdr+0xd0>
    6c44:	d0000080 	adrp	x0, 18000 <__func__.0+0x172>
    6c48:	91001400 	add	x0, x0, #0x5
    6c4c:	91004000 	add	x0, x0, #0x10
    6c50:	b0000084 	adrp	x4, 17000 <__text_end+0x3c08>
    6c54:	913f9884 	add	x4, x4, #0xfe6
    6c58:	52800023 	mov	w3, #0x1                   	// #1
    6c5c:	52800022 	mov	w2, #0x1                   	// #1
    6c60:	52801801 	mov	w1, #0xc0                  	// #192
    6c64:	97ffe64b 	bl	590 <trace_printf>
    6c68:	97ffed99 	bl	22cc <abort>
    6c6c:	f94006c1 	ldr	x1, [x22, #8]
    6c70:	aa1303e0 	mov	x0, x19
    6c74:	d2800802 	mov	x2, #0x40                  	// #64
    6c78:	8b151821 	add	x1, x1, x21, lsl #6
    6c7c:	97ffe4e1 	bl	0 <memcpy>
    6c80:	f9401a60 	ldr	x0, [x19, #48]
    6c84:	f9001e7f 	str	xzr, [x19, #56]
    6c88:	b40000a0 	cbz	x0, 6c9c <dl_iterate_phdr+0x88>
    6c8c:	f9400721 	ldr	x1, [x25, #8]
    6c90:	f9400021 	ldr	x1, [x1]
    6c94:	f8607820 	ldr	x0, [x1, x0, lsl #3]
    6c98:	f9001e60 	str	x0, [x19, #56]
    6c9c:	aa1803e2 	mov	x2, x24
    6ca0:	aa1303e0 	mov	x0, x19
    6ca4:	d2800801 	mov	x1, #0x40                  	// #64
    6ca8:	910006b5 	add	x21, x21, #0x1
    6cac:	d63f02e0 	blr	x23
    6cb0:	2a0003f4 	mov	w20, w0
    6cb4:	79400ac0 	ldrh	w0, [x22, #4]
    6cb8:	eb15001f 	cmp	x0, x21
    6cbc:	54fffd88 	b.hi	6c6c <dl_iterate_phdr+0x58>  // b.pmore
    6cc0:	aa1303e0 	mov	x0, x19
    6cc4:	94001821 	bl	cd48 <free>
    6cc8:	2a1403e0 	mov	w0, w20
    6ccc:	a94153f3 	ldp	x19, x20, [sp, #16]
    6cd0:	a9425bf5 	ldp	x21, x22, [sp, #32]
    6cd4:	a94363f7 	ldp	x23, x24, [sp, #48]
    6cd8:	f94023f9 	ldr	x25, [sp, #64]
    6cdc:	a8c57bfd 	ldp	x29, x30, [sp], #80
    6ce0:	d65f03c0 	ret
    6ce4:	f0000096 	adrp	x22, 19000 <_DYNAMIC>
    6ce8:	d00000b9 	adrp	x25, 1c000 <data.18+0x28f0>
    6cec:	aa0003f3 	mov	x19, x0
    6cf0:	913c6339 	add	x25, x25, #0xf18
    6cf4:	f940eed6 	ldr	x22, [x22, #472]
    6cf8:	52800014 	mov	w20, #0x0                   	// #0
    6cfc:	d2800015 	mov	x21, #0x0                   	// #0
    6d00:	17ffffed 	b	6cb4 <dl_iterate_phdr+0xa0>

0000000000006d04 <_assert_log>:
_assert_log():
    6d04:	d10083ff 	sub	sp, sp, #0x20
    6d08:	2a0203e7 	mov	w7, w2
    6d0c:	aa0103e6 	mov	x6, x1
    6d10:	aa0003e5 	mov	x5, x0
    6d14:	52800022 	mov	w2, #0x1                   	// #1
    6d18:	52800001 	mov	w1, #0x0                   	// #0
    6d1c:	a9017bfd 	stp	x29, x30, [sp, #16]
    6d20:	910043fd 	add	x29, sp, #0x10
    6d24:	d2800000 	mov	x0, #0x0                   	// #0
    6d28:	d0000084 	adrp	x4, 18000 <__func__.0+0x172>
    6d2c:	f90003e3 	str	x3, [sp]
    6d30:	91009484 	add	x4, x4, #0x25
    6d34:	52800023 	mov	w3, #0x1                   	// #1
    6d38:	97ffe616 	bl	590 <trace_printf>
    6d3c:	a9417bfd 	ldp	x29, x30, [sp, #16]
    6d40:	910083ff 	add	sp, sp, #0x20
    6d44:	d65f03c0 	ret

0000000000006d48 <_assert_break>:
_assert_break():
    6d48:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    6d4c:	d2bfffe0 	mov	x0, #0xffff0000            	// #4294901760
    6d50:	910003fd 	mov	x29, sp
    6d54:	97ffecb3 	bl	2020 <_utee_panic>
    6d58:	14000000 	b	6d58 <_assert_break+0x10>

0000000000006d5c <_base64_enc_len>:
_base64_enc_len():
    6d5c:	91000800 	add	x0, x0, #0x2
    6d60:	d2800061 	mov	x1, #0x3                   	// #3
    6d64:	9ac10800 	udiv	x0, x0, x1
    6d68:	d37ef400 	lsl	x0, x0, #2
    6d6c:	91000400 	add	x0, x0, #0x1
    6d70:	d65f03c0 	ret

0000000000006d74 <_base64_enc>:
_base64_enc():
    6d74:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    6d78:	910003fd 	mov	x29, sp
    6d7c:	a9025bf5 	stp	x21, x22, [sp, #32]
    6d80:	aa0303f6 	mov	x22, x3
    6d84:	aa0003f5 	mov	x21, x0
    6d88:	aa0103e0 	mov	x0, x1
    6d8c:	a90153f3 	stp	x19, x20, [sp, #16]
    6d90:	aa0103f3 	mov	x19, x1
    6d94:	aa0203f4 	mov	x20, x2
    6d98:	97fffff1 	bl	6d5c <_base64_enc_len>
    6d9c:	aa0003e1 	mov	x1, x0
    6da0:	f94002c0 	ldr	x0, [x22]
    6da4:	eb01001f 	cmp	x0, x1
    6da8:	540006c3 	b.cc	6e80 <_base64_enc+0x10c>  // b.lo, b.ul, b.last
    6dac:	b0000086 	adrp	x6, 17000 <__text_end+0x3c08>
    6db0:	aa1403e1 	mov	x1, x20
    6db4:	d1000aa3 	sub	x3, x21, #0x2
    6db8:	d10006a7 	sub	x7, x21, #0x1
    6dbc:	9118f0c6 	add	x6, x6, #0x63c
    6dc0:	d2800045 	mov	x5, #0x2                   	// #2
    6dc4:	d10008a2 	sub	x2, x5, #0x2
    6dc8:	cb140020 	sub	x0, x1, x20
    6dcc:	eb13005f 	cmp	x2, x19
    6dd0:	54000123 	b.cc	6df4 <_base64_enc+0x80>  // b.lo, b.ul, b.last
    6dd4:	91000401 	add	x1, x0, #0x1
    6dd8:	38206a9f 	strb	wzr, [x20, x0]
    6ddc:	52800020 	mov	w0, #0x1                   	// #1
    6de0:	a94153f3 	ldp	x19, x20, [sp, #16]
    6de4:	f90002c1 	str	x1, [x22]
    6de8:	a9425bf5 	ldp	x21, x22, [sp, #32]
    6dec:	a8c37bfd 	ldp	x29, x30, [sp], #48
    6df0:	d65f03c0 	ret
    6df4:	38656864 	ldrb	w4, [x3, x5]
    6df8:	d10004a0 	sub	x0, x5, #0x1
    6dfc:	53185c84 	lsl	w4, w4, #8
    6e00:	eb00027f 	cmp	x19, x0
    6e04:	54000069 	b.ls	6e10 <_base64_enc+0x9c>  // b.plast
    6e08:	386568e2 	ldrb	w2, [x7, x5]
    6e0c:	2a020084 	orr	w4, w4, w2
    6e10:	53185c84 	lsl	w4, w4, #8
    6e14:	eb05027f 	cmp	x19, x5
    6e18:	54000069 	b.ls	6e24 <_base64_enc+0xb0>  // b.plast
    6e1c:	38656aa2 	ldrb	w2, [x21, x5]
    6e20:	2a020084 	orr	w4, w4, w2
    6e24:	53127c82 	lsr	w2, w4, #18
    6e28:	386268c2 	ldrb	w2, [x6, x2]
    6e2c:	39000022 	strb	w2, [x1]
    6e30:	d34c4482 	ubfx	x2, x4, #12, #6
    6e34:	386268c2 	ldrb	w2, [x6, x2]
    6e38:	39000422 	strb	w2, [x1, #1]
    6e3c:	eb00027f 	cmp	x19, x0
    6e40:	54000189 	b.ls	6e70 <_base64_enc+0xfc>  // b.plast
    6e44:	d3462c80 	ubfx	x0, x4, #6, #6
    6e48:	386068c0 	ldrb	w0, [x6, x0]
    6e4c:	39000820 	strb	w0, [x1, #2]
    6e50:	eb05027f 	cmp	x19, x5
    6e54:	54000129 	b.ls	6e78 <_base64_enc+0x104>  // b.plast
    6e58:	92401484 	and	x4, x4, #0x3f
    6e5c:	386468c0 	ldrb	w0, [x6, x4]
    6e60:	91001021 	add	x1, x1, #0x4
    6e64:	91000ca5 	add	x5, x5, #0x3
    6e68:	381ff020 	sturb	w0, [x1, #-1]
    6e6c:	17ffffd6 	b	6dc4 <_base64_enc+0x50>
    6e70:	528007a0 	mov	w0, #0x3d                  	// #61
    6e74:	17fffff6 	b	6e4c <_base64_enc+0xd8>
    6e78:	528007a0 	mov	w0, #0x3d                  	// #61
    6e7c:	17fffff9 	b	6e60 <_base64_enc+0xec>
    6e80:	52800000 	mov	w0, #0x0                   	// #0
    6e84:	17ffffd7 	b	6de0 <_base64_enc+0x6c>

0000000000006e88 <_base64_dec>:
_base64_dec():
    6e88:	b000008a 	adrp	x10, 17000 <__text_end+0x3c08>
    6e8c:	b000008b 	adrp	x11, 17000 <__text_end+0x3c08>
    6e90:	9118f14a 	add	x10, x10, #0x63c
    6e94:	9118e16b 	add	x11, x11, #0x638
    6e98:	52800007 	mov	w7, #0x0                   	// #0
    6e9c:	d2800006 	mov	x6, #0x0                   	// #0
    6ea0:	d2800004 	mov	x4, #0x0                   	// #0
    6ea4:	d2800009 	mov	x9, #0x0                   	// #0
    6ea8:	eb01013f 	cmp	x9, x1
    6eac:	540000a0 	b.eq	6ec0 <_base64_dec+0x38>  // b.none
    6eb0:	38696805 	ldrb	w5, [x0, x9]
    6eb4:	34000065 	cbz	w5, 6ec0 <_base64_dec+0x38>
    6eb8:	7100f4bf 	cmp	w5, #0x3d
    6ebc:	54000281 	b.ne	6f0c <_base64_dec+0x84>  // b.any
    6ec0:	b40006a4 	cbz	x4, 6f94 <_base64_dec+0x10c>
    6ec4:	b4000702 	cbz	x2, 6fa4 <_base64_dec+0x11c>
    6ec8:	f9400060 	ldr	x0, [x3]
    6ecc:	eb04001f 	cmp	x0, x4
    6ed0:	1a9f37e0 	cset	w0, cs  // cs = hs, nlast
    6ed4:	f9000064 	str	x4, [x3]
    6ed8:	d65f03c0 	ret
    6edc:	6b0c00bf 	cmp	w5, w12
    6ee0:	540000c1 	b.ne	6ef8 <_base64_dec+0x70>  // b.any
    6ee4:	12001d05 	and	w5, w8, #0xff
    6ee8:	38664966 	ldrb	w6, [x11, w6, uxtw]
    6eec:	1000006c 	adr	x12, 6ef8 <_base64_dec+0x70>
    6ef0:	8b268986 	add	x6, x12, w6, sxtb #2
    6ef4:	d61f00c0 	br	x6
    6ef8:	91000508 	add	x8, x8, #0x1
    6efc:	386a690c 	ldrb	w12, [x8, x10]
    6f00:	35fffeec 	cbnz	w12, 6edc <_base64_dec+0x54>
    6f04:	91000529 	add	x9, x9, #0x1
    6f08:	17ffffe8 	b	6ea8 <_base64_dec+0x20>
    6f0c:	d2800008 	mov	x8, #0x0                   	// #0
    6f10:	17fffffb 	b	6efc <_base64_dec+0x74>
    6f14:	531e14a7 	ubfiz	w7, w5, #2, #6
    6f18:	d2800026 	mov	x6, #0x1                   	// #1
    6f1c:	17fffffa 	b	6f04 <_base64_dec+0x7c>
    6f20:	b40000c2 	cbz	x2, 6f38 <_base64_dec+0xb0>
    6f24:	f9400066 	ldr	x6, [x3]
    6f28:	eb0400df 	cmp	x6, x4
    6f2c:	54000069 	b.ls	6f38 <_base64_dec+0xb0>  // b.plast
    6f30:	2a4510e5 	orr	w5, w7, w5, lsr #4
    6f34:	38246845 	strb	w5, [x2, x4]
    6f38:	91000484 	add	x4, x4, #0x1
    6f3c:	531c0d07 	ubfiz	w7, w8, #4, #4
    6f40:	d2800046 	mov	x6, #0x2                   	// #2
    6f44:	17fffff0 	b	6f04 <_base64_dec+0x7c>
    6f48:	b40000c2 	cbz	x2, 6f60 <_base64_dec+0xd8>
    6f4c:	f9400066 	ldr	x6, [x3]
    6f50:	eb0400df 	cmp	x6, x4
    6f54:	54000069 	b.ls	6f60 <_base64_dec+0xd8>  // b.plast
    6f58:	2a4508e5 	orr	w5, w7, w5, lsr #2
    6f5c:	38246845 	strb	w5, [x2, x4]
    6f60:	91000484 	add	x4, x4, #0x1
    6f64:	531a0507 	ubfiz	w7, w8, #6, #2
    6f68:	d2800066 	mov	x6, #0x3                   	// #3
    6f6c:	17ffffe6 	b	6f04 <_base64_dec+0x7c>
    6f70:	b40000c2 	cbz	x2, 6f88 <_base64_dec+0x100>
    6f74:	f9400066 	ldr	x6, [x3]
    6f78:	eb0400df 	cmp	x6, x4
    6f7c:	54000069 	b.ls	6f88 <_base64_dec+0x100>  // b.plast
    6f80:	2a0500e5 	orr	w5, w7, w5
    6f84:	38246845 	strb	w5, [x2, x4]
    6f88:	91000484 	add	x4, x4, #0x1
    6f8c:	d2800006 	mov	x6, #0x0                   	// #0
    6f90:	17ffffdd 	b	6f04 <_base64_dec+0x7c>
    6f94:	f9400060 	ldr	x0, [x3]
    6f98:	b5fff960 	cbnz	x0, 6ec4 <_base64_dec+0x3c>
    6f9c:	52800020 	mov	w0, #0x1                   	// #1
    6fa0:	17ffffcd 	b	6ed4 <_base64_dec+0x4c>
    6fa4:	52800000 	mov	w0, #0x0                   	// #0
    6fa8:	17ffffcb 	b	6ed4 <_base64_dec+0x4c>

0000000000006fac <mpi_get_digit>:
mpi_get_digit():
    6fac:	12001c42 	and	w2, w2, #0xff
    6fb0:	5100c043 	sub	w3, w2, #0x30
    6fb4:	12001c64 	and	w4, w3, #0xff
    6fb8:	7100249f 	cmp	w4, #0x9
    6fbc:	540000e8 	b.hi	6fd8 <mpi_get_digit+0x2c>  // b.pmore
    6fc0:	b9000003 	str	w3, [x0]
    6fc4:	b9400000 	ldr	w0, [x0]
    6fc8:	6b01001f 	cmp	w0, w1
    6fcc:	128000a0 	mov	w0, #0xfffffffa            	// #-6
    6fd0:	1a9f2000 	csel	w0, w0, wzr, cs  // cs = hs, nlast
    6fd4:	d65f03c0 	ret
    6fd8:	51010443 	sub	w3, w2, #0x41
    6fdc:	12001c63 	and	w3, w3, #0xff
    6fe0:	7100147f 	cmp	w3, #0x5
    6fe4:	54000088 	b.hi	6ff4 <mpi_get_digit+0x48>  // b.pmore
    6fe8:	5100dc42 	sub	w2, w2, #0x37
    6fec:	b9000002 	str	w2, [x0]
    6ff0:	17fffff5 	b	6fc4 <mpi_get_digit+0x18>
    6ff4:	51018443 	sub	w3, w2, #0x61
    6ff8:	51015c42 	sub	w2, w2, #0x57
    6ffc:	12001c63 	and	w3, w3, #0xff
    7000:	7100187f 	cmp	w3, #0x6
    7004:	52801fe3 	mov	w3, #0xff                  	// #255
    7008:	1a833042 	csel	w2, w2, w3, cc  // cc = lo, ul, last
    700c:	17fffff8 	b	6fec <mpi_get_digit+0x40>

0000000000007010 <mpi_select>:
mpi_select():
    7010:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    7014:	910003fd 	mov	x29, sp
    7018:	a90153f3 	stp	x19, x20, [sp, #16]
    701c:	aa0203f4 	mov	x20, x2
    7020:	d2800013 	mov	x19, #0x0                   	// #0
    7024:	a9025bf5 	stp	x21, x22, [sp, #32]
    7028:	aa0003f5 	mov	x21, x0
    702c:	aa0103f6 	mov	x22, x1
    7030:	f9001bf7 	str	x23, [sp, #48]
    7034:	aa0303f7 	mov	x23, x3
    7038:	aa1703e1 	mov	x1, x23
    703c:	aa1303e0 	mov	x0, x19
    7040:	9400113b 	bl	b52c <mbedtls_ct_size_bool_eq>
    7044:	2a0003e2 	mov	w2, w0
    7048:	8b1316c1 	add	x1, x22, x19, lsl #5
    704c:	aa1503e0 	mov	x0, x21
    7050:	940011bb 	bl	b73c <mbedtls_mpi_safe_cond_assign>
    7054:	35000080 	cbnz	w0, 7064 <mpi_select+0x54>
    7058:	91000673 	add	x19, x19, #0x1
    705c:	eb13029f 	cmp	x20, x19
    7060:	54fffec1 	b.ne	7038 <mpi_select+0x28>  // b.any
    7064:	a94153f3 	ldp	x19, x20, [sp, #16]
    7068:	a9425bf5 	ldp	x21, x22, [sp, #32]
    706c:	f9401bf7 	ldr	x23, [sp, #48]
    7070:	a8c47bfd 	ldp	x29, x30, [sp], #64
    7074:	d65f03c0 	ret

0000000000007078 <mpi_montmul.isra.0>:
mpi_montmul.isra.0():
    7078:	aa0403e7 	mov	x7, x4
    707c:	2a0303e6 	mov	w6, w3
    7080:	a9409045 	ldp	x5, x4, [x2, #8]
    7084:	f9400423 	ldr	x3, [x1, #8]
    7088:	f9400822 	ldr	x2, [x1, #16]
    708c:	aa0003e1 	mov	x1, x0
    7090:	14000f6e 	b	ae48 <mbedtls_mpi_core_montmul>

0000000000007094 <mpi_montred>:
mpi_montred():
    7094:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    7098:	910003fd 	mov	x29, sp
    709c:	f9400800 	ldr	x0, [x0, #16]
    70a0:	f9000bf3 	str	x19, [sp, #16]
    70a4:	d0000093 	adrp	x19, 19000 <_DYNAMIC>
    70a8:	f9409a64 	ldr	x4, [x19, #304]
    70ac:	f9400085 	ldr	x5, [x4]
    70b0:	f90027e5 	str	x5, [sp, #72]
    70b4:	d2800005 	mov	x5, #0x0                   	// #0
    70b8:	52800024 	mov	w4, #0x1                   	// #1
    70bc:	290493e4 	stp	w4, w4, [sp, #36]
    70c0:	d2800024 	mov	x4, #0x1                   	// #1
    70c4:	f9001be4 	str	x4, [sp, #48]
    70c8:	910093e4 	add	x4, sp, #0x24
    70cc:	f9001fe4 	str	x4, [sp, #56]
    70d0:	f9400864 	ldr	x4, [x3, #16]
    70d4:	2a0203e3 	mov	w3, w2
    70d8:	aa0103e2 	mov	x2, x1
    70dc:	9100a3e1 	add	x1, sp, #0x28
    70e0:	97ffffe6 	bl	7078 <mpi_montmul.isra.0>
    70e4:	f9409a73 	ldr	x19, [x19, #304]
    70e8:	f94027e0 	ldr	x0, [sp, #72]
    70ec:	f9400261 	ldr	x1, [x19]
    70f0:	eb010000 	subs	x0, x0, x1
    70f4:	d2800001 	mov	x1, #0x0                   	// #0
    70f8:	54000040 	b.eq	7100 <mpi_montred+0x6c>  // b.none
    70fc:	97ffe55f 	bl	678 <__stack_chk_fail>
    7100:	f9400bf3 	ldr	x19, [sp, #16]
    7104:	a8c57bfd 	ldp	x29, x30, [sp], #80
    7108:	d65f03c0 	ret

000000000000710c <mbedtls_mpi_init>:
mbedtls_mpi_init():
    710c:	52800021 	mov	w1, #0x1                   	// #1
    7110:	b9000001 	str	w1, [x0]
    7114:	a900fc1f 	stp	xzr, xzr, [x0, #8]
    7118:	7900301f 	strh	wzr, [x0, #24]
    711c:	d65f03c0 	ret

0000000000007120 <mbedtls_mpi_init_mempool>:
mbedtls_mpi_init_mempool():
    7120:	d0000081 	adrp	x1, 19000 <_DYNAMIC>
    7124:	52800022 	mov	w2, #0x1                   	// #1
    7128:	a900fc1f 	stp	xzr, xzr, [x0, #8]
    712c:	f940f421 	ldr	x1, [x1, #488]
    7130:	f9400021 	ldr	x1, [x1]
    7134:	b9000002 	str	w2, [x0]
    7138:	f100003f 	cmp	x1, #0x0
    713c:	1a9f07e1 	cset	w1, ne  // ne = any
    7140:	79003001 	strh	w1, [x0, #24]
    7144:	d65f03c0 	ret

0000000000007148 <mbedtls_mpi_free>:
mbedtls_mpi_free():
    7148:	b4000340 	cbz	x0, 71b0 <mbedtls_mpi_free+0x68>
    714c:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    7150:	910003fd 	mov	x29, sp
    7154:	f9000bf3 	str	x19, [sp, #16]
    7158:	aa0003f3 	mov	x19, x0
    715c:	f9400800 	ldr	x0, [x0, #16]
    7160:	b4000160 	cbz	x0, 718c <mbedtls_mpi_free+0x44>
    7164:	f9400661 	ldr	x1, [x19, #8]
    7168:	d37ef421 	lsl	x1, x1, #2
    716c:	9400132f 	bl	be28 <mbedtls_platform_zeroize>
    7170:	79c03260 	ldrsh	w0, [x19, #24]
    7174:	34000180 	cbz	w0, 71a4 <mbedtls_mpi_free+0x5c>
    7178:	d0000080 	adrp	x0, 19000 <_DYNAMIC>
    717c:	f9400a61 	ldr	x1, [x19, #16]
    7180:	f940f400 	ldr	x0, [x0, #488]
    7184:	f9400000 	ldr	x0, [x0]
    7188:	940018b1 	bl	d44c <mempool_free>
    718c:	52800020 	mov	w0, #0x1                   	// #1
    7190:	b9000260 	str	w0, [x19]
    7194:	a900fe7f 	stp	xzr, xzr, [x19, #8]
    7198:	f9400bf3 	ldr	x19, [sp, #16]
    719c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    71a0:	d65f03c0 	ret
    71a4:	f9400a60 	ldr	x0, [x19, #16]
    71a8:	940016e8 	bl	cd48 <free>
    71ac:	17fffff8 	b	718c <mbedtls_mpi_free+0x44>
    71b0:	d65f03c0 	ret

00000000000071b4 <mbedtls_mpi_grow>:
mbedtls_mpi_grow():
    71b4:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    71b8:	910003fd 	mov	x29, sp
    71bc:	a90153f3 	stp	x19, x20, [sp, #16]
    71c0:	aa0003f3 	mov	x19, x0
    71c4:	d284e200 	mov	x0, #0x2710                	// #10000
    71c8:	a9025bf5 	stp	x21, x22, [sp, #32]
    71cc:	eb00003f 	cmp	x1, x0
    71d0:	540000c9 	b.ls	71e8 <mbedtls_mpi_grow+0x34>  // b.plast
    71d4:	128001e0 	mov	w0, #0xfffffff0            	// #-16
    71d8:	a94153f3 	ldp	x19, x20, [sp, #16]
    71dc:	a9425bf5 	ldp	x21, x22, [sp, #32]
    71e0:	a8c37bfd 	ldp	x29, x30, [sp], #48
    71e4:	d65f03c0 	ret
    71e8:	f9400660 	ldr	x0, [x19, #8]
    71ec:	aa0103f5 	mov	x21, x1
    71f0:	eb01001f 	cmp	x0, x1
    71f4:	540003e2 	b.cs	7270 <mbedtls_mpi_grow+0xbc>  // b.hs, b.nlast
    71f8:	79c03260 	ldrsh	w0, [x19, #24]
    71fc:	340003e0 	cbz	w0, 7278 <mbedtls_mpi_grow+0xc4>
    7200:	d0000080 	adrp	x0, 19000 <_DYNAMIC>
    7204:	d37ef436 	lsl	x22, x1, #2
    7208:	aa1603e1 	mov	x1, x22
    720c:	f940f400 	ldr	x0, [x0, #488]
    7210:	f9400000 	ldr	x0, [x0]
    7214:	94001861 	bl	d398 <mempool_alloc>
    7218:	aa0003f4 	mov	x20, x0
    721c:	b4fffdc0 	cbz	x0, 71d4 <mbedtls_mpi_grow+0x20>
    7220:	aa1603e2 	mov	x2, x22
    7224:	52800001 	mov	w1, #0x0                   	// #0
    7228:	9400180c 	bl	d258 <memset>
    722c:	f9400a61 	ldr	x1, [x19, #16]
    7230:	b40001e1 	cbz	x1, 726c <mbedtls_mpi_grow+0xb8>
    7234:	f9400662 	ldr	x2, [x19, #8]
    7238:	aa1403e0 	mov	x0, x20
    723c:	d37ef442 	lsl	x2, x2, #2
    7240:	97ffe370 	bl	0 <memcpy>
    7244:	a9408261 	ldp	x1, x0, [x19, #8]
    7248:	d37ef421 	lsl	x1, x1, #2
    724c:	940012f7 	bl	be28 <mbedtls_platform_zeroize>
    7250:	79c03260 	ldrsh	w0, [x19, #24]
    7254:	340001e0 	cbz	w0, 7290 <mbedtls_mpi_grow+0xdc>
    7258:	d0000080 	adrp	x0, 19000 <_DYNAMIC>
    725c:	f9400a61 	ldr	x1, [x19, #16]
    7260:	f940f400 	ldr	x0, [x0, #488]
    7264:	f9400000 	ldr	x0, [x0]
    7268:	94001879 	bl	d44c <mempool_free>
    726c:	a900d275 	stp	x21, x20, [x19, #8]
    7270:	52800000 	mov	w0, #0x0                   	// #0
    7274:	17ffffd9 	b	71d8 <mbedtls_mpi_grow+0x24>
    7278:	aa1503e0 	mov	x0, x21
    727c:	d2800081 	mov	x1, #0x4                   	// #4
    7280:	94001695 	bl	ccd4 <calloc>
    7284:	aa0003f4 	mov	x20, x0
    7288:	b5fffd20 	cbnz	x0, 722c <mbedtls_mpi_grow+0x78>
    728c:	17ffffd2 	b	71d4 <mbedtls_mpi_grow+0x20>
    7290:	f9400a60 	ldr	x0, [x19, #16]
    7294:	940016ad 	bl	cd48 <free>
    7298:	17fffff5 	b	726c <mbedtls_mpi_grow+0xb8>

000000000000729c <mbedtls_mpi_resize_clear>:
mbedtls_mpi_resize_clear():
    729c:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    72a0:	910003fd 	mov	x29, sp
    72a4:	a90153f3 	stp	x19, x20, [sp, #16]
    72a8:	b50000c1 	cbnz	x1, 72c0 <mbedtls_mpi_resize_clear+0x24>
    72ac:	97ffffa7 	bl	7148 <mbedtls_mpi_free>
    72b0:	52800000 	mov	w0, #0x0                   	// #0
    72b4:	a94153f3 	ldp	x19, x20, [sp, #16]
    72b8:	a8c27bfd 	ldp	x29, x30, [sp], #32
    72bc:	d65f03c0 	ret
    72c0:	f9400402 	ldr	x2, [x0, #8]
    72c4:	aa0003f3 	mov	x19, x0
    72c8:	aa0103f4 	mov	x20, x1
    72cc:	eb01005f 	cmp	x2, x1
    72d0:	54000101 	b.ne	72f0 <mbedtls_mpi_resize_clear+0x54>  // b.any
    72d4:	f9400800 	ldr	x0, [x0, #16]
    72d8:	d37ef442 	lsl	x2, x2, #2
    72dc:	52800001 	mov	w1, #0x0                   	// #0
    72e0:	940017de 	bl	d258 <memset>
    72e4:	52800020 	mov	w0, #0x1                   	// #1
    72e8:	b9000260 	str	w0, [x19]
    72ec:	17fffff1 	b	72b0 <mbedtls_mpi_resize_clear+0x14>
    72f0:	97ffff96 	bl	7148 <mbedtls_mpi_free>
    72f4:	aa1403e1 	mov	x1, x20
    72f8:	aa1303e0 	mov	x0, x19
    72fc:	a94153f3 	ldp	x19, x20, [sp, #16]
    7300:	a8c27bfd 	ldp	x29, x30, [sp], #32
    7304:	17ffffac 	b	71b4 <mbedtls_mpi_grow>

0000000000007308 <mbedtls_mpi_shrink>:
mbedtls_mpi_shrink():
    7308:	d284e202 	mov	x2, #0x2710                	// #10000
    730c:	eb02003f 	cmp	x1, x2
    7310:	54000069 	b.ls	731c <mbedtls_mpi_shrink+0x14>  // b.plast
    7314:	128001e0 	mov	w0, #0xfffffff0            	// #-16
    7318:	d65f03c0 	ret
    731c:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    7320:	aa0103e3 	mov	x3, x1
    7324:	910003fd 	mov	x29, sp
    7328:	f9400402 	ldr	x2, [x0, #8]
    732c:	a90153f3 	stp	x19, x20, [sp, #16]
    7330:	aa0003f3 	mov	x19, x0
    7334:	a9025bf5 	stp	x21, x22, [sp, #32]
    7338:	eb01005f 	cmp	x2, x1
    733c:	54000108 	b.hi	735c <mbedtls_mpi_shrink+0x54>  // b.pmore
    7340:	a94153f3 	ldp	x19, x20, [sp, #16]
    7344:	a9425bf5 	ldp	x21, x22, [sp, #32]
    7348:	a8c37bfd 	ldp	x29, x30, [sp], #48
    734c:	17ffff9a 	b	71b4 <mbedtls_mpi_grow>
    7350:	f9400a60 	ldr	x0, [x19, #16]
    7354:	b8627800 	ldr	w0, [x0, x2, lsl #2]
    7358:	35000060 	cbnz	w0, 7364 <mbedtls_mpi_shrink+0x5c>
    735c:	d1000442 	sub	x2, x2, #0x1
    7360:	b5ffff82 	cbnz	x2, 7350 <mbedtls_mpi_shrink+0x48>
    7364:	79c03260 	ldrsh	w0, [x19, #24]
    7368:	91000442 	add	x2, x2, #0x1
    736c:	eb03005f 	cmp	x2, x3
    7370:	9a832054 	csel	x20, x2, x3, cs  // cs = hs, nlast
    7374:	340003c0 	cbz	w0, 73ec <mbedtls_mpi_shrink+0xe4>
    7378:	d0000080 	adrp	x0, 19000 <_DYNAMIC>
    737c:	d37ef696 	lsl	x22, x20, #2
    7380:	aa1603e1 	mov	x1, x22
    7384:	f940f400 	ldr	x0, [x0, #488]
    7388:	f9400000 	ldr	x0, [x0]
    738c:	94001803 	bl	d398 <mempool_alloc>
    7390:	aa0003f5 	mov	x21, x0
    7394:	b4000360 	cbz	x0, 7400 <mbedtls_mpi_shrink+0xf8>
    7398:	aa1603e2 	mov	x2, x22
    739c:	52800001 	mov	w1, #0x0                   	// #0
    73a0:	940017ae 	bl	d258 <memset>
    73a4:	f9400a61 	ldr	x1, [x19, #16]
    73a8:	b40001c1 	cbz	x1, 73e0 <mbedtls_mpi_shrink+0xd8>
    73ac:	d37ef682 	lsl	x2, x20, #2
    73b0:	aa1503e0 	mov	x0, x21
    73b4:	97ffe313 	bl	0 <memcpy>
    73b8:	a9408261 	ldp	x1, x0, [x19, #8]
    73bc:	d37ef421 	lsl	x1, x1, #2
    73c0:	9400129a 	bl	be28 <mbedtls_platform_zeroize>
    73c4:	79c03260 	ldrsh	w0, [x19, #24]
    73c8:	34000260 	cbz	w0, 7414 <mbedtls_mpi_shrink+0x10c>
    73cc:	d0000080 	adrp	x0, 19000 <_DYNAMIC>
    73d0:	f9400a61 	ldr	x1, [x19, #16]
    73d4:	f940f400 	ldr	x0, [x0, #488]
    73d8:	f9400000 	ldr	x0, [x0]
    73dc:	9400181c 	bl	d44c <mempool_free>
    73e0:	52800000 	mov	w0, #0x0                   	// #0
    73e4:	a900d674 	stp	x20, x21, [x19, #8]
    73e8:	14000007 	b	7404 <mbedtls_mpi_shrink+0xfc>
    73ec:	aa1403e0 	mov	x0, x20
    73f0:	d2800081 	mov	x1, #0x4                   	// #4
    73f4:	94001638 	bl	ccd4 <calloc>
    73f8:	aa0003f5 	mov	x21, x0
    73fc:	b5fffd40 	cbnz	x0, 73a4 <mbedtls_mpi_shrink+0x9c>
    7400:	128001e0 	mov	w0, #0xfffffff0            	// #-16
    7404:	a94153f3 	ldp	x19, x20, [sp, #16]
    7408:	a9425bf5 	ldp	x21, x22, [sp, #32]
    740c:	a8c37bfd 	ldp	x29, x30, [sp], #48
    7410:	d65f03c0 	ret
    7414:	f9400a60 	ldr	x0, [x19, #16]
    7418:	9400164c 	bl	cd48 <free>
    741c:	17fffff1 	b	73e0 <mbedtls_mpi_shrink+0xd8>

0000000000007420 <mbedtls_mpi_copy>:
mbedtls_mpi_copy():
    7420:	eb01001f 	cmp	x0, x1
    7424:	54000600 	b.eq	74e4 <mbedtls_mpi_copy+0xc4>  // b.none
    7428:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    742c:	910003fd 	mov	x29, sp
    7430:	a90153f3 	stp	x19, x20, [sp, #16]
    7434:	aa0003f4 	mov	x20, x0
    7438:	f9400433 	ldr	x19, [x1, #8]
    743c:	f9400402 	ldr	x2, [x0, #8]
    7440:	f90013f5 	str	x21, [sp, #32]
    7444:	aa0103f5 	mov	x21, x1
    7448:	b50001b3 	cbnz	x19, 747c <mbedtls_mpi_copy+0x5c>
    744c:	b40000e2 	cbz	x2, 7468 <mbedtls_mpi_copy+0x48>
    7450:	52800020 	mov	w0, #0x1                   	// #1
    7454:	b9000280 	str	w0, [x20]
    7458:	f9400a80 	ldr	x0, [x20, #16]
    745c:	d37ef442 	lsl	x2, x2, #2
    7460:	52800001 	mov	w1, #0x0                   	// #0
    7464:	9400177d 	bl	d258 <memset>
    7468:	52800000 	mov	w0, #0x0                   	// #0
    746c:	1400000f 	b	74a8 <mbedtls_mpi_copy+0x88>
    7470:	f9400aa0 	ldr	x0, [x21, #16]
    7474:	b8737800 	ldr	w0, [x0, x19, lsl #2]
    7478:	35000060 	cbnz	w0, 7484 <mbedtls_mpi_copy+0x64>
    747c:	d1000673 	sub	x19, x19, #0x1
    7480:	b5ffff93 	cbnz	x19, 7470 <mbedtls_mpi_copy+0x50>
    7484:	b94002a0 	ldr	w0, [x21]
    7488:	91000673 	add	x19, x19, #0x1
    748c:	b9000280 	str	w0, [x20]
    7490:	eb02027f 	cmp	x19, x2
    7494:	54000129 	b.ls	74b8 <mbedtls_mpi_copy+0x98>  // b.plast
    7498:	aa1303e1 	mov	x1, x19
    749c:	aa1403e0 	mov	x0, x20
    74a0:	97ffff45 	bl	71b4 <mbedtls_mpi_grow>
    74a4:	34000160 	cbz	w0, 74d0 <mbedtls_mpi_copy+0xb0>
    74a8:	a94153f3 	ldp	x19, x20, [sp, #16]
    74ac:	f94013f5 	ldr	x21, [sp, #32]
    74b0:	a8c37bfd 	ldp	x29, x30, [sp], #48
    74b4:	d65f03c0 	ret
    74b8:	f9400a80 	ldr	x0, [x20, #16]
    74bc:	cb130042 	sub	x2, x2, x19
    74c0:	52800001 	mov	w1, #0x0                   	// #0
    74c4:	d37ef442 	lsl	x2, x2, #2
    74c8:	8b130800 	add	x0, x0, x19, lsl #2
    74cc:	94001763 	bl	d258 <memset>
    74d0:	f9400a80 	ldr	x0, [x20, #16]
    74d4:	d37ef662 	lsl	x2, x19, #2
    74d8:	f9400aa1 	ldr	x1, [x21, #16]
    74dc:	97ffe2c9 	bl	0 <memcpy>
    74e0:	17ffffe2 	b	7468 <mbedtls_mpi_copy+0x48>
    74e4:	52800000 	mov	w0, #0x0                   	// #0
    74e8:	d65f03c0 	ret

00000000000074ec <mbedtls_mpi_swap>:
mbedtls_mpi_swap():
    74ec:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    74f0:	d2800402 	mov	x2, #0x20                  	// #32
    74f4:	910003fd 	mov	x29, sp
    74f8:	a90153f3 	stp	x19, x20, [sp, #16]
    74fc:	d0000093 	adrp	x19, 19000 <_DYNAMIC>
    7500:	aa0103f4 	mov	x20, x1
    7504:	a9025bf5 	stp	x21, x22, [sp, #32]
    7508:	aa0003f6 	mov	x22, x0
    750c:	9100e3f5 	add	x21, sp, #0x38
    7510:	f9409a60 	ldr	x0, [x19, #304]
    7514:	f9400001 	ldr	x1, [x0]
    7518:	f9002fe1 	str	x1, [sp, #88]
    751c:	d2800001 	mov	x1, #0x0                   	// #0
    7520:	aa1503e0 	mov	x0, x21
    7524:	aa1603e1 	mov	x1, x22
    7528:	97ffe2b6 	bl	0 <memcpy>
    752c:	aa1403e1 	mov	x1, x20
    7530:	d2800402 	mov	x2, #0x20                  	// #32
    7534:	aa1603e0 	mov	x0, x22
    7538:	97ffe2b2 	bl	0 <memcpy>
    753c:	aa1503e1 	mov	x1, x21
    7540:	aa1403e0 	mov	x0, x20
    7544:	d2800402 	mov	x2, #0x20                  	// #32
    7548:	97ffe2ae 	bl	0 <memcpy>
    754c:	f9409a73 	ldr	x19, [x19, #304]
    7550:	f9402fe0 	ldr	x0, [sp, #88]
    7554:	f9400261 	ldr	x1, [x19]
    7558:	eb010000 	subs	x0, x0, x1
    755c:	d2800001 	mov	x1, #0x0                   	// #0
    7560:	54000040 	b.eq	7568 <mbedtls_mpi_swap+0x7c>  // b.none
    7564:	97ffe445 	bl	678 <__stack_chk_fail>
    7568:	a94153f3 	ldp	x19, x20, [sp, #16]
    756c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    7570:	a8c67bfd 	ldp	x29, x30, [sp], #96
    7574:	d65f03c0 	ret

0000000000007578 <mbedtls_mpi_lset>:
mbedtls_mpi_lset():
    7578:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    757c:	910003fd 	mov	x29, sp
    7580:	a90153f3 	stp	x19, x20, [sp, #16]
    7584:	aa0003f4 	mov	x20, x0
    7588:	2a0103f3 	mov	w19, w1
    758c:	d2800021 	mov	x1, #0x1                   	// #1
    7590:	f90013f5 	str	x21, [sp, #32]
    7594:	97ffff08 	bl	71b4 <mbedtls_mpi_grow>
    7598:	2a0003f5 	mov	w21, w0
    759c:	35000180 	cbnz	w0, 75cc <mbedtls_mpi_lset+0x54>
    75a0:	a9408282 	ldp	x2, x0, [x20, #8]
    75a4:	52800001 	mov	w1, #0x0                   	// #0
    75a8:	d37ef442 	lsl	x2, x2, #2
    75ac:	9400172b 	bl	d258 <memset>
    75b0:	f9400a80 	ldr	x0, [x20, #16]
    75b4:	7100027f 	cmp	w19, #0x0
    75b8:	5a93a673 	cneg	w19, w19, lt  // lt = tstop
    75bc:	b9000013 	str	w19, [x0]
    75c0:	52800020 	mov	w0, #0x1                   	// #1
    75c4:	5a80a400 	cneg	w0, w0, lt  // lt = tstop
    75c8:	b9000280 	str	w0, [x20]
    75cc:	2a1503e0 	mov	w0, w21
    75d0:	a94153f3 	ldp	x19, x20, [sp, #16]
    75d4:	f94013f5 	ldr	x21, [sp, #32]
    75d8:	a8c37bfd 	ldp	x29, x30, [sp], #48
    75dc:	d65f03c0 	ret

00000000000075e0 <mbedtls_mpi_get_bit>:
mbedtls_mpi_get_bit():
    75e0:	f9400402 	ldr	x2, [x0, #8]
    75e4:	eb02143f 	cmp	x1, x2, lsl #5
    75e8:	540000e2 	b.cs	7604 <mbedtls_mpi_get_bit+0x24>  // b.hs, b.nlast
    75ec:	f9400800 	ldr	x0, [x0, #16]
    75f0:	d345fc22 	lsr	x2, x1, #5
    75f4:	b8627800 	ldr	w0, [x0, x2, lsl #2]
    75f8:	1ac12400 	lsr	w0, w0, w1
    75fc:	12000000 	and	w0, w0, #0x1
    7600:	d65f03c0 	ret
    7604:	52800000 	mov	w0, #0x0                   	// #0
    7608:	17fffffe 	b	7600 <mbedtls_mpi_get_bit+0x20>

000000000000760c <mbedtls_mpi_set_bit>:
mbedtls_mpi_set_bit():
    760c:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    7610:	910003fd 	mov	x29, sp
    7614:	a90153f3 	stp	x19, x20, [sp, #16]
    7618:	a9025bf5 	stp	x21, x22, [sp, #32]
    761c:	12001c55 	and	w21, w2, #0xff
    7620:	710006bf 	cmp	w21, #0x1
    7624:	54000368 	b.hi	7690 <mbedtls_mpi_set_bit+0x84>  // b.pmore
    7628:	aa0103f3 	mov	x19, x1
    762c:	d345fc34 	lsr	x20, x1, #5
    7630:	f9400401 	ldr	x1, [x0, #8]
    7634:	aa0003f6 	mov	x22, x0
    7638:	eb01167f 	cmp	x19, x1, lsl #5
    763c:	540001a2 	b.cs	7670 <mbedtls_mpi_set_bit+0x64>  // b.hs, b.nlast
    7640:	f9400ac1 	ldr	x1, [x22, #16]
    7644:	d37ef694 	lsl	x20, x20, #2
    7648:	92401273 	and	x19, x19, #0x1f
    764c:	52800020 	mov	w0, #0x1                   	// #1
    7650:	b8746822 	ldr	w2, [x1, x20]
    7654:	1ad32000 	lsl	w0, w0, w19
    7658:	1ad322b5 	lsl	w21, w21, w19
    765c:	0a200040 	bic	w0, w2, w0
    7660:	2a150000 	orr	w0, w0, w21
    7664:	b8346820 	str	w0, [x1, x20]
    7668:	52800000 	mov	w0, #0x0                   	// #0
    766c:	14000005 	b	7680 <mbedtls_mpi_set_bit+0x74>
    7670:	34ffffd5 	cbz	w21, 7668 <mbedtls_mpi_set_bit+0x5c>
    7674:	91000681 	add	x1, x20, #0x1
    7678:	97fffecf 	bl	71b4 <mbedtls_mpi_grow>
    767c:	34fffe20 	cbz	w0, 7640 <mbedtls_mpi_set_bit+0x34>
    7680:	a94153f3 	ldp	x19, x20, [sp, #16]
    7684:	a9425bf5 	ldp	x21, x22, [sp, #32]
    7688:	a8c37bfd 	ldp	x29, x30, [sp], #48
    768c:	d65f03c0 	ret
    7690:	12800060 	mov	w0, #0xfffffffc            	// #-4
    7694:	17fffffb 	b	7680 <mbedtls_mpi_set_bit+0x74>

0000000000007698 <mbedtls_mpi_lsb>:
mbedtls_mpi_lsb():
    7698:	f9400405 	ldr	x5, [x0, #8]
    769c:	aa0003e3 	mov	x3, x0
    76a0:	d2800004 	mov	x4, #0x0                   	// #0
    76a4:	d2800002 	mov	x2, #0x0                   	// #0
    76a8:	eb0200bf 	cmp	x5, x2
    76ac:	54000061 	b.ne	76b8 <mbedtls_mpi_lsb+0x20>  // b.any
    76b0:	d2800000 	mov	x0, #0x0                   	// #0
    76b4:	d65f03c0 	ret
    76b8:	f9400860 	ldr	x0, [x3, #16]
    76bc:	d2800001 	mov	x1, #0x0                   	// #0
    76c0:	b8627806 	ldr	w6, [x0, x2, lsl #2]
    76c4:	8b010080 	add	x0, x4, x1
    76c8:	1ac124c7 	lsr	w7, w6, w1
    76cc:	3707ff47 	tbnz	w7, #0, 76b4 <mbedtls_mpi_lsb+0x1c>
    76d0:	91000421 	add	x1, x1, #0x1
    76d4:	8b010080 	add	x0, x4, x1
    76d8:	f100803f 	cmp	x1, #0x20
    76dc:	54ffff41 	b.ne	76c4 <mbedtls_mpi_lsb+0x2c>  // b.any
    76e0:	91000442 	add	x2, x2, #0x1
    76e4:	aa0003e4 	mov	x4, x0
    76e8:	17fffff0 	b	76a8 <mbedtls_mpi_lsb+0x10>

00000000000076ec <mbedtls_mpi_bitlen>:
mbedtls_mpi_bitlen():
    76ec:	a9408001 	ldp	x1, x0, [x0, #8]
    76f0:	14000be0 	b	a670 <mbedtls_mpi_core_bitlen>

00000000000076f4 <mbedtls_mpi_size>:
mbedtls_mpi_size():
    76f4:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    76f8:	910003fd 	mov	x29, sp
    76fc:	97fffffc 	bl	76ec <mbedtls_mpi_bitlen>
    7700:	91001c00 	add	x0, x0, #0x7
    7704:	a8c17bfd 	ldp	x29, x30, [sp], #16
    7708:	d343fc00 	lsr	x0, x0, #3
    770c:	d65f03c0 	ret

0000000000007710 <mbedtls_mpi_read_binary_le>:
mbedtls_mpi_read_binary_le():
    7710:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    7714:	f240045f 	tst	x2, #0x3
    7718:	910003fd 	mov	x29, sp
    771c:	f90013f5 	str	x21, [sp, #32]
    7720:	aa0103f5 	mov	x21, x1
    7724:	d342fc41 	lsr	x1, x2, #2
    7728:	a90153f3 	stp	x19, x20, [sp, #16]
    772c:	9a810421 	cinc	x1, x1, ne  // ne = any
    7730:	aa0003f4 	mov	x20, x0
    7734:	aa0203f3 	mov	x19, x2
    7738:	97fffed9 	bl	729c <mbedtls_mpi_resize_clear>
    773c:	35000100 	cbnz	w0, 775c <mbedtls_mpi_read_binary_le+0x4c>
    7740:	aa1303e3 	mov	x3, x19
    7744:	aa1503e2 	mov	x2, x21
    7748:	a9408281 	ldp	x1, x0, [x20, #8]
    774c:	a94153f3 	ldp	x19, x20, [sp, #16]
    7750:	f94013f5 	ldr	x21, [sp, #32]
    7754:	a8c37bfd 	ldp	x29, x30, [sp], #48
    7758:	14000c29 	b	a7fc <mbedtls_mpi_core_read_le>
    775c:	a94153f3 	ldp	x19, x20, [sp, #16]
    7760:	f94013f5 	ldr	x21, [sp, #32]
    7764:	a8c37bfd 	ldp	x29, x30, [sp], #48
    7768:	d65f03c0 	ret

000000000000776c <mbedtls_mpi_read_binary>:
mbedtls_mpi_read_binary():
    776c:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    7770:	f240045f 	tst	x2, #0x3
    7774:	910003fd 	mov	x29, sp
    7778:	f90013f5 	str	x21, [sp, #32]
    777c:	aa0103f5 	mov	x21, x1
    7780:	d342fc41 	lsr	x1, x2, #2
    7784:	a90153f3 	stp	x19, x20, [sp, #16]
    7788:	9a810421 	cinc	x1, x1, ne  // ne = any
    778c:	aa0003f4 	mov	x20, x0
    7790:	aa0203f3 	mov	x19, x2
    7794:	97fffec2 	bl	729c <mbedtls_mpi_resize_clear>
    7798:	35000100 	cbnz	w0, 77b8 <mbedtls_mpi_read_binary+0x4c>
    779c:	aa1303e3 	mov	x3, x19
    77a0:	aa1503e2 	mov	x2, x21
    77a4:	a9408281 	ldp	x1, x0, [x20, #8]
    77a8:	a94153f3 	ldp	x19, x20, [sp, #16]
    77ac:	f94013f5 	ldr	x21, [sp, #32]
    77b0:	a8c37bfd 	ldp	x29, x30, [sp], #48
    77b4:	14000c35 	b	a888 <mbedtls_mpi_core_read_be>
    77b8:	a94153f3 	ldp	x19, x20, [sp, #16]
    77bc:	f94013f5 	ldr	x21, [sp, #32]
    77c0:	a8c37bfd 	ldp	x29, x30, [sp], #48
    77c4:	d65f03c0 	ret

00000000000077c8 <mbedtls_mpi_write_binary_le>:
mbedtls_mpi_write_binary_le():
    77c8:	aa0203e3 	mov	x3, x2
    77cc:	aa0103e2 	mov	x2, x1
    77d0:	a9408001 	ldp	x1, x0, [x0, #8]
    77d4:	14000c51 	b	a918 <mbedtls_mpi_core_write_le>

00000000000077d8 <mbedtls_mpi_write_binary>:
mbedtls_mpi_write_binary():
    77d8:	aa0203e3 	mov	x3, x2
    77dc:	aa0103e2 	mov	x2, x1
    77e0:	a9408001 	ldp	x1, x0, [x0, #8]
    77e4:	14000c78 	b	a9c4 <mbedtls_mpi_core_write_be>

00000000000077e8 <mbedtls_mpi_shift_l>:
mbedtls_mpi_shift_l():
    77e8:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    77ec:	910003fd 	mov	x29, sp
    77f0:	a90153f3 	stp	x19, x20, [sp, #16]
    77f4:	aa0003f3 	mov	x19, x0
    77f8:	d345fc34 	lsr	x20, x1, #5
    77fc:	a9025bf5 	stp	x21, x22, [sp, #32]
    7800:	aa0103f5 	mov	x21, x1
    7804:	92401036 	and	x22, x1, #0x1f
    7808:	97ffffb9 	bl	76ec <mbedtls_mpi_bitlen>
    780c:	8b150000 	add	x0, x0, x21
    7810:	f9400661 	ldr	x1, [x19, #8]
    7814:	eb01141f 	cmp	x0, x1, lsl #5
    7818:	540000c8 	b.hi	7830 <mbedtls_mpi_shift_l+0x48>  // b.pmore
    781c:	f1007ebf 	cmp	x21, #0x1f
    7820:	540001c8 	b.hi	7858 <mbedtls_mpi_shift_l+0x70>  // b.pmore
    7824:	b50004d6 	cbnz	x22, 78bc <mbedtls_mpi_shift_l+0xd4>
    7828:	52800000 	mov	w0, #0x0                   	// #0
    782c:	14000007 	b	7848 <mbedtls_mpi_shift_l+0x60>
    7830:	f240101f 	tst	x0, #0x1f
    7834:	d345fc00 	lsr	x0, x0, #5
    7838:	9a800401 	cinc	x1, x0, ne  // ne = any
    783c:	aa1303e0 	mov	x0, x19
    7840:	97fffe5d 	bl	71b4 <mbedtls_mpi_grow>
    7844:	34fffec0 	cbz	w0, 781c <mbedtls_mpi_shift_l+0x34>
    7848:	a94153f3 	ldp	x19, x20, [sp, #16]
    784c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    7850:	a8c37bfd 	ldp	x29, x30, [sp], #48
    7854:	d65f03c0 	ret
    7858:	f9400661 	ldr	x1, [x19, #8]
    785c:	92800063 	mov	x3, #0xfffffffffffffffc    	// #-4
    7860:	9b037e83 	mul	x3, x20, x3
    7864:	aa0103e2 	mov	x2, x1
    7868:	d37ef420 	lsl	x0, x1, #2
    786c:	d1001000 	sub	x0, x0, #0x4
    7870:	eb14005f 	cmp	x2, x20
    7874:	54000168 	b.hi	78a0 <mbedtls_mpi_shift_l+0xb8>  // b.pmore
    7878:	eb010280 	subs	x0, x20, x1
    787c:	9a9f9000 	csel	x0, x0, xzr, ls  // ls = plast
    7880:	8b000021 	add	x1, x1, x0
    7884:	d37ef421 	lsl	x1, x1, #2
    7888:	d1001021 	sub	x1, x1, #0x4
    788c:	b100103f 	cmn	x1, #0x4
    7890:	54fffca0 	b.eq	7824 <mbedtls_mpi_shift_l+0x3c>  // b.none
    7894:	f9400a60 	ldr	x0, [x19, #16]
    7898:	b821681f 	str	wzr, [x0, x1]
    789c:	17fffffb 	b	7888 <mbedtls_mpi_shift_l+0xa0>
    78a0:	f9400a64 	ldr	x4, [x19, #16]
    78a4:	d1000442 	sub	x2, x2, #0x1
    78a8:	8b030085 	add	x5, x4, x3
    78ac:	b86068a5 	ldr	w5, [x5, x0]
    78b0:	b8206885 	str	w5, [x4, x0]
    78b4:	d1001000 	sub	x0, x0, #0x4
    78b8:	17ffffee 	b	7870 <mbedtls_mpi_shift_l+0x88>
    78bc:	f9400666 	ldr	x6, [x19, #8]
    78c0:	52800400 	mov	w0, #0x20                  	// #32
    78c4:	4b160000 	sub	w0, w0, w22
    78c8:	52800002 	mov	w2, #0x0                   	// #0
    78cc:	eb1400df 	cmp	x6, x20
    78d0:	54fffac9 	b.ls	7828 <mbedtls_mpi_shift_l+0x40>  // b.plast
    78d4:	f9400a65 	ldr	x5, [x19, #16]
    78d8:	d37ef684 	lsl	x4, x20, #2
    78dc:	91000694 	add	x20, x20, #0x1
    78e0:	b86468a3 	ldr	w3, [x5, x4]
    78e4:	1ad62061 	lsl	w1, w3, w22
    78e8:	2a020021 	orr	w1, w1, w2
    78ec:	1ac02462 	lsr	w2, w3, w0
    78f0:	b82468a1 	str	w1, [x5, x4]
    78f4:	17fffff6 	b	78cc <mbedtls_mpi_shift_l+0xe4>

00000000000078f8 <mbedtls_mpi_shift_r>:
mbedtls_mpi_shift_r():
    78f8:	aa0103e2 	mov	x2, x1
    78fc:	f9400401 	ldr	x1, [x0, #8]
    7900:	b4000101 	cbz	x1, 7920 <mbedtls_mpi_shift_r+0x28>
    7904:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    7908:	910003fd 	mov	x29, sp
    790c:	f9400800 	ldr	x0, [x0, #16]
    7910:	94000c5b 	bl	aa7c <mbedtls_mpi_core_shift_r>
    7914:	52800000 	mov	w0, #0x0                   	// #0
    7918:	a8c17bfd 	ldp	x29, x30, [sp], #16
    791c:	d65f03c0 	ret
    7920:	52800000 	mov	w0, #0x0                   	// #0
    7924:	d65f03c0 	ret

0000000000007928 <mbedtls_mpi_cmp_abs>:
mbedtls_mpi_cmp_abs():
    7928:	f9400402 	ldr	x2, [x0, #8]
    792c:	b50000c2 	cbnz	x2, 7944 <mbedtls_mpi_cmp_abs+0x1c>
    7930:	f9400423 	ldr	x3, [x1, #8]
    7934:	b5000143 	cbnz	x3, 795c <mbedtls_mpi_cmp_abs+0x34>
    7938:	f100005f 	cmp	x2, #0x0
    793c:	1a9f07e0 	cset	w0, ne  // ne = any
    7940:	d65f03c0 	ret
    7944:	f9400803 	ldr	x3, [x0, #16]
    7948:	8b020863 	add	x3, x3, x2, lsl #2
    794c:	b85fc063 	ldur	w3, [x3, #-4]
    7950:	35ffff03 	cbnz	w3, 7930 <mbedtls_mpi_cmp_abs+0x8>
    7954:	d1000442 	sub	x2, x2, #0x1
    7958:	17fffff5 	b	792c <mbedtls_mpi_cmp_abs+0x4>
    795c:	f9400824 	ldr	x4, [x1, #16]
    7960:	8b030885 	add	x5, x4, x3, lsl #2
    7964:	b85fc0a5 	ldur	w5, [x5, #-4]
    7968:	35000065 	cbnz	w5, 7974 <mbedtls_mpi_cmp_abs+0x4c>
    796c:	d1000463 	sub	x3, x3, #0x1
    7970:	17fffff1 	b	7934 <mbedtls_mpi_cmp_abs+0xc>
    7974:	eb03005f 	cmp	x2, x3
    7978:	54000228 	b.hi	79bc <mbedtls_mpi_cmp_abs+0x94>  // b.pmore
    797c:	540001c3 	b.cc	79b4 <mbedtls_mpi_cmp_abs+0x8c>  // b.lo, b.ul, b.last
    7980:	d1000442 	sub	x2, x2, #0x1
    7984:	b100045f 	cmn	x2, #0x1
    7988:	54000061 	b.ne	7994 <mbedtls_mpi_cmp_abs+0x6c>  // b.any
    798c:	52800000 	mov	w0, #0x0                   	// #0
    7990:	17ffffec 	b	7940 <mbedtls_mpi_cmp_abs+0x18>
    7994:	f9400803 	ldr	x3, [x0, #16]
    7998:	d37ef441 	lsl	x1, x2, #2
    799c:	b8616863 	ldr	w3, [x3, x1]
    79a0:	b8616881 	ldr	w1, [x4, x1]
    79a4:	6b01007f 	cmp	w3, w1
    79a8:	540000a8 	b.hi	79bc <mbedtls_mpi_cmp_abs+0x94>  // b.pmore
    79ac:	d1000442 	sub	x2, x2, #0x1
    79b0:	54fffea2 	b.cs	7984 <mbedtls_mpi_cmp_abs+0x5c>  // b.hs, b.nlast
    79b4:	12800000 	mov	w0, #0xffffffff            	// #-1
    79b8:	17ffffe2 	b	7940 <mbedtls_mpi_cmp_abs+0x18>
    79bc:	52800020 	mov	w0, #0x1                   	// #1
    79c0:	17ffffe0 	b	7940 <mbedtls_mpi_cmp_abs+0x18>

00000000000079c4 <mbedtls_mpi_cmp_mpi>:
mbedtls_mpi_cmp_mpi():
    79c4:	f9400402 	ldr	x2, [x0, #8]
    79c8:	aa0003e3 	mov	x3, x0
    79cc:	b50000c2 	cbnz	x2, 79e4 <mbedtls_mpi_cmp_mpi+0x20>
    79d0:	f9400420 	ldr	x0, [x1, #8]
    79d4:	b5000140 	cbnz	x0, 79fc <mbedtls_mpi_cmp_mpi+0x38>
    79d8:	b40005a2 	cbz	x2, 7a8c <mbedtls_mpi_cmp_mpi+0xc8>
    79dc:	b9400060 	ldr	w0, [x3]
    79e0:	d65f03c0 	ret
    79e4:	f9400860 	ldr	x0, [x3, #16]
    79e8:	8b020800 	add	x0, x0, x2, lsl #2
    79ec:	b85fc000 	ldur	w0, [x0, #-4]
    79f0:	35ffff00 	cbnz	w0, 79d0 <mbedtls_mpi_cmp_mpi+0xc>
    79f4:	d1000442 	sub	x2, x2, #0x1
    79f8:	17fffff5 	b	79cc <mbedtls_mpi_cmp_mpi+0x8>
    79fc:	f9400824 	ldr	x4, [x1, #16]
    7a00:	8b000885 	add	x5, x4, x0, lsl #2
    7a04:	b85fc0a5 	ldur	w5, [x5, #-4]
    7a08:	35000065 	cbnz	w5, 7a14 <mbedtls_mpi_cmp_mpi+0x50>
    7a0c:	d1000400 	sub	x0, x0, #0x1
    7a10:	17fffff1 	b	79d4 <mbedtls_mpi_cmp_mpi+0x10>
    7a14:	eb00005f 	cmp	x2, x0
    7a18:	54fffe28 	b.hi	79dc <mbedtls_mpi_cmp_mpi+0x18>  // b.pmore
    7a1c:	b9400021 	ldr	w1, [x1]
    7a20:	54000062 	b.cs	7a2c <mbedtls_mpi_cmp_mpi+0x68>  // b.hs, b.nlast
    7a24:	4b0103e0 	neg	w0, w1
    7a28:	17ffffee 	b	79e0 <mbedtls_mpi_cmp_mpi+0x1c>
    7a2c:	b9400060 	ldr	w0, [x3]
    7a30:	7100001f 	cmp	w0, #0x0
    7a34:	5400008d 	b.le	7a44 <mbedtls_mpi_cmp_mpi+0x80>
    7a38:	36f80241 	tbz	w1, #31, 7a80 <mbedtls_mpi_cmp_mpi+0xbc>
    7a3c:	52800020 	mov	w0, #0x1                   	// #1
    7a40:	17ffffe8 	b	79e0 <mbedtls_mpi_cmp_mpi+0x1c>
    7a44:	7100003f 	cmp	w1, #0x0
    7a48:	540001cd 	b.le	7a80 <mbedtls_mpi_cmp_mpi+0xbc>
    7a4c:	340001a0 	cbz	w0, 7a80 <mbedtls_mpi_cmp_mpi+0xbc>
    7a50:	12800000 	mov	w0, #0xffffffff            	// #-1
    7a54:	17ffffe3 	b	79e0 <mbedtls_mpi_cmp_mpi+0x1c>
    7a58:	f9400865 	ldr	x5, [x3, #16]
    7a5c:	d37ef441 	lsl	x1, x2, #2
    7a60:	b86168a5 	ldr	w5, [x5, x1]
    7a64:	b8616881 	ldr	w1, [x4, x1]
    7a68:	6b0100bf 	cmp	w5, w1
    7a6c:	54fffba8 	b.hi	79e0 <mbedtls_mpi_cmp_mpi+0x1c>  // b.pmore
    7a70:	d1000442 	sub	x2, x2, #0x1
    7a74:	54000082 	b.cs	7a84 <mbedtls_mpi_cmp_mpi+0xc0>  // b.hs, b.nlast
    7a78:	4b0003e0 	neg	w0, w0
    7a7c:	17ffffd9 	b	79e0 <mbedtls_mpi_cmp_mpi+0x1c>
    7a80:	d1000442 	sub	x2, x2, #0x1
    7a84:	b100045f 	cmn	x2, #0x1
    7a88:	54fffe81 	b.ne	7a58 <mbedtls_mpi_cmp_mpi+0x94>  // b.any
    7a8c:	52800000 	mov	w0, #0x0                   	// #0
    7a90:	17ffffd4 	b	79e0 <mbedtls_mpi_cmp_mpi+0x1c>

0000000000007a94 <mbedtls_mpi_cmp_int>:
mbedtls_mpi_cmp_int():
    7a94:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    7a98:	7100003f 	cmp	w1, #0x0
    7a9c:	5a81a421 	cneg	w1, w1, lt  // lt = tstop
    7aa0:	910003fd 	mov	x29, sp
    7aa4:	f9000bf3 	str	x19, [sp, #16]
    7aa8:	d0000093 	adrp	x19, 19000 <_DYNAMIC>
    7aac:	f9409a62 	ldr	x2, [x19, #304]
    7ab0:	f9400043 	ldr	x3, [x2]
    7ab4:	f90027e3 	str	x3, [sp, #72]
    7ab8:	d2800003 	mov	x3, #0x0                   	// #0
    7abc:	b90043e1 	str	w1, [sp, #64]
    7ac0:	52800021 	mov	w1, #0x1                   	// #1
    7ac4:	5a81a421 	cneg	w1, w1, lt  // lt = tstop
    7ac8:	b90023e1 	str	w1, [sp, #32]
    7acc:	d2800021 	mov	x1, #0x1                   	// #1
    7ad0:	f90017e1 	str	x1, [sp, #40]
    7ad4:	910103e1 	add	x1, sp, #0x40
    7ad8:	f9001be1 	str	x1, [sp, #48]
    7adc:	910083e1 	add	x1, sp, #0x20
    7ae0:	97ffffb9 	bl	79c4 <mbedtls_mpi_cmp_mpi>
    7ae4:	f9409a73 	ldr	x19, [x19, #304]
    7ae8:	f94027e1 	ldr	x1, [sp, #72]
    7aec:	f9400262 	ldr	x2, [x19]
    7af0:	eb020021 	subs	x1, x1, x2
    7af4:	d2800002 	mov	x2, #0x0                   	// #0
    7af8:	54000040 	b.eq	7b00 <mbedtls_mpi_cmp_int+0x6c>  // b.none
    7afc:	97ffe2df 	bl	678 <__stack_chk_fail>
    7b00:	f9400bf3 	ldr	x19, [sp, #16]
    7b04:	a8c57bfd 	ldp	x29, x30, [sp], #80
    7b08:	d65f03c0 	ret

0000000000007b0c <mbedtls_mpi_add_abs>:
mbedtls_mpi_add_abs():
    7b0c:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    7b10:	910003fd 	mov	x29, sp
    7b14:	a90153f3 	stp	x19, x20, [sp, #16]
    7b18:	aa0003f4 	mov	x20, x0
    7b1c:	a9025bf5 	stp	x21, x22, [sp, #32]
    7b20:	aa0103f6 	mov	x22, x1
    7b24:	f9001bf7 	str	x23, [sp, #48]
    7b28:	eb02001f 	cmp	x0, x2
    7b2c:	540000a0 	b.eq	7b40 <mbedtls_mpi_add_abs+0x34>  // b.none
    7b30:	aa0203f3 	mov	x19, x2
    7b34:	eb01001f 	cmp	x0, x1
    7b38:	54000101 	b.ne	7b58 <mbedtls_mpi_add_abs+0x4c>  // b.any
    7b3c:	aa1303f6 	mov	x22, x19
    7b40:	52800020 	mov	w0, #0x1                   	// #1
    7b44:	f94006d3 	ldr	x19, [x22, #8]
    7b48:	b9000280 	str	w0, [x20]
    7b4c:	b5000153 	cbnz	x19, 7b74 <mbedtls_mpi_add_abs+0x68>
    7b50:	52800000 	mov	w0, #0x0                   	// #0
    7b54:	14000003 	b	7b60 <mbedtls_mpi_add_abs+0x54>
    7b58:	97fffe32 	bl	7420 <mbedtls_mpi_copy>
    7b5c:	34ffff00 	cbz	w0, 7b3c <mbedtls_mpi_add_abs+0x30>
    7b60:	a94153f3 	ldp	x19, x20, [sp, #16]
    7b64:	a9425bf5 	ldp	x21, x22, [sp, #32]
    7b68:	f9401bf7 	ldr	x23, [sp, #48]
    7b6c:	a8c47bfd 	ldp	x29, x30, [sp], #64
    7b70:	d65f03c0 	ret
    7b74:	f9400ac0 	ldr	x0, [x22, #16]
    7b78:	d37ef677 	lsl	x23, x19, #2
    7b7c:	8b130800 	add	x0, x0, x19, lsl #2
    7b80:	b85fc000 	ldur	w0, [x0, #-4]
    7b84:	35000060 	cbnz	w0, 7b90 <mbedtls_mpi_add_abs+0x84>
    7b88:	d1000673 	sub	x19, x19, #0x1
    7b8c:	17fffff0 	b	7b4c <mbedtls_mpi_add_abs+0x40>
    7b90:	aa1303e1 	mov	x1, x19
    7b94:	aa1403e0 	mov	x0, x20
    7b98:	97fffd87 	bl	71b4 <mbedtls_mpi_grow>
    7b9c:	35fffe20 	cbnz	w0, 7b60 <mbedtls_mpi_add_abs+0x54>
    7ba0:	f9400ac2 	ldr	x2, [x22, #16]
    7ba4:	aa1303e3 	mov	x3, x19
    7ba8:	f9400a95 	ldr	x21, [x20, #16]
    7bac:	aa1503e1 	mov	x1, x21
    7bb0:	aa1503e0 	mov	x0, x21
    7bb4:	94000be9 	bl	ab58 <mbedtls_mpi_core_add>
    7bb8:	2a0003f6 	mov	w22, w0
    7bbc:	8b1702a2 	add	x2, x21, x23
    7bc0:	34fffc96 	cbz	w22, 7b50 <mbedtls_mpi_add_abs+0x44>
    7bc4:	f9400680 	ldr	x0, [x20, #8]
    7bc8:	91000675 	add	x21, x19, #0x1
    7bcc:	eb13001f 	cmp	x0, x19
    7bd0:	540000e8 	b.hi	7bec <mbedtls_mpi_add_abs+0xe0>  // b.pmore
    7bd4:	aa1503e1 	mov	x1, x21
    7bd8:	aa1403e0 	mov	x0, x20
    7bdc:	97fffd76 	bl	71b4 <mbedtls_mpi_grow>
    7be0:	35fffc00 	cbnz	w0, 7b60 <mbedtls_mpi_add_abs+0x54>
    7be4:	f9400a82 	ldr	x2, [x20, #16]
    7be8:	8b130842 	add	x2, x2, x19, lsl #2
    7bec:	b9400040 	ldr	w0, [x2]
    7bf0:	aa1503f3 	mov	x19, x21
    7bf4:	2b160000 	adds	w0, w0, w22
    7bf8:	b8004440 	str	w0, [x2], #4
    7bfc:	1a9f37f6 	cset	w22, cs  // cs = hs, nlast
    7c00:	17fffff0 	b	7bc0 <mbedtls_mpi_add_abs+0xb4>

0000000000007c04 <mbedtls_mpi_sub_abs>:
mbedtls_mpi_sub_abs():
    7c04:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    7c08:	910003fd 	mov	x29, sp
    7c0c:	a90153f3 	stp	x19, x20, [sp, #16]
    7c10:	aa0003f4 	mov	x20, x0
    7c14:	a9025bf5 	stp	x21, x22, [sp, #32]
    7c18:	aa0103f5 	mov	x21, x1
    7c1c:	f9400453 	ldr	x19, [x2, #8]
    7c20:	f9001bf7 	str	x23, [sp, #48]
    7c24:	aa0203f7 	mov	x23, x2
    7c28:	b5000173 	cbnz	x19, 7c54 <mbedtls_mpi_sub_abs+0x50>
    7c2c:	f94006a1 	ldr	x1, [x21, #8]
    7c30:	eb13003f 	cmp	x1, x19
    7c34:	540001c2 	b.cs	7c6c <mbedtls_mpi_sub_abs+0x68>  // b.hs, b.nlast
    7c38:	12800136 	mov	w22, #0xfffffff6            	// #-10
    7c3c:	2a1603e0 	mov	w0, w22
    7c40:	a94153f3 	ldp	x19, x20, [sp, #16]
    7c44:	a9425bf5 	ldp	x21, x22, [sp, #32]
    7c48:	f9401bf7 	ldr	x23, [sp, #48]
    7c4c:	a8c47bfd 	ldp	x29, x30, [sp], #64
    7c50:	d65f03c0 	ret
    7c54:	f9400ae0 	ldr	x0, [x23, #16]
    7c58:	8b130800 	add	x0, x0, x19, lsl #2
    7c5c:	b85fc000 	ldur	w0, [x0, #-4]
    7c60:	35fffe60 	cbnz	w0, 7c2c <mbedtls_mpi_sub_abs+0x28>
    7c64:	d1000673 	sub	x19, x19, #0x1
    7c68:	17fffff0 	b	7c28 <mbedtls_mpi_sub_abs+0x24>
    7c6c:	aa1403e0 	mov	x0, x20
    7c70:	97fffd51 	bl	71b4 <mbedtls_mpi_grow>
    7c74:	2a0003f6 	mov	w22, w0
    7c78:	35fffe20 	cbnz	w0, 7c3c <mbedtls_mpi_sub_abs+0x38>
    7c7c:	f94006a2 	ldr	x2, [x21, #8]
    7c80:	eb02027f 	cmp	x19, x2
    7c84:	54000142 	b.cs	7cac <mbedtls_mpi_sub_abs+0xa8>  // b.hs, b.nlast
    7c88:	eb1402bf 	cmp	x21, x20
    7c8c:	54000100 	b.eq	7cac <mbedtls_mpi_sub_abs+0xa8>  // b.none
    7c90:	f9400a80 	ldr	x0, [x20, #16]
    7c94:	cb130042 	sub	x2, x2, x19
    7c98:	f9400aa1 	ldr	x1, [x21, #16]
    7c9c:	d37ef442 	lsl	x2, x2, #2
    7ca0:	8b130800 	add	x0, x0, x19, lsl #2
    7ca4:	8b130821 	add	x1, x1, x19, lsl #2
    7ca8:	97ffe0d6 	bl	0 <memcpy>
    7cac:	f9400682 	ldr	x2, [x20, #8]
    7cb0:	f94006a0 	ldr	x0, [x21, #8]
    7cb4:	eb00005f 	cmp	x2, x0
    7cb8:	540000e9 	b.ls	7cd4 <mbedtls_mpi_sub_abs+0xd0>  // b.plast
    7cbc:	f9400a83 	ldr	x3, [x20, #16]
    7cc0:	cb000042 	sub	x2, x2, x0
    7cc4:	52800001 	mov	w1, #0x0                   	// #0
    7cc8:	d37ef442 	lsl	x2, x2, #2
    7ccc:	8b000860 	add	x0, x3, x0, lsl #2
    7cd0:	94001562 	bl	d258 <memset>
    7cd4:	f9400ae2 	ldr	x2, [x23, #16]
    7cd8:	aa1303e3 	mov	x3, x19
    7cdc:	f9400a80 	ldr	x0, [x20, #16]
    7ce0:	f9400aa1 	ldr	x1, [x21, #16]
    7ce4:	94000bc8 	bl	ac04 <mbedtls_mpi_core_sub>
    7ce8:	2a0003e2 	mov	w2, w0
    7cec:	35000080 	cbnz	w0, 7cfc <mbedtls_mpi_sub_abs+0xf8>
    7cf0:	52800020 	mov	w0, #0x1                   	// #1
    7cf4:	b9000280 	str	w0, [x20]
    7cf8:	17ffffd1 	b	7c3c <mbedtls_mpi_sub_abs+0x38>
    7cfc:	a9408683 	ldp	x3, x1, [x20, #8]
    7d00:	8b130821 	add	x1, x1, x19, lsl #2
    7d04:	cb130063 	sub	x3, x3, x19
    7d08:	aa0103e0 	mov	x0, x1
    7d0c:	94000db3 	bl	b3d8 <mbedtls_mpi_core_sub_int>
    7d10:	34ffff00 	cbz	w0, 7cf0 <mbedtls_mpi_sub_abs+0xec>
    7d14:	17ffffc9 	b	7c38 <mbedtls_mpi_sub_abs+0x34>

0000000000007d18 <add_sub_mpi>:
add_sub_mpi():
    7d18:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    7d1c:	910003fd 	mov	x29, sp
    7d20:	b9400044 	ldr	w4, [x2]
    7d24:	a90153f3 	stp	x19, x20, [sp, #16]
    7d28:	aa0003f4 	mov	x20, x0
    7d2c:	b9400033 	ldr	w19, [x1]
    7d30:	a9025bf5 	stp	x21, x22, [sp, #32]
    7d34:	f9001bf7 	str	x23, [sp, #48]
    7d38:	1b047e64 	mul	w4, w19, w4
    7d3c:	1b037c84 	mul	w4, w4, w3
    7d40:	36f80304 	tbz	w4, #31, 7da0 <add_sub_mpi+0x88>
    7d44:	aa0103f6 	mov	x22, x1
    7d48:	aa0203f5 	mov	x21, x2
    7d4c:	aa0203e1 	mov	x1, x2
    7d50:	aa1603e0 	mov	x0, x22
    7d54:	97fffef5 	bl	7928 <mbedtls_mpi_cmp_abs>
    7d58:	2a0003f7 	mov	w23, w0
    7d5c:	37f80140 	tbnz	w0, #31, 7d84 <add_sub_mpi+0x6c>
    7d60:	aa1503e2 	mov	x2, x21
    7d64:	aa1603e1 	mov	x1, x22
    7d68:	aa1403e0 	mov	x0, x20
    7d6c:	97ffffa6 	bl	7c04 <mbedtls_mpi_sub_abs>
    7d70:	350001c0 	cbnz	w0, 7da8 <add_sub_mpi+0x90>
    7d74:	710002ff 	cmp	w23, #0x0
    7d78:	1a9f1673 	csinc	w19, w19, wzr, ne  // ne = any
    7d7c:	b9000293 	str	w19, [x20]
    7d80:	1400000a 	b	7da8 <add_sub_mpi+0x90>
    7d84:	aa1603e2 	mov	x2, x22
    7d88:	aa1503e1 	mov	x1, x21
    7d8c:	aa1403e0 	mov	x0, x20
    7d90:	97ffff9d 	bl	7c04 <mbedtls_mpi_sub_abs>
    7d94:	350000a0 	cbnz	w0, 7da8 <add_sub_mpi+0x90>
    7d98:	4b1303f3 	neg	w19, w19
    7d9c:	17fffff8 	b	7d7c <add_sub_mpi+0x64>
    7da0:	97ffff5b 	bl	7b0c <mbedtls_mpi_add_abs>
    7da4:	34fffec0 	cbz	w0, 7d7c <add_sub_mpi+0x64>
    7da8:	a94153f3 	ldp	x19, x20, [sp, #16]
    7dac:	a9425bf5 	ldp	x21, x22, [sp, #32]
    7db0:	f9401bf7 	ldr	x23, [sp, #48]
    7db4:	a8c47bfd 	ldp	x29, x30, [sp], #64
    7db8:	d65f03c0 	ret

0000000000007dbc <mbedtls_mpi_add_mpi>:
mbedtls_mpi_add_mpi():
    7dbc:	52800023 	mov	w3, #0x1                   	// #1
    7dc0:	17ffffd6 	b	7d18 <add_sub_mpi>

0000000000007dc4 <mbedtls_mpi_sub_mpi>:
mbedtls_mpi_sub_mpi():
    7dc4:	12800003 	mov	w3, #0xffffffff            	// #-1
    7dc8:	17ffffd4 	b	7d18 <add_sub_mpi>

0000000000007dcc <mbedtls_mpi_add_int>:
mbedtls_mpi_add_int():
    7dcc:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    7dd0:	7100005f 	cmp	w2, #0x0
    7dd4:	5a82a442 	cneg	w2, w2, lt  // lt = tstop
    7dd8:	910003fd 	mov	x29, sp
    7ddc:	f9000bf3 	str	x19, [sp, #16]
    7de0:	d0000093 	adrp	x19, 19000 <_DYNAMIC>
    7de4:	f9409a63 	ldr	x3, [x19, #304]
    7de8:	f9400064 	ldr	x4, [x3]
    7dec:	f90027e4 	str	x4, [sp, #72]
    7df0:	d2800004 	mov	x4, #0x0                   	// #0
    7df4:	b90043e2 	str	w2, [sp, #64]
    7df8:	52800022 	mov	w2, #0x1                   	// #1
    7dfc:	5a82a442 	cneg	w2, w2, lt  // lt = tstop
    7e00:	b90023e2 	str	w2, [sp, #32]
    7e04:	d2800022 	mov	x2, #0x1                   	// #1
    7e08:	f90017e2 	str	x2, [sp, #40]
    7e0c:	910103e2 	add	x2, sp, #0x40
    7e10:	f9001be2 	str	x2, [sp, #48]
    7e14:	910083e2 	add	x2, sp, #0x20
    7e18:	97ffffe9 	bl	7dbc <mbedtls_mpi_add_mpi>
    7e1c:	f9409a73 	ldr	x19, [x19, #304]
    7e20:	f94027e1 	ldr	x1, [sp, #72]
    7e24:	f9400262 	ldr	x2, [x19]
    7e28:	eb020021 	subs	x1, x1, x2
    7e2c:	d2800002 	mov	x2, #0x0                   	// #0
    7e30:	54000040 	b.eq	7e38 <mbedtls_mpi_add_int+0x6c>  // b.none
    7e34:	97ffe211 	bl	678 <__stack_chk_fail>
    7e38:	f9400bf3 	ldr	x19, [sp, #16]
    7e3c:	a8c57bfd 	ldp	x29, x30, [sp], #80
    7e40:	d65f03c0 	ret

0000000000007e44 <mbedtls_mpi_sub_int>:
mbedtls_mpi_sub_int():
    7e44:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    7e48:	7100005f 	cmp	w2, #0x0
    7e4c:	5a82a442 	cneg	w2, w2, lt  // lt = tstop
    7e50:	910003fd 	mov	x29, sp
    7e54:	f9000bf3 	str	x19, [sp, #16]
    7e58:	d0000093 	adrp	x19, 19000 <_DYNAMIC>
    7e5c:	f9409a63 	ldr	x3, [x19, #304]
    7e60:	f9400064 	ldr	x4, [x3]
    7e64:	f90027e4 	str	x4, [sp, #72]
    7e68:	d2800004 	mov	x4, #0x0                   	// #0
    7e6c:	b90043e2 	str	w2, [sp, #64]
    7e70:	52800022 	mov	w2, #0x1                   	// #1
    7e74:	5a82a442 	cneg	w2, w2, lt  // lt = tstop
    7e78:	b90023e2 	str	w2, [sp, #32]
    7e7c:	d2800022 	mov	x2, #0x1                   	// #1
    7e80:	f90017e2 	str	x2, [sp, #40]
    7e84:	910103e2 	add	x2, sp, #0x40
    7e88:	f9001be2 	str	x2, [sp, #48]
    7e8c:	910083e2 	add	x2, sp, #0x20
    7e90:	97ffffcd 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    7e94:	f9409a73 	ldr	x19, [x19, #304]
    7e98:	f94027e1 	ldr	x1, [sp, #72]
    7e9c:	f9400262 	ldr	x2, [x19]
    7ea0:	eb020021 	subs	x1, x1, x2
    7ea4:	d2800002 	mov	x2, #0x0                   	// #0
    7ea8:	54000040 	b.eq	7eb0 <mbedtls_mpi_sub_int+0x6c>  // b.none
    7eac:	97ffe1f3 	bl	678 <__stack_chk_fail>
    7eb0:	f9400bf3 	ldr	x19, [sp, #16]
    7eb4:	a8c57bfd 	ldp	x29, x30, [sp], #80
    7eb8:	d65f03c0 	ret

0000000000007ebc <mbedtls_mpi_mul_mpi>:
mbedtls_mpi_mul_mpi():
    7ebc:	a9b47bfd 	stp	x29, x30, [sp, #-192]!
    7ec0:	910003fd 	mov	x29, sp
    7ec4:	a90153f3 	stp	x19, x20, [sp, #16]
    7ec8:	aa0003f4 	mov	x20, x0
    7ecc:	d0000080 	adrp	x0, 19000 <_DYNAMIC>
    7ed0:	a9025bf5 	stp	x21, x22, [sp, #32]
    7ed4:	aa0103f6 	mov	x22, x1
    7ed8:	aa0203f5 	mov	x21, x2
    7edc:	f9409800 	ldr	x0, [x0, #304]
    7ee0:	a90363f7 	stp	x23, x24, [sp, #48]
    7ee4:	9101e3f7 	add	x23, sp, #0x78
    7ee8:	a9046bf9 	stp	x25, x26, [sp, #64]
    7eec:	910263f8 	add	x24, sp, #0x98
    7ef0:	a90573fb 	stp	x27, x28, [sp, #80]
    7ef4:	f9400001 	ldr	x1, [x0]
    7ef8:	f9005fe1 	str	x1, [sp, #184]
    7efc:	d2800001 	mov	x1, #0x0                   	// #0
    7f00:	aa1703e0 	mov	x0, x23
    7f04:	97fffc87 	bl	7120 <mbedtls_mpi_init_mempool>
    7f08:	aa1803e0 	mov	x0, x24
    7f0c:	97fffc85 	bl	7120 <mbedtls_mpi_init_mempool>
    7f10:	eb16029f 	cmp	x20, x22
    7f14:	540000e1 	b.ne	7f30 <mbedtls_mpi_mul_mpi+0x74>  // b.any
    7f18:	aa1403e1 	mov	x1, x20
    7f1c:	aa1703e0 	mov	x0, x23
    7f20:	97fffd40 	bl	7420 <mbedtls_mpi_copy>
    7f24:	2a0003f3 	mov	w19, w0
    7f28:	35000420 	cbnz	w0, 7fac <mbedtls_mpi_mul_mpi+0xf0>
    7f2c:	aa1703f6 	mov	x22, x23
    7f30:	eb15029f 	cmp	x20, x21
    7f34:	540000e1 	b.ne	7f50 <mbedtls_mpi_mul_mpi+0x94>  // b.any
    7f38:	aa1403e1 	mov	x1, x20
    7f3c:	aa1803e0 	mov	x0, x24
    7f40:	97fffd38 	bl	7420 <mbedtls_mpi_copy>
    7f44:	2a0003f3 	mov	w19, w0
    7f48:	35000320 	cbnz	w0, 7fac <mbedtls_mpi_mul_mpi+0xf0>
    7f4c:	aa1803f5 	mov	x21, x24
    7f50:	f94006d9 	ldr	x25, [x22, #8]
    7f54:	b5000459 	cbnz	x25, 7fdc <mbedtls_mpi_mul_mpi+0x120>
    7f58:	5280003a 	mov	w26, #0x1                   	// #1
    7f5c:	f94006bb 	ldr	x27, [x21, #8]
    7f60:	b50004fb 	cbnz	x27, 7ffc <mbedtls_mpi_mul_mpi+0x140>
    7f64:	5280003a 	mov	w26, #0x1                   	// #1
    7f68:	8b1b0321 	add	x1, x25, x27
    7f6c:	aa1403e0 	mov	x0, x20
    7f70:	97fffc91 	bl	71b4 <mbedtls_mpi_grow>
    7f74:	2a0003f3 	mov	w19, w0
    7f78:	350001a0 	cbnz	w0, 7fac <mbedtls_mpi_mul_mpi+0xf0>
    7f7c:	aa1403e0 	mov	x0, x20
    7f80:	52800001 	mov	w1, #0x0                   	// #0
    7f84:	97fffd7d 	bl	7578 <mbedtls_mpi_lset>
    7f88:	2a0003f3 	mov	w19, w0
    7f8c:	35000100 	cbnz	w0, 7fac <mbedtls_mpi_mul_mpi+0xf0>
    7f90:	91000721 	add	x1, x25, #0x1
    7f94:	d280001c 	mov	x28, #0x0                   	// #0
    7f98:	eb1b039f 	cmp	x28, x27
    7f9c:	540003c1 	b.ne	8014 <mbedtls_mpi_mul_mpi+0x158>  // b.any
    7fa0:	3400051a 	cbz	w26, 8040 <mbedtls_mpi_mul_mpi+0x184>
    7fa4:	52800020 	mov	w0, #0x1                   	// #1
    7fa8:	b9000280 	str	w0, [x20]
    7fac:	aa1803e0 	mov	x0, x24
    7fb0:	97fffc66 	bl	7148 <mbedtls_mpi_free>
    7fb4:	aa1703e0 	mov	x0, x23
    7fb8:	97fffc64 	bl	7148 <mbedtls_mpi_free>
    7fbc:	d0000080 	adrp	x0, 19000 <_DYNAMIC>
    7fc0:	f9409800 	ldr	x0, [x0, #304]
    7fc4:	f9405fe2 	ldr	x2, [sp, #184]
    7fc8:	f9400001 	ldr	x1, [x0]
    7fcc:	eb010042 	subs	x2, x2, x1
    7fd0:	d2800001 	mov	x1, #0x0                   	// #0
    7fd4:	54000420 	b.eq	8058 <mbedtls_mpi_mul_mpi+0x19c>  // b.none
    7fd8:	97ffe1a8 	bl	678 <__stack_chk_fail>
    7fdc:	f9400ac0 	ldr	x0, [x22, #16]
    7fe0:	8b190800 	add	x0, x0, x25, lsl #2
    7fe4:	b85fc000 	ldur	w0, [x0, #-4]
    7fe8:	35000060 	cbnz	w0, 7ff4 <mbedtls_mpi_mul_mpi+0x138>
    7fec:	d1000739 	sub	x25, x25, #0x1
    7ff0:	17ffffd9 	b	7f54 <mbedtls_mpi_mul_mpi+0x98>
    7ff4:	5280001a 	mov	w26, #0x0                   	// #0
    7ff8:	17ffffd9 	b	7f5c <mbedtls_mpi_mul_mpi+0xa0>
    7ffc:	f9400aa0 	ldr	x0, [x21, #16]
    8000:	8b1b0800 	add	x0, x0, x27, lsl #2
    8004:	b85fc000 	ldur	w0, [x0, #-4]
    8008:	35fffb00 	cbnz	w0, 7f68 <mbedtls_mpi_mul_mpi+0xac>
    800c:	d100077b 	sub	x27, x27, #0x1
    8010:	17ffffd4 	b	7f60 <mbedtls_mpi_mul_mpi+0xa4>
    8014:	f9400aa2 	ldr	x2, [x21, #16]
    8018:	aa1903e3 	mov	x3, x25
    801c:	f9400a80 	ldr	x0, [x20, #16]
    8020:	f90037e1 	str	x1, [sp, #104]
    8024:	b87c7844 	ldr	w4, [x2, x28, lsl #2]
    8028:	f9400ac2 	ldr	x2, [x22, #16]
    802c:	8b1c0800 	add	x0, x0, x28, lsl #2
    8030:	9100079c 	add	x28, x28, #0x1
    8034:	94000b05 	bl	ac48 <mbedtls_mpi_core_mla>
    8038:	f94037e1 	ldr	x1, [sp, #104]
    803c:	17ffffd7 	b	7f98 <mbedtls_mpi_mul_mpi+0xdc>
    8040:	b94002a1 	ldr	w1, [x21]
    8044:	52800013 	mov	w19, #0x0                   	// #0
    8048:	b94002c0 	ldr	w0, [x22]
    804c:	1b017c00 	mul	w0, w0, w1
    8050:	b9000280 	str	w0, [x20]
    8054:	17ffffd6 	b	7fac <mbedtls_mpi_mul_mpi+0xf0>
    8058:	2a1303e0 	mov	w0, w19
    805c:	a94153f3 	ldp	x19, x20, [sp, #16]
    8060:	a9425bf5 	ldp	x21, x22, [sp, #32]
    8064:	a94363f7 	ldp	x23, x24, [sp, #48]
    8068:	a9446bf9 	ldp	x25, x26, [sp, #64]
    806c:	a94573fb 	ldp	x27, x28, [sp, #80]
    8070:	a8cc7bfd 	ldp	x29, x30, [sp], #192
    8074:	d65f03c0 	ret

0000000000008078 <mbedtls_mpi_mul_int>:
mbedtls_mpi_mul_int():
    8078:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    807c:	910003fd 	mov	x29, sp
    8080:	a90153f3 	stp	x19, x20, [sp, #16]
    8084:	aa0003f4 	mov	x20, x0
    8088:	a9025bf5 	stp	x21, x22, [sp, #32]
    808c:	aa0103f5 	mov	x21, x1
    8090:	f9400436 	ldr	x22, [x1, #8]
    8094:	f9001bf7 	str	x23, [sp, #48]
    8098:	2a0203f7 	mov	w23, w2
    809c:	b40000d6 	cbz	x22, 80b4 <mbedtls_mpi_mul_int+0x3c>
    80a0:	f9400aa0 	ldr	x0, [x21, #16]
    80a4:	8b160800 	add	x0, x0, x22, lsl #2
    80a8:	b85fc000 	ldur	w0, [x0, #-4]
    80ac:	34000120 	cbz	w0, 80d0 <mbedtls_mpi_mul_int+0x58>
    80b0:	35000157 	cbnz	w23, 80d8 <mbedtls_mpi_mul_int+0x60>
    80b4:	aa1403e0 	mov	x0, x20
    80b8:	52800001 	mov	w1, #0x0                   	// #0
    80bc:	a94153f3 	ldp	x19, x20, [sp, #16]
    80c0:	a9425bf5 	ldp	x21, x22, [sp, #32]
    80c4:	f9401bf7 	ldr	x23, [sp, #48]
    80c8:	a8c47bfd 	ldp	x29, x30, [sp], #64
    80cc:	17fffd2b 	b	7578 <mbedtls_mpi_lset>
    80d0:	d10006d6 	sub	x22, x22, #0x1
    80d4:	17fffff2 	b	809c <mbedtls_mpi_mul_int+0x24>
    80d8:	910006c1 	add	x1, x22, #0x1
    80dc:	aa1403e0 	mov	x0, x20
    80e0:	97fffc35 	bl	71b4 <mbedtls_mpi_grow>
    80e4:	2a0003f3 	mov	w19, w0
    80e8:	35000160 	cbnz	w0, 8114 <mbedtls_mpi_mul_int+0x9c>
    80ec:	aa1503e1 	mov	x1, x21
    80f0:	aa1403e0 	mov	x0, x20
    80f4:	97fffccb 	bl	7420 <mbedtls_mpi_copy>
    80f8:	2a0003f3 	mov	w19, w0
    80fc:	350000c0 	cbnz	w0, 8114 <mbedtls_mpi_mul_int+0x9c>
    8100:	a9408281 	ldp	x1, x0, [x20, #8]
    8104:	510006e4 	sub	w4, w23, #0x1
    8108:	f9400aa2 	ldr	x2, [x21, #16]
    810c:	aa1603e3 	mov	x3, x22
    8110:	94000ace 	bl	ac48 <mbedtls_mpi_core_mla>
    8114:	2a1303e0 	mov	w0, w19
    8118:	a94153f3 	ldp	x19, x20, [sp, #16]
    811c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    8120:	f9401bf7 	ldr	x23, [sp, #48]
    8124:	a8c47bfd 	ldp	x29, x30, [sp], #64
    8128:	d65f03c0 	ret

000000000000812c <mbedtls_mpi_read_string>:
mbedtls_mpi_read_string():
    812c:	a9b77bfd 	stp	x29, x30, [sp, #-144]!
    8130:	910003fd 	mov	x29, sp
    8134:	a90153f3 	stp	x19, x20, [sp, #16]
    8138:	aa0003f4 	mov	x20, x0
    813c:	b0000080 	adrp	x0, 19000 <_DYNAMIC>
    8140:	a9025bf5 	stp	x21, x22, [sp, #32]
    8144:	f9409800 	ldr	x0, [x0, #304]
    8148:	a90363f7 	stp	x23, x24, [sp, #48]
    814c:	2a0103f7 	mov	w23, w1
    8150:	a9046bf9 	stp	x25, x26, [sp, #64]
    8154:	f9002bfb 	str	x27, [sp, #80]
    8158:	f9400001 	ldr	x1, [x0]
    815c:	f90047e1 	str	x1, [sp, #136]
    8160:	d2800001 	mov	x1, #0x0                   	// #0
    8164:	51000ae0 	sub	w0, w23, #0x2
    8168:	7100381f 	cmp	w0, #0xe
    816c:	54000149 	b.ls	8194 <mbedtls_mpi_read_string+0x68>  // b.plast
    8170:	12800073 	mov	w19, #0xfffffffc            	// #-4
    8174:	b0000080 	adrp	x0, 19000 <_DYNAMIC>
    8178:	f9409800 	ldr	x0, [x0, #304]
    817c:	f94047e2 	ldr	x2, [sp, #136]
    8180:	f9400001 	ldr	x1, [x0]
    8184:	eb010042 	subs	x2, x2, x1
    8188:	d2800001 	mov	x1, #0x0                   	// #0
    818c:	54000c60 	b.eq	8318 <mbedtls_mpi_read_string+0x1ec>  // b.none
    8190:	97ffe13a 	bl	678 <__stack_chk_fail>
    8194:	aa0203f6 	mov	x22, x2
    8198:	9101a3f8 	add	x24, sp, #0x68
    819c:	aa1803e0 	mov	x0, x24
    81a0:	97fffbe0 	bl	7120 <mbedtls_mpi_init_mempool>
    81a4:	394002c0 	ldrb	w0, [x22]
    81a8:	350000a0 	cbnz	w0, 81bc <mbedtls_mpi_read_string+0x90>
    81ac:	aa1403e0 	mov	x0, x20
    81b0:	52800013 	mov	w19, #0x0                   	// #0
    81b4:	97fffbe5 	bl	7148 <mbedtls_mpi_free>
    81b8:	17ffffef 	b	8174 <mbedtls_mpi_read_string+0x48>
    81bc:	7100b41f 	cmp	w0, #0x2d
    81c0:	540004a1 	b.ne	8254 <mbedtls_mpi_read_string+0x128>  // b.any
    81c4:	910006d6 	add	x22, x22, #0x1
    81c8:	1280001a 	mov	w26, #0xffffffff            	// #-1
    81cc:	aa1603e0 	mov	x0, x22
    81d0:	97ffe4c0 	bl	14d0 <strlen>
    81d4:	aa0003f5 	mov	x21, x0
    81d8:	710042ff 	cmp	w23, #0x10
    81dc:	54000641 	b.ne	82a4 <mbedtls_mpi_read_string+0x178>  // b.any
    81e0:	92f80000 	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    81e4:	eb0002bf 	cmp	x21, x0
    81e8:	54fffc48 	b.hi	8170 <mbedtls_mpi_read_string+0x44>  // b.pmore
    81ec:	d37e0aa0 	ubfiz	x0, x21, #2, #3
    81f0:	d343f6a1 	ubfx	x1, x21, #3, #59
    81f4:	f100001f 	cmp	x0, #0x0
    81f8:	aa1403e0 	mov	x0, x20
    81fc:	9a810421 	cinc	x1, x1, ne  // ne = any
    8200:	97fffbed 	bl	71b4 <mbedtls_mpi_grow>
    8204:	2a0003f3 	mov	w19, w0
    8208:	35000200 	cbnz	w0, 8248 <mbedtls_mpi_read_string+0x11c>
    820c:	aa1403e0 	mov	x0, x20
    8210:	52800001 	mov	w1, #0x0                   	// #0
    8214:	97fffcd9 	bl	7578 <mbedtls_mpi_lset>
    8218:	2a0003f3 	mov	w19, w0
    821c:	35000160 	cbnz	w0, 8248 <mbedtls_mpi_read_string+0x11c>
    8220:	910193e6 	add	x6, sp, #0x64
    8224:	d2800005 	mov	x5, #0x0                   	// #0
    8228:	b50001b5 	cbnz	x21, 825c <mbedtls_mpi_read_string+0x130>
    822c:	3100075f 	cmn	w26, #0x1
    8230:	540000a1 	b.ne	8244 <mbedtls_mpi_read_string+0x118>  // b.any
    8234:	aa1403e0 	mov	x0, x20
    8238:	97fffd2d 	bl	76ec <mbedtls_mpi_bitlen>
    823c:	b4000040 	cbz	x0, 8244 <mbedtls_mpi_read_string+0x118>
    8240:	b900029a 	str	w26, [x20]
    8244:	52800013 	mov	w19, #0x0                   	// #0
    8248:	aa1803e0 	mov	x0, x24
    824c:	97fffbbf 	bl	7148 <mbedtls_mpi_free>
    8250:	17ffffc9 	b	8174 <mbedtls_mpi_read_string+0x48>
    8254:	5280003a 	mov	w26, #0x1                   	// #1
    8258:	17ffffdd 	b	81cc <mbedtls_mpi_read_string+0xa0>
    825c:	d10006b5 	sub	x21, x21, #0x1
    8260:	aa0603e0 	mov	x0, x6
    8264:	52800201 	mov	w1, #0x10                  	// #16
    8268:	38756ac2 	ldrb	w2, [x22, x21]
    826c:	97fffb50 	bl	6fac <mpi_get_digit>
    8270:	2a0003f3 	mov	w19, w0
    8274:	35fffea0 	cbnz	w0, 8248 <mbedtls_mpi_read_string+0x11c>
    8278:	d343fca0 	lsr	x0, x5, #3
    827c:	b94067e2 	ldr	w2, [sp, #100]
    8280:	f9400a83 	ldr	x3, [x20, #16]
    8284:	d37ef400 	lsl	x0, x0, #2
    8288:	531e08a1 	ubfiz	w1, w5, #2, #3
    828c:	910004a5 	add	x5, x5, #0x1
    8290:	1ac12042 	lsl	w2, w2, w1
    8294:	b8606861 	ldr	w1, [x3, x0]
    8298:	2a020021 	orr	w1, w1, w2
    829c:	b8206861 	str	w1, [x3, x0]
    82a0:	17ffffe2 	b	8228 <mbedtls_mpi_read_string+0xfc>
    82a4:	aa1403e0 	mov	x0, x20
    82a8:	52800001 	mov	w1, #0x0                   	// #0
    82ac:	97fffcb3 	bl	7578 <mbedtls_mpi_lset>
    82b0:	2a0003f3 	mov	w19, w0
    82b4:	35fffca0 	cbnz	w0, 8248 <mbedtls_mpi_read_string+0x11c>
    82b8:	910193fb 	add	x27, sp, #0x64
    82bc:	d2800019 	mov	x25, #0x0                   	// #0
    82c0:	eb15033f 	cmp	x25, x21
    82c4:	54fffb40 	b.eq	822c <mbedtls_mpi_read_string+0x100>  // b.none
    82c8:	38796ac2 	ldrb	w2, [x22, x25]
    82cc:	2a1703e1 	mov	w1, w23
    82d0:	aa1b03e0 	mov	x0, x27
    82d4:	97fffb36 	bl	6fac <mpi_get_digit>
    82d8:	2a0003f3 	mov	w19, w0
    82dc:	35fffb60 	cbnz	w0, 8248 <mbedtls_mpi_read_string+0x11c>
    82e0:	2a1703e2 	mov	w2, w23
    82e4:	aa1403e1 	mov	x1, x20
    82e8:	aa1803e0 	mov	x0, x24
    82ec:	97ffff63 	bl	8078 <mbedtls_mpi_mul_int>
    82f0:	2a0003f3 	mov	w19, w0
    82f4:	35fffaa0 	cbnz	w0, 8248 <mbedtls_mpi_read_string+0x11c>
    82f8:	b94067e2 	ldr	w2, [sp, #100]
    82fc:	aa1803e1 	mov	x1, x24
    8300:	aa1403e0 	mov	x0, x20
    8304:	97fffeb2 	bl	7dcc <mbedtls_mpi_add_int>
    8308:	2a0003f3 	mov	w19, w0
    830c:	35fff9e0 	cbnz	w0, 8248 <mbedtls_mpi_read_string+0x11c>
    8310:	91000739 	add	x25, x25, #0x1
    8314:	17ffffeb 	b	82c0 <mbedtls_mpi_read_string+0x194>
    8318:	2a1303e0 	mov	w0, w19
    831c:	a94153f3 	ldp	x19, x20, [sp, #16]
    8320:	a9425bf5 	ldp	x21, x22, [sp, #32]
    8324:	a94363f7 	ldp	x23, x24, [sp, #48]
    8328:	a9446bf9 	ldp	x25, x26, [sp, #64]
    832c:	f9402bfb 	ldr	x27, [sp, #80]
    8330:	a8c97bfd 	ldp	x29, x30, [sp], #144
    8334:	d65f03c0 	ret

0000000000008338 <mbedtls_mpi_div_mpi>:
mbedtls_mpi_div_mpi():
    8338:	a9aa7bfd 	stp	x29, x30, [sp, #-352]!
    833c:	910003fd 	mov	x29, sp
    8340:	a9046bf9 	stp	x25, x26, [sp, #64]
    8344:	aa0003f9 	mov	x25, x0
    8348:	b0000080 	adrp	x0, 19000 <_DYNAMIC>
    834c:	a90153f3 	stp	x19, x20, [sp, #16]
    8350:	f9409800 	ldr	x0, [x0, #304]
    8354:	a9025bf5 	stp	x21, x22, [sp, #32]
    8358:	a90363f7 	stp	x23, x24, [sp, #48]
    835c:	aa0103f8 	mov	x24, x1
    8360:	aa0203f7 	mov	x23, x2
    8364:	a90573fb 	stp	x27, x28, [sp, #80]
    8368:	f9003be3 	str	x3, [sp, #112]
    836c:	f9400001 	ldr	x1, [x0]
    8370:	f900afe1 	str	x1, [sp, #344]
    8374:	d2800001 	mov	x1, #0x0                   	// #0
    8378:	aa0303e0 	mov	x0, x3
    837c:	97fffdc6 	bl	7a94 <mbedtls_mpi_cmp_int>
    8380:	34002580 	cbz	w0, 8830 <mbedtls_mpi_div_mpi+0x4f8>
    8384:	9102a3f3 	add	x19, sp, #0xa8
    8388:	910323f6 	add	x22, sp, #0xc8
    838c:	aa1303e0 	mov	x0, x19
    8390:	97fffb64 	bl	7120 <mbedtls_mpi_init_mempool>
    8394:	aa1603e0 	mov	x0, x22
    8398:	9103a3fc 	add	x28, sp, #0xe8
    839c:	97fffb61 	bl	7120 <mbedtls_mpi_init_mempool>
    83a0:	910423f5 	add	x21, sp, #0x108
    83a4:	aa1c03e0 	mov	x0, x28
    83a8:	97fffb5e 	bl	7120 <mbedtls_mpi_init_mempool>
    83ac:	aa1503e0 	mov	x0, x21
    83b0:	97fffb5c 	bl	7120 <mbedtls_mpi_init_mempool>
    83b4:	f9403be1 	ldr	x1, [sp, #112]
    83b8:	d2800060 	mov	x0, #0x3                   	// #3
    83bc:	f9009be0 	str	x0, [sp, #304]
    83c0:	910523e0 	add	x0, sp, #0x148
    83c4:	52800034 	mov	w20, #0x1                   	// #1
    83c8:	f90047e0 	str	x0, [sp, #136]
    83cc:	b9012bf4 	str	w20, [sp, #296]
    83d0:	f9009fe0 	str	x0, [sp, #312]
    83d4:	aa1703e0 	mov	x0, x23
    83d8:	97fffd54 	bl	7928 <mbedtls_mpi_cmp_abs>
    83dc:	36f80460 	tbz	w0, #31, 8468 <mbedtls_mpi_div_mpi+0x130>
    83e0:	b5000179 	cbnz	x25, 840c <mbedtls_mpi_div_mpi+0xd4>
    83e4:	b5000378 	cbnz	x24, 8450 <mbedtls_mpi_div_mpi+0x118>
    83e8:	5280001b 	mov	w27, #0x0                   	// #0
    83ec:	b0000080 	adrp	x0, 19000 <_DYNAMIC>
    83f0:	f9409800 	ldr	x0, [x0, #304]
    83f4:	f940afe2 	ldr	x2, [sp, #344]
    83f8:	f9400001 	ldr	x1, [x0]
    83fc:	eb010042 	subs	x2, x2, x1
    8400:	d2800001 	mov	x1, #0x0                   	// #0
    8404:	540021a0 	b.eq	8838 <mbedtls_mpi_div_mpi+0x500>  // b.none
    8408:	97ffe09c 	bl	678 <__stack_chk_fail>
    840c:	aa1903e0 	mov	x0, x25
    8410:	52800001 	mov	w1, #0x0                   	// #0
    8414:	97fffc59 	bl	7578 <mbedtls_mpi_lset>
    8418:	2a0003fb 	mov	w27, w0
    841c:	34fffe40 	cbz	w0, 83e4 <mbedtls_mpi_div_mpi+0xac>
    8420:	aa1303e0 	mov	x0, x19
    8424:	97fffb49 	bl	7148 <mbedtls_mpi_free>
    8428:	aa1603e0 	mov	x0, x22
    842c:	97fffb47 	bl	7148 <mbedtls_mpi_free>
    8430:	aa1c03e0 	mov	x0, x28
    8434:	97fffb45 	bl	7148 <mbedtls_mpi_free>
    8438:	aa1503e0 	mov	x0, x21
    843c:	97fffb43 	bl	7148 <mbedtls_mpi_free>
    8440:	f94047e0 	ldr	x0, [sp, #136]
    8444:	d2800181 	mov	x1, #0xc                   	// #12
    8448:	94000e78 	bl	be28 <mbedtls_platform_zeroize>
    844c:	17ffffe8 	b	83ec <mbedtls_mpi_div_mpi+0xb4>
    8450:	aa1703e1 	mov	x1, x23
    8454:	aa1803e0 	mov	x0, x24
    8458:	97fffbf2 	bl	7420 <mbedtls_mpi_copy>
    845c:	2a0003fb 	mov	w27, w0
    8460:	35fffe00 	cbnz	w0, 8420 <mbedtls_mpi_div_mpi+0xe8>
    8464:	17ffffe1 	b	83e8 <mbedtls_mpi_div_mpi+0xb0>
    8468:	aa1703e1 	mov	x1, x23
    846c:	aa1303e0 	mov	x0, x19
    8470:	97fffbec 	bl	7420 <mbedtls_mpi_copy>
    8474:	2a0003fb 	mov	w27, w0
    8478:	35fffd40 	cbnz	w0, 8420 <mbedtls_mpi_div_mpi+0xe8>
    847c:	f9403be1 	ldr	x1, [sp, #112]
    8480:	aa1603e0 	mov	x0, x22
    8484:	97fffbe7 	bl	7420 <mbedtls_mpi_copy>
    8488:	2a0003fb 	mov	w27, w0
    848c:	35fffca0 	cbnz	w0, 8420 <mbedtls_mpi_div_mpi+0xe8>
    8490:	f94006e1 	ldr	x1, [x23, #8]
    8494:	aa1c03e0 	mov	x0, x28
    8498:	b900abf4 	str	w20, [sp, #168]
    849c:	91000821 	add	x1, x1, #0x2
    84a0:	b900cbf4 	str	w20, [sp, #200]
    84a4:	97fffb44 	bl	71b4 <mbedtls_mpi_grow>
    84a8:	2a0003fb 	mov	w27, w0
    84ac:	35fffba0 	cbnz	w0, 8420 <mbedtls_mpi_div_mpi+0xe8>
    84b0:	aa1c03e0 	mov	x0, x28
    84b4:	52800001 	mov	w1, #0x0                   	// #0
    84b8:	97fffc30 	bl	7578 <mbedtls_mpi_lset>
    84bc:	2a0003fb 	mov	w27, w0
    84c0:	35fffb00 	cbnz	w0, 8420 <mbedtls_mpi_div_mpi+0xe8>
    84c4:	f94006e1 	ldr	x1, [x23, #8]
    84c8:	aa1503e0 	mov	x0, x21
    84cc:	91000821 	add	x1, x1, #0x2
    84d0:	97fffb39 	bl	71b4 <mbedtls_mpi_grow>
    84d4:	2a0003fb 	mov	w27, w0
    84d8:	35fffa40 	cbnz	w0, 8420 <mbedtls_mpi_div_mpi+0xe8>
    84dc:	aa1603e0 	mov	x0, x22
    84e0:	97fffc83 	bl	76ec <mbedtls_mpi_bitlen>
    84e4:	92401000 	and	x0, x0, #0x1f
    84e8:	f1007c1f 	cmp	x0, #0x1f
    84ec:	54000a20 	b.eq	8630 <mbedtls_mpi_div_mpi+0x2f8>  // b.none
    84f0:	d28003fa 	mov	x26, #0x1f                  	// #31
    84f4:	cb00035a 	sub	x26, x26, x0
    84f8:	aa1a03e1 	mov	x1, x26
    84fc:	aa1303e0 	mov	x0, x19
    8500:	97fffcba 	bl	77e8 <mbedtls_mpi_shift_l>
    8504:	2a0003fb 	mov	w27, w0
    8508:	35fff8c0 	cbnz	w0, 8420 <mbedtls_mpi_div_mpi+0xe8>
    850c:	aa1a03e1 	mov	x1, x26
    8510:	aa1603e0 	mov	x0, x22
    8514:	97fffcb5 	bl	77e8 <mbedtls_mpi_shift_l>
    8518:	2a0003fb 	mov	w27, w0
    851c:	35fff820 	cbnz	w0, 8420 <mbedtls_mpi_div_mpi+0xe8>
    8520:	f9405be0 	ldr	x0, [sp, #176]
    8524:	f90037e0 	str	x0, [sp, #104]
    8528:	f9406be0 	ldr	x0, [sp, #208]
    852c:	f9003fe0 	str	x0, [sp, #120]
    8530:	f94037e0 	ldr	x0, [sp, #104]
    8534:	f9403fe1 	ldr	x1, [sp, #120]
    8538:	cb010014 	sub	x20, x0, x1
    853c:	d37bea80 	lsl	x0, x20, #5
    8540:	f90043e0 	str	x0, [sp, #128]
    8544:	aa0003e1 	mov	x1, x0
    8548:	aa1603e0 	mov	x0, x22
    854c:	97fffca7 	bl	77e8 <mbedtls_mpi_shift_l>
    8550:	2a0003fb 	mov	w27, w0
    8554:	35fff660 	cbnz	w0, 8420 <mbedtls_mpi_div_mpi+0xe8>
    8558:	d37ef694 	lsl	x20, x20, #2
    855c:	aa1603e1 	mov	x1, x22
    8560:	aa1303e0 	mov	x0, x19
    8564:	97fffd18 	bl	79c4 <mbedtls_mpi_cmp_mpi>
    8568:	36f80680 	tbz	w0, #31, 8638 <mbedtls_mpi_div_mpi+0x300>
    856c:	f94043e1 	ldr	x1, [sp, #128]
    8570:	aa1603e0 	mov	x0, x22
    8574:	97fffce1 	bl	78f8 <mbedtls_mpi_shift_r>
    8578:	2a0003fb 	mov	w27, w0
    857c:	35fff520 	cbnz	w0, 8420 <mbedtls_mpi_div_mpi+0xe8>
    8580:	f94037e0 	ldr	x0, [sp, #104]
    8584:	d1001294 	sub	x20, x20, #0x4
    8588:	d1000400 	sub	x0, x0, #0x1
    858c:	f90037e0 	str	x0, [sp, #104]
    8590:	f9403fe0 	ldr	x0, [sp, #120]
    8594:	d1000400 	sub	x0, x0, #0x1
    8598:	f90043e0 	str	x0, [sp, #128]
    859c:	d37ef400 	lsl	x0, x0, #2
    85a0:	f9003fe0 	str	x0, [sp, #120]
    85a4:	9104a3e0 	add	x0, sp, #0x128
    85a8:	f9004be0 	str	x0, [sp, #144]
    85ac:	f94037e0 	ldr	x0, [sp, #104]
    85b0:	f94043e1 	ldr	x1, [sp, #128]
    85b4:	eb01001f 	cmp	x0, x1
    85b8:	54000568 	b.hi	8664 <mbedtls_mpi_div_mpi+0x32c>  // b.pmore
    85bc:	b4000159 	cbz	x25, 85e4 <mbedtls_mpi_div_mpi+0x2ac>
    85c0:	aa1c03e1 	mov	x1, x28
    85c4:	aa1903e0 	mov	x0, x25
    85c8:	97fffb96 	bl	7420 <mbedtls_mpi_copy>
    85cc:	350012e0 	cbnz	w0, 8828 <mbedtls_mpi_div_mpi+0x4f0>
    85d0:	f9403be1 	ldr	x1, [sp, #112]
    85d4:	b94002e0 	ldr	w0, [x23]
    85d8:	b9400021 	ldr	w1, [x1]
    85dc:	1b017c00 	mul	w0, w0, w1
    85e0:	b9000320 	str	w0, [x25]
    85e4:	b4fff1f8 	cbz	x24, 8420 <mbedtls_mpi_div_mpi+0xe8>
    85e8:	aa1a03e1 	mov	x1, x26
    85ec:	aa1303e0 	mov	x0, x19
    85f0:	97fffcc2 	bl	78f8 <mbedtls_mpi_shift_r>
    85f4:	350011a0 	cbnz	w0, 8828 <mbedtls_mpi_div_mpi+0x4f0>
    85f8:	b94002e0 	ldr	w0, [x23]
    85fc:	aa1303e1 	mov	x1, x19
    8600:	b900abe0 	str	w0, [sp, #168]
    8604:	aa1803e0 	mov	x0, x24
    8608:	97fffb86 	bl	7420 <mbedtls_mpi_copy>
    860c:	350010e0 	cbnz	w0, 8828 <mbedtls_mpi_div_mpi+0x4f0>
    8610:	aa1803e0 	mov	x0, x24
    8614:	52800001 	mov	w1, #0x0                   	// #0
    8618:	97fffd1f 	bl	7a94 <mbedtls_mpi_cmp_int>
    861c:	35fff020 	cbnz	w0, 8420 <mbedtls_mpi_div_mpi+0xe8>
    8620:	52800020 	mov	w0, #0x1                   	// #1
    8624:	5280001b 	mov	w27, #0x0                   	// #0
    8628:	b9000300 	str	w0, [x24]
    862c:	17ffff7d 	b	8420 <mbedtls_mpi_div_mpi+0xe8>
    8630:	d280001a 	mov	x26, #0x0                   	// #0
    8634:	17ffffbb 	b	8520 <mbedtls_mpi_div_mpi+0x1e8>
    8638:	f9407fe1 	ldr	x1, [sp, #248]
    863c:	aa1603e2 	mov	x2, x22
    8640:	b8746820 	ldr	w0, [x1, x20]
    8644:	11000400 	add	w0, w0, #0x1
    8648:	b8346820 	str	w0, [x1, x20]
    864c:	aa1303e1 	mov	x1, x19
    8650:	aa1303e0 	mov	x0, x19
    8654:	97fffddc 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    8658:	2a0003fb 	mov	w27, w0
    865c:	34fff800 	cbz	w0, 855c <mbedtls_mpi_div_mpi+0x224>
    8660:	17ffff70 	b	8420 <mbedtls_mpi_div_mpi+0xe8>
    8664:	f94037e0 	ldr	x0, [sp, #104]
    8668:	f9403fe3 	ldr	x3, [sp, #120]
    866c:	f9406fe1 	ldr	x1, [sp, #216]
    8670:	d37ef405 	lsl	x5, x0, #2
    8674:	f9405fe2 	ldr	x2, [sp, #184]
    8678:	d10010a6 	sub	x6, x5, #0x4
    867c:	b8636824 	ldr	w4, [x1, x3]
    8680:	f9407fe1 	ldr	x1, [sp, #248]
    8684:	8b000847 	add	x7, x2, x0, lsl #2
    8688:	b8656840 	ldr	w0, [x2, x5]
    868c:	8b140021 	add	x1, x1, x20
    8690:	6b04001f 	cmp	w0, w4
    8694:	54000be2 	b.cs	8810 <mbedtls_mpi_div_mpi+0x4d8>  // b.hs, b.nlast
    8698:	b8666848 	ldr	w8, [x2, x6]
    869c:	2a0403e4 	mov	w4, w4
    86a0:	b2407fe3 	mov	x3, #0xffffffff            	// #4294967295
    86a4:	aa008100 	orr	x0, x8, x0, lsl #32
    86a8:	9ac40800 	udiv	x0, x0, x4
    86ac:	eb03001f 	cmp	x0, x3
    86b0:	9a839000 	csel	x0, x0, x3, ls  // ls = plast
    86b4:	b9000020 	str	w0, [x1]
    86b8:	f94037e0 	ldr	x0, [sp, #104]
    86bc:	f100041f 	cmp	x0, #0x1
    86c0:	54000ac0 	b.eq	8818 <mbedtls_mpi_div_mpi+0x4e0>  // b.none
    86c4:	b85f80e4 	ldur	w4, [x7, #-8]
    86c8:	f9409fe0 	ldr	x0, [sp, #312]
    86cc:	b9000004 	str	w4, [x0]
    86d0:	b8666844 	ldr	w4, [x2, x6]
    86d4:	b9000404 	str	w4, [x0, #4]
    86d8:	b8656842 	ldr	w2, [x2, x5]
    86dc:	b9000802 	str	w2, [x0, #8]
    86e0:	b9400020 	ldr	w0, [x1]
    86e4:	11000400 	add	w0, w0, #0x1
    86e8:	b9000020 	str	w0, [x1]
    86ec:	f9407fe1 	ldr	x1, [sp, #248]
    86f0:	b8746820 	ldr	w0, [x1, x20]
    86f4:	51000400 	sub	w0, w0, #0x1
    86f8:	b8346820 	str	w0, [x1, x20]
    86fc:	aa1503e0 	mov	x0, x21
    8700:	52800001 	mov	w1, #0x0                   	// #0
    8704:	97fffb9d 	bl	7578 <mbedtls_mpi_lset>
    8708:	35000900 	cbnz	w0, 8828 <mbedtls_mpi_div_mpi+0x4f0>
    870c:	f94043e0 	ldr	x0, [sp, #128]
    8710:	f9406fe1 	ldr	x1, [sp, #216]
    8714:	b4000860 	cbz	x0, 8820 <mbedtls_mpi_div_mpi+0x4e8>
    8718:	f9403fe0 	ldr	x0, [sp, #120]
    871c:	8b000020 	add	x0, x1, x0
    8720:	b85fc002 	ldur	w2, [x0, #-4]
    8724:	f9408fe0 	ldr	x0, [sp, #280]
    8728:	b9000002 	str	w2, [x0]
    872c:	f9403fe2 	ldr	x2, [sp, #120]
    8730:	b8626821 	ldr	w1, [x1, x2]
    8734:	b9000401 	str	w1, [x0, #4]
    8738:	aa1503e1 	mov	x1, x21
    873c:	f9407fe0 	ldr	x0, [sp, #248]
    8740:	b8746802 	ldr	w2, [x0, x20]
    8744:	aa1503e0 	mov	x0, x21
    8748:	97fffe4c 	bl	8078 <mbedtls_mpi_mul_int>
    874c:	350006e0 	cbnz	w0, 8828 <mbedtls_mpi_div_mpi+0x4f0>
    8750:	f9404be1 	ldr	x1, [sp, #144]
    8754:	aa1503e0 	mov	x0, x21
    8758:	97fffc9b 	bl	79c4 <mbedtls_mpi_cmp_mpi>
    875c:	7100001f 	cmp	w0, #0x0
    8760:	54fffc6c 	b.gt	86ec <mbedtls_mpi_div_mpi+0x3b4>
    8764:	f9407fe0 	ldr	x0, [sp, #248]
    8768:	aa1603e1 	mov	x1, x22
    876c:	b8746802 	ldr	w2, [x0, x20]
    8770:	aa1503e0 	mov	x0, x21
    8774:	97fffe41 	bl	8078 <mbedtls_mpi_mul_int>
    8778:	35000580 	cbnz	w0, 8828 <mbedtls_mpi_div_mpi+0x4f0>
    877c:	d37df280 	lsl	x0, x20, #3
    8780:	f9004fe0 	str	x0, [sp, #152]
    8784:	aa0003e1 	mov	x1, x0
    8788:	aa1503e0 	mov	x0, x21
    878c:	97fffc17 	bl	77e8 <mbedtls_mpi_shift_l>
    8790:	350004c0 	cbnz	w0, 8828 <mbedtls_mpi_div_mpi+0x4f0>
    8794:	aa1503e2 	mov	x2, x21
    8798:	aa1303e1 	mov	x1, x19
    879c:	aa1303e0 	mov	x0, x19
    87a0:	97fffd89 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    87a4:	35000420 	cbnz	w0, 8828 <mbedtls_mpi_div_mpi+0x4f0>
    87a8:	aa1303e0 	mov	x0, x19
    87ac:	52800001 	mov	w1, #0x0                   	// #0
    87b0:	97fffcb9 	bl	7a94 <mbedtls_mpi_cmp_int>
    87b4:	36f80240 	tbz	w0, #31, 87fc <mbedtls_mpi_div_mpi+0x4c4>
    87b8:	aa1603e1 	mov	x1, x22
    87bc:	aa1503e0 	mov	x0, x21
    87c0:	97fffb18 	bl	7420 <mbedtls_mpi_copy>
    87c4:	35000320 	cbnz	w0, 8828 <mbedtls_mpi_div_mpi+0x4f0>
    87c8:	d37df281 	lsl	x1, x20, #3
    87cc:	aa1503e0 	mov	x0, x21
    87d0:	97fffc06 	bl	77e8 <mbedtls_mpi_shift_l>
    87d4:	350002a0 	cbnz	w0, 8828 <mbedtls_mpi_div_mpi+0x4f0>
    87d8:	aa1503e2 	mov	x2, x21
    87dc:	aa1303e1 	mov	x1, x19
    87e0:	aa1303e0 	mov	x0, x19
    87e4:	97fffd76 	bl	7dbc <mbedtls_mpi_add_mpi>
    87e8:	35000200 	cbnz	w0, 8828 <mbedtls_mpi_div_mpi+0x4f0>
    87ec:	f9407fe1 	ldr	x1, [sp, #248]
    87f0:	b8746820 	ldr	w0, [x1, x20]
    87f4:	51000400 	sub	w0, w0, #0x1
    87f8:	b8346820 	str	w0, [x1, x20]
    87fc:	f94037e0 	ldr	x0, [sp, #104]
    8800:	d1001294 	sub	x20, x20, #0x4
    8804:	d1000400 	sub	x0, x0, #0x1
    8808:	f90037e0 	str	x0, [sp, #104]
    880c:	17ffff68 	b	85ac <mbedtls_mpi_div_mpi+0x274>
    8810:	12800000 	mov	w0, #0xffffffff            	// #-1
    8814:	17ffffa8 	b	86b4 <mbedtls_mpi_div_mpi+0x37c>
    8818:	52800004 	mov	w4, #0x0                   	// #0
    881c:	17ffffab 	b	86c8 <mbedtls_mpi_div_mpi+0x390>
    8820:	52800002 	mov	w2, #0x0                   	// #0
    8824:	17ffffc0 	b	8724 <mbedtls_mpi_div_mpi+0x3ec>
    8828:	2a0003fb 	mov	w27, w0
    882c:	17fffefd 	b	8420 <mbedtls_mpi_div_mpi+0xe8>
    8830:	1280017b 	mov	w27, #0xfffffff4            	// #-12
    8834:	17fffeee 	b	83ec <mbedtls_mpi_div_mpi+0xb4>
    8838:	2a1b03e0 	mov	w0, w27
    883c:	a94153f3 	ldp	x19, x20, [sp, #16]
    8840:	a9425bf5 	ldp	x21, x22, [sp, #32]
    8844:	a94363f7 	ldp	x23, x24, [sp, #48]
    8848:	a9446bf9 	ldp	x25, x26, [sp, #64]
    884c:	a94573fb 	ldp	x27, x28, [sp, #80]
    8850:	a8d67bfd 	ldp	x29, x30, [sp], #352
    8854:	d65f03c0 	ret

0000000000008858 <mbedtls_mpi_div_int>:
mbedtls_mpi_div_int():
    8858:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    885c:	7100007f 	cmp	w3, #0x0
    8860:	5a83a463 	cneg	w3, w3, lt  // lt = tstop
    8864:	910003fd 	mov	x29, sp
    8868:	f9000bf3 	str	x19, [sp, #16]
    886c:	b0000093 	adrp	x19, 19000 <_DYNAMIC>
    8870:	f9409a64 	ldr	x4, [x19, #304]
    8874:	f9400085 	ldr	x5, [x4]
    8878:	f90027e5 	str	x5, [sp, #72]
    887c:	d2800005 	mov	x5, #0x0                   	// #0
    8880:	b90043e3 	str	w3, [sp, #64]
    8884:	52800023 	mov	w3, #0x1                   	// #1
    8888:	5a83a463 	cneg	w3, w3, lt  // lt = tstop
    888c:	b90023e3 	str	w3, [sp, #32]
    8890:	d2800023 	mov	x3, #0x1                   	// #1
    8894:	f90017e3 	str	x3, [sp, #40]
    8898:	910103e3 	add	x3, sp, #0x40
    889c:	f9001be3 	str	x3, [sp, #48]
    88a0:	910083e3 	add	x3, sp, #0x20
    88a4:	97fffea5 	bl	8338 <mbedtls_mpi_div_mpi>
    88a8:	f9409a73 	ldr	x19, [x19, #304]
    88ac:	f94027e1 	ldr	x1, [sp, #72]
    88b0:	f9400262 	ldr	x2, [x19]
    88b4:	eb020021 	subs	x1, x1, x2
    88b8:	d2800002 	mov	x2, #0x0                   	// #0
    88bc:	54000040 	b.eq	88c4 <mbedtls_mpi_div_int+0x6c>  // b.none
    88c0:	97ffdf6e 	bl	678 <__stack_chk_fail>
    88c4:	f9400bf3 	ldr	x19, [sp, #16]
    88c8:	a8c57bfd 	ldp	x29, x30, [sp], #80
    88cc:	d65f03c0 	ret

00000000000088d0 <mbedtls_mpi_mod_mpi>:
mbedtls_mpi_mod_mpi():
    88d0:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    88d4:	910003fd 	mov	x29, sp
    88d8:	a90153f3 	stp	x19, x20, [sp, #16]
    88dc:	aa0003f3 	mov	x19, x0
    88e0:	aa0103f4 	mov	x20, x1
    88e4:	aa0203e0 	mov	x0, x2
    88e8:	52800001 	mov	w1, #0x0                   	// #0
    88ec:	f90013f5 	str	x21, [sp, #32]
    88f0:	aa0203f5 	mov	x21, x2
    88f4:	97fffc68 	bl	7a94 <mbedtls_mpi_cmp_int>
    88f8:	37f80420 	tbnz	w0, #31, 897c <mbedtls_mpi_mod_mpi+0xac>
    88fc:	aa1403e2 	mov	x2, x20
    8900:	aa1503e3 	mov	x3, x21
    8904:	aa1303e1 	mov	x1, x19
    8908:	d2800000 	mov	x0, #0x0                   	// #0
    890c:	97fffe8b 	bl	8338 <mbedtls_mpi_div_mpi>
    8910:	2a0003f4 	mov	w20, w0
    8914:	34000160 	cbz	w0, 8940 <mbedtls_mpi_mod_mpi+0x70>
    8918:	2a1403e0 	mov	w0, w20
    891c:	a94153f3 	ldp	x19, x20, [sp, #16]
    8920:	f94013f5 	ldr	x21, [sp, #32]
    8924:	a8c37bfd 	ldp	x29, x30, [sp], #48
    8928:	d65f03c0 	ret
    892c:	aa1503e2 	mov	x2, x21
    8930:	aa1303e1 	mov	x1, x19
    8934:	aa1303e0 	mov	x0, x19
    8938:	97fffd21 	bl	7dbc <mbedtls_mpi_add_mpi>
    893c:	350001c0 	cbnz	w0, 8974 <mbedtls_mpi_mod_mpi+0xa4>
    8940:	aa1303e0 	mov	x0, x19
    8944:	52800001 	mov	w1, #0x0                   	// #0
    8948:	97fffc53 	bl	7a94 <mbedtls_mpi_cmp_int>
    894c:	37ffff00 	tbnz	w0, #31, 892c <mbedtls_mpi_mod_mpi+0x5c>
    8950:	aa1503e1 	mov	x1, x21
    8954:	aa1303e0 	mov	x0, x19
    8958:	97fffc1b 	bl	79c4 <mbedtls_mpi_cmp_mpi>
    895c:	37fffde0 	tbnz	w0, #31, 8918 <mbedtls_mpi_mod_mpi+0x48>
    8960:	aa1503e2 	mov	x2, x21
    8964:	aa1303e1 	mov	x1, x19
    8968:	aa1303e0 	mov	x0, x19
    896c:	97fffd16 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    8970:	34ffff00 	cbz	w0, 8950 <mbedtls_mpi_mod_mpi+0x80>
    8974:	2a0003f4 	mov	w20, w0
    8978:	17ffffe8 	b	8918 <mbedtls_mpi_mod_mpi+0x48>
    897c:	12800134 	mov	w20, #0xfffffff6            	// #-10
    8980:	17ffffe6 	b	8918 <mbedtls_mpi_mod_mpi+0x48>

0000000000008984 <mbedtls_mpi_mod_int>:
mbedtls_mpi_mod_int():
    8984:	7100005f 	cmp	w2, #0x0
    8988:	34000442 	cbz	w2, 8a10 <mbedtls_mpi_mod_int+0x8c>
    898c:	5400046b 	b.lt	8a18 <mbedtls_mpi_mod_int+0x94>  // b.tstop
    8990:	7100045f 	cmp	w2, #0x1
    8994:	54000060 	b.eq	89a0 <mbedtls_mpi_mod_int+0x1c>  // b.none
    8998:	f9400424 	ldr	x4, [x1, #8]
    899c:	b5000084 	cbnz	x4, 89ac <mbedtls_mpi_mod_int+0x28>
    89a0:	b900001f 	str	wzr, [x0]
    89a4:	52800000 	mov	w0, #0x0                   	// #0
    89a8:	d65f03c0 	ret
    89ac:	f9400827 	ldr	x7, [x1, #16]
    89b0:	7100085f 	cmp	w2, #0x2
    89b4:	540000a1 	b.ne	89c8 <mbedtls_mpi_mod_int+0x44>  // b.any
    89b8:	b94000e1 	ldr	w1, [x7]
    89bc:	12000021 	and	w1, w1, #0x1
    89c0:	b9000001 	str	w1, [x0]
    89c4:	17fffff8 	b	89a4 <mbedtls_mpi_mod_int+0x20>
    89c8:	8b0408e4 	add	x4, x7, x4, lsl #2
    89cc:	52800003 	mov	w3, #0x0                   	// #0
    89d0:	b85fcc86 	ldr	w6, [x4, #-4]!
    89d4:	13864063 	extr	w3, w3, w6, #16
    89d8:	12003cc6 	and	w6, w6, #0xffff
    89dc:	1ac20865 	udiv	w5, w3, w2
    89e0:	1b028ca5 	msub	w5, w5, w2, w3
    89e4:	2a0540c5 	orr	w5, w6, w5, lsl #16
    89e8:	1ac208a3 	udiv	w3, w5, w2
    89ec:	1b029463 	msub	w3, w3, w2, w5
    89f0:	eb0400ff 	cmp	x7, x4
    89f4:	54fffee1 	b.ne	89d0 <mbedtls_mpi_mod_int+0x4c>  // b.any
    89f8:	b9400021 	ldr	w1, [x1]
    89fc:	36f80061 	tbz	w1, #31, 8a08 <mbedtls_mpi_mod_int+0x84>
    8a00:	34000043 	cbz	w3, 8a08 <mbedtls_mpi_mod_int+0x84>
    8a04:	4b030043 	sub	w3, w2, w3
    8a08:	b9000003 	str	w3, [x0]
    8a0c:	17ffffe6 	b	89a4 <mbedtls_mpi_mod_int+0x20>
    8a10:	12800160 	mov	w0, #0xfffffff4            	// #-12
    8a14:	17ffffe5 	b	89a8 <mbedtls_mpi_mod_int+0x24>
    8a18:	12800120 	mov	w0, #0xfffffff6            	// #-10
    8a1c:	17ffffe3 	b	89a8 <mbedtls_mpi_mod_int+0x24>

0000000000008a20 <mbedtls_mpi_write_string>:
mbedtls_mpi_write_string():
    8a20:	a9b77bfd 	stp	x29, x30, [sp, #-144]!
    8a24:	910003fd 	mov	x29, sp
    8a28:	a90363f7 	stp	x23, x24, [sp, #48]
    8a2c:	aa0203f7 	mov	x23, x2
    8a30:	b0000082 	adrp	x2, 19000 <_DYNAMIC>
    8a34:	a90153f3 	stp	x19, x20, [sp, #16]
    8a38:	f9409842 	ldr	x2, [x2, #304]
    8a3c:	a9025bf5 	stp	x21, x22, [sp, #32]
    8a40:	2a0103f5 	mov	w21, w1
    8a44:	a9046bf9 	stp	x25, x26, [sp, #64]
    8a48:	a90573fb 	stp	x27, x28, [sp, #80]
    8a4c:	f9400041 	ldr	x1, [x2]
    8a50:	f90047e1 	str	x1, [sp, #136]
    8a54:	d2800001 	mov	x1, #0x0                   	// #0
    8a58:	51000aa1 	sub	w1, w21, #0x2
    8a5c:	7100383f 	cmp	w1, #0xe
    8a60:	54001028 	b.hi	8c64 <mbedtls_mpi_write_string+0x244>  // b.pmore
    8a64:	aa0003f4 	mov	x20, x0
    8a68:	aa0303f8 	mov	x24, x3
    8a6c:	aa0403f6 	mov	x22, x4
    8a70:	97fffb1f 	bl	76ec <mbedtls_mpi_bitlen>
    8a74:	71000ebf 	cmp	w21, #0x3
    8a78:	5400004d 	b.le	8a80 <mbedtls_mpi_write_string+0x60>
    8a7c:	d341fc00 	lsr	x0, x0, #1
    8a80:	710042bf 	cmp	w21, #0x10
    8a84:	54000041 	b.ne	8a8c <mbedtls_mpi_write_string+0x6c>  // b.any
    8a88:	d341fc00 	lsr	x0, x0, #1
    8a8c:	91001002 	add	x2, x0, #0x4
    8a90:	927ff842 	and	x2, x2, #0xfffffffffffffffe
    8a94:	eb18005f 	cmp	x2, x24
    8a98:	54000169 	b.ls	8ac4 <mbedtls_mpi_write_string+0xa4>  // b.plast
    8a9c:	128000f4 	mov	w20, #0xfffffff8            	// #-8
    8aa0:	f90002c2 	str	x2, [x22]
    8aa4:	b0000082 	adrp	x2, 19000 <_DYNAMIC>
    8aa8:	f9409842 	ldr	x2, [x2, #304]
    8aac:	f94047e0 	ldr	x0, [sp, #136]
    8ab0:	f9400041 	ldr	x1, [x2]
    8ab4:	eb010000 	subs	x0, x0, x1
    8ab8:	d2800001 	mov	x1, #0x0                   	// #0
    8abc:	54000dc0 	b.eq	8c74 <mbedtls_mpi_write_string+0x254>  // b.none
    8ac0:	97ffdeee 	bl	678 <__stack_chk_fail>
    8ac4:	9101a3fb 	add	x27, sp, #0x68
    8ac8:	aa1703f3 	mov	x19, x23
    8acc:	aa1b03e0 	mov	x0, x27
    8ad0:	97fff994 	bl	7120 <mbedtls_mpi_init_mempool>
    8ad4:	b9400280 	ldr	w0, [x20]
    8ad8:	3100041f 	cmn	w0, #0x1
    8adc:	54000081 	b.ne	8aec <mbedtls_mpi_write_string+0xcc>  // b.any
    8ae0:	d1000718 	sub	x24, x24, #0x1
    8ae4:	528005a0 	mov	w0, #0x2d                  	// #45
    8ae8:	38001660 	strb	w0, [x19], #1
    8aec:	710042bf 	cmp	w21, #0x10
    8af0:	54000581 	b.ne	8ba0 <mbedtls_mpi_write_string+0x180>  // b.any
    8af4:	f9400680 	ldr	x0, [x20, #8]
    8af8:	90000083 	adrp	x3, 18000 <__func__.0+0x172>
    8afc:	91013063 	add	x3, x3, #0x4c
    8b00:	d2800001 	mov	x1, #0x0                   	// #0
    8b04:	b5000100 	cbnz	x0, 8b24 <mbedtls_mpi_write_string+0x104>
    8b08:	3800167f 	strb	wzr, [x19], #1
    8b0c:	52800014 	mov	w20, #0x0                   	// #0
    8b10:	cb170273 	sub	x19, x19, x23
    8b14:	f90002d3 	str	x19, [x22]
    8b18:	aa1b03e0 	mov	x0, x27
    8b1c:	97fff98b 	bl	7148 <mbedtls_mpi_free>
    8b20:	17ffffe1 	b	8aa4 <mbedtls_mpi_write_string+0x84>
    8b24:	d37ef406 	lsl	x6, x0, #2
    8b28:	91001005 	add	x5, x0, #0x4
    8b2c:	d10010c6 	sub	x6, x6, #0x4
    8b30:	52800304 	mov	w4, #0x18                  	// #24
    8b34:	f9400a82 	ldr	x2, [x20, #16]
    8b38:	52000021 	eor	w1, w1, #0x1
    8b3c:	b8666842 	ldr	w2, [x2, x6]
    8b40:	1ac42442 	lsr	w2, w2, w4
    8b44:	72001c47 	ands	w7, w2, #0xff
    8b48:	1a9f17e8 	cset	w8, eq  // eq = none
    8b4c:	6a01011f 	tst	w8, w1
    8b50:	54000060 	b.eq	8b5c <mbedtls_mpi_write_string+0x13c>  // b.none
    8b54:	f10008bf 	cmp	x5, #0x2
    8b58:	54000201 	b.ne	8b98 <mbedtls_mpi_write_string+0x178>  // b.any
    8b5c:	d3441ce1 	ubfx	x1, x7, #4, #4
    8b60:	92400c42 	and	x2, x2, #0xf
    8b64:	38616867 	ldrb	w7, [x3, x1]
    8b68:	aa1303e1 	mov	x1, x19
    8b6c:	38626862 	ldrb	w2, [x3, x2]
    8b70:	38002427 	strb	w7, [x1], #2
    8b74:	39000662 	strb	w2, [x19, #1]
    8b78:	aa0103f3 	mov	x19, x1
    8b7c:	d2800021 	mov	x1, #0x1                   	// #1
    8b80:	51002084 	sub	w4, w4, #0x8
    8b84:	d10004a5 	sub	x5, x5, #0x1
    8b88:	3100209f 	cmn	w4, #0x8
    8b8c:	54fffd41 	b.ne	8b34 <mbedtls_mpi_write_string+0x114>  // b.any
    8b90:	d1000400 	sub	x0, x0, #0x1
    8b94:	17ffffdc 	b	8b04 <mbedtls_mpi_write_string+0xe4>
    8b98:	d2800001 	mov	x1, #0x0                   	// #0
    8b9c:	17fffff9 	b	8b80 <mbedtls_mpi_write_string+0x160>
    8ba0:	aa1403e1 	mov	x1, x20
    8ba4:	aa1b03e0 	mov	x0, x27
    8ba8:	97fffa1e 	bl	7420 <mbedtls_mpi_copy>
    8bac:	2a0003f4 	mov	w20, w0
    8bb0:	35fffb40 	cbnz	w0, 8b18 <mbedtls_mpi_write_string+0xf8>
    8bb4:	b9406be0 	ldr	w0, [sp, #104]
    8bb8:	3100041f 	cmn	w0, #0x1
    8bbc:	54000061 	b.ne	8bc8 <mbedtls_mpi_write_string+0x1a8>  // b.any
    8bc0:	52800020 	mov	w0, #0x1                   	// #1
    8bc4:	b9006be0 	str	w0, [sp, #104]
    8bc8:	8b180279 	add	x25, x19, x24
    8bcc:	910193fa 	add	x26, sp, #0x64
    8bd0:	aa1903fc 	mov	x28, x25
    8bd4:	cb1c0320 	sub	x0, x25, x28
    8bd8:	eb00031f 	cmp	x24, x0
    8bdc:	54000489 	b.ls	8c6c <mbedtls_mpi_write_string+0x24c>  // b.plast
    8be0:	2a1503e2 	mov	w2, w21
    8be4:	aa1b03e1 	mov	x1, x27
    8be8:	aa1a03e0 	mov	x0, x26
    8bec:	97ffff66 	bl	8984 <mbedtls_mpi_mod_int>
    8bf0:	2a0003f4 	mov	w20, w0
    8bf4:	35fff920 	cbnz	w0, 8b18 <mbedtls_mpi_write_string+0xf8>
    8bf8:	2a1503e3 	mov	w3, w21
    8bfc:	aa1b03e2 	mov	x2, x27
    8c00:	aa1b03e0 	mov	x0, x27
    8c04:	d2800001 	mov	x1, #0x0                   	// #0
    8c08:	97ffff14 	bl	8858 <mbedtls_mpi_div_int>
    8c0c:	2a0003f4 	mov	w20, w0
    8c10:	35fff840 	cbnz	w0, 8b18 <mbedtls_mpi_write_string+0xf8>
    8c14:	b94067e2 	ldr	w2, [sp, #100]
    8c18:	12001c40 	and	w0, w2, #0xff
    8c1c:	7100245f 	cmp	w2, #0x9
    8c20:	1100c001 	add	w1, w0, #0x30
    8c24:	1100dc00 	add	w0, w0, #0x37
    8c28:	12001c21 	and	w1, w1, #0xff
    8c2c:	12001c00 	and	w0, w0, #0xff
    8c30:	1a818000 	csel	w0, w0, w1, hi  // hi = pmore
    8c34:	381fff80 	strb	w0, [x28, #-1]!
    8c38:	52800001 	mov	w1, #0x0                   	// #0
    8c3c:	aa1b03e0 	mov	x0, x27
    8c40:	cb1c0334 	sub	x20, x25, x28
    8c44:	97fffb94 	bl	7a94 <mbedtls_mpi_cmp_int>
    8c48:	35fffc60 	cbnz	w0, 8bd4 <mbedtls_mpi_write_string+0x1b4>
    8c4c:	aa1303e0 	mov	x0, x19
    8c50:	aa1403e2 	mov	x2, x20
    8c54:	aa1c03e1 	mov	x1, x28
    8c58:	8b140273 	add	x19, x19, x20
    8c5c:	94001168 	bl	d1fc <memmove>
    8c60:	17ffffaa 	b	8b08 <mbedtls_mpi_write_string+0xe8>
    8c64:	12800074 	mov	w20, #0xfffffffc            	// #-4
    8c68:	17ffff8f 	b	8aa4 <mbedtls_mpi_write_string+0x84>
    8c6c:	128000f4 	mov	w20, #0xfffffff8            	// #-8
    8c70:	17ffffaa 	b	8b18 <mbedtls_mpi_write_string+0xf8>
    8c74:	2a1403e0 	mov	w0, w20
    8c78:	a94153f3 	ldp	x19, x20, [sp, #16]
    8c7c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    8c80:	a94363f7 	ldp	x23, x24, [sp, #48]
    8c84:	a9446bf9 	ldp	x25, x26, [sp, #64]
    8c88:	a94573fb 	ldp	x27, x28, [sp, #80]
    8c8c:	a8c97bfd 	ldp	x29, x30, [sp], #144
    8c90:	d65f03c0 	ret

0000000000008c94 <mpi_check_small_factors>:
mpi_check_small_factors():
    8c94:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    8c98:	b0000082 	adrp	x2, 19000 <_DYNAMIC>
    8c9c:	910003fd 	mov	x29, sp
    8ca0:	f9409842 	ldr	x2, [x2, #304]
    8ca4:	a90153f3 	stp	x19, x20, [sp, #16]
    8ca8:	aa0003f4 	mov	x20, x0
    8cac:	a9025bf5 	stp	x21, x22, [sp, #32]
    8cb0:	f9400040 	ldr	x0, [x2]
    8cb4:	f9001fe0 	str	x0, [sp, #56]
    8cb8:	d2800000 	mov	x0, #0x0                   	// #0
    8cbc:	f9400a80 	ldr	x0, [x20, #16]
    8cc0:	b9400000 	ldr	w0, [x0]
    8cc4:	360003a0 	tbz	w0, #0, 8d38 <mpi_check_small_factors+0xa4>
    8cc8:	f0000073 	adrp	x19, 17000 <__text_end+0x3c08>
    8ccc:	9100d3f6 	add	x22, sp, #0x34
    8cd0:	911a0273 	add	x19, x19, #0x680
    8cd4:	b9400275 	ldr	w21, [x19]
    8cd8:	710002bf 	cmp	w21, #0x0
    8cdc:	5400014c 	b.gt	8d04 <mpi_check_small_factors+0x70>
    8ce0:	52800000 	mov	w0, #0x0                   	// #0
    8ce4:	b0000082 	adrp	x2, 19000 <_DYNAMIC>
    8ce8:	f9409842 	ldr	x2, [x2, #304]
    8cec:	f9401fe1 	ldr	x1, [sp, #56]
    8cf0:	f9400043 	ldr	x3, [x2]
    8cf4:	eb030021 	subs	x1, x1, x3
    8cf8:	d2800003 	mov	x3, #0x0                   	// #0
    8cfc:	54000260 	b.eq	8d48 <mpi_check_small_factors+0xb4>  // b.none
    8d00:	97ffde5e 	bl	678 <__stack_chk_fail>
    8d04:	2a1503e1 	mov	w1, w21
    8d08:	aa1403e0 	mov	x0, x20
    8d0c:	97fffb62 	bl	7a94 <mbedtls_mpi_cmp_int>
    8d10:	7100001f 	cmp	w0, #0x0
    8d14:	5400016d 	b.le	8d40 <mpi_check_small_factors+0xac>
    8d18:	2a1503e2 	mov	w2, w21
    8d1c:	aa1403e1 	mov	x1, x20
    8d20:	aa1603e0 	mov	x0, x22
    8d24:	97ffff18 	bl	8984 <mbedtls_mpi_mod_int>
    8d28:	35fffde0 	cbnz	w0, 8ce4 <mpi_check_small_factors+0x50>
    8d2c:	b94037e0 	ldr	w0, [sp, #52]
    8d30:	91001273 	add	x19, x19, #0x4
    8d34:	35fffd00 	cbnz	w0, 8cd4 <mpi_check_small_factors+0x40>
    8d38:	128001a0 	mov	w0, #0xfffffff2            	// #-14
    8d3c:	17ffffea 	b	8ce4 <mpi_check_small_factors+0x50>
    8d40:	52800020 	mov	w0, #0x1                   	// #1
    8d44:	17ffffe8 	b	8ce4 <mpi_check_small_factors+0x50>
    8d48:	a94153f3 	ldp	x19, x20, [sp, #16]
    8d4c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    8d50:	a8c47bfd 	ldp	x29, x30, [sp], #64
    8d54:	d65f03c0 	ret

0000000000008d58 <mbedtls_mpi_montg_init>:
mbedtls_mpi_montg_init():
    8d58:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    8d5c:	910003fd 	mov	x29, sp
    8d60:	f9000bf3 	str	x19, [sp, #16]
    8d64:	aa0003f3 	mov	x19, x0
    8d68:	f9400820 	ldr	x0, [x1, #16]
    8d6c:	9400082a 	bl	ae14 <mbedtls_mpi_core_montmul_init>
    8d70:	b9000260 	str	w0, [x19]
    8d74:	f9400bf3 	ldr	x19, [sp, #16]
    8d78:	a8c27bfd 	ldp	x29, x30, [sp], #32
    8d7c:	d65f03c0 	ret

0000000000008d80 <mbedtls_mpi_montmul>:
mbedtls_mpi_montmul():
    8d80:	f9400800 	ldr	x0, [x0, #16]
    8d84:	f9400884 	ldr	x4, [x4, #16]
    8d88:	17fff8bc 	b	7078 <mpi_montmul.isra.0>

0000000000008d8c <mbedtls_mpi_montred>:
mbedtls_mpi_montred():
    8d8c:	17fff8c2 	b	7094 <mpi_montred>

0000000000008d90 <mbedtls_mpi_exp_mod>:
mbedtls_mpi_exp_mod():
    8d90:	a9aa7bfd 	stp	x29, x30, [sp, #-352]!
    8d94:	910003fd 	mov	x29, sp
    8d98:	a90363f7 	stp	x23, x24, [sp, #48]
    8d9c:	b0000097 	adrp	x23, 19000 <_DYNAMIC>
    8da0:	f90063e0 	str	x0, [sp, #192]
    8da4:	f9409ae0 	ldr	x0, [x23, #304]
    8da8:	a90153f3 	stp	x19, x20, [sp, #16]
    8dac:	a9025bf5 	stp	x21, x22, [sp, #32]
    8db0:	aa0303f5 	mov	x21, x3
    8db4:	a9046bf9 	stp	x25, x26, [sp, #64]
    8db8:	aa0103f9 	mov	x25, x1
    8dbc:	aa0203fa 	mov	x26, x2
    8dc0:	a90573fb 	stp	x27, x28, [sp, #80]
    8dc4:	f9003be4 	str	x4, [sp, #112]
    8dc8:	f9400001 	ldr	x1, [x0]
    8dcc:	f900afe1 	str	x1, [sp, #344]
    8dd0:	d2800001 	mov	x1, #0x0                   	// #0
    8dd4:	aa0303e0 	mov	x0, x3
    8dd8:	97fffb2f 	bl	7a94 <mbedtls_mpi_cmp_int>
    8ddc:	f90057f7 	str	x23, [sp, #168]
    8de0:	7100001f 	cmp	w0, #0x0
    8de4:	5400014c 	b.gt	8e0c <mbedtls_mpi_exp_mod+0x7c>
    8de8:	12800073 	mov	w19, #0xfffffffc            	// #-4
    8dec:	f94057e0 	ldr	x0, [sp, #168]
    8df0:	f9409800 	ldr	x0, [x0, #304]
    8df4:	f940afe2 	ldr	x2, [sp, #344]
    8df8:	f9400001 	ldr	x1, [x0]
    8dfc:	eb010042 	subs	x2, x2, x1
    8e00:	d2800001 	mov	x1, #0x0                   	// #0
    8e04:	54003020 	b.eq	9408 <mbedtls_mpi_exp_mod+0x678>  // b.none
    8e08:	97ffde1c 	bl	678 <__stack_chk_fail>
    8e0c:	f9400aa0 	ldr	x0, [x21, #16]
    8e10:	b9400000 	ldr	w0, [x0]
    8e14:	12000001 	and	w1, w0, #0x1
    8e18:	b900cbe1 	str	w1, [sp, #200]
    8e1c:	3607fe60 	tbz	w0, #0, 8de8 <mbedtls_mpi_exp_mod+0x58>
    8e20:	aa1a03e0 	mov	x0, x26
    8e24:	52800001 	mov	w1, #0x0                   	// #0
    8e28:	97fffb1b 	bl	7a94 <mbedtls_mpi_cmp_int>
    8e2c:	37fffde0 	tbnz	w0, #31, 8de8 <mbedtls_mpi_exp_mod+0x58>
    8e30:	aa1a03e0 	mov	x0, x26
    8e34:	97fffa2e 	bl	76ec <mbedtls_mpi_bitlen>
    8e38:	f140081f 	cmp	x0, #0x2, lsl #12
    8e3c:	54fffd68 	b.hi	8de8 <mbedtls_mpi_exp_mod+0x58>  // b.pmore
    8e40:	aa1503e0 	mov	x0, x21
    8e44:	97fffa2a 	bl	76ec <mbedtls_mpi_bitlen>
    8e48:	f140081f 	cmp	x0, #0x2, lsl #12
    8e4c:	54fffce8 	b.hi	8de8 <mbedtls_mpi_exp_mod+0x58>  // b.pmore
    8e50:	f9400aa0 	ldr	x0, [x21, #16]
    8e54:	910363f8 	add	x24, sp, #0xd8
    8e58:	910463f6 	add	x22, sp, #0x118
    8e5c:	940007ee 	bl	ae14 <mbedtls_mpi_core_montmul_init>
    8e60:	2a0003f7 	mov	w23, w0
    8e64:	aa1803e0 	mov	x0, x24
    8e68:	97fff8ae 	bl	7120 <mbedtls_mpi_init_mempool>
    8e6c:	9103e3e0 	add	x0, sp, #0xf8
    8e70:	f90047e0 	str	x0, [sp, #136]
    8e74:	97fff8a6 	bl	710c <mbedtls_mpi_init>
    8e78:	9104e3e0 	add	x0, sp, #0x138
    8e7c:	f9004fe0 	str	x0, [sp, #152]
    8e80:	97fff8a8 	bl	7120 <mbedtls_mpi_init_mempool>
    8e84:	aa1603e0 	mov	x0, x22
    8e88:	97fff8a6 	bl	7120 <mbedtls_mpi_init_mempool>
    8e8c:	aa1a03e0 	mov	x0, x26
    8e90:	97fffa17 	bl	76ec <mbedtls_mpi_bitlen>
    8e94:	f1005c1f 	cmp	x0, #0x17
    8e98:	d2802001 	mov	x1, #0x100                 	// #256
    8e9c:	9a9f97e0 	cset	x0, hi  // hi = pmore
    8ea0:	91000400 	add	x0, x0, #0x1
    8ea4:	f9003fe0 	str	x0, [sp, #120]
    8ea8:	f94057e0 	ldr	x0, [sp, #168]
    8eac:	f940f400 	ldr	x0, [x0, #488]
    8eb0:	f9400000 	ldr	x0, [x0]
    8eb4:	94001139 	bl	d398 <mempool_alloc>
    8eb8:	aa0003f4 	mov	x20, x0
    8ebc:	b4002a20 	cbz	x0, 9400 <mbedtls_mpi_exp_mod+0x670>
    8ec0:	aa1403f3 	mov	x19, x20
    8ec4:	91040000 	add	x0, x0, #0x100
    8ec8:	f9004bf4 	str	x20, [sp, #144]
    8ecc:	f9005fe0 	str	x0, [sp, #184]
    8ed0:	aa1303e0 	mov	x0, x19
    8ed4:	97fff893 	bl	7120 <mbedtls_mpi_init_mempool>
    8ed8:	f9405fe0 	ldr	x0, [sp, #184]
    8edc:	91008273 	add	x19, x19, #0x20
    8ee0:	eb00027f 	cmp	x19, x0
    8ee4:	54ffff61 	b.ne	8ed0 <mbedtls_mpi_exp_mod+0x140>  // b.any
    8ee8:	f94063e1 	ldr	x1, [sp, #192]
    8eec:	aa1403e0 	mov	x0, x20
    8ef0:	97fff94c 	bl	7420 <mbedtls_mpi_copy>
    8ef4:	f94006bc 	ldr	x28, [x21, #8]
    8ef8:	aa1403e0 	mov	x0, x20
    8efc:	9100079c 	add	x28, x28, #0x1
    8f00:	aa1c03e1 	mov	x1, x28
    8f04:	97fff8ac 	bl	71b4 <mbedtls_mpi_grow>
    8f08:	2a0003f3 	mov	w19, w0
    8f0c:	350022a0 	cbnz	w0, 9360 <mbedtls_mpi_exp_mod+0x5d0>
    8f10:	f94047e0 	ldr	x0, [sp, #136]
    8f14:	d37ffb81 	lsl	x1, x28, #1
    8f18:	97fff8a7 	bl	71b4 <mbedtls_mpi_grow>
    8f1c:	2a0003f3 	mov	w19, w0
    8f20:	35002200 	cbnz	w0, 9360 <mbedtls_mpi_exp_mod+0x5d0>
    8f24:	b9400320 	ldr	w0, [x25]
    8f28:	b900a7e0 	str	w0, [sp, #164]
    8f2c:	2a0003e0 	mov	w0, w0
    8f30:	3100041f 	cmn	w0, #0x1
    8f34:	54000121 	b.ne	8f58 <mbedtls_mpi_exp_mod+0x1c8>  // b.any
    8f38:	f9404fe0 	ldr	x0, [sp, #152]
    8f3c:	aa1903e1 	mov	x1, x25
    8f40:	97fff938 	bl	7420 <mbedtls_mpi_copy>
    8f44:	2a0003f3 	mov	w19, w0
    8f48:	350020c0 	cbnz	w0, 9360 <mbedtls_mpi_exp_mod+0x5d0>
    8f4c:	f9404ff9 	ldr	x25, [sp, #152]
    8f50:	52800020 	mov	w0, #0x1                   	// #1
    8f54:	b9013be0 	str	w0, [sp, #312]
    8f58:	f9403be0 	ldr	x0, [sp, #112]
    8f5c:	b4000060 	cbz	x0, 8f68 <mbedtls_mpi_exp_mod+0x1d8>
    8f60:	f9400800 	ldr	x0, [x0, #16]
    8f64:	b5000da0 	cbnz	x0, 9118 <mbedtls_mpi_exp_mod+0x388>
    8f68:	aa1803e0 	mov	x0, x24
    8f6c:	52800021 	mov	w1, #0x1                   	// #1
    8f70:	97fff982 	bl	7578 <mbedtls_mpi_lset>
    8f74:	2a0003f3 	mov	w19, w0
    8f78:	35001f40 	cbnz	w0, 9360 <mbedtls_mpi_exp_mod+0x5d0>
    8f7c:	f94006a1 	ldr	x1, [x21, #8]
    8f80:	aa1803e0 	mov	x0, x24
    8f84:	d37ae421 	lsl	x1, x1, #6
    8f88:	97fffa18 	bl	77e8 <mbedtls_mpi_shift_l>
    8f8c:	2a0003f3 	mov	w19, w0
    8f90:	35001e80 	cbnz	w0, 9360 <mbedtls_mpi_exp_mod+0x5d0>
    8f94:	aa1503e2 	mov	x2, x21
    8f98:	aa1803e1 	mov	x1, x24
    8f9c:	aa1803e0 	mov	x0, x24
    8fa0:	97fffe4c 	bl	88d0 <mbedtls_mpi_mod_mpi>
    8fa4:	2a0003f3 	mov	w19, w0
    8fa8:	35001dc0 	cbnz	w0, 9360 <mbedtls_mpi_exp_mod+0x5d0>
    8fac:	f9403be0 	ldr	x0, [sp, #112]
    8fb0:	b4000080 	cbz	x0, 8fc0 <mbedtls_mpi_exp_mod+0x230>
    8fb4:	aa1803e1 	mov	x1, x24
    8fb8:	d2800402 	mov	x2, #0x20                  	// #32
    8fbc:	97ffdc11 	bl	0 <memcpy>
    8fc0:	9100829b 	add	x27, x20, #0x20
    8fc4:	aa1c03e1 	mov	x1, x28
    8fc8:	aa1b03e0 	mov	x0, x27
    8fcc:	97fff87a 	bl	71b4 <mbedtls_mpi_grow>
    8fd0:	2a0003f3 	mov	w19, w0
    8fd4:	35001c60 	cbnz	w0, 9360 <mbedtls_mpi_exp_mod+0x5d0>
    8fd8:	aa1503e1 	mov	x1, x21
    8fdc:	aa1903e0 	mov	x0, x25
    8fe0:	97fffa79 	bl	79c4 <mbedtls_mpi_cmp_mpi>
    8fe4:	37f80a20 	tbnz	w0, #31, 9128 <mbedtls_mpi_exp_mod+0x398>
    8fe8:	aa1503e2 	mov	x2, x21
    8fec:	aa1903e1 	mov	x1, x25
    8ff0:	aa1b03e0 	mov	x0, x27
    8ff4:	97fffe37 	bl	88d0 <mbedtls_mpi_mod_mpi>
    8ff8:	2a0003f3 	mov	w19, w0
    8ffc:	35001b20 	cbnz	w0, 9360 <mbedtls_mpi_exp_mod+0x5d0>
    9000:	f94006a1 	ldr	x1, [x21, #8]
    9004:	aa1b03e0 	mov	x0, x27
    9008:	91000421 	add	x1, x1, #0x1
    900c:	97fff86a 	bl	71b4 <mbedtls_mpi_grow>
    9010:	2a0003f3 	mov	w19, w0
    9014:	35001a60 	cbnz	w0, 9360 <mbedtls_mpi_exp_mod+0x5d0>
    9018:	f9401a80 	ldr	x0, [x20, #48]
    901c:	2a1703e3 	mov	w3, w23
    9020:	f94087e4 	ldr	x4, [sp, #264]
    9024:	aa1503e2 	mov	x2, x21
    9028:	aa1803e1 	mov	x1, x24
    902c:	97fff813 	bl	7078 <mpi_montmul.isra.0>
    9030:	aa1803e1 	mov	x1, x24
    9034:	aa1403e0 	mov	x0, x20
    9038:	97fff8fa 	bl	7420 <mbedtls_mpi_copy>
    903c:	2a0003f3 	mov	w19, w0
    9040:	35001900 	cbnz	w0, 9360 <mbedtls_mpi_exp_mod+0x5d0>
    9044:	b9407be0 	ldr	w0, [sp, #120]
    9048:	d2800039 	mov	x25, #0x1                   	// #1
    904c:	f94047e3 	ldr	x3, [sp, #136]
    9050:	b900cfe0 	str	w0, [sp, #204]
    9054:	3941e3e0 	ldrb	w0, [sp, #120]
    9058:	2a1703e2 	mov	w2, w23
    905c:	aa1503e1 	mov	x1, x21
    9060:	9ac02339 	lsl	x25, x25, x0
    9064:	aa1403e0 	mov	x0, x20
    9068:	97fff80b 	bl	7094 <mpi_montred>
    906c:	f9403fe0 	ldr	x0, [sp, #120]
    9070:	f100081f 	cmp	x0, #0x2
    9074:	54000620 	b.eq	9138 <mbedtls_mpi_exp_mod+0x3a8>  // b.none
    9078:	f940075c 	ldr	x28, [x26, #8]
    907c:	52800002 	mov	w2, #0x0                   	// #0
    9080:	d280001b 	mov	x27, #0x0                   	// #0
    9084:	f90037ff 	str	xzr, [sp, #104]
    9088:	f90043ff 	str	xzr, [sp, #128]
    908c:	f94043e0 	ldr	x0, [sp, #128]
    9090:	b50000a0 	cbnz	x0, 90a4 <mbedtls_mpi_exp_mod+0x314>
    9094:	b40014bc 	cbz	x28, 9328 <mbedtls_mpi_exp_mod+0x598>
    9098:	d100079c 	sub	x28, x28, #0x1
    909c:	d2800400 	mov	x0, #0x20                  	// #32
    90a0:	f90043e0 	str	x0, [sp, #128]
    90a4:	f94043e0 	ldr	x0, [sp, #128]
    90a8:	d1000400 	sub	x0, x0, #0x1
    90ac:	f90043e0 	str	x0, [sp, #128]
    90b0:	f9400b40 	ldr	x0, [x26, #16]
    90b4:	394203e1 	ldrb	w1, [sp, #128]
    90b8:	b87c7800 	ldr	w0, [x0, x28, lsl #2]
    90bc:	1ac12400 	lsr	w0, w0, w1
    90c0:	12000000 	and	w0, w0, #0x1
    90c4:	2a000041 	orr	w1, w2, w0
    90c8:	34000941 	cbz	w1, 91f0 <mbedtls_mpi_exp_mod+0x460>
    90cc:	7100045f 	cmp	w2, #0x1
    90d0:	52000001 	eor	w1, w0, #0x1
    90d4:	1a9f17e2 	cset	w2, eq  // eq = none
    90d8:	6a01005f 	tst	w2, w1
    90dc:	540008e0 	b.eq	91f8 <mbedtls_mpi_exp_mod+0x468>  // b.none
    90e0:	aa1903e2 	mov	x2, x25
    90e4:	aa1403e1 	mov	x1, x20
    90e8:	aa1603e0 	mov	x0, x22
    90ec:	d2800003 	mov	x3, #0x0                   	// #0
    90f0:	97fff7c8 	bl	7010 <mpi_select>
    90f4:	35001820 	cbnz	w0, 93f8 <mbedtls_mpi_exp_mod+0x668>
    90f8:	f9400a80 	ldr	x0, [x20, #16]
    90fc:	aa1603e1 	mov	x1, x22
    9100:	f94087e4 	ldr	x4, [sp, #264]
    9104:	2a1703e3 	mov	w3, w23
    9108:	aa1503e2 	mov	x2, x21
    910c:	97fff7db 	bl	7078 <mpi_montmul.isra.0>
    9110:	b940cbe1 	ldr	w1, [sp, #200]
    9114:	14000037 	b	91f0 <mbedtls_mpi_exp_mod+0x460>
    9118:	aa1803e0 	mov	x0, x24
    911c:	d2800402 	mov	x2, #0x20                  	// #32
    9120:	f9403be1 	ldr	x1, [sp, #112]
    9124:	17ffffa6 	b	8fbc <mbedtls_mpi_exp_mod+0x22c>
    9128:	aa1903e1 	mov	x1, x25
    912c:	aa1b03e0 	mov	x0, x27
    9130:	97fff8bc 	bl	7420 <mbedtls_mpi_copy>
    9134:	17ffffb7 	b	9010 <mbedtls_mpi_exp_mod+0x280>
    9138:	d341ff20 	lsr	x0, x25, #1
    913c:	f90037e0 	str	x0, [sp, #104]
    9140:	f94006a1 	ldr	x1, [x21, #8]
    9144:	8b00169c 	add	x28, x20, x0, lsl #5
    9148:	aa1c03e0 	mov	x0, x28
    914c:	91000421 	add	x1, x1, #0x1
    9150:	97fff819 	bl	71b4 <mbedtls_mpi_grow>
    9154:	35001520 	cbnz	w0, 93f8 <mbedtls_mpi_exp_mod+0x668>
    9158:	aa1b03e1 	mov	x1, x27
    915c:	aa1c03e0 	mov	x0, x28
    9160:	97fff8b0 	bl	7420 <mbedtls_mpi_copy>
    9164:	350014a0 	cbnz	w0, 93f8 <mbedtls_mpi_exp_mod+0x668>
    9168:	f9400b80 	ldr	x0, [x28, #16]
    916c:	2a1703e3 	mov	w3, w23
    9170:	f94087e4 	ldr	x4, [sp, #264]
    9174:	aa1503e2 	mov	x2, x21
    9178:	aa1c03e1 	mov	x1, x28
    917c:	97fff7bf 	bl	7078 <mpi_montmul.isra.0>
    9180:	d341ff20 	lsr	x0, x25, #1
    9184:	91000400 	add	x0, x0, #0x1
    9188:	f90037e0 	str	x0, [sp, #104]
    918c:	aa1c03e5 	mov	x5, x28
    9190:	f94037e0 	ldr	x0, [sp, #104]
    9194:	eb19001f 	cmp	x0, x25
    9198:	54fff702 	b.cs	9078 <mbedtls_mpi_exp_mod+0x2e8>  // b.hs, b.nlast
    919c:	f94006a1 	ldr	x1, [x21, #8]
    91a0:	910080bc 	add	x28, x5, #0x20
    91a4:	aa1c03e0 	mov	x0, x28
    91a8:	f90043e5 	str	x5, [sp, #128]
    91ac:	91000421 	add	x1, x1, #0x1
    91b0:	97fff801 	bl	71b4 <mbedtls_mpi_grow>
    91b4:	35001220 	cbnz	w0, 93f8 <mbedtls_mpi_exp_mod+0x668>
    91b8:	f94043e5 	ldr	x5, [sp, #128]
    91bc:	aa1c03e0 	mov	x0, x28
    91c0:	aa0503e1 	mov	x1, x5
    91c4:	97fff897 	bl	7420 <mbedtls_mpi_copy>
    91c8:	35001180 	cbnz	w0, 93f8 <mbedtls_mpi_exp_mod+0x668>
    91cc:	f9400b80 	ldr	x0, [x28, #16]
    91d0:	2a1703e3 	mov	w3, w23
    91d4:	f94087e4 	ldr	x4, [sp, #264]
    91d8:	aa1503e2 	mov	x2, x21
    91dc:	aa1b03e1 	mov	x1, x27
    91e0:	97fff7a6 	bl	7078 <mpi_montmul.isra.0>
    91e4:	f94037e0 	ldr	x0, [sp, #104]
    91e8:	17ffffe7 	b	9184 <mbedtls_mpi_exp_mod+0x3f4>
    91ec:	52800041 	mov	w1, #0x2                   	// #2
    91f0:	2a0103e2 	mov	w2, w1
    91f4:	17ffffa6 	b	908c <mbedtls_mpi_exp_mod+0x2fc>
    91f8:	f94037e1 	ldr	x1, [sp, #104]
    91fc:	91000421 	add	x1, x1, #0x1
    9200:	f90037e1 	str	x1, [sp, #104]
    9204:	b940cfe1 	ldr	w1, [sp, #204]
    9208:	b9406be2 	ldr	w2, [sp, #104]
    920c:	4b020021 	sub	w1, w1, w2
    9210:	1ac12000 	lsl	w0, w0, w1
    9214:	aa00037b 	orr	x27, x27, x0
    9218:	f94037e1 	ldr	x1, [sp, #104]
    921c:	f9403fe0 	ldr	x0, [sp, #120]
    9220:	eb01001f 	cmp	x0, x1
    9224:	54fffe41 	b.ne	91ec <mbedtls_mpi_exp_mod+0x45c>  // b.any
    9228:	f9005bff 	str	xzr, [sp, #176]
    922c:	aa1903e2 	mov	x2, x25
    9230:	aa1403e1 	mov	x1, x20
    9234:	aa1603e0 	mov	x0, x22
    9238:	d2800003 	mov	x3, #0x0                   	// #0
    923c:	97fff775 	bl	7010 <mpi_select>
    9240:	35000dc0 	cbnz	w0, 93f8 <mbedtls_mpi_exp_mod+0x668>
    9244:	f9400a80 	ldr	x0, [x20, #16]
    9248:	aa1603e1 	mov	x1, x22
    924c:	f94087e4 	ldr	x4, [sp, #264]
    9250:	2a1703e3 	mov	w3, w23
    9254:	aa1503e2 	mov	x2, x21
    9258:	97fff788 	bl	7078 <mpi_montmul.isra.0>
    925c:	d2800021 	mov	x1, #0x1                   	// #1
    9260:	f9405be0 	ldr	x0, [sp, #176]
    9264:	f9005be1 	str	x1, [sp, #176]
    9268:	f94037e1 	ldr	x1, [sp, #104]
    926c:	91000400 	add	x0, x0, #0x1
    9270:	eb00003f 	cmp	x1, x0
    9274:	54fffdc8 	b.hi	922c <mbedtls_mpi_exp_mod+0x49c>  // b.pmore
    9278:	aa1b03e3 	mov	x3, x27
    927c:	aa1903e2 	mov	x2, x25
    9280:	aa1403e1 	mov	x1, x20
    9284:	aa1603e0 	mov	x0, x22
    9288:	97fff762 	bl	7010 <mpi_select>
    928c:	35000b60 	cbnz	w0, 93f8 <mbedtls_mpi_exp_mod+0x668>
    9290:	f9400a80 	ldr	x0, [x20, #16]
    9294:	aa1603e1 	mov	x1, x22
    9298:	f94087e4 	ldr	x4, [sp, #264]
    929c:	2a1703e3 	mov	w3, w23
    92a0:	aa1503e2 	mov	x2, x21
    92a4:	d280001b 	mov	x27, #0x0                   	// #0
    92a8:	97fff774 	bl	7078 <mpi_montmul.isra.0>
    92ac:	f90037ff 	str	xzr, [sp, #104]
    92b0:	b940cbe1 	ldr	w1, [sp, #200]
    92b4:	17ffffcf 	b	91f0 <mbedtls_mpi_exp_mod+0x460>
    92b8:	aa1903e2 	mov	x2, x25
    92bc:	aa1403e1 	mov	x1, x20
    92c0:	aa1603e0 	mov	x0, x22
    92c4:	d2800003 	mov	x3, #0x0                   	// #0
    92c8:	97fff752 	bl	7010 <mpi_select>
    92cc:	35000960 	cbnz	w0, 93f8 <mbedtls_mpi_exp_mod+0x668>
    92d0:	f9400a80 	ldr	x0, [x20, #16]
    92d4:	d37ffb7b 	lsl	x27, x27, #1
    92d8:	f94087e4 	ldr	x4, [sp, #264]
    92dc:	2a1703e3 	mov	w3, w23
    92e0:	aa1503e2 	mov	x2, x21
    92e4:	aa1603e1 	mov	x1, x22
    92e8:	97fff764 	bl	7078 <mpi_montmul.isra.0>
    92ec:	ea1b033f 	tst	x25, x27
    92f0:	540001a0 	b.eq	9324 <mbedtls_mpi_exp_mod+0x594>  // b.none
    92f4:	aa1903e2 	mov	x2, x25
    92f8:	aa1403e1 	mov	x1, x20
    92fc:	aa1603e0 	mov	x0, x22
    9300:	d2800023 	mov	x3, #0x1                   	// #1
    9304:	97fff743 	bl	7010 <mpi_select>
    9308:	35000780 	cbnz	w0, 93f8 <mbedtls_mpi_exp_mod+0x668>
    930c:	f9400a80 	ldr	x0, [x20, #16]
    9310:	2a1703e3 	mov	w3, w23
    9314:	f94087e4 	ldr	x4, [sp, #264]
    9318:	aa1503e2 	mov	x2, x21
    931c:	aa1603e1 	mov	x1, x22
    9320:	97fff756 	bl	7078 <mpi_montmul.isra.0>
    9324:	9100079c 	add	x28, x28, #0x1
    9328:	f94037e0 	ldr	x0, [sp, #104]
    932c:	eb00039f 	cmp	x28, x0
    9330:	54fffc41 	b.ne	92b8 <mbedtls_mpi_exp_mod+0x528>  // b.any
    9334:	f94047e3 	ldr	x3, [sp, #136]
    9338:	aa1403e0 	mov	x0, x20
    933c:	2a1703e2 	mov	w2, w23
    9340:	aa1503e1 	mov	x1, x21
    9344:	97fff754 	bl	7094 <mpi_montred>
    9348:	b940a7e0 	ldr	w0, [sp, #164]
    934c:	3100041f 	cmn	w0, #0x1
    9350:	540003c0 	b.eq	93c8 <mbedtls_mpi_exp_mod+0x638>  // b.none
    9354:	f94063e0 	ldr	x0, [sp, #192]
    9358:	aa1403e1 	mov	x1, x20
    935c:	97fff831 	bl	7420 <mbedtls_mpi_copy>
    9360:	f9404be0 	ldr	x0, [sp, #144]
    9364:	97fff779 	bl	7148 <mbedtls_mpi_free>
    9368:	f9404be0 	ldr	x0, [sp, #144]
    936c:	f9405fe1 	ldr	x1, [sp, #184]
    9370:	91008000 	add	x0, x0, #0x20
    9374:	f9004be0 	str	x0, [sp, #144]
    9378:	eb01001f 	cmp	x0, x1
    937c:	54ffff21 	b.ne	9360 <mbedtls_mpi_exp_mod+0x5d0>  // b.any
    9380:	f94057e0 	ldr	x0, [sp, #168]
    9384:	aa1403e1 	mov	x1, x20
    9388:	f940f400 	ldr	x0, [x0, #488]
    938c:	f9400000 	ldr	x0, [x0]
    9390:	9400102f 	bl	d44c <mempool_free>
    9394:	f94047e0 	ldr	x0, [sp, #136]
    9398:	97fff76c 	bl	7148 <mbedtls_mpi_free>
    939c:	f9404fe0 	ldr	x0, [sp, #152]
    93a0:	97fff76a 	bl	7148 <mbedtls_mpi_free>
    93a4:	aa1603e0 	mov	x0, x22
    93a8:	97fff768 	bl	7148 <mbedtls_mpi_free>
    93ac:	f9403be0 	ldr	x0, [sp, #112]
    93b0:	b4000060 	cbz	x0, 93bc <mbedtls_mpi_exp_mod+0x62c>
    93b4:	f9400800 	ldr	x0, [x0, #16]
    93b8:	b5ffd1a0 	cbnz	x0, 8dec <mbedtls_mpi_exp_mod+0x5c>
    93bc:	aa1803e0 	mov	x0, x24
    93c0:	97fff762 	bl	7148 <mbedtls_mpi_free>
    93c4:	17fffe8a 	b	8dec <mbedtls_mpi_exp_mod+0x5c>
    93c8:	f9400740 	ldr	x0, [x26, #8]
    93cc:	b4fffc40 	cbz	x0, 9354 <mbedtls_mpi_exp_mod+0x5c4>
    93d0:	f9400b40 	ldr	x0, [x26, #16]
    93d4:	b9400000 	ldr	w0, [x0]
    93d8:	3607fbe0 	tbz	w0, #0, 9354 <mbedtls_mpi_exp_mod+0x5c4>
    93dc:	b940a7e0 	ldr	w0, [sp, #164]
    93e0:	aa1403e2 	mov	x2, x20
    93e4:	b9000280 	str	w0, [x20]
    93e8:	aa1503e1 	mov	x1, x21
    93ec:	aa1403e0 	mov	x0, x20
    93f0:	97fffa73 	bl	7dbc <mbedtls_mpi_add_mpi>
    93f4:	34fffb00 	cbz	w0, 9354 <mbedtls_mpi_exp_mod+0x5c4>
    93f8:	2a0003f3 	mov	w19, w0
    93fc:	17ffffd9 	b	9360 <mbedtls_mpi_exp_mod+0x5d0>
    9400:	128001f3 	mov	w19, #0xfffffff0            	// #-16
    9404:	17ffffdf 	b	9380 <mbedtls_mpi_exp_mod+0x5f0>
    9408:	2a1303e0 	mov	w0, w19
    940c:	a94153f3 	ldp	x19, x20, [sp, #16]
    9410:	a9425bf5 	ldp	x21, x22, [sp, #32]
    9414:	a94363f7 	ldp	x23, x24, [sp, #48]
    9418:	a9446bf9 	ldp	x25, x26, [sp, #64]
    941c:	a94573fb 	ldp	x27, x28, [sp, #80]
    9420:	a8d67bfd 	ldp	x29, x30, [sp], #352
    9424:	d65f03c0 	ret

0000000000009428 <mbedtls_mpi_gcd>:
mbedtls_mpi_gcd():
    9428:	a9b67bfd 	stp	x29, x30, [sp, #-160]!
    942c:	910003fd 	mov	x29, sp
    9430:	a90363f7 	stp	x23, x24, [sp, #48]
    9434:	aa0003f7 	mov	x23, x0
    9438:	90000080 	adrp	x0, 19000 <_DYNAMIC>
    943c:	a90153f3 	stp	x19, x20, [sp, #16]
    9440:	9101e3f4 	add	x20, sp, #0x78
    9444:	f9409800 	ldr	x0, [x0, #304]
    9448:	a9025bf5 	stp	x21, x22, [sp, #32]
    944c:	910163f5 	add	x21, sp, #0x58
    9450:	f90023f9 	str	x25, [sp, #64]
    9454:	aa0103f9 	mov	x25, x1
    9458:	aa0203f6 	mov	x22, x2
    945c:	f9400001 	ldr	x1, [x0]
    9460:	f9004fe1 	str	x1, [sp, #152]
    9464:	d2800001 	mov	x1, #0x0                   	// #0
    9468:	aa1503e0 	mov	x0, x21
    946c:	97fff72d 	bl	7120 <mbedtls_mpi_init_mempool>
    9470:	aa1403e0 	mov	x0, x20
    9474:	97fff72b 	bl	7120 <mbedtls_mpi_init_mempool>
    9478:	aa1903e1 	mov	x1, x25
    947c:	aa1503e0 	mov	x0, x21
    9480:	97fff7e8 	bl	7420 <mbedtls_mpi_copy>
    9484:	2a0003f3 	mov	w19, w0
    9488:	35000840 	cbnz	w0, 9590 <mbedtls_mpi_gcd+0x168>
    948c:	aa1603e1 	mov	x1, x22
    9490:	aa1403e0 	mov	x0, x20
    9494:	97fff7e3 	bl	7420 <mbedtls_mpi_copy>
    9498:	2a0003f3 	mov	w19, w0
    949c:	350007a0 	cbnz	w0, 9590 <mbedtls_mpi_gcd+0x168>
    94a0:	aa1503e0 	mov	x0, x21
    94a4:	97fff87d 	bl	7698 <mbedtls_mpi_lsb>
    94a8:	aa0003f8 	mov	x24, x0
    94ac:	aa1403e0 	mov	x0, x20
    94b0:	97fff87a 	bl	7698 <mbedtls_mpi_lsb>
    94b4:	aa0003f6 	mov	x22, x0
    94b8:	b5000140 	cbnz	x0, 94e0 <mbedtls_mpi_gcd+0xb8>
    94bc:	aa1403e0 	mov	x0, x20
    94c0:	d2800001 	mov	x1, #0x0                   	// #0
    94c4:	97fff847 	bl	75e0 <mbedtls_mpi_get_bit>
    94c8:	350000c0 	cbnz	w0, 94e0 <mbedtls_mpi_gcd+0xb8>
    94cc:	aa1903e1 	mov	x1, x25
    94d0:	aa1703e0 	mov	x0, x23
    94d4:	97fff7d3 	bl	7420 <mbedtls_mpi_copy>
    94d8:	2a0003f3 	mov	w19, w0
    94dc:	1400002d 	b	9590 <mbedtls_mpi_gcd+0x168>
    94e0:	52800020 	mov	w0, #0x1                   	// #1
    94e4:	b9005be0 	str	w0, [sp, #88]
    94e8:	b9007be0 	str	w0, [sp, #120]
    94ec:	aa1503e0 	mov	x0, x21
    94f0:	52800001 	mov	w1, #0x0                   	// #0
    94f4:	97fff968 	bl	7a94 <mbedtls_mpi_cmp_int>
    94f8:	35000120 	cbnz	w0, 951c <mbedtls_mpi_gcd+0xf4>
    94fc:	eb16031f 	cmp	x24, x22
    9500:	aa1403e0 	mov	x0, x20
    9504:	9a969301 	csel	x1, x24, x22, ls  // ls = plast
    9508:	97fff8b8 	bl	77e8 <mbedtls_mpi_shift_l>
    950c:	2a0003f3 	mov	w19, w0
    9510:	35000400 	cbnz	w0, 9590 <mbedtls_mpi_gcd+0x168>
    9514:	aa1403e1 	mov	x1, x20
    9518:	17ffffee 	b	94d0 <mbedtls_mpi_gcd+0xa8>
    951c:	aa1503e0 	mov	x0, x21
    9520:	97fff85e 	bl	7698 <mbedtls_mpi_lsb>
    9524:	aa0003e1 	mov	x1, x0
    9528:	aa1503e0 	mov	x0, x21
    952c:	97fff8f3 	bl	78f8 <mbedtls_mpi_shift_r>
    9530:	2a0003f3 	mov	w19, w0
    9534:	350002e0 	cbnz	w0, 9590 <mbedtls_mpi_gcd+0x168>
    9538:	aa1403e0 	mov	x0, x20
    953c:	97fff857 	bl	7698 <mbedtls_mpi_lsb>
    9540:	aa0003e1 	mov	x1, x0
    9544:	aa1403e0 	mov	x0, x20
    9548:	97fff8ec 	bl	78f8 <mbedtls_mpi_shift_r>
    954c:	2a0003f3 	mov	w19, w0
    9550:	35000200 	cbnz	w0, 9590 <mbedtls_mpi_gcd+0x168>
    9554:	aa1403e1 	mov	x1, x20
    9558:	aa1503e0 	mov	x0, x21
    955c:	97fff91a 	bl	79c4 <mbedtls_mpi_cmp_mpi>
    9560:	37f80300 	tbnz	w0, #31, 95c0 <mbedtls_mpi_gcd+0x198>
    9564:	aa1403e2 	mov	x2, x20
    9568:	aa1503e1 	mov	x1, x21
    956c:	aa1503e0 	mov	x0, x21
    9570:	97fff9a5 	bl	7c04 <mbedtls_mpi_sub_abs>
    9574:	2a0003f3 	mov	w19, w0
    9578:	350000c0 	cbnz	w0, 9590 <mbedtls_mpi_gcd+0x168>
    957c:	aa1503e0 	mov	x0, x21
    9580:	d2800021 	mov	x1, #0x1                   	// #1
    9584:	97fff8dd 	bl	78f8 <mbedtls_mpi_shift_r>
    9588:	2a0003f3 	mov	w19, w0
    958c:	34fffb00 	cbz	w0, 94ec <mbedtls_mpi_gcd+0xc4>
    9590:	aa1503e0 	mov	x0, x21
    9594:	97fff6ed 	bl	7148 <mbedtls_mpi_free>
    9598:	aa1403e0 	mov	x0, x20
    959c:	97fff6eb 	bl	7148 <mbedtls_mpi_free>
    95a0:	90000080 	adrp	x0, 19000 <_DYNAMIC>
    95a4:	f9409800 	ldr	x0, [x0, #304]
    95a8:	f9404fe2 	ldr	x2, [sp, #152]
    95ac:	f9400001 	ldr	x1, [x0]
    95b0:	eb010042 	subs	x2, x2, x1
    95b4:	d2800001 	mov	x1, #0x0                   	// #0
    95b8:	54000160 	b.eq	95e4 <mbedtls_mpi_gcd+0x1bc>  // b.none
    95bc:	97ffdc2f 	bl	678 <__stack_chk_fail>
    95c0:	aa1503e2 	mov	x2, x21
    95c4:	aa1403e1 	mov	x1, x20
    95c8:	aa1403e0 	mov	x0, x20
    95cc:	97fff98e 	bl	7c04 <mbedtls_mpi_sub_abs>
    95d0:	2a0003f3 	mov	w19, w0
    95d4:	35fffde0 	cbnz	w0, 9590 <mbedtls_mpi_gcd+0x168>
    95d8:	aa1403e0 	mov	x0, x20
    95dc:	d2800021 	mov	x1, #0x1                   	// #1
    95e0:	17ffffe9 	b	9584 <mbedtls_mpi_gcd+0x15c>
    95e4:	2a1303e0 	mov	w0, w19
    95e8:	a94153f3 	ldp	x19, x20, [sp, #16]
    95ec:	a9425bf5 	ldp	x21, x22, [sp, #32]
    95f0:	a94363f7 	ldp	x23, x24, [sp, #48]
    95f4:	f94023f9 	ldr	x25, [sp, #64]
    95f8:	a8ca7bfd 	ldp	x29, x30, [sp], #160
    95fc:	d65f03c0 	ret

0000000000009600 <mbedtls_mpi_fill_random>:
mbedtls_mpi_fill_random():
    9600:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    9604:	f240043f 	tst	x1, #0x3
    9608:	910003fd 	mov	x29, sp
    960c:	a90153f3 	stp	x19, x20, [sp, #16]
    9610:	aa0103f3 	mov	x19, x1
    9614:	d342fc21 	lsr	x1, x1, #2
    9618:	aa0003f4 	mov	x20, x0
    961c:	9a810421 	cinc	x1, x1, ne  // ne = any
    9620:	a9025bf5 	stp	x21, x22, [sp, #32]
    9624:	aa0203f5 	mov	x21, x2
    9628:	aa0303f6 	mov	x22, x3
    962c:	97fff71c 	bl	729c <mbedtls_mpi_resize_clear>
    9630:	35000140 	cbnz	w0, 9658 <mbedtls_mpi_fill_random+0x58>
    9634:	b4000133 	cbz	x19, 9658 <mbedtls_mpi_fill_random+0x58>
    9638:	aa1603e4 	mov	x4, x22
    963c:	aa1503e3 	mov	x3, x21
    9640:	aa1303e2 	mov	x2, x19
    9644:	a9408281 	ldp	x1, x0, [x20, #8]
    9648:	a94153f3 	ldp	x19, x20, [sp, #16]
    964c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    9650:	a8c37bfd 	ldp	x29, x30, [sp], #48
    9654:	14000655 	b	afa8 <mbedtls_mpi_core_fill_random>
    9658:	a94153f3 	ldp	x19, x20, [sp, #16]
    965c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    9660:	a8c37bfd 	ldp	x29, x30, [sp], #48
    9664:	d65f03c0 	ret

0000000000009668 <mpi_miller_rabin>:
mpi_miller_rabin():
    9668:	a9ad7bfd 	stp	x29, x30, [sp, #-304]!
    966c:	910003fd 	mov	x29, sp
    9670:	a9025bf5 	stp	x21, x22, [sp, #32]
    9674:	aa0003f6 	mov	x22, x0
    9678:	90000080 	adrp	x0, 19000 <_DYNAMIC>
    967c:	a90153f3 	stp	x19, x20, [sp, #16]
    9680:	910223f5 	add	x21, sp, #0x88
    9684:	9103a3f4 	add	x20, sp, #0xe8
    9688:	f9409800 	ldr	x0, [x0, #304]
    968c:	a90363f7 	stp	x23, x24, [sp, #48]
    9690:	9102a3f7 	add	x23, sp, #0xa8
    9694:	a9046bf9 	stp	x25, x26, [sp, #64]
    9698:	910323f8 	add	x24, sp, #0xc8
    969c:	910423fa 	add	x26, sp, #0x108
    96a0:	a90573fb 	stp	x27, x28, [sp, #80]
    96a4:	a9060be1 	stp	x1, x2, [sp, #96]
    96a8:	f9003be3 	str	x3, [sp, #112]
    96ac:	f9400001 	ldr	x1, [x0]
    96b0:	f90097e1 	str	x1, [sp, #296]
    96b4:	d2800001 	mov	x1, #0x0                   	// #0
    96b8:	aa1503e0 	mov	x0, x21
    96bc:	97fff699 	bl	7120 <mbedtls_mpi_init_mempool>
    96c0:	aa1703e0 	mov	x0, x23
    96c4:	97fff697 	bl	7120 <mbedtls_mpi_init_mempool>
    96c8:	aa1803e0 	mov	x0, x24
    96cc:	97fff695 	bl	7120 <mbedtls_mpi_init_mempool>
    96d0:	aa1403e0 	mov	x0, x20
    96d4:	97fff693 	bl	7120 <mbedtls_mpi_init_mempool>
    96d8:	aa1a03e0 	mov	x0, x26
    96dc:	97fff691 	bl	7120 <mbedtls_mpi_init_mempool>
    96e0:	aa1603e1 	mov	x1, x22
    96e4:	aa1503e0 	mov	x0, x21
    96e8:	52800022 	mov	w2, #0x1                   	// #1
    96ec:	97fff9d6 	bl	7e44 <mbedtls_mpi_sub_int>
    96f0:	2a0003f3 	mov	w19, w0
    96f4:	35000600 	cbnz	w0, 97b4 <mpi_miller_rabin+0x14c>
    96f8:	aa1503e0 	mov	x0, x21
    96fc:	97fff7e7 	bl	7698 <mbedtls_mpi_lsb>
    9700:	aa1503e1 	mov	x1, x21
    9704:	aa0003f9 	mov	x25, x0
    9708:	aa1703e0 	mov	x0, x23
    970c:	97fff745 	bl	7420 <mbedtls_mpi_copy>
    9710:	2a0003f3 	mov	w19, w0
    9714:	35000500 	cbnz	w0, 97b4 <mpi_miller_rabin+0x14c>
    9718:	aa1903e1 	mov	x1, x25
    971c:	aa1703e0 	mov	x0, x23
    9720:	97fff876 	bl	78f8 <mbedtls_mpi_shift_r>
    9724:	2a0003f3 	mov	w19, w0
    9728:	35000460 	cbnz	w0, 97b4 <mpi_miller_rabin+0x14c>
    972c:	d280001b 	mov	x27, #0x0                   	// #0
    9730:	f94033e0 	ldr	x0, [sp, #96]
    9734:	eb00037f 	cmp	x27, x0
    9738:	540003e0 	b.eq	97b4 <mpi_miller_rabin+0x14c>  // b.none
    973c:	528025dc 	mov	w28, #0x12e                 	// #302
    9740:	a9468fe2 	ldp	x2, x3, [sp, #104]
    9744:	aa1403e0 	mov	x0, x20
    9748:	f94006c1 	ldr	x1, [x22, #8]
    974c:	d37ef421 	lsl	x1, x1, #2
    9750:	97ffffac 	bl	9600 <mbedtls_mpi_fill_random>
    9754:	35000c80 	cbnz	w0, 98e4 <mpi_miller_rabin+0x27c>
    9758:	aa1403e0 	mov	x0, x20
    975c:	97fff7e4 	bl	76ec <mbedtls_mpi_bitlen>
    9760:	aa0003e1 	mov	x1, x0
    9764:	aa1503e0 	mov	x0, x21
    9768:	f9003fe1 	str	x1, [sp, #120]
    976c:	97fff7e0 	bl	76ec <mbedtls_mpi_bitlen>
    9770:	f9403fe1 	ldr	x1, [sp, #120]
    9774:	eb00003f 	cmp	x1, x0
    9778:	54000189 	b.ls	97a8 <mpi_miller_rabin+0x140>  // b.plast
    977c:	a94f0fe1 	ldp	x1, x3, [sp, #240]
    9780:	d37ef422 	lsl	x2, x1, #2
    9784:	d1000421 	sub	x1, x1, #0x1
    9788:	d1001042 	sub	x2, x2, #0x4
    978c:	4b011400 	sub	w0, w0, w1, lsl #5
    9790:	12800001 	mov	w1, #0xffffffff            	// #-1
    9794:	51000400 	sub	w0, w0, #0x1
    9798:	1ac02020 	lsl	w0, w1, w0
    979c:	b8626861 	ldr	w1, [x3, x2]
    97a0:	0a200020 	bic	w0, w1, w0
    97a4:	b8226860 	str	w0, [x3, x2]
    97a8:	7100079c 	subs	w28, w28, #0x1
    97ac:	54000281 	b.ne	97fc <mpi_miller_rabin+0x194>  // b.any
    97b0:	128001b3 	mov	w19, #0xfffffff2            	// #-14
    97b4:	aa1503e0 	mov	x0, x21
    97b8:	97fff664 	bl	7148 <mbedtls_mpi_free>
    97bc:	aa1703e0 	mov	x0, x23
    97c0:	97fff662 	bl	7148 <mbedtls_mpi_free>
    97c4:	aa1803e0 	mov	x0, x24
    97c8:	97fff660 	bl	7148 <mbedtls_mpi_free>
    97cc:	aa1403e0 	mov	x0, x20
    97d0:	97fff65e 	bl	7148 <mbedtls_mpi_free>
    97d4:	aa1a03e0 	mov	x0, x26
    97d8:	97fff65c 	bl	7148 <mbedtls_mpi_free>
    97dc:	90000080 	adrp	x0, 19000 <_DYNAMIC>
    97e0:	f9409800 	ldr	x0, [x0, #304]
    97e4:	f94097e2 	ldr	x2, [sp, #296]
    97e8:	f9400001 	ldr	x1, [x0]
    97ec:	eb010042 	subs	x2, x2, x1
    97f0:	d2800001 	mov	x1, #0x0                   	// #0
    97f4:	540007c0 	b.eq	98ec <mpi_miller_rabin+0x284>  // b.none
    97f8:	97ffdba0 	bl	678 <__stack_chk_fail>
    97fc:	aa1503e1 	mov	x1, x21
    9800:	aa1403e0 	mov	x0, x20
    9804:	97fff870 	bl	79c4 <mbedtls_mpi_cmp_mpi>
    9808:	36fff9c0 	tbz	w0, #31, 9740 <mpi_miller_rabin+0xd8>
    980c:	aa1403e0 	mov	x0, x20
    9810:	52800021 	mov	w1, #0x1                   	// #1
    9814:	97fff8a0 	bl	7a94 <mbedtls_mpi_cmp_int>
    9818:	7100001f 	cmp	w0, #0x0
    981c:	54fff92d 	b.le	9740 <mpi_miller_rabin+0xd8>
    9820:	aa1a03e4 	mov	x4, x26
    9824:	aa1603e3 	mov	x3, x22
    9828:	aa1703e2 	mov	x2, x23
    982c:	aa1403e1 	mov	x1, x20
    9830:	aa1403e0 	mov	x0, x20
    9834:	97fffd57 	bl	8d90 <mbedtls_mpi_exp_mod>
    9838:	35000560 	cbnz	w0, 98e4 <mpi_miller_rabin+0x27c>
    983c:	aa1503e1 	mov	x1, x21
    9840:	aa1403e0 	mov	x0, x20
    9844:	97fff860 	bl	79c4 <mbedtls_mpi_cmp_mpi>
    9848:	35000060 	cbnz	w0, 9854 <mpi_miller_rabin+0x1ec>
    984c:	9100077b 	add	x27, x27, #0x1
    9850:	17ffffb8 	b	9730 <mpi_miller_rabin+0xc8>
    9854:	aa1403e0 	mov	x0, x20
    9858:	52800021 	mov	w1, #0x1                   	// #1
    985c:	97fff88e 	bl	7a94 <mbedtls_mpi_cmp_int>
    9860:	34ffff60 	cbz	w0, 984c <mpi_miller_rabin+0x1e4>
    9864:	d280003c 	mov	x28, #0x1                   	// #1
    9868:	eb19039f 	cmp	x28, x25
    986c:	54000262 	b.cs	98b8 <mpi_miller_rabin+0x250>  // b.hs, b.nlast
    9870:	aa1503e1 	mov	x1, x21
    9874:	aa1403e0 	mov	x0, x20
    9878:	97fff853 	bl	79c4 <mbedtls_mpi_cmp_mpi>
    987c:	340001e0 	cbz	w0, 98b8 <mpi_miller_rabin+0x250>
    9880:	aa1403e2 	mov	x2, x20
    9884:	aa1403e1 	mov	x1, x20
    9888:	aa1803e0 	mov	x0, x24
    988c:	97fff98c 	bl	7ebc <mbedtls_mpi_mul_mpi>
    9890:	350002a0 	cbnz	w0, 98e4 <mpi_miller_rabin+0x27c>
    9894:	aa1603e2 	mov	x2, x22
    9898:	aa1803e1 	mov	x1, x24
    989c:	aa1403e0 	mov	x0, x20
    98a0:	97fffc0c 	bl	88d0 <mbedtls_mpi_mod_mpi>
    98a4:	35000200 	cbnz	w0, 98e4 <mpi_miller_rabin+0x27c>
    98a8:	aa1403e0 	mov	x0, x20
    98ac:	52800021 	mov	w1, #0x1                   	// #1
    98b0:	97fff879 	bl	7a94 <mbedtls_mpi_cmp_int>
    98b4:	35000140 	cbnz	w0, 98dc <mpi_miller_rabin+0x274>
    98b8:	aa1503e1 	mov	x1, x21
    98bc:	aa1403e0 	mov	x0, x20
    98c0:	97fff841 	bl	79c4 <mbedtls_mpi_cmp_mpi>
    98c4:	35fff760 	cbnz	w0, 97b0 <mpi_miller_rabin+0x148>
    98c8:	aa1403e0 	mov	x0, x20
    98cc:	52800021 	mov	w1, #0x1                   	// #1
    98d0:	97fff871 	bl	7a94 <mbedtls_mpi_cmp_int>
    98d4:	35fffbc0 	cbnz	w0, 984c <mpi_miller_rabin+0x1e4>
    98d8:	17ffffb6 	b	97b0 <mpi_miller_rabin+0x148>
    98dc:	9100079c 	add	x28, x28, #0x1
    98e0:	17ffffe2 	b	9868 <mpi_miller_rabin+0x200>
    98e4:	2a0003f3 	mov	w19, w0
    98e8:	17ffffb3 	b	97b4 <mpi_miller_rabin+0x14c>
    98ec:	2a1303e0 	mov	w0, w19
    98f0:	a94153f3 	ldp	x19, x20, [sp, #16]
    98f4:	a9425bf5 	ldp	x21, x22, [sp, #32]
    98f8:	a94363f7 	ldp	x23, x24, [sp, #48]
    98fc:	a9446bf9 	ldp	x25, x26, [sp, #64]
    9900:	a94573fb 	ldp	x27, x28, [sp, #80]
    9904:	a8d37bfd 	ldp	x29, x30, [sp], #304
    9908:	d65f03c0 	ret

000000000000990c <mbedtls_mpi_random>:
mbedtls_mpi_random():
    990c:	36f80121 	tbz	w1, #31, 9930 <mbedtls_mpi_random+0x24>
    9910:	12800060 	mov	w0, #0xfffffffc            	// #-4
    9914:	d65f03c0 	ret
    9918:	12800060 	mov	w0, #0xfffffffc            	// #-4
    991c:	a94153f3 	ldp	x19, x20, [sp, #16]
    9920:	a9425bf5 	ldp	x21, x22, [sp, #32]
    9924:	f9401bf7 	ldr	x23, [sp, #48]
    9928:	a8c47bfd 	ldp	x29, x30, [sp], #64
    992c:	d65f03c0 	ret
    9930:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    9934:	910003fd 	mov	x29, sp
    9938:	a90153f3 	stp	x19, x20, [sp, #16]
    993c:	aa0003f3 	mov	x19, x0
    9940:	aa0203f4 	mov	x20, x2
    9944:	aa0203e0 	mov	x0, x2
    9948:	a9025bf5 	stp	x21, x22, [sp, #32]
    994c:	2a0103f5 	mov	w21, w1
    9950:	aa0303f6 	mov	x22, x3
    9954:	f9001bf7 	str	x23, [sp, #48]
    9958:	aa0403f7 	mov	x23, x4
    995c:	97fff84e 	bl	7a94 <mbedtls_mpi_cmp_int>
    9960:	7100001f 	cmp	w0, #0x0
    9964:	54fffdad 	b.le	9918 <mbedtls_mpi_random+0xc>
    9968:	f9400681 	ldr	x1, [x20, #8]
    996c:	aa1303e0 	mov	x0, x19
    9970:	97fff64b 	bl	729c <mbedtls_mpi_resize_clear>
    9974:	35fffd40 	cbnz	w0, 991c <mbedtls_mpi_random+0x10>
    9978:	aa1703e5 	mov	x5, x23
    997c:	aa1603e4 	mov	x4, x22
    9980:	2a1503e1 	mov	w1, w21
    9984:	a9408263 	ldp	x3, x0, [x19, #8]
    9988:	f9400a82 	ldr	x2, [x20, #16]
    998c:	a94153f3 	ldp	x19, x20, [sp, #16]
    9990:	a9425bf5 	ldp	x21, x22, [sp, #32]
    9994:	f9401bf7 	ldr	x23, [sp, #48]
    9998:	a8c47bfd 	ldp	x29, x30, [sp], #64
    999c:	140005af 	b	b058 <mbedtls_mpi_core_random>

00000000000099a0 <mbedtls_mpi_inv_mod>:
mbedtls_mpi_inv_mod():
    99a0:	a9a67bfd 	stp	x29, x30, [sp, #-416]!
    99a4:	910003fd 	mov	x29, sp
    99a8:	a90603e1 	stp	x1, x0, [sp, #96]
    99ac:	90000080 	adrp	x0, 19000 <_DYNAMIC>
    99b0:	f9409800 	ldr	x0, [x0, #304]
    99b4:	a90153f3 	stp	x19, x20, [sp, #16]
    99b8:	aa0203f4 	mov	x20, x2
    99bc:	a9025bf5 	stp	x21, x22, [sp, #32]
    99c0:	a90363f7 	stp	x23, x24, [sp, #48]
    99c4:	a9046bf9 	stp	x25, x26, [sp, #64]
    99c8:	a90573fb 	stp	x27, x28, [sp, #80]
    99cc:	f9400001 	ldr	x1, [x0]
    99d0:	f900cfe1 	str	x1, [sp, #408]
    99d4:	d2800001 	mov	x1, #0x0                   	// #0
    99d8:	aa0203e0 	mov	x0, x2
    99dc:	52800021 	mov	w1, #0x1                   	// #1
    99e0:	97fff82d 	bl	7a94 <mbedtls_mpi_cmp_int>
    99e4:	7100001f 	cmp	w0, #0x0
    99e8:	54001f4d 	b.le	9dd0 <mbedtls_mpi_inv_mod+0x430>
    99ec:	910263fa 	add	x26, sp, #0x98
    99f0:	9102e3f8 	add	x24, sp, #0xb8
    99f4:	aa1a03e0 	mov	x0, x26
    99f8:	97fff5ca 	bl	7120 <mbedtls_mpi_init_mempool>
    99fc:	aa1803e0 	mov	x0, x24
    9a00:	910363f7 	add	x23, sp, #0xd8
    9a04:	97fff5c7 	bl	7120 <mbedtls_mpi_init_mempool>
    9a08:	9103e3f6 	add	x22, sp, #0xf8
    9a0c:	aa1703e0 	mov	x0, x23
    9a10:	97fff5c4 	bl	7120 <mbedtls_mpi_init_mempool>
    9a14:	aa1603e0 	mov	x0, x22
    9a18:	9101e3fc 	add	x28, sp, #0x78
    9a1c:	97fff5c1 	bl	7120 <mbedtls_mpi_init_mempool>
    9a20:	910463fb 	add	x27, sp, #0x118
    9a24:	aa1c03e0 	mov	x0, x28
    9a28:	97fff5be 	bl	7120 <mbedtls_mpi_init_mempool>
    9a2c:	aa1b03e0 	mov	x0, x27
    9a30:	9104e3f9 	add	x25, sp, #0x138
    9a34:	97fff5bb 	bl	7120 <mbedtls_mpi_init_mempool>
    9a38:	910563f3 	add	x19, sp, #0x158
    9a3c:	aa1903e0 	mov	x0, x25
    9a40:	97fff5b8 	bl	7120 <mbedtls_mpi_init_mempool>
    9a44:	aa1303e0 	mov	x0, x19
    9a48:	9105e3f5 	add	x21, sp, #0x178
    9a4c:	97fff5b5 	bl	7120 <mbedtls_mpi_init_mempool>
    9a50:	aa1503e0 	mov	x0, x21
    9a54:	97fff5b3 	bl	7120 <mbedtls_mpi_init_mempool>
    9a58:	f94033e1 	ldr	x1, [sp, #96]
    9a5c:	aa1403e2 	mov	x2, x20
    9a60:	aa1c03e0 	mov	x0, x28
    9a64:	97fffe71 	bl	9428 <mbedtls_mpi_gcd>
    9a68:	2a0003e1 	mov	w1, w0
    9a6c:	35000d20 	cbnz	w0, 9c10 <mbedtls_mpi_inv_mod+0x270>
    9a70:	aa1c03e0 	mov	x0, x28
    9a74:	52800021 	mov	w1, #0x1                   	// #1
    9a78:	97fff807 	bl	7a94 <mbedtls_mpi_cmp_int>
    9a7c:	35001a60 	cbnz	w0, 9dc8 <mbedtls_mpi_inv_mod+0x428>
    9a80:	f94033e1 	ldr	x1, [sp, #96]
    9a84:	aa1403e2 	mov	x2, x20
    9a88:	aa1a03e0 	mov	x0, x26
    9a8c:	97fffb91 	bl	88d0 <mbedtls_mpi_mod_mpi>
    9a90:	2a0003e1 	mov	w1, w0
    9a94:	35000be0 	cbnz	w0, 9c10 <mbedtls_mpi_inv_mod+0x270>
    9a98:	aa1a03e1 	mov	x1, x26
    9a9c:	aa1803e0 	mov	x0, x24
    9aa0:	97fff660 	bl	7420 <mbedtls_mpi_copy>
    9aa4:	2a0003e1 	mov	w1, w0
    9aa8:	35000b40 	cbnz	w0, 9c10 <mbedtls_mpi_inv_mod+0x270>
    9aac:	aa1403e1 	mov	x1, x20
    9ab0:	aa1b03e0 	mov	x0, x27
    9ab4:	97fff65b 	bl	7420 <mbedtls_mpi_copy>
    9ab8:	2a0003e1 	mov	w1, w0
    9abc:	35000aa0 	cbnz	w0, 9c10 <mbedtls_mpi_inv_mod+0x270>
    9ac0:	aa1403e1 	mov	x1, x20
    9ac4:	aa1903e0 	mov	x0, x25
    9ac8:	97fff656 	bl	7420 <mbedtls_mpi_copy>
    9acc:	2a0003e1 	mov	w1, w0
    9ad0:	35000a00 	cbnz	w0, 9c10 <mbedtls_mpi_inv_mod+0x270>
    9ad4:	52800021 	mov	w1, #0x1                   	// #1
    9ad8:	aa1703e0 	mov	x0, x23
    9adc:	97fff6a7 	bl	7578 <mbedtls_mpi_lset>
    9ae0:	2a0003e1 	mov	w1, w0
    9ae4:	35000960 	cbnz	w0, 9c10 <mbedtls_mpi_inv_mod+0x270>
    9ae8:	aa1603e0 	mov	x0, x22
    9aec:	97fff6a3 	bl	7578 <mbedtls_mpi_lset>
    9af0:	2a0003e1 	mov	w1, w0
    9af4:	350008e0 	cbnz	w0, 9c10 <mbedtls_mpi_inv_mod+0x270>
    9af8:	aa1303e0 	mov	x0, x19
    9afc:	97fff69f 	bl	7578 <mbedtls_mpi_lset>
    9b00:	2a0003e1 	mov	w1, w0
    9b04:	35000860 	cbnz	w0, 9c10 <mbedtls_mpi_inv_mod+0x270>
    9b08:	aa1503e0 	mov	x0, x21
    9b0c:	52800021 	mov	w1, #0x1                   	// #1
    9b10:	97fff69a 	bl	7578 <mbedtls_mpi_lset>
    9b14:	2a0003e1 	mov	w1, w0
    9b18:	350007c0 	cbnz	w0, 9c10 <mbedtls_mpi_inv_mod+0x270>
    9b1c:	f94067e0 	ldr	x0, [sp, #200]
    9b20:	b9400000 	ldr	w0, [x0]
    9b24:	36000560 	tbz	w0, #0, 9bd0 <mbedtls_mpi_inv_mod+0x230>
    9b28:	f940a7e0 	ldr	x0, [sp, #328]
    9b2c:	b9400000 	ldr	w0, [x0]
    9b30:	36000ca0 	tbz	w0, #0, 9cc4 <mbedtls_mpi_inv_mod+0x324>
    9b34:	aa1903e1 	mov	x1, x25
    9b38:	aa1803e0 	mov	x0, x24
    9b3c:	97fff7a2 	bl	79c4 <mbedtls_mpi_cmp_mpi>
    9b40:	37f81080 	tbnz	w0, #31, 9d50 <mbedtls_mpi_inv_mod+0x3b0>
    9b44:	aa1803e1 	mov	x1, x24
    9b48:	aa1903e2 	mov	x2, x25
    9b4c:	aa1803e0 	mov	x0, x24
    9b50:	97fff89d 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    9b54:	2a0003e1 	mov	w1, w0
    9b58:	350005c0 	cbnz	w0, 9c10 <mbedtls_mpi_inv_mod+0x270>
    9b5c:	aa1703e1 	mov	x1, x23
    9b60:	aa1303e2 	mov	x2, x19
    9b64:	aa1703e0 	mov	x0, x23
    9b68:	97fff897 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    9b6c:	2a0003e1 	mov	w1, w0
    9b70:	35000500 	cbnz	w0, 9c10 <mbedtls_mpi_inv_mod+0x270>
    9b74:	aa1503e2 	mov	x2, x21
    9b78:	aa1603e1 	mov	x1, x22
    9b7c:	aa1603e0 	mov	x0, x22
    9b80:	97fff891 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    9b84:	2a0003e1 	mov	w1, w0
    9b88:	35000440 	cbnz	w0, 9c10 <mbedtls_mpi_inv_mod+0x270>
    9b8c:	aa1803e0 	mov	x0, x24
    9b90:	52800001 	mov	w1, #0x0                   	// #0
    9b94:	97fff7c0 	bl	7a94 <mbedtls_mpi_cmp_int>
    9b98:	35fffc20 	cbnz	w0, 9b1c <mbedtls_mpi_inv_mod+0x17c>
    9b9c:	aa1303e0 	mov	x0, x19
    9ba0:	52800001 	mov	w1, #0x0                   	// #0
    9ba4:	97fff7bc 	bl	7a94 <mbedtls_mpi_cmp_int>
    9ba8:	37f80f40 	tbnz	w0, #31, 9d90 <mbedtls_mpi_inv_mod+0x3f0>
    9bac:	aa1403e1 	mov	x1, x20
    9bb0:	aa1303e0 	mov	x0, x19
    9bb4:	97fff784 	bl	79c4 <mbedtls_mpi_cmp_mpi>
    9bb8:	36f80fa0 	tbz	w0, #31, 9dac <mbedtls_mpi_inv_mod+0x40c>
    9bbc:	f94037e0 	ldr	x0, [sp, #104]
    9bc0:	aa1303e1 	mov	x1, x19
    9bc4:	97fff617 	bl	7420 <mbedtls_mpi_copy>
    9bc8:	2a0003e1 	mov	w1, w0
    9bcc:	14000011 	b	9c10 <mbedtls_mpi_inv_mod+0x270>
    9bd0:	d2800021 	mov	x1, #0x1                   	// #1
    9bd4:	aa1803e0 	mov	x0, x24
    9bd8:	97fff748 	bl	78f8 <mbedtls_mpi_shift_r>
    9bdc:	2a0003e1 	mov	w1, w0
    9be0:	35000180 	cbnz	w0, 9c10 <mbedtls_mpi_inv_mod+0x270>
    9be4:	f94077e0 	ldr	x0, [sp, #232]
    9be8:	b9400000 	ldr	w0, [x0]
    9bec:	370004a0 	tbnz	w0, #0, 9c80 <mbedtls_mpi_inv_mod+0x2e0>
    9bf0:	f94087e0 	ldr	x0, [sp, #264]
    9bf4:	b9400000 	ldr	w0, [x0]
    9bf8:	37000440 	tbnz	w0, #0, 9c80 <mbedtls_mpi_inv_mod+0x2e0>
    9bfc:	d2800021 	mov	x1, #0x1                   	// #1
    9c00:	aa1703e0 	mov	x0, x23
    9c04:	97fff73d 	bl	78f8 <mbedtls_mpi_shift_r>
    9c08:	2a0003e1 	mov	w1, w0
    9c0c:	34000540 	cbz	w0, 9cb4 <mbedtls_mpi_inv_mod+0x314>
    9c10:	aa1a03e0 	mov	x0, x26
    9c14:	b90063e1 	str	w1, [sp, #96]
    9c18:	97fff54c 	bl	7148 <mbedtls_mpi_free>
    9c1c:	aa1803e0 	mov	x0, x24
    9c20:	97fff54a 	bl	7148 <mbedtls_mpi_free>
    9c24:	aa1703e0 	mov	x0, x23
    9c28:	97fff548 	bl	7148 <mbedtls_mpi_free>
    9c2c:	aa1603e0 	mov	x0, x22
    9c30:	97fff546 	bl	7148 <mbedtls_mpi_free>
    9c34:	aa1c03e0 	mov	x0, x28
    9c38:	97fff544 	bl	7148 <mbedtls_mpi_free>
    9c3c:	aa1b03e0 	mov	x0, x27
    9c40:	97fff542 	bl	7148 <mbedtls_mpi_free>
    9c44:	aa1903e0 	mov	x0, x25
    9c48:	97fff540 	bl	7148 <mbedtls_mpi_free>
    9c4c:	aa1303e0 	mov	x0, x19
    9c50:	97fff53e 	bl	7148 <mbedtls_mpi_free>
    9c54:	aa1503e0 	mov	x0, x21
    9c58:	97fff53c 	bl	7148 <mbedtls_mpi_free>
    9c5c:	b94063e1 	ldr	w1, [sp, #96]
    9c60:	90000080 	adrp	x0, 19000 <_DYNAMIC>
    9c64:	f9409800 	ldr	x0, [x0, #304]
    9c68:	f940cfe3 	ldr	x3, [sp, #408]
    9c6c:	f9400002 	ldr	x2, [x0]
    9c70:	eb020063 	subs	x3, x3, x2
    9c74:	d2800002 	mov	x2, #0x0                   	// #0
    9c78:	54000b00 	b.eq	9dd8 <mbedtls_mpi_inv_mod+0x438>  // b.none
    9c7c:	97ffda7f 	bl	678 <__stack_chk_fail>
    9c80:	aa1703e1 	mov	x1, x23
    9c84:	aa1b03e2 	mov	x2, x27
    9c88:	aa1703e0 	mov	x0, x23
    9c8c:	97fff84c 	bl	7dbc <mbedtls_mpi_add_mpi>
    9c90:	2a0003e1 	mov	w1, w0
    9c94:	35fffbe0 	cbnz	w0, 9c10 <mbedtls_mpi_inv_mod+0x270>
    9c98:	aa1603e1 	mov	x1, x22
    9c9c:	aa1a03e2 	mov	x2, x26
    9ca0:	aa1603e0 	mov	x0, x22
    9ca4:	97fff848 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    9ca8:	2a0003e1 	mov	w1, w0
    9cac:	34fffa80 	cbz	w0, 9bfc <mbedtls_mpi_inv_mod+0x25c>
    9cb0:	17ffffd8 	b	9c10 <mbedtls_mpi_inv_mod+0x270>
    9cb4:	aa1603e0 	mov	x0, x22
    9cb8:	d2800021 	mov	x1, #0x1                   	// #1
    9cbc:	97fff70f 	bl	78f8 <mbedtls_mpi_shift_r>
    9cc0:	17ffff95 	b	9b14 <mbedtls_mpi_inv_mod+0x174>
    9cc4:	d2800021 	mov	x1, #0x1                   	// #1
    9cc8:	aa1903e0 	mov	x0, x25
    9ccc:	97fff70b 	bl	78f8 <mbedtls_mpi_shift_r>
    9cd0:	2a0003e1 	mov	w1, w0
    9cd4:	35fff9e0 	cbnz	w0, 9c10 <mbedtls_mpi_inv_mod+0x270>
    9cd8:	f940b7e0 	ldr	x0, [sp, #360]
    9cdc:	b9400000 	ldr	w0, [x0]
    9ce0:	370001e0 	tbnz	w0, #0, 9d1c <mbedtls_mpi_inv_mod+0x37c>
    9ce4:	f940c7e0 	ldr	x0, [sp, #392]
    9ce8:	b9400000 	ldr	w0, [x0]
    9cec:	37000180 	tbnz	w0, #0, 9d1c <mbedtls_mpi_inv_mod+0x37c>
    9cf0:	d2800021 	mov	x1, #0x1                   	// #1
    9cf4:	aa1303e0 	mov	x0, x19
    9cf8:	97fff700 	bl	78f8 <mbedtls_mpi_shift_r>
    9cfc:	2a0003e1 	mov	w1, w0
    9d00:	35fff880 	cbnz	w0, 9c10 <mbedtls_mpi_inv_mod+0x270>
    9d04:	d2800021 	mov	x1, #0x1                   	// #1
    9d08:	aa1503e0 	mov	x0, x21
    9d0c:	97fff6fb 	bl	78f8 <mbedtls_mpi_shift_r>
    9d10:	2a0003e1 	mov	w1, w0
    9d14:	34fff0a0 	cbz	w0, 9b28 <mbedtls_mpi_inv_mod+0x188>
    9d18:	17ffffbe 	b	9c10 <mbedtls_mpi_inv_mod+0x270>
    9d1c:	aa1303e1 	mov	x1, x19
    9d20:	aa1b03e2 	mov	x2, x27
    9d24:	aa1303e0 	mov	x0, x19
    9d28:	97fff825 	bl	7dbc <mbedtls_mpi_add_mpi>
    9d2c:	2a0003e1 	mov	w1, w0
    9d30:	35fff700 	cbnz	w0, 9c10 <mbedtls_mpi_inv_mod+0x270>
    9d34:	aa1503e1 	mov	x1, x21
    9d38:	aa1a03e2 	mov	x2, x26
    9d3c:	aa1503e0 	mov	x0, x21
    9d40:	97fff821 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    9d44:	2a0003e1 	mov	w1, w0
    9d48:	34fffd40 	cbz	w0, 9cf0 <mbedtls_mpi_inv_mod+0x350>
    9d4c:	17ffffb1 	b	9c10 <mbedtls_mpi_inv_mod+0x270>
    9d50:	aa1903e1 	mov	x1, x25
    9d54:	aa1803e2 	mov	x2, x24
    9d58:	aa1903e0 	mov	x0, x25
    9d5c:	97fff81a 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    9d60:	2a0003e1 	mov	w1, w0
    9d64:	35fff560 	cbnz	w0, 9c10 <mbedtls_mpi_inv_mod+0x270>
    9d68:	aa1303e1 	mov	x1, x19
    9d6c:	aa1703e2 	mov	x2, x23
    9d70:	aa1303e0 	mov	x0, x19
    9d74:	97fff814 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    9d78:	2a0003e1 	mov	w1, w0
    9d7c:	35fff4a0 	cbnz	w0, 9c10 <mbedtls_mpi_inv_mod+0x270>
    9d80:	aa1603e2 	mov	x2, x22
    9d84:	aa1503e1 	mov	x1, x21
    9d88:	aa1503e0 	mov	x0, x21
    9d8c:	17ffff7d 	b	9b80 <mbedtls_mpi_inv_mod+0x1e0>
    9d90:	aa1303e1 	mov	x1, x19
    9d94:	aa1403e2 	mov	x2, x20
    9d98:	aa1303e0 	mov	x0, x19
    9d9c:	97fff808 	bl	7dbc <mbedtls_mpi_add_mpi>
    9da0:	2a0003e1 	mov	w1, w0
    9da4:	34ffefc0 	cbz	w0, 9b9c <mbedtls_mpi_inv_mod+0x1fc>
    9da8:	17ffff9a 	b	9c10 <mbedtls_mpi_inv_mod+0x270>
    9dac:	aa1303e1 	mov	x1, x19
    9db0:	aa1403e2 	mov	x2, x20
    9db4:	aa1303e0 	mov	x0, x19
    9db8:	97fff803 	bl	7dc4 <mbedtls_mpi_sub_mpi>
    9dbc:	2a0003e1 	mov	w1, w0
    9dc0:	34ffef60 	cbz	w0, 9bac <mbedtls_mpi_inv_mod+0x20c>
    9dc4:	17ffff93 	b	9c10 <mbedtls_mpi_inv_mod+0x270>
    9dc8:	128001a1 	mov	w1, #0xfffffff2            	// #-14
    9dcc:	17ffff91 	b	9c10 <mbedtls_mpi_inv_mod+0x270>
    9dd0:	12800061 	mov	w1, #0xfffffffc            	// #-4
    9dd4:	17ffffa3 	b	9c60 <mbedtls_mpi_inv_mod+0x2c0>
    9dd8:	2a0103e0 	mov	w0, w1
    9ddc:	a94153f3 	ldp	x19, x20, [sp, #16]
    9de0:	a9425bf5 	ldp	x21, x22, [sp, #32]
    9de4:	a94363f7 	ldp	x23, x24, [sp, #48]
    9de8:	a9446bf9 	ldp	x25, x26, [sp, #64]
    9dec:	a94573fb 	ldp	x27, x28, [sp, #80]
    9df0:	a8da7bfd 	ldp	x29, x30, [sp], #416
    9df4:	d65f03c0 	ret

0000000000009df8 <mbedtls_mpi_is_prime_ext>:
mbedtls_mpi_is_prime_ext():
    9df8:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
    9dfc:	90000084 	adrp	x4, 19000 <_DYNAMIC>
    9e00:	910003fd 	mov	x29, sp
    9e04:	f9409884 	ldr	x4, [x4, #304]
    9e08:	a90153f3 	stp	x19, x20, [sp, #16]
    9e0c:	2a0103f4 	mov	w20, w1
    9e10:	a9025bf5 	stp	x21, x22, [sp, #32]
    9e14:	910123f3 	add	x19, sp, #0x48
    9e18:	aa0203f5 	mov	x21, x2
    9e1c:	f9001bf7 	str	x23, [sp, #48]
    9e20:	aa0303f6 	mov	x22, x3
    9e24:	52800037 	mov	w23, #0x1                   	// #1
    9e28:	f9400081 	ldr	x1, [x4]
    9e2c:	f90037e1 	str	x1, [sp, #104]
    9e30:	d2800001 	mov	x1, #0x0                   	// #0
    9e34:	b9004bf7 	str	w23, [sp, #72]
    9e38:	a9408001 	ldp	x1, x0, [x0, #8]
    9e3c:	a90503e1 	stp	x1, x0, [sp, #80]
    9e40:	aa1303e0 	mov	x0, x19
    9e44:	52800001 	mov	w1, #0x0                   	// #0
    9e48:	97fff713 	bl	7a94 <mbedtls_mpi_cmp_int>
    9e4c:	35000140 	cbnz	w0, 9e74 <mbedtls_mpi_is_prime_ext+0x7c>
    9e50:	128001a0 	mov	w0, #0xfffffff2            	// #-14
    9e54:	90000084 	adrp	x4, 19000 <_DYNAMIC>
    9e58:	f9409884 	ldr	x4, [x4, #304]
    9e5c:	f94037e1 	ldr	x1, [sp, #104]
    9e60:	f9400082 	ldr	x2, [x4]
    9e64:	eb020021 	subs	x1, x1, x2
    9e68:	d2800002 	mov	x2, #0x0                   	// #0
    9e6c:	540002e0 	b.eq	9ec8 <mbedtls_mpi_is_prime_ext+0xd0>  // b.none
    9e70:	97ffda02 	bl	678 <__stack_chk_fail>
    9e74:	2a1703e1 	mov	w1, w23
    9e78:	aa1303e0 	mov	x0, x19
    9e7c:	97fff706 	bl	7a94 <mbedtls_mpi_cmp_int>
    9e80:	34fffe80 	cbz	w0, 9e50 <mbedtls_mpi_is_prime_ext+0x58>
    9e84:	aa1303e0 	mov	x0, x19
    9e88:	52800041 	mov	w1, #0x2                   	// #2
    9e8c:	97fff702 	bl	7a94 <mbedtls_mpi_cmp_int>
    9e90:	340000c0 	cbz	w0, 9ea8 <mbedtls_mpi_is_prime_ext+0xb0>
    9e94:	aa1303e0 	mov	x0, x19
    9e98:	97fffb7f 	bl	8c94 <mpi_check_small_factors>
    9e9c:	340000a0 	cbz	w0, 9eb0 <mbedtls_mpi_is_prime_ext+0xb8>
    9ea0:	7100041f 	cmp	w0, #0x1
    9ea4:	54fffd81 	b.ne	9e54 <mbedtls_mpi_is_prime_ext+0x5c>  // b.any
    9ea8:	52800000 	mov	w0, #0x0                   	// #0
    9eac:	17ffffea 	b	9e54 <mbedtls_mpi_is_prime_ext+0x5c>
    9eb0:	aa1603e3 	mov	x3, x22
    9eb4:	aa1503e2 	mov	x2, x21
    9eb8:	93407e81 	sxtw	x1, w20
    9ebc:	aa1303e0 	mov	x0, x19
    9ec0:	97fffdea 	bl	9668 <mpi_miller_rabin>
    9ec4:	17ffffe4 	b	9e54 <mbedtls_mpi_is_prime_ext+0x5c>
    9ec8:	a94153f3 	ldp	x19, x20, [sp, #16]
    9ecc:	a9425bf5 	ldp	x21, x22, [sp, #32]
    9ed0:	f9401bf7 	ldr	x23, [sp, #48]
    9ed4:	a8c77bfd 	ldp	x29, x30, [sp], #112
    9ed8:	d65f03c0 	ret

0000000000009edc <mbedtls_mpi_gen_prime>:
mbedtls_mpi_gen_prime():
    9edc:	a9b67bfd 	stp	x29, x30, [sp, #-160]!
    9ee0:	910003fd 	mov	x29, sp
    9ee4:	a90153f3 	stp	x19, x20, [sp, #16]
    9ee8:	aa0003f3 	mov	x19, x0
    9eec:	90000080 	adrp	x0, 19000 <_DYNAMIC>
    9ef0:	a9025bf5 	stp	x21, x22, [sp, #32]
    9ef4:	f9409800 	ldr	x0, [x0, #304]
    9ef8:	a90363f7 	stp	x23, x24, [sp, #48]
    9efc:	a9046bf9 	stp	x25, x26, [sp, #64]
    9f00:	a90573fb 	stp	x27, x28, [sp, #80]
    9f04:	aa0103fc 	mov	x28, x1
    9f08:	f9400001 	ldr	x1, [x0]
    9f0c:	f9004fe1 	str	x1, [sp, #152]
    9f10:	d2800001 	mov	x1, #0x0                   	// #0
    9f14:	d283ffa0 	mov	x0, #0x1ffd                	// #8189
    9f18:	d1000f81 	sub	x1, x28, #0x3
    9f1c:	eb00003f 	cmp	x1, x0
    9f20:	54001708 	b.hi	a200 <mbedtls_mpi_gen_prime+0x324>  // b.pmore
    9f24:	9101e3f4 	add	x20, sp, #0x78
    9f28:	2a0203f8 	mov	w24, w2
    9f2c:	aa1403e0 	mov	x0, x20
    9f30:	aa0303f6 	mov	x22, x3
    9f34:	aa0403f7 	mov	x23, x4
    9f38:	97fff47a 	bl	7120 <mbedtls_mpi_init_mempool>
    9f3c:	f240139f 	tst	x28, #0x1f
    9f40:	d345ff95 	lsr	x21, x28, #5
    9f44:	9a9506a0 	cinc	x0, x21, ne  // ne = any
    9f48:	37080d58 	tbnz	w24, #1, a0f0 <mbedtls_mpi_gen_prime+0x214>
    9f4c:	f1144f9f 	cmp	x28, #0x513
    9f50:	54000f48 	b.hi	a138 <mbedtls_mpi_gen_prime+0x25c>  // b.pmore
    9f54:	f10d479f 	cmp	x28, #0x351
    9f58:	54000f48 	b.hi	a140 <mbedtls_mpi_gen_prime+0x264>  // b.pmore
    9f5c:	f10a279f 	cmp	x28, #0x289
    9f60:	54000f88 	b.hi	a150 <mbedtls_mpi_gen_prime+0x274>  // b.pmore
    9f64:	f105779f 	cmp	x28, #0x15d
    9f68:	54001048 	b.hi	a170 <mbedtls_mpi_gen_prime+0x294>  // b.pmore
    9f6c:	f103e79f 	cmp	x28, #0xf9
    9f70:	54000ec8 	b.hi	a148 <mbedtls_mpi_gen_prime+0x26c>  // b.pmore
    9f74:	f102579f 	cmp	x28, #0x95
    9f78:	52800255 	mov	w21, #0x12                  	// #18
    9f7c:	52800361 	mov	w1, #0x1b                  	// #27
    9f80:	1a8182ba 	csel	w26, w21, w1, hi  // hi = pmore
    9f84:	d37be815 	lsl	x21, x0, #5
    9f88:	d37ef419 	lsl	x25, x0, #2
    9f8c:	cb1c02bb 	sub	x27, x21, x28
    9f90:	12000318 	and	w24, w24, #0x1
    9f94:	d1001321 	sub	x1, x25, #0x4
    9f98:	f90037e1 	str	x1, [sp, #104]
    9f9c:	aa1603e2 	mov	x2, x22
    9fa0:	aa1703e3 	mov	x3, x23
    9fa4:	aa1903e1 	mov	x1, x25
    9fa8:	aa1303e0 	mov	x0, x19
    9fac:	97fffd95 	bl	9600 <mbedtls_mpi_fill_random>
    9fb0:	2a0003e2 	mov	w2, w0
    9fb4:	35000f40 	cbnz	w0, a19c <mbedtls_mpi_gen_prime+0x2c0>
    9fb8:	f9400a60 	ldr	x0, [x19, #16]
    9fbc:	f94037e1 	ldr	x1, [sp, #104]
    9fc0:	b8616800 	ldr	w0, [x0, x1]
    9fc4:	529e6661 	mov	w1, #0xf333                	// #62259
    9fc8:	72b6a081 	movk	w1, #0xb504, lsl #16
    9fcc:	6b01001f 	cmp	w0, w1
    9fd0:	54fffe69 	b.ls	9f9c <mbedtls_mpi_gen_prime+0xc0>  // b.plast
    9fd4:	eb15039f 	cmp	x28, x21
    9fd8:	54000d83 	b.cc	a188 <mbedtls_mpi_gen_prime+0x2ac>  // b.lo, b.ul, b.last
    9fdc:	f9400a61 	ldr	x1, [x19, #16]
    9fe0:	b9400020 	ldr	w0, [x1]
    9fe4:	32000002 	orr	w2, w0, #0x1
    9fe8:	b9000022 	str	w2, [x1]
    9fec:	34000f18 	cbz	w24, a1cc <mbedtls_mpi_gen_prime+0x2f0>
    9ff0:	32000400 	orr	w0, w0, #0x3
    9ff4:	b9000020 	str	w0, [x1]
    9ff8:	52800062 	mov	w2, #0x3                   	// #3
    9ffc:	aa1303e1 	mov	x1, x19
    a000:	9101d3e0 	add	x0, sp, #0x74
    a004:	97fffa60 	bl	8984 <mbedtls_mpi_mod_int>
    a008:	2a0003e2 	mov	w2, w0
    a00c:	35000c80 	cbnz	w0, a19c <mbedtls_mpi_gen_prime+0x2c0>
    a010:	b94077e0 	ldr	w0, [sp, #116]
    a014:	35000ee0 	cbnz	w0, a1f0 <mbedtls_mpi_gen_prime+0x314>
    a018:	52800102 	mov	w2, #0x8                   	// #8
    a01c:	aa1303e1 	mov	x1, x19
    a020:	aa1303e0 	mov	x0, x19
    a024:	97fff76a 	bl	7dcc <mbedtls_mpi_add_int>
    a028:	2a0003e2 	mov	w2, w0
    a02c:	35000b80 	cbnz	w0, a19c <mbedtls_mpi_gen_prime+0x2c0>
    a030:	aa1303e1 	mov	x1, x19
    a034:	aa1403e0 	mov	x0, x20
    a038:	97fff4fa 	bl	7420 <mbedtls_mpi_copy>
    a03c:	2a0003e2 	mov	w2, w0
    a040:	35000ae0 	cbnz	w0, a19c <mbedtls_mpi_gen_prime+0x2c0>
    a044:	aa1403e0 	mov	x0, x20
    a048:	d2800021 	mov	x1, #0x1                   	// #1
    a04c:	97fff62b 	bl	78f8 <mbedtls_mpi_shift_r>
    a050:	2a0003e2 	mov	w2, w0
    a054:	35000a40 	cbnz	w0, a19c <mbedtls_mpi_gen_prime+0x2c0>
    a058:	93407f55 	sxtw	x21, w26
    a05c:	aa1303e0 	mov	x0, x19
    a060:	97fffb0d 	bl	8c94 <mpi_check_small_factors>
    a064:	2a0003e2 	mov	w2, w0
    a068:	35000260 	cbnz	w0, a0b4 <mbedtls_mpi_gen_prime+0x1d8>
    a06c:	aa1403e0 	mov	x0, x20
    a070:	97fffb09 	bl	8c94 <mpi_check_small_factors>
    a074:	2a0003e2 	mov	w2, w0
    a078:	350001e0 	cbnz	w0, a0b4 <mbedtls_mpi_gen_prime+0x1d8>
    a07c:	aa1603e2 	mov	x2, x22
    a080:	aa1703e3 	mov	x3, x23
    a084:	aa1503e1 	mov	x1, x21
    a088:	aa1303e0 	mov	x0, x19
    a08c:	97fffd77 	bl	9668 <mpi_miller_rabin>
    a090:	2a0003e2 	mov	w2, w0
    a094:	35000100 	cbnz	w0, a0b4 <mbedtls_mpi_gen_prime+0x1d8>
    a098:	aa1603e2 	mov	x2, x22
    a09c:	aa1703e3 	mov	x3, x23
    a0a0:	aa1503e1 	mov	x1, x21
    a0a4:	aa1403e0 	mov	x0, x20
    a0a8:	97fffd70 	bl	9668 <mpi_miller_rabin>
    a0ac:	2a0003e2 	mov	w2, w0
    a0b0:	34000760 	cbz	w0, a19c <mbedtls_mpi_gen_prime+0x2c0>
    a0b4:	3100385f 	cmn	w2, #0xe
    a0b8:	54000721 	b.ne	a19c <mbedtls_mpi_gen_prime+0x2c0>  // b.any
    a0bc:	52800182 	mov	w2, #0xc                   	// #12
    a0c0:	aa1303e1 	mov	x1, x19
    a0c4:	aa1303e0 	mov	x0, x19
    a0c8:	97fff741 	bl	7dcc <mbedtls_mpi_add_int>
    a0cc:	2a0003e2 	mov	w2, w0
    a0d0:	35000660 	cbnz	w0, a19c <mbedtls_mpi_gen_prime+0x2c0>
    a0d4:	528000c2 	mov	w2, #0x6                   	// #6
    a0d8:	aa1403e1 	mov	x1, x20
    a0dc:	aa1403e0 	mov	x0, x20
    a0e0:	97fff73b 	bl	7dcc <mbedtls_mpi_add_int>
    a0e4:	2a0003e2 	mov	w2, w0
    a0e8:	34fffba0 	cbz	w0, a05c <mbedtls_mpi_gen_prime+0x180>
    a0ec:	1400002c 	b	a19c <mbedtls_mpi_gen_prime+0x2c0>
    a0f0:	f116a79f 	cmp	x28, #0x5a9
    a0f4:	540002e8 	b.hi	a150 <mbedtls_mpi_gen_prime+0x274>  // b.pmore
    a0f8:	f111f79f 	cmp	x28, #0x47d
    a0fc:	540002e8 	b.hi	a158 <mbedtls_mpi_gen_prime+0x27c>  // b.pmore
    a100:	f10f9f9f 	cmp	x28, #0x3e7
    a104:	540002e8 	b.hi	a160 <mbedtls_mpi_gen_prime+0x284>  // b.pmore
    a108:	f10d479f 	cmp	x28, #0x351
    a10c:	540002e8 	b.hi	a168 <mbedtls_mpi_gen_prime+0x28c>  // b.pmore
    a110:	f10bb79f 	cmp	x28, #0x2ed
    a114:	540002e8 	b.hi	a170 <mbedtls_mpi_gen_prime+0x294>  // b.pmore
    a118:	f107cf9f 	cmp	x28, #0x1f3
    a11c:	540002e8 	b.hi	a178 <mbedtls_mpi_gen_prime+0x29c>  // b.pmore
    a120:	f103e79f 	cmp	x28, #0xf9
    a124:	540002e8 	b.hi	a180 <mbedtls_mpi_gen_prime+0x2a4>  // b.pmore
    a128:	f102579f 	cmp	x28, #0x95
    a12c:	52800515 	mov	w21, #0x28                  	// #40
    a130:	52800661 	mov	w1, #0x33                  	// #51
    a134:	17ffff93 	b	9f80 <mbedtls_mpi_gen_prime+0xa4>
    a138:	5280005a 	mov	w26, #0x2                   	// #2
    a13c:	17ffff92 	b	9f84 <mbedtls_mpi_gen_prime+0xa8>
    a140:	5280007a 	mov	w26, #0x3                   	// #3
    a144:	17ffff90 	b	9f84 <mbedtls_mpi_gen_prime+0xa8>
    a148:	5280019a 	mov	w26, #0xc                   	// #12
    a14c:	17ffff8e 	b	9f84 <mbedtls_mpi_gen_prime+0xa8>
    a150:	5280009a 	mov	w26, #0x4                   	// #4
    a154:	17ffff8c 	b	9f84 <mbedtls_mpi_gen_prime+0xa8>
    a158:	528000ba 	mov	w26, #0x5                   	// #5
    a15c:	17ffff8a 	b	9f84 <mbedtls_mpi_gen_prime+0xa8>
    a160:	528000da 	mov	w26, #0x6                   	// #6
    a164:	17ffff88 	b	9f84 <mbedtls_mpi_gen_prime+0xa8>
    a168:	528000fa 	mov	w26, #0x7                   	// #7
    a16c:	17ffff86 	b	9f84 <mbedtls_mpi_gen_prime+0xa8>
    a170:	5280011a 	mov	w26, #0x8                   	// #8
    a174:	17ffff84 	b	9f84 <mbedtls_mpi_gen_prime+0xa8>
    a178:	528001ba 	mov	w26, #0xd                   	// #13
    a17c:	17ffff82 	b	9f84 <mbedtls_mpi_gen_prime+0xa8>
    a180:	5280039a 	mov	w26, #0x1c                  	// #28
    a184:	17ffff80 	b	9f84 <mbedtls_mpi_gen_prime+0xa8>
    a188:	aa1b03e1 	mov	x1, x27
    a18c:	aa1303e0 	mov	x0, x19
    a190:	97fff5da 	bl	78f8 <mbedtls_mpi_shift_r>
    a194:	2a0003e2 	mov	w2, w0
    a198:	34fff220 	cbz	w0, 9fdc <mbedtls_mpi_gen_prime+0x100>
    a19c:	aa1403e0 	mov	x0, x20
    a1a0:	b9006be2 	str	w2, [sp, #104]
    a1a4:	97fff3e9 	bl	7148 <mbedtls_mpi_free>
    a1a8:	b9406be2 	ldr	w2, [sp, #104]
    a1ac:	f0000060 	adrp	x0, 19000 <_DYNAMIC>
    a1b0:	f9409800 	ldr	x0, [x0, #304]
    a1b4:	f9404fe3 	ldr	x3, [sp, #152]
    a1b8:	f9400001 	ldr	x1, [x0]
    a1bc:	eb010063 	subs	x3, x3, x1
    a1c0:	d2800001 	mov	x1, #0x0                   	// #0
    a1c4:	54000220 	b.eq	a208 <mbedtls_mpi_gen_prime+0x32c>  // b.none
    a1c8:	97ffd92c 	bl	678 <__stack_chk_fail>
    a1cc:	aa1603e2 	mov	x2, x22
    a1d0:	aa1703e3 	mov	x3, x23
    a1d4:	2a1a03e1 	mov	w1, w26
    a1d8:	aa1303e0 	mov	x0, x19
    a1dc:	97ffff07 	bl	9df8 <mbedtls_mpi_is_prime_ext>
    a1e0:	2a0003e2 	mov	w2, w0
    a1e4:	3100381f 	cmn	w0, #0xe
    a1e8:	54ffeda0 	b.eq	9f9c <mbedtls_mpi_gen_prime+0xc0>  // b.none
    a1ec:	17ffffec 	b	a19c <mbedtls_mpi_gen_prime+0x2c0>
    a1f0:	7100041f 	cmp	w0, #0x1
    a1f4:	54fff1e1 	b.ne	a030 <mbedtls_mpi_gen_prime+0x154>  // b.any
    a1f8:	52800082 	mov	w2, #0x4                   	// #4
    a1fc:	17ffff88 	b	a01c <mbedtls_mpi_gen_prime+0x140>
    a200:	12800062 	mov	w2, #0xfffffffc            	// #-4
    a204:	17ffffea 	b	a1ac <mbedtls_mpi_gen_prime+0x2d0>
    a208:	2a0203e0 	mov	w0, w2
    a20c:	a94153f3 	ldp	x19, x20, [sp, #16]
    a210:	a9425bf5 	ldp	x21, x22, [sp, #32]
    a214:	a94363f7 	ldp	x23, x24, [sp, #48]
    a218:	a9446bf9 	ldp	x25, x26, [sp, #64]
    a21c:	a94573fb 	ldp	x27, x28, [sp, #80]
    a220:	a8ca7bfd 	ldp	x29, x30, [sp], #160
    a224:	d65f03c0 	ret

000000000000a228 <mbedtls_mpi_self_test>:
mbedtls_mpi_self_test():
    a228:	a9aa7bfd 	stp	x29, x30, [sp, #-352]!
    a22c:	910003fd 	mov	x29, sp
    a230:	a90153f3 	stp	x19, x20, [sp, #16]
    a234:	2a0003f3 	mov	w19, w0
    a238:	f0000060 	adrp	x0, 19000 <_DYNAMIC>
    a23c:	a9025bf5 	stp	x21, x22, [sp, #32]
    a240:	9101e3f6 	add	x22, sp, #0x78
    a244:	910363f4 	add	x20, sp, #0xd8
    a248:	f9409800 	ldr	x0, [x0, #304]
    a24c:	a90363f7 	stp	x23, x24, [sp, #48]
    a250:	9102e3f8 	add	x24, sp, #0xb8
    a254:	a9046bf9 	stp	x25, x26, [sp, #64]
    a258:	9103e3fa 	add	x26, sp, #0xf8
    a25c:	910463f5 	add	x21, sp, #0x118
    a260:	a90573fb 	stp	x27, x28, [sp, #80]
    a264:	910263fc 	add	x28, sp, #0x98
    a268:	9104e3fb 	add	x27, sp, #0x138
    a26c:	f9400001 	ldr	x1, [x0]
    a270:	f900afe1 	str	x1, [sp, #344]
    a274:	d2800001 	mov	x1, #0x0                   	// #0
    a278:	aa1603e0 	mov	x0, x22
    a27c:	97fff3a9 	bl	7120 <mbedtls_mpi_init_mempool>
    a280:	aa1c03e0 	mov	x0, x28
    a284:	97fff3a7 	bl	7120 <mbedtls_mpi_init_mempool>
    a288:	aa1803e0 	mov	x0, x24
    a28c:	97fff3a5 	bl	7120 <mbedtls_mpi_init_mempool>
    a290:	aa1403e0 	mov	x0, x20
    a294:	97fff3a3 	bl	7120 <mbedtls_mpi_init_mempool>
    a298:	aa1a03e0 	mov	x0, x26
    a29c:	97fff3a1 	bl	7120 <mbedtls_mpi_init_mempool>
    a2a0:	aa1503e0 	mov	x0, x21
    a2a4:	97fff39f 	bl	7120 <mbedtls_mpi_init_mempool>
    a2a8:	aa1b03e0 	mov	x0, x27
    a2ac:	97fff39d 	bl	7120 <mbedtls_mpi_init_mempool>
    a2b0:	aa1603e0 	mov	x0, x22
    a2b4:	d0000062 	adrp	x2, 18000 <__func__.0+0x172>
    a2b8:	52800201 	mov	w1, #0x10                  	// #16
    a2bc:	91017442 	add	x2, x2, #0x5d
    a2c0:	97fff79b 	bl	812c <mbedtls_mpi_read_string>
    a2c4:	2a0003f7 	mov	w23, w0
    a2c8:	350004c0 	cbnz	w0, a360 <mbedtls_mpi_self_test+0x138>
    a2cc:	aa1c03e0 	mov	x0, x28
    a2d0:	d0000062 	adrp	x2, 18000 <__func__.0+0x172>
    a2d4:	52800201 	mov	w1, #0x10                  	// #16
    a2d8:	91037842 	add	x2, x2, #0xde
    a2dc:	97fff794 	bl	812c <mbedtls_mpi_read_string>
    a2e0:	2a0003f7 	mov	w23, w0
    a2e4:	350003e0 	cbnz	w0, a360 <mbedtls_mpi_self_test+0x138>
    a2e8:	aa1803e0 	mov	x0, x24
    a2ec:	d0000062 	adrp	x2, 18000 <__func__.0+0x172>
    a2f0:	52800201 	mov	w1, #0x10                  	// #16
    a2f4:	91057c42 	add	x2, x2, #0x15f
    a2f8:	97fff78d 	bl	812c <mbedtls_mpi_read_string>
    a2fc:	2a0003f7 	mov	w23, w0
    a300:	35000300 	cbnz	w0, a360 <mbedtls_mpi_self_test+0x138>
    a304:	aa1803e2 	mov	x2, x24
    a308:	aa1603e1 	mov	x1, x22
    a30c:	aa1403e0 	mov	x0, x20
    a310:	97fff6eb 	bl	7ebc <mbedtls_mpi_mul_mpi>
    a314:	2a0003f7 	mov	w23, w0
    a318:	35000240 	cbnz	w0, a360 <mbedtls_mpi_self_test+0x138>
    a31c:	aa1503e0 	mov	x0, x21
    a320:	d0000062 	adrp	x2, 18000 <__func__.0+0x172>
    a324:	52800201 	mov	w1, #0x10                  	// #16
    a328:	91070042 	add	x2, x2, #0x1c0
    a32c:	97fff780 	bl	812c <mbedtls_mpi_read_string>
    a330:	2a0003f7 	mov	w23, w0
    a334:	35000160 	cbnz	w0, a360 <mbedtls_mpi_self_test+0x138>
    a338:	34000093 	cbz	w19, a348 <mbedtls_mpi_self_test+0x120>
    a33c:	d0000060 	adrp	x0, 18000 <__func__.0+0x172>
    a340:	910a7c00 	add	x0, x0, #0x29f
    a344:	97ffdc76 	bl	151c <printf>
    a348:	aa1503e1 	mov	x1, x21
    a34c:	aa1403e0 	mov	x0, x20
    a350:	97fff59d 	bl	79c4 <mbedtls_mpi_cmp_mpi>
    a354:	340004e0 	cbz	w0, a3f0 <mbedtls_mpi_self_test+0x1c8>
    a358:	35000453 	cbnz	w19, a3e0 <mbedtls_mpi_self_test+0x1b8>
    a35c:	52800037 	mov	w23, #0x1                   	// #1
    a360:	710002ff 	cmp	w23, #0x0
    a364:	7a401a64 	ccmp	w19, #0x0, #0x4, ne  // ne = any
    a368:	540000a0 	b.eq	a37c <mbedtls_mpi_self_test+0x154>  // b.none
    a36c:	d0000060 	adrp	x0, 18000 <__func__.0+0x172>
    a370:	2a1703e1 	mov	w1, w23
    a374:	9111f000 	add	x0, x0, #0x47c
    a378:	97ffdc69 	bl	151c <printf>
    a37c:	aa1603e0 	mov	x0, x22
    a380:	97fff372 	bl	7148 <mbedtls_mpi_free>
    a384:	aa1c03e0 	mov	x0, x28
    a388:	97fff370 	bl	7148 <mbedtls_mpi_free>
    a38c:	aa1803e0 	mov	x0, x24
    a390:	97fff36e 	bl	7148 <mbedtls_mpi_free>
    a394:	aa1403e0 	mov	x0, x20
    a398:	97fff36c 	bl	7148 <mbedtls_mpi_free>
    a39c:	aa1a03e0 	mov	x0, x26
    a3a0:	97fff36a 	bl	7148 <mbedtls_mpi_free>
    a3a4:	aa1503e0 	mov	x0, x21
    a3a8:	97fff368 	bl	7148 <mbedtls_mpi_free>
    a3ac:	aa1b03e0 	mov	x0, x27
    a3b0:	97fff366 	bl	7148 <mbedtls_mpi_free>
    a3b4:	34000073 	cbz	w19, a3c0 <mbedtls_mpi_self_test+0x198>
    a3b8:	52800140 	mov	w0, #0xa                   	// #10
    a3bc:	97ffdca8 	bl	165c <putchar>
    a3c0:	f0000060 	adrp	x0, 19000 <_DYNAMIC>
    a3c4:	f9409800 	ldr	x0, [x0, #304]
    a3c8:	f940afe1 	ldr	x1, [sp, #344]
    a3cc:	f9400002 	ldr	x2, [x0]
    a3d0:	eb020021 	subs	x1, x1, x2
    a3d4:	d2800002 	mov	x2, #0x0                   	// #0
    a3d8:	54001280 	b.eq	a628 <mbedtls_mpi_self_test+0x400>  // b.none
    a3dc:	97ffd8a7 	bl	678 <__stack_chk_fail>
    a3e0:	b0000060 	adrp	x0, 17000 <__text_end+0x3c08>
    a3e4:	913ff800 	add	x0, x0, #0xffe
    a3e8:	97ffdc8d 	bl	161c <puts>
    a3ec:	17ffffdc 	b	a35c <mbedtls_mpi_self_test+0x134>
    a3f0:	34000093 	cbz	w19, a400 <mbedtls_mpi_self_test+0x1d8>
    a3f4:	d0000060 	adrp	x0, 18000 <__func__.0+0x172>
    a3f8:	910ae400 	add	x0, x0, #0x2b9
    a3fc:	97ffdc88 	bl	161c <puts>
    a400:	aa1803e3 	mov	x3, x24
    a404:	aa1603e2 	mov	x2, x22
    a408:	aa1a03e1 	mov	x1, x26
    a40c:	aa1403e0 	mov	x0, x20
    a410:	97fff7ca 	bl	8338 <mbedtls_mpi_div_mpi>
    a414:	2a0003f7 	mov	w23, w0
    a418:	35fffa40 	cbnz	w0, a360 <mbedtls_mpi_self_test+0x138>
    a41c:	aa1503e0 	mov	x0, x21
    a420:	d0000062 	adrp	x2, 18000 <__func__.0+0x172>
    a424:	52800201 	mov	w1, #0x10                  	// #16
    a428:	910b0042 	add	x2, x2, #0x2c0
    a42c:	97fff740 	bl	812c <mbedtls_mpi_read_string>
    a430:	2a0003f7 	mov	w23, w0
    a434:	35fff960 	cbnz	w0, a360 <mbedtls_mpi_self_test+0x138>
    a438:	aa1b03e0 	mov	x0, x27
    a43c:	d0000062 	adrp	x2, 18000 <__func__.0+0x172>
    a440:	52800201 	mov	w1, #0x10                  	// #16
    a444:	910b9042 	add	x2, x2, #0x2e4
    a448:	97fff739 	bl	812c <mbedtls_mpi_read_string>
    a44c:	2a0003f7 	mov	w23, w0
    a450:	35fff880 	cbnz	w0, a360 <mbedtls_mpi_self_test+0x138>
    a454:	34000093 	cbz	w19, a464 <mbedtls_mpi_self_test+0x23c>
    a458:	d0000060 	adrp	x0, 18000 <__func__.0+0x172>
    a45c:	910d0c00 	add	x0, x0, #0x343
    a460:	97ffdc2f 	bl	151c <printf>
    a464:	aa1503e1 	mov	x1, x21
    a468:	aa1403e0 	mov	x0, x20
    a46c:	97fff556 	bl	79c4 <mbedtls_mpi_cmp_mpi>
    a470:	35fff740 	cbnz	w0, a358 <mbedtls_mpi_self_test+0x130>
    a474:	aa1b03e1 	mov	x1, x27
    a478:	aa1a03e0 	mov	x0, x26
    a47c:	97fff552 	bl	79c4 <mbedtls_mpi_cmp_mpi>
    a480:	35fff6c0 	cbnz	w0, a358 <mbedtls_mpi_self_test+0x130>
    a484:	34000093 	cbz	w19, a494 <mbedtls_mpi_self_test+0x26c>
    a488:	d0000060 	adrp	x0, 18000 <__func__.0+0x172>
    a48c:	910ae400 	add	x0, x0, #0x2b9
    a490:	97ffdc63 	bl	161c <puts>
    a494:	aa1803e3 	mov	x3, x24
    a498:	aa1c03e2 	mov	x2, x28
    a49c:	aa1603e1 	mov	x1, x22
    a4a0:	aa1403e0 	mov	x0, x20
    a4a4:	d2800004 	mov	x4, #0x0                   	// #0
    a4a8:	97fffa3a 	bl	8d90 <mbedtls_mpi_exp_mod>
    a4ac:	2a0003f7 	mov	w23, w0
    a4b0:	35fff580 	cbnz	w0, a360 <mbedtls_mpi_self_test+0x138>
    a4b4:	aa1503e0 	mov	x0, x21
    a4b8:	d0000062 	adrp	x2, 18000 <__func__.0+0x172>
    a4bc:	52800201 	mov	w1, #0x10                  	// #16
    a4c0:	910d7442 	add	x2, x2, #0x35d
    a4c4:	97fff71a 	bl	812c <mbedtls_mpi_read_string>
    a4c8:	2a0003f7 	mov	w23, w0
    a4cc:	35fff4a0 	cbnz	w0, a360 <mbedtls_mpi_self_test+0x138>
    a4d0:	34000093 	cbz	w19, a4e0 <mbedtls_mpi_self_test+0x2b8>
    a4d4:	d0000060 	adrp	x0, 18000 <__func__.0+0x172>
    a4d8:	910ef000 	add	x0, x0, #0x3bc
    a4dc:	97ffdc10 	bl	151c <printf>
    a4e0:	aa1503e1 	mov	x1, x21
    a4e4:	aa1403e0 	mov	x0, x20
    a4e8:	97fff537 	bl	79c4 <mbedtls_mpi_cmp_mpi>
    a4ec:	35fff360 	cbnz	w0, a358 <mbedtls_mpi_self_test+0x130>
    a4f0:	34000093 	cbz	w19, a500 <mbedtls_mpi_self_test+0x2d8>
    a4f4:	d0000060 	adrp	x0, 18000 <__func__.0+0x172>
    a4f8:	910ae400 	add	x0, x0, #0x2b9
    a4fc:	97ffdc48 	bl	161c <puts>
    a500:	aa1803e2 	mov	x2, x24
    a504:	aa1603e1 	mov	x1, x22
    a508:	aa1403e0 	mov	x0, x20
    a50c:	97fffd25 	bl	99a0 <mbedtls_mpi_inv_mod>
    a510:	2a0003f7 	mov	w23, w0
    a514:	35fff260 	cbnz	w0, a360 <mbedtls_mpi_self_test+0x138>
    a518:	aa1503e0 	mov	x0, x21
    a51c:	d0000062 	adrp	x2, 18000 <__func__.0+0x172>
    a520:	52800201 	mov	w1, #0x10                  	// #16
    a524:	910f5842 	add	x2, x2, #0x3d6
    a528:	97fff701 	bl	812c <mbedtls_mpi_read_string>
    a52c:	2a0003f7 	mov	w23, w0
    a530:	35fff180 	cbnz	w0, a360 <mbedtls_mpi_self_test+0x138>
    a534:	34000093 	cbz	w19, a544 <mbedtls_mpi_self_test+0x31c>
    a538:	d0000060 	adrp	x0, 18000 <__func__.0+0x172>
    a53c:	9110dc00 	add	x0, x0, #0x437
    a540:	97ffdbf7 	bl	151c <printf>
    a544:	aa1503e1 	mov	x1, x21
    a548:	aa1403e0 	mov	x0, x20
    a54c:	97fff51e 	bl	79c4 <mbedtls_mpi_cmp_mpi>
    a550:	2a0003f9 	mov	w25, w0
    a554:	35fff020 	cbnz	w0, a358 <mbedtls_mpi_self_test+0x130>
    a558:	340000f3 	cbz	w19, a574 <mbedtls_mpi_self_test+0x34c>
    a55c:	d0000060 	adrp	x0, 18000 <__func__.0+0x172>
    a560:	910ae400 	add	x0, x0, #0x2b9
    a564:	97ffdc2e 	bl	161c <puts>
    a568:	d0000060 	adrp	x0, 18000 <__func__.0+0x172>
    a56c:	91114400 	add	x0, x0, #0x451
    a570:	97ffdbeb 	bl	151c <printf>
    a574:	b0000077 	adrp	x23, 17000 <__text_end+0x3c08>
    a578:	911a02f7 	add	x23, x23, #0x680
    a57c:	910a82e0 	add	x0, x23, #0x2a0
    a580:	f90037e0 	str	x0, [sp, #104]
    a584:	f94037e0 	ldr	x0, [sp, #104]
    a588:	b9400001 	ldr	w1, [x0]
    a58c:	aa1403e0 	mov	x0, x20
    a590:	97fff3fa 	bl	7578 <mbedtls_mpi_lset>
    a594:	2a0003f7 	mov	w23, w0
    a598:	35ffee40 	cbnz	w0, a360 <mbedtls_mpi_self_test+0x138>
    a59c:	f94037e0 	ldr	x0, [sp, #104]
    a5a0:	b9400401 	ldr	w1, [x0, #4]
    a5a4:	aa1a03e0 	mov	x0, x26
    a5a8:	97fff3f4 	bl	7578 <mbedtls_mpi_lset>
    a5ac:	2a0003f7 	mov	w23, w0
    a5b0:	35ffed80 	cbnz	w0, a360 <mbedtls_mpi_self_test+0x138>
    a5b4:	aa1a03e2 	mov	x2, x26
    a5b8:	aa1403e1 	mov	x1, x20
    a5bc:	aa1603e0 	mov	x0, x22
    a5c0:	97fffb9a 	bl	9428 <mbedtls_mpi_gcd>
    a5c4:	2a0003f7 	mov	w23, w0
    a5c8:	35ffecc0 	cbnz	w0, a360 <mbedtls_mpi_self_test+0x138>
    a5cc:	f94037e0 	ldr	x0, [sp, #104]
    a5d0:	b9400801 	ldr	w1, [x0, #8]
    a5d4:	aa1603e0 	mov	x0, x22
    a5d8:	97fff52f 	bl	7a94 <mbedtls_mpi_cmp_int>
    a5dc:	2a0003f7 	mov	w23, w0
    a5e0:	340000e0 	cbz	w0, a5fc <mbedtls_mpi_self_test+0x3d4>
    a5e4:	34ffebd3 	cbz	w19, a35c <mbedtls_mpi_self_test+0x134>
    a5e8:	2a1903e1 	mov	w1, w25
    a5ec:	d0000060 	adrp	x0, 18000 <__func__.0+0x172>
    a5f0:	9111b800 	add	x0, x0, #0x46e
    a5f4:	97ffdbca 	bl	151c <printf>
    a5f8:	17ffff59 	b	a35c <mbedtls_mpi_self_test+0x134>
    a5fc:	f94037e0 	ldr	x0, [sp, #104]
    a600:	11000739 	add	w25, w25, #0x1
    a604:	91003000 	add	x0, x0, #0xc
    a608:	f90037e0 	str	x0, [sp, #104]
    a60c:	71000f3f 	cmp	w25, #0x3
    a610:	54fffba1 	b.ne	a584 <mbedtls_mpi_self_test+0x35c>  // b.any
    a614:	34ffea73 	cbz	w19, a360 <mbedtls_mpi_self_test+0x138>
    a618:	d0000060 	adrp	x0, 18000 <__func__.0+0x172>
    a61c:	910ae400 	add	x0, x0, #0x2b9
    a620:	97ffdbff 	bl	161c <puts>
    a624:	17ffff4f 	b	a360 <mbedtls_mpi_self_test+0x138>
    a628:	2a1703e0 	mov	w0, w23
    a62c:	a94153f3 	ldp	x19, x20, [sp, #16]
    a630:	a9425bf5 	ldp	x21, x22, [sp, #32]
    a634:	a94363f7 	ldp	x23, x24, [sp, #48]
    a638:	a9446bf9 	ldp	x25, x26, [sp, #64]
    a63c:	a94573fb 	ldp	x27, x28, [sp, #80]
    a640:	a8d67bfd 	ldp	x29, x30, [sp], #352
    a644:	d65f03c0 	ret

000000000000a648 <mbedtls_mpi_core_clz>:
mbedtls_mpi_core_clz():
    a648:	2a0003e2 	mov	w2, w0
    a64c:	52b00001 	mov	w1, #0x80000000            	// #-2147483648
    a650:	d2800000 	mov	x0, #0x0                   	// #0
    a654:	6a01005f 	tst	w2, w1
    a658:	540000a1 	b.ne	a66c <mbedtls_mpi_core_clz+0x24>  // b.any
    a65c:	91000400 	add	x0, x0, #0x1
    a660:	53017c21 	lsr	w1, w1, #1
    a664:	f100801f 	cmp	x0, #0x20
    a668:	54ffff61 	b.ne	a654 <mbedtls_mpi_core_clz+0xc>  // b.any
    a66c:	d65f03c0 	ret

000000000000a670 <mbedtls_mpi_core_bitlen>:
mbedtls_mpi_core_bitlen():
    a670:	aa0003e2 	mov	x2, x0
    a674:	aa0103e0 	mov	x0, x1
    a678:	b4000241 	cbz	x1, a6c0 <mbedtls_mpi_core_bitlen+0x50>
    a67c:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    a680:	910003fd 	mov	x29, sp
    a684:	f9000bf3 	str	x19, [sp, #16]
    a688:	d1000433 	sub	x19, x1, #0x1
    a68c:	b5000133 	cbnz	x19, a6b0 <mbedtls_mpi_core_bitlen+0x40>
    a690:	b8737840 	ldr	w0, [x2, x19, lsl #2]
    a694:	d37bea73 	lsl	x19, x19, #5
    a698:	97ffffec 	bl	a648 <mbedtls_mpi_core_clz>
    a69c:	cb000273 	sub	x19, x19, x0
    a6a0:	91008260 	add	x0, x19, #0x20
    a6a4:	f9400bf3 	ldr	x19, [sp, #16]
    a6a8:	a8c27bfd 	ldp	x29, x30, [sp], #32
    a6ac:	d65f03c0 	ret
    a6b0:	b8737840 	ldr	w0, [x2, x19, lsl #2]
    a6b4:	35fffee0 	cbnz	w0, a690 <mbedtls_mpi_core_bitlen+0x20>
    a6b8:	d1000673 	sub	x19, x19, #0x1
    a6bc:	17fffff4 	b	a68c <mbedtls_mpi_core_bitlen+0x1c>
    a6c0:	d65f03c0 	ret

000000000000a6c4 <mbedtls_mpi_core_bigendian_to_host>:
mbedtls_mpi_core_bigendian_to_host():
    a6c4:	b40000a1 	cbz	x1, a6d8 <mbedtls_mpi_core_bigendian_to_host+0x14>
    a6c8:	8b010801 	add	x1, x0, x1, lsl #2
    a6cc:	d1001021 	sub	x1, x1, #0x4
    a6d0:	eb01001f 	cmp	x0, x1
    a6d4:	54000049 	b.ls	a6dc <mbedtls_mpi_core_bigendian_to_host+0x18>  // b.plast
    a6d8:	d65f03c0 	ret
    a6dc:	b9400023 	ldr	w3, [x1]
    a6e0:	b9400002 	ldr	w2, [x0]
    a6e4:	5ac00863 	rev	w3, w3
    a6e8:	b8004403 	str	w3, [x0], #4
    a6ec:	5ac00842 	rev	w2, w2
    a6f0:	b81fc422 	str	w2, [x1], #-4
    a6f4:	17fffff7 	b	a6d0 <mbedtls_mpi_core_bigendian_to_host+0xc>

000000000000a6f8 <mbedtls_mpi_core_uint_le_mpi>:
mbedtls_mpi_core_uint_le_mpi():
    a6f8:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    a6fc:	910003fd 	mov	x29, sp
    a700:	a90153f3 	stp	x19, x20, [sp, #16]
    a704:	aa0103f3 	mov	x19, x1
    a708:	2a0003e1 	mov	w1, w0
    a70c:	b9400260 	ldr	w0, [x19]
    a710:	f90013f5 	str	x21, [sp, #32]
    a714:	aa0203f5 	mov	x21, x2
    a718:	9400038b 	bl	b544 <mbedtls_ct_mpi_uint_lt>
    a71c:	52000014 	eor	w20, w0, #0x1
    a720:	d2800023 	mov	x3, #0x1                   	// #1
    a724:	52800000 	mov	w0, #0x0                   	// #0
    a728:	eb15007f 	cmp	x3, x21
    a72c:	54000103 	b.cc	a74c <mbedtls_mpi_core_uint_le_mpi+0x54>  // b.lo, b.ul, b.last
    a730:	9400037b 	bl	b51c <mbedtls_ct_mpi_uint_mask>
    a734:	12000000 	and	w0, w0, #0x1
    a738:	2a140000 	orr	w0, w0, w20
    a73c:	a94153f3 	ldp	x19, x20, [sp, #16]
    a740:	f94013f5 	ldr	x21, [sp, #32]
    a744:	a8c37bfd 	ldp	x29, x30, [sp], #48
    a748:	d65f03c0 	ret
    a74c:	b8637a61 	ldr	w1, [x19, x3, lsl #2]
    a750:	91000463 	add	x3, x3, #0x1
    a754:	2a010000 	orr	w0, w0, w1
    a758:	17fffff4 	b	a728 <mbedtls_mpi_core_uint_le_mpi+0x30>

000000000000a75c <mbedtls_mpi_core_cond_assign>:
mbedtls_mpi_core_cond_assign():
    a75c:	aa0003e4 	mov	x4, x0
    a760:	12001c63 	and	w3, w3, #0xff
    a764:	aa0203e0 	mov	x0, x2
    a768:	eb01009f 	cmp	x4, x1
    a76c:	54000080 	b.eq	a77c <mbedtls_mpi_core_cond_assign+0x20>  // b.none
    a770:	aa0103e2 	mov	x2, x1
    a774:	aa0403e1 	mov	x1, x4
    a778:	14000386 	b	b590 <mbedtls_ct_mpi_uint_cond_assign>
    a77c:	d65f03c0 	ret

000000000000a780 <mbedtls_mpi_core_cond_swap>:
mbedtls_mpi_core_cond_swap():
    a780:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    a784:	910003fd 	mov	x29, sp
    a788:	a90153f3 	stp	x19, x20, [sp, #16]
    a78c:	aa0003f4 	mov	x20, x0
    a790:	f90013f5 	str	x21, [sp, #32]
    a794:	eb01001f 	cmp	x0, x1
    a798:	54000100 	b.eq	a7b8 <mbedtls_mpi_core_cond_swap+0x38>  // b.none
    a79c:	aa0103f3 	mov	x19, x1
    a7a0:	aa0203f5 	mov	x21, x2
    a7a4:	12001c60 	and	w0, w3, #0xff
    a7a8:	9400035d 	bl	b51c <mbedtls_ct_mpi_uint_mask>
    a7ac:	d2800004 	mov	x4, #0x0                   	// #0
    a7b0:	eb15009f 	cmp	x4, x21
    a7b4:	540000a1 	b.ne	a7c8 <mbedtls_mpi_core_cond_swap+0x48>  // b.any
    a7b8:	a94153f3 	ldp	x19, x20, [sp, #16]
    a7bc:	f94013f5 	ldr	x21, [sp, #32]
    a7c0:	a8c37bfd 	ldp	x29, x30, [sp], #48
    a7c4:	d65f03c0 	ret
    a7c8:	b8647a83 	ldr	w3, [x20, x4, lsl #2]
    a7cc:	b8647a65 	ldr	w5, [x19, x4, lsl #2]
    a7d0:	4a050065 	eor	w5, w3, w5
    a7d4:	0a0000a5 	and	w5, w5, w0
    a7d8:	4a0300a5 	eor	w5, w5, w3
    a7dc:	b8247a85 	str	w5, [x20, x4, lsl #2]
    a7e0:	b8647a61 	ldr	w1, [x19, x4, lsl #2]
    a7e4:	4a030023 	eor	w3, w1, w3
    a7e8:	0a000063 	and	w3, w3, w0
    a7ec:	4a010063 	eor	w3, w3, w1
    a7f0:	b8247a63 	str	w3, [x19, x4, lsl #2]
    a7f4:	91000484 	add	x4, x4, #0x1
    a7f8:	17ffffee 	b	a7b0 <mbedtls_mpi_core_cond_swap+0x30>

000000000000a7fc <mbedtls_mpi_core_read_le>:
mbedtls_mpi_core_read_le():
    a7fc:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    a800:	f240047f 	tst	x3, #0x3
    a804:	910003fd 	mov	x29, sp
    a808:	f90013f5 	str	x21, [sp, #32]
    a80c:	aa0203f5 	mov	x21, x2
    a810:	d342fc62 	lsr	x2, x3, #2
    a814:	a90153f3 	stp	x19, x20, [sp, #16]
    a818:	9a820442 	cinc	x2, x2, ne  // ne = any
    a81c:	eb01005f 	cmp	x2, x1
    a820:	54000308 	b.hi	a880 <mbedtls_mpi_core_read_le+0x84>  // b.pmore
    a824:	aa0003f4 	mov	x20, x0
    a828:	b50000c0 	cbnz	x0, a840 <mbedtls_mpi_core_read_le+0x44>
    a82c:	52800000 	mov	w0, #0x0                   	// #0
    a830:	a94153f3 	ldp	x19, x20, [sp, #16]
    a834:	f94013f5 	ldr	x21, [sp, #32]
    a838:	a8c37bfd 	ldp	x29, x30, [sp], #48
    a83c:	d65f03c0 	ret
    a840:	d37ef422 	lsl	x2, x1, #2
    a844:	aa0303f3 	mov	x19, x3
    a848:	52800001 	mov	w1, #0x0                   	// #0
    a84c:	94000a83 	bl	d258 <memset>
    a850:	d2800001 	mov	x1, #0x0                   	// #0
    a854:	eb13003f 	cmp	x1, x19
    a858:	54fffea0 	b.eq	a82c <mbedtls_mpi_core_read_le+0x30>  // b.none
    a85c:	38616aa2 	ldrb	w2, [x21, x1]
    a860:	927ef423 	and	x3, x1, #0xfffffffffffffffc
    a864:	d37d0420 	ubfiz	x0, x1, #3, #2
    a868:	91000421 	add	x1, x1, #0x1
    a86c:	1ac02042 	lsl	w2, w2, w0
    a870:	b8636a80 	ldr	w0, [x20, x3]
    a874:	2a020000 	orr	w0, w0, w2
    a878:	b8236a80 	str	w0, [x20, x3]
    a87c:	17fffff6 	b	a854 <mbedtls_mpi_core_read_le+0x58>
    a880:	128000e0 	mov	w0, #0xfffffff8            	// #-8
    a884:	17ffffeb 	b	a830 <mbedtls_mpi_core_read_le+0x34>

000000000000a888 <mbedtls_mpi_core_read_be>:
mbedtls_mpi_core_read_be():
    a888:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    a88c:	f240047f 	tst	x3, #0x3
    a890:	910003fd 	mov	x29, sp
    a894:	a90153f3 	stp	x19, x20, [sp, #16]
    a898:	aa0103f4 	mov	x20, x1
    a89c:	d342fc61 	lsr	x1, x3, #2
    a8a0:	9a810421 	cinc	x1, x1, ne  // ne = any
    a8a4:	a9025bf5 	stp	x21, x22, [sp, #32]
    a8a8:	f9001bf7 	str	x23, [sp, #48]
    a8ac:	eb14003f 	cmp	x1, x20
    a8b0:	54000288 	b.hi	a900 <mbedtls_mpi_core_read_be+0x78>  // b.pmore
    a8b4:	b4000234 	cbz	x20, a8f8 <mbedtls_mpi_core_read_be+0x70>
    a8b8:	d37ef696 	lsl	x22, x20, #2
    a8bc:	aa0203f7 	mov	x23, x2
    a8c0:	aa0303f3 	mov	x19, x3
    a8c4:	aa0003f5 	mov	x21, x0
    a8c8:	aa1603e2 	mov	x2, x22
    a8cc:	52800001 	mov	w1, #0x0                   	// #0
    a8d0:	94000a62 	bl	d258 <memset>
    a8d4:	b40000d3 	cbz	x19, a8ec <mbedtls_mpi_core_read_be+0x64>
    a8d8:	cb1302c0 	sub	x0, x22, x19
    a8dc:	aa1303e2 	mov	x2, x19
    a8e0:	aa1703e1 	mov	x1, x23
    a8e4:	8b0002a0 	add	x0, x21, x0
    a8e8:	97ffd5c6 	bl	0 <memcpy>
    a8ec:	aa1403e1 	mov	x1, x20
    a8f0:	aa1503e0 	mov	x0, x21
    a8f4:	97ffff74 	bl	a6c4 <mbedtls_mpi_core_bigendian_to_host>
    a8f8:	52800000 	mov	w0, #0x0                   	// #0
    a8fc:	14000002 	b	a904 <mbedtls_mpi_core_read_be+0x7c>
    a900:	128000e0 	mov	w0, #0xfffffff8            	// #-8
    a904:	a94153f3 	ldp	x19, x20, [sp, #16]
    a908:	a9425bf5 	ldp	x21, x22, [sp, #32]
    a90c:	f9401bf7 	ldr	x23, [sp, #48]
    a910:	a8c47bfd 	ldp	x29, x30, [sp], #64
    a914:	d65f03c0 	ret

000000000000a918 <mbedtls_mpi_core_write_le>:
mbedtls_mpi_core_write_le():
    a918:	d37ef424 	lsl	x4, x1, #2
    a91c:	aa0203e5 	mov	x5, x2
    a920:	eb03009f 	cmp	x4, x3
    a924:	54000363 	b.cc	a990 <mbedtls_mpi_core_write_le+0x78>  // b.lo, b.ul, b.last
    a928:	aa0303e1 	mov	x1, x3
    a92c:	eb04003f 	cmp	x1, x4
    a930:	54000201 	b.ne	a970 <mbedtls_mpi_core_write_le+0x58>  // b.any
    a934:	aa0303e6 	mov	x6, x3
    a938:	d2800001 	mov	x1, #0x0                   	// #0
    a93c:	eb0100df 	cmp	x6, x1
    a940:	540002c1 	b.ne	a998 <mbedtls_mpi_core_write_le+0x80>  // b.any
    a944:	eb03009f 	cmp	x4, x3
    a948:	540003a2 	b.cs	a9bc <mbedtls_mpi_core_write_le+0xa4>  // b.hs, b.nlast
    a94c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    a950:	cb040062 	sub	x2, x3, x4
    a954:	8b0400a0 	add	x0, x5, x4
    a958:	910003fd 	mov	x29, sp
    a95c:	52800001 	mov	w1, #0x0                   	// #0
    a960:	94000a3e 	bl	d258 <memset>
    a964:	52800000 	mov	w0, #0x0                   	// #0
    a968:	a8c17bfd 	ldp	x29, x30, [sp], #16
    a96c:	d65f03c0 	ret
    a970:	927ef422 	and	x2, x1, #0xfffffffffffffffc
    a974:	531d0426 	ubfiz	w6, w1, #3, #2
    a978:	b8626802 	ldr	w2, [x0, x2]
    a97c:	1ac62442 	lsr	w2, w2, w6
    a980:	72001c5f 	tst	w2, #0xff
    a984:	54000181 	b.ne	a9b4 <mbedtls_mpi_core_write_le+0x9c>  // b.any
    a988:	91000421 	add	x1, x1, #0x1
    a98c:	17ffffe8 	b	a92c <mbedtls_mpi_core_write_le+0x14>
    a990:	aa0403e6 	mov	x6, x4
    a994:	17ffffe9 	b	a938 <mbedtls_mpi_core_write_le+0x20>
    a998:	927ef422 	and	x2, x1, #0xfffffffffffffffc
    a99c:	531d0427 	ubfiz	w7, w1, #3, #2
    a9a0:	b8626802 	ldr	w2, [x0, x2]
    a9a4:	1ac72442 	lsr	w2, w2, w7
    a9a8:	382168a2 	strb	w2, [x5, x1]
    a9ac:	91000421 	add	x1, x1, #0x1
    a9b0:	17ffffe3 	b	a93c <mbedtls_mpi_core_write_le+0x24>
    a9b4:	128000e0 	mov	w0, #0xfffffff8            	// #-8
    a9b8:	d65f03c0 	ret
    a9bc:	52800000 	mov	w0, #0x0                   	// #0
    a9c0:	d65f03c0 	ret

000000000000a9c4 <mbedtls_mpi_core_write_be>:
mbedtls_mpi_core_write_be():
    a9c4:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    a9c8:	910003fd 	mov	x29, sp
    a9cc:	a90153f3 	stp	x19, x20, [sp, #16]
    a9d0:	d37ef433 	lsl	x19, x1, #2
    a9d4:	aa0003f4 	mov	x20, x0
    a9d8:	f90013f5 	str	x21, [sp, #32]
    a9dc:	aa0203e0 	mov	x0, x2
    a9e0:	eb03027f 	cmp	x19, x3
    a9e4:	54000362 	b.cs	aa50 <mbedtls_mpi_core_write_be+0x8c>  // b.hs, b.nlast
    a9e8:	cb130062 	sub	x2, x3, x19
    a9ec:	52800001 	mov	w1, #0x0                   	// #0
    a9f0:	8b020015 	add	x21, x0, x2
    a9f4:	94000a19 	bl	d258 <memset>
    a9f8:	aa1503e0 	mov	x0, x21
    a9fc:	aa1303e3 	mov	x3, x19
    aa00:	8b030002 	add	x2, x0, x3
    aa04:	d2800001 	mov	x1, #0x0                   	// #0
    aa08:	d1000442 	sub	x2, x2, #0x1
    aa0c:	eb01007f 	cmp	x3, x1
    aa10:	54000241 	b.ne	aa58 <mbedtls_mpi_core_write_be+0x94>  // b.any
    aa14:	52800000 	mov	w0, #0x0                   	// #0
    aa18:	a94153f3 	ldp	x19, x20, [sp, #16]
    aa1c:	f94013f5 	ldr	x21, [sp, #32]
    aa20:	a8c37bfd 	ldp	x29, x30, [sp], #48
    aa24:	d65f03c0 	ret
    aa28:	927ef422 	and	x2, x1, #0xfffffffffffffffc
    aa2c:	531d0424 	ubfiz	w4, w1, #3, #2
    aa30:	b8626a82 	ldr	w2, [x20, x2]
    aa34:	1ac42442 	lsr	w2, w2, w4
    aa38:	72001c5f 	tst	w2, #0xff
    aa3c:	540001c1 	b.ne	aa74 <mbedtls_mpi_core_write_be+0xb0>  // b.any
    aa40:	91000421 	add	x1, x1, #0x1
    aa44:	eb13003f 	cmp	x1, x19
    aa48:	54ffff01 	b.ne	aa28 <mbedtls_mpi_core_write_be+0x64>  // b.any
    aa4c:	17ffffed 	b	aa00 <mbedtls_mpi_core_write_be+0x3c>
    aa50:	aa0303e1 	mov	x1, x3
    aa54:	17fffffc 	b	aa44 <mbedtls_mpi_core_write_be+0x80>
    aa58:	927ef420 	and	x0, x1, #0xfffffffffffffffc
    aa5c:	531d0424 	ubfiz	w4, w1, #3, #2
    aa60:	91000421 	add	x1, x1, #0x1
    aa64:	b8606a80 	ldr	w0, [x20, x0]
    aa68:	1ac42400 	lsr	w0, w0, w4
    aa6c:	39000040 	strb	w0, [x2]
    aa70:	17ffffe6 	b	aa08 <mbedtls_mpi_core_write_be+0x44>
    aa74:	128000e0 	mov	w0, #0xfffffff8            	// #-8
    aa78:	17ffffe8 	b	aa18 <mbedtls_mpi_core_write_be+0x54>

000000000000aa7c <mbedtls_mpi_core_shift_r>:
mbedtls_mpi_core_shift_r():
    aa7c:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    aa80:	910003fd 	mov	x29, sp
    aa84:	a90153f3 	stp	x19, x20, [sp, #16]
    aa88:	aa0103f3 	mov	x19, x1
    aa8c:	d345fc41 	lsr	x1, x2, #5
    aa90:	f90013f5 	str	x21, [sp, #32]
    aa94:	aa0003f4 	mov	x20, x0
    aa98:	eb13003f 	cmp	x1, x19
    aa9c:	540000a8 	b.hi	aab0 <mbedtls_mpi_core_shift_r+0x34>  // b.pmore
    aaa0:	92401055 	and	x21, x2, #0x1f
    aaa4:	f10002bf 	cmp	x21, #0x0
    aaa8:	fa531020 	ccmp	x1, x19, #0x0, ne  // ne = any
    aaac:	54000101 	b.ne	aacc <mbedtls_mpi_core_shift_r+0x50>  // b.any
    aab0:	d37ef662 	lsl	x2, x19, #2
    aab4:	aa1403e0 	mov	x0, x20
    aab8:	a94153f3 	ldp	x19, x20, [sp, #16]
    aabc:	52800001 	mov	w1, #0x0                   	// #0
    aac0:	f94013f5 	ldr	x21, [sp, #32]
    aac4:	a8c37bfd 	ldp	x29, x30, [sp], #48
    aac8:	140009e4 	b	d258 <memset>
    aacc:	f1007c5f 	cmp	x2, #0x1f
    aad0:	540001a9 	b.ls	ab04 <mbedtls_mpi_core_shift_r+0x88>  // b.plast
    aad4:	d37ef422 	lsl	x2, x1, #2
    aad8:	8b010805 	add	x5, x0, x1, lsl #2
    aadc:	d2800003 	mov	x3, #0x0                   	// #0
    aae0:	eb010260 	subs	x0, x19, x1
    aae4:	9a9f27e4 	cset	x4, cc  // cc = lo, ul, last
    aae8:	eb03001f 	cmp	x0, x3
    aaec:	54000228 	b.hi	ab30 <mbedtls_mpi_core_shift_r+0xb4>  // b.pmore
    aaf0:	f100009f 	cmp	x4, #0x0
    aaf4:	8b000a80 	add	x0, x20, x0, lsl #2
    aaf8:	9a9f0042 	csel	x2, x2, xzr, eq  // eq = none
    aafc:	52800001 	mov	w1, #0x0                   	// #0
    ab00:	940009d6 	bl	d258 <memset>
    ab04:	b40000f5 	cbz	x21, ab20 <mbedtls_mpi_core_shift_r+0xa4>
    ab08:	52800400 	mov	w0, #0x20                  	// #32
    ab0c:	8b130a93 	add	x19, x20, x19, lsl #2
    ab10:	4b150000 	sub	w0, w0, w21
    ab14:	52800002 	mov	w2, #0x0                   	// #0
    ab18:	eb14027f 	cmp	x19, x20
    ab1c:	54000121 	b.ne	ab40 <mbedtls_mpi_core_shift_r+0xc4>  // b.any
    ab20:	a94153f3 	ldp	x19, x20, [sp, #16]
    ab24:	f94013f5 	ldr	x21, [sp, #32]
    ab28:	a8c37bfd 	ldp	x29, x30, [sp], #48
    ab2c:	d65f03c0 	ret
    ab30:	b86378a0 	ldr	w0, [x5, x3, lsl #2]
    ab34:	b8237a80 	str	w0, [x20, x3, lsl #2]
    ab38:	91000463 	add	x3, x3, #0x1
    ab3c:	17ffffe9 	b	aae0 <mbedtls_mpi_core_shift_r+0x64>
    ab40:	b85fc263 	ldur	w3, [x19, #-4]
    ab44:	1ad52461 	lsr	w1, w3, w21
    ab48:	2a020021 	orr	w1, w1, w2
    ab4c:	1ac02062 	lsl	w2, w3, w0
    ab50:	b81fce61 	str	w1, [x19, #-4]!
    ab54:	17fffff1 	b	ab18 <mbedtls_mpi_core_shift_r+0x9c>

000000000000ab58 <mbedtls_mpi_core_add>:
mbedtls_mpi_core_add():
    ab58:	aa0003e8 	mov	x8, x0
    ab5c:	d2800005 	mov	x5, #0x0                   	// #0
    ab60:	52800000 	mov	w0, #0x0                   	// #0
    ab64:	eb0300bf 	cmp	x5, x3
    ab68:	54000041 	b.ne	ab70 <mbedtls_mpi_core_add+0x18>  // b.any
    ab6c:	d65f03c0 	ret
    ab70:	b8657824 	ldr	w4, [x1, x5, lsl #2]
    ab74:	b8657847 	ldr	w7, [x2, x5, lsl #2]
    ab78:	2b000086 	adds	w6, w4, w0
    ab7c:	1a9f37e4 	cset	w4, cs  // cs = hs, nlast
    ab80:	2b0600e7 	adds	w7, w7, w6
    ab84:	1a843480 	cinc	w0, w4, cs  // cs = hs, nlast
    ab88:	b8257907 	str	w7, [x8, x5, lsl #2]
    ab8c:	910004a5 	add	x5, x5, #0x1
    ab90:	17fffff5 	b	ab64 <mbedtls_mpi_core_add+0xc>

000000000000ab94 <mbedtls_mpi_core_add_if>:
mbedtls_mpi_core_add_if():
    ab94:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    ab98:	910003fd 	mov	x29, sp
    ab9c:	a90153f3 	stp	x19, x20, [sp, #16]
    aba0:	aa0203f4 	mov	x20, x2
    aba4:	aa0003f3 	mov	x19, x0
    aba8:	2a0303e0 	mov	w0, w3
    abac:	f90013f5 	str	x21, [sp, #32]
    abb0:	aa0103f5 	mov	x21, x1
    abb4:	9400025a 	bl	b51c <mbedtls_ct_mpi_uint_mask>
    abb8:	d2800005 	mov	x5, #0x0                   	// #0
    abbc:	2a0003e2 	mov	w2, w0
    abc0:	52800000 	mov	w0, #0x0                   	// #0
    abc4:	eb1400bf 	cmp	x5, x20
    abc8:	540000a1 	b.ne	abdc <mbedtls_mpi_core_add_if+0x48>  // b.any
    abcc:	a94153f3 	ldp	x19, x20, [sp, #16]
    abd0:	f94013f5 	ldr	x21, [sp, #32]
    abd4:	a8c37bfd 	ldp	x29, x30, [sp], #48
    abd8:	d65f03c0 	ret
    abdc:	b8657a64 	ldr	w4, [x19, x5, lsl #2]
    abe0:	b8657aa3 	ldr	w3, [x21, x5, lsl #2]
    abe4:	2b000086 	adds	w6, w4, w0
    abe8:	0a030043 	and	w3, w2, w3
    abec:	1a9f37e4 	cset	w4, cs  // cs = hs, nlast
    abf0:	2b060063 	adds	w3, w3, w6
    abf4:	b8257a63 	str	w3, [x19, x5, lsl #2]
    abf8:	1a843480 	cinc	w0, w4, cs  // cs = hs, nlast
    abfc:	910004a5 	add	x5, x5, #0x1
    ac00:	17fffff1 	b	abc4 <mbedtls_mpi_core_add_if+0x30>

000000000000ac04 <mbedtls_mpi_core_sub>:
mbedtls_mpi_core_sub():
    ac04:	aa0003e6 	mov	x6, x0
    ac08:	d2800005 	mov	x5, #0x0                   	// #0
    ac0c:	52800000 	mov	w0, #0x0                   	// #0
    ac10:	eb0300bf 	cmp	x5, x3
    ac14:	54000041 	b.ne	ac1c <mbedtls_mpi_core_sub+0x18>  // b.any
    ac18:	d65f03c0 	ret
    ac1c:	b8657824 	ldr	w4, [x1, x5, lsl #2]
    ac20:	b8657847 	ldr	w7, [x2, x5, lsl #2]
    ac24:	6b00009f 	cmp	w4, w0
    ac28:	4b000084 	sub	w4, w4, w0
    ac2c:	1a9f27e8 	cset	w8, cc  // cc = lo, ul, last
    ac30:	6b0400ff 	cmp	w7, w4
    ac34:	1a889500 	cinc	w0, w8, hi  // hi = pmore
    ac38:	4b070084 	sub	w4, w4, w7
    ac3c:	b82578c4 	str	w4, [x6, x5, lsl #2]
    ac40:	910004a5 	add	x5, x5, #0x1
    ac44:	17fffff3 	b	ac10 <mbedtls_mpi_core_sub+0xc>

000000000000ac48 <mbedtls_mpi_core_mla>:
mbedtls_mpi_core_mla():
    ac48:	eb03003f 	cmp	x1, x3
    ac4c:	aa0203e7 	mov	x7, x2
    ac50:	9a839026 	csel	x6, x1, x3, ls  // ls = plast
    ac54:	aa0003e9 	mov	x9, x0
    ac58:	cb060021 	sub	x1, x1, x6
    ac5c:	aa0003e5 	mov	x5, x0
    ac60:	d343fcca 	lsr	x10, x6, #3
    ac64:	924008c6 	and	x6, x6, #0x7
    ac68:	aa0a03eb 	mov	x11, x10
    ac6c:	52800000 	mov	w0, #0x0                   	// #0
    ac70:	d100056b 	sub	x11, x11, #0x1
    ac74:	b100057f 	cmn	x11, #0x1
    ac78:	54000161 	b.ne	aca4 <mbedtls_mpi_core_mla+0x5c>  // b.any
    ac7c:	8b0a1529 	add	x9, x9, x10, lsl #5
    ac80:	8b0a144a 	add	x10, x2, x10, lsl #5
    ac84:	d2800002 	mov	x2, #0x0                   	// #0
    ac88:	eb0200df 	cmp	x6, x2
    ac8c:	54000a21 	b.ne	add0 <mbedtls_mpi_core_mla+0x188>  // b.any
    ac90:	8b060926 	add	x6, x9, x6, lsl #2
    ac94:	d2800002 	mov	x2, #0x0                   	// #0
    ac98:	eb02003f 	cmp	x1, x2
    ac9c:	54000b01 	b.ne	adfc <mbedtls_mpi_core_mla+0x1b4>  // b.any
    aca0:	d65f03c0 	ret
    aca4:	b94000e3 	ldr	w3, [x7]
    aca8:	910080e7 	add	x7, x7, #0x20
    acac:	910080a5 	add	x5, x5, #0x20
    acb0:	9ba37c83 	umull	x3, w4, w3
    acb4:	d360fc68 	lsr	x8, x3, #32
    acb8:	2b030003 	adds	w3, w0, w3
    acbc:	b85e00a0 	ldur	w0, [x5, #-32]
    acc0:	1a883508 	cinc	w8, w8, cs  // cs = hs, nlast
    acc4:	2b030000 	adds	w0, w0, w3
    acc8:	b81e00a0 	stur	w0, [x5, #-32]
    accc:	1a883503 	cinc	w3, w8, cs  // cs = hs, nlast
    acd0:	b85e40a8 	ldur	w8, [x5, #-28]
    acd4:	b85e40ec 	ldur	w12, [x7, #-28]
    acd8:	9bac7c8c 	umull	x12, w4, w12
    acdc:	2b0c0063 	adds	w3, w3, w12
    ace0:	d360fd80 	lsr	x0, x12, #32
    ace4:	1a803400 	cinc	w0, w0, cs  // cs = hs, nlast
    ace8:	2b030108 	adds	w8, w8, w3
    acec:	b81e40a8 	stur	w8, [x5, #-28]
    acf0:	1a803400 	cinc	w0, w0, cs  // cs = hs, nlast
    acf4:	b85e80e3 	ldur	w3, [x7, #-24]
    acf8:	9ba37c83 	umull	x3, w4, w3
    acfc:	2b030000 	adds	w0, w0, w3
    ad00:	d360fc68 	lsr	x8, x3, #32
    ad04:	b85e80a3 	ldur	w3, [x5, #-24]
    ad08:	1a883508 	cinc	w8, w8, cs  // cs = hs, nlast
    ad0c:	2b000063 	adds	w3, w3, w0
    ad10:	b81e80a3 	stur	w3, [x5, #-24]
    ad14:	1a883508 	cinc	w8, w8, cs  // cs = hs, nlast
    ad18:	b85ec0e0 	ldur	w0, [x7, #-20]
    ad1c:	9ba07c80 	umull	x0, w4, w0
    ad20:	2b000108 	adds	w8, w8, w0
    ad24:	d360fc03 	lsr	x3, x0, #32
    ad28:	b85ec0a0 	ldur	w0, [x5, #-20]
    ad2c:	1a833463 	cinc	w3, w3, cs  // cs = hs, nlast
    ad30:	2b080000 	adds	w0, w0, w8
    ad34:	b81ec0a0 	stur	w0, [x5, #-20]
    ad38:	1a833463 	cinc	w3, w3, cs  // cs = hs, nlast
    ad3c:	b85f00e0 	ldur	w0, [x7, #-16]
    ad40:	9ba07c80 	umull	x0, w4, w0
    ad44:	2b000063 	adds	w3, w3, w0
    ad48:	d360fc08 	lsr	x8, x0, #32
    ad4c:	b85f00a0 	ldur	w0, [x5, #-16]
    ad50:	1a883508 	cinc	w8, w8, cs  // cs = hs, nlast
    ad54:	2b030000 	adds	w0, w0, w3
    ad58:	b81f00a0 	stur	w0, [x5, #-16]
    ad5c:	1a883508 	cinc	w8, w8, cs  // cs = hs, nlast
    ad60:	b85f40e0 	ldur	w0, [x7, #-12]
    ad64:	9ba07c80 	umull	x0, w4, w0
    ad68:	2b000108 	adds	w8, w8, w0
    ad6c:	d360fc03 	lsr	x3, x0, #32
    ad70:	b85f40a0 	ldur	w0, [x5, #-12]
    ad74:	1a833463 	cinc	w3, w3, cs  // cs = hs, nlast
    ad78:	2b080000 	adds	w0, w0, w8
    ad7c:	b81f40a0 	stur	w0, [x5, #-12]
    ad80:	1a833463 	cinc	w3, w3, cs  // cs = hs, nlast
    ad84:	b85f80e0 	ldur	w0, [x7, #-8]
    ad88:	9ba07c80 	umull	x0, w4, w0
    ad8c:	2b000063 	adds	w3, w3, w0
    ad90:	d360fc08 	lsr	x8, x0, #32
    ad94:	b85f80a0 	ldur	w0, [x5, #-8]
    ad98:	1a883508 	cinc	w8, w8, cs  // cs = hs, nlast
    ad9c:	2b030000 	adds	w0, w0, w3
    ada0:	b81f80a0 	stur	w0, [x5, #-8]
    ada4:	1a883508 	cinc	w8, w8, cs  // cs = hs, nlast
    ada8:	b85fc0e0 	ldur	w0, [x7, #-4]
    adac:	9ba07c80 	umull	x0, w4, w0
    adb0:	2b000108 	adds	w8, w8, w0
    adb4:	d360fc03 	lsr	x3, x0, #32
    adb8:	b85fc0a0 	ldur	w0, [x5, #-4]
    adbc:	1a833463 	cinc	w3, w3, cs  // cs = hs, nlast
    adc0:	2b080008 	adds	w8, w0, w8
    adc4:	b81fc0a8 	stur	w8, [x5, #-4]
    adc8:	1a833460 	cinc	w0, w3, cs  // cs = hs, nlast
    adcc:	17ffffa9 	b	ac70 <mbedtls_mpi_core_mla+0x28>
    add0:	b8627943 	ldr	w3, [x10, x2, lsl #2]
    add4:	9ba37c83 	umull	x3, w4, w3
    add8:	2b030000 	adds	w0, w0, w3
    addc:	d360fc65 	lsr	x5, x3, #32
    ade0:	b8627923 	ldr	w3, [x9, x2, lsl #2]
    ade4:	1a8534a5 	cinc	w5, w5, cs  // cs = hs, nlast
    ade8:	2b000063 	adds	w3, w3, w0
    adec:	b8227923 	str	w3, [x9, x2, lsl #2]
    adf0:	1a8534a0 	cinc	w0, w5, cs  // cs = hs, nlast
    adf4:	91000442 	add	x2, x2, #0x1
    adf8:	17ffffa4 	b	ac88 <mbedtls_mpi_core_mla+0x40>
    adfc:	b86278c3 	ldr	w3, [x6, x2, lsl #2]
    ae00:	2b000063 	adds	w3, w3, w0
    ae04:	b82278c3 	str	w3, [x6, x2, lsl #2]
    ae08:	1a9f37e0 	cset	w0, cs  // cs = hs, nlast
    ae0c:	91000442 	add	x2, x2, #0x1
    ae10:	17ffffa2 	b	ac98 <mbedtls_mpi_core_mla+0x50>

000000000000ae14 <mbedtls_mpi_core_montmul_init>:
mbedtls_mpi_core_montmul_init():
    ae14:	b9400002 	ldr	w2, [x0]
    ae18:	52800061 	mov	w1, #0x3                   	// #3
    ae1c:	52800044 	mov	w4, #0x2                   	// #2
    ae20:	11000840 	add	w0, w2, #0x2
    ae24:	531f7800 	lsl	w0, w0, #1
    ae28:	121d0000 	and	w0, w0, #0x8
    ae2c:	0b020000 	add	w0, w0, w2
    ae30:	1b009043 	msub	w3, w2, w0, w4
    ae34:	71000421 	subs	w1, w1, #0x1
    ae38:	1b037c00 	mul	w0, w0, w3
    ae3c:	54ffffa1 	b.ne	ae30 <mbedtls_mpi_core_montmul_init+0x1c>  // b.any
    ae40:	4b0003e0 	neg	w0, w0
    ae44:	d65f03c0 	ret

000000000000ae48 <mbedtls_mpi_core_montmul>:
mbedtls_mpi_core_montmul():
    ae48:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
    ae4c:	910003fd 	mov	x29, sp
    ae50:	a90573fb 	stp	x27, x28, [sp, #80]
    ae54:	aa0203fb 	mov	x27, x2
    ae58:	d37df0a2 	lsl	x2, x5, #3
    ae5c:	91001042 	add	x2, x2, #0x4
    ae60:	a90153f3 	stp	x19, x20, [sp, #16]
    ae64:	aa0503f4 	mov	x20, x5
    ae68:	d2800013 	mov	x19, #0x0                   	// #0
    ae6c:	a9025bf5 	stp	x21, x22, [sp, #32]
    ae70:	aa0703f6 	mov	x22, x7
    ae74:	a90363f7 	stp	x23, x24, [sp, #48]
    ae78:	aa0003f7 	mov	x23, x0
    ae7c:	aa0403f8 	mov	x24, x4
    ae80:	aa0703e0 	mov	x0, x7
    ae84:	a9046bf9 	stp	x25, x26, [sp, #64]
    ae88:	aa0103f9 	mov	x25, x1
    ae8c:	910008ba 	add	x26, x5, #0x2
    ae90:	52800001 	mov	w1, #0x0                   	// #0
    ae94:	f90033e3 	str	x3, [sp, #96]
    ae98:	b9006fe6 	str	w6, [sp, #108]
    ae9c:	940008ef 	bl	d258 <memset>
    aea0:	d37ef660 	lsl	x0, x19, #2
    aea4:	8b130ad5 	add	x21, x22, x19, lsl #2
    aea8:	eb14027f 	cmp	x19, x20
    aeac:	54000241 	b.ne	aef4 <mbedtls_mpi_core_montmul+0xac>  // b.any
    aeb0:	b8606ab4 	ldr	w20, [x21, x0]
    aeb4:	aa1303e3 	mov	x3, x19
    aeb8:	aa1803e2 	mov	x2, x24
    aebc:	aa1503e1 	mov	x1, x21
    aec0:	aa1703e0 	mov	x0, x23
    aec4:	97ffff50 	bl	ac04 <mbedtls_mpi_core_sub>
    aec8:	aa1503e2 	mov	x2, x21
    aecc:	4a000283 	eor	w3, w20, w0
    aed0:	aa1703e1 	mov	x1, x23
    aed4:	aa1303e0 	mov	x0, x19
    aed8:	a94153f3 	ldp	x19, x20, [sp, #16]
    aedc:	a9425bf5 	ldp	x21, x22, [sp, #32]
    aee0:	a94363f7 	ldp	x23, x24, [sp, #48]
    aee4:	a9446bf9 	ldp	x25, x26, [sp, #64]
    aee8:	a94573fb 	ldp	x27, x28, [sp, #80]
    aeec:	a8c77bfd 	ldp	x29, x30, [sp], #112
    aef0:	140001a8 	b	b590 <mbedtls_ct_mpi_uint_cond_assign>
    aef4:	b8737b24 	ldr	w4, [x25, x19, lsl #2]
    aef8:	aa1b03e2 	mov	x2, x27
    aefc:	b8737ac0 	ldr	w0, [x22, x19, lsl #2]
    af00:	aa1a03e1 	mov	x1, x26
    af04:	b940037c 	ldr	w28, [x27]
    af08:	91000673 	add	x19, x19, #0x1
    af0c:	f94033e3 	ldr	x3, [sp, #96]
    af10:	1b1c009c 	madd	w28, w4, w28, w0
    af14:	b9406fe0 	ldr	w0, [sp, #108]
    af18:	1b007f9c 	mul	w28, w28, w0
    af1c:	aa1503e0 	mov	x0, x21
    af20:	97ffff4a 	bl	ac48 <mbedtls_mpi_core_mla>
    af24:	2a1c03e4 	mov	w4, w28
    af28:	aa1403e3 	mov	x3, x20
    af2c:	aa1803e2 	mov	x2, x24
    af30:	aa1a03e1 	mov	x1, x26
    af34:	aa1503e0 	mov	x0, x21
    af38:	97ffff44 	bl	ac48 <mbedtls_mpi_core_mla>
    af3c:	17ffffd9 	b	aea0 <mbedtls_mpi_core_montmul+0x58>

000000000000af40 <mbedtls_mpi_core_get_mont_r2_unsafe>:
mbedtls_mpi_core_get_mont_r2_unsafe():
    af40:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    af44:	910003fd 	mov	x29, sp
    af48:	a90153f3 	stp	x19, x20, [sp, #16]
    af4c:	aa0103f4 	mov	x20, x1
    af50:	aa0003f3 	mov	x19, x0
    af54:	52800021 	mov	w1, #0x1                   	// #1
    af58:	97fff188 	bl	7578 <mbedtls_mpi_lset>
    af5c:	35000200 	cbnz	w0, af9c <mbedtls_mpi_core_get_mont_r2_unsafe+0x5c>
    af60:	f9400681 	ldr	x1, [x20, #8]
    af64:	aa1303e0 	mov	x0, x19
    af68:	d37ae421 	lsl	x1, x1, #6
    af6c:	97fff21f 	bl	77e8 <mbedtls_mpi_shift_l>
    af70:	35000160 	cbnz	w0, af9c <mbedtls_mpi_core_get_mont_r2_unsafe+0x5c>
    af74:	aa1403e2 	mov	x2, x20
    af78:	aa1303e1 	mov	x1, x19
    af7c:	aa1303e0 	mov	x0, x19
    af80:	97fff654 	bl	88d0 <mbedtls_mpi_mod_mpi>
    af84:	350000c0 	cbnz	w0, af9c <mbedtls_mpi_core_get_mont_r2_unsafe+0x5c>
    af88:	aa1303e0 	mov	x0, x19
    af8c:	f9400681 	ldr	x1, [x20, #8]
    af90:	a94153f3 	ldp	x19, x20, [sp, #16]
    af94:	a8c27bfd 	ldp	x29, x30, [sp], #32
    af98:	17fff0dc 	b	7308 <mbedtls_mpi_shrink>
    af9c:	a94153f3 	ldp	x19, x20, [sp, #16]
    afa0:	a8c27bfd 	ldp	x29, x30, [sp], #32
    afa4:	d65f03c0 	ret

000000000000afa8 <mbedtls_mpi_core_fill_random>:
mbedtls_mpi_core_fill_random():
    afa8:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    afac:	f240045f 	tst	x2, #0x3
    afb0:	910003fd 	mov	x29, sp
    afb4:	a90153f3 	stp	x19, x20, [sp, #16]
    afb8:	d342fc53 	lsr	x19, x2, #2
    afbc:	9a930673 	cinc	x19, x19, ne  // ne = any
    afc0:	a9025bf5 	stp	x21, x22, [sp, #32]
    afc4:	a90363f7 	stp	x23, x24, [sp, #48]
    afc8:	a9046bf9 	stp	x25, x26, [sp, #64]
    afcc:	d37ef67a 	lsl	x26, x19, #2
    afd0:	cb020359 	sub	x25, x26, x2
    afd4:	eb01027f 	cmp	x19, x1
    afd8:	540003c8 	b.hi	b050 <mbedtls_mpi_core_fill_random+0xa8>  // b.pmore
    afdc:	aa0403f8 	mov	x24, x4
    afe0:	aa0003f6 	mov	x22, x0
    afe4:	aa0203f4 	mov	x20, x2
    afe8:	aa0303f7 	mov	x23, x3
    afec:	aa0103f5 	mov	x21, x1
    aff0:	aa1903e2 	mov	x2, x25
    aff4:	52800001 	mov	w1, #0x0                   	// #0
    aff8:	94000898 	bl	d258 <memset>
    affc:	cb1302a2 	sub	x2, x21, x19
    b000:	52800001 	mov	w1, #0x0                   	// #0
    b004:	8b1a02c0 	add	x0, x22, x26
    b008:	d37ef442 	lsl	x2, x2, #2
    b00c:	94000893 	bl	d258 <memset>
    b010:	aa1403e2 	mov	x2, x20
    b014:	8b1902c1 	add	x1, x22, x25
    b018:	aa1803e0 	mov	x0, x24
    b01c:	d63f02e0 	blr	x23
    b020:	2a0003f4 	mov	w20, w0
    b024:	35000080 	cbnz	w0, b034 <mbedtls_mpi_core_fill_random+0x8c>
    b028:	aa1303e1 	mov	x1, x19
    b02c:	aa1603e0 	mov	x0, x22
    b030:	97fffda5 	bl	a6c4 <mbedtls_mpi_core_bigendian_to_host>
    b034:	2a1403e0 	mov	w0, w20
    b038:	a94153f3 	ldp	x19, x20, [sp, #16]
    b03c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    b040:	a94363f7 	ldp	x23, x24, [sp, #48]
    b044:	a9446bf9 	ldp	x25, x26, [sp, #64]
    b048:	a8c57bfd 	ldp	x29, x30, [sp], #80
    b04c:	d65f03c0 	ret
    b050:	12800074 	mov	w20, #0xfffffffc            	// #-4
    b054:	17fffff8 	b	b034 <mbedtls_mpi_core_fill_random+0x8c>

000000000000b058 <mbedtls_mpi_core_random>:
mbedtls_mpi_core_random():
    b058:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
    b05c:	910003fd 	mov	x29, sp
    b060:	a90153f3 	stp	x19, x20, [sp, #16]
    b064:	aa0303f3 	mov	x19, x3
    b068:	a9025bf5 	stp	x21, x22, [sp, #32]
    b06c:	aa0003f5 	mov	x21, x0
    b070:	aa0203e0 	mov	x0, x2
    b074:	a90363f7 	stp	x23, x24, [sp, #48]
    b078:	aa0203f8 	mov	x24, x2
    b07c:	528003d7 	mov	w23, #0x1e                  	// #30
    b080:	a9046bf9 	stp	x25, x26, [sp, #64]
    b084:	2a0103f9 	mov	w25, w1
    b088:	aa0403fa 	mov	x26, x4
    b08c:	aa0303e1 	mov	x1, x3
    b090:	a90573fb 	stp	x27, x28, [sp, #80]
    b094:	aa0503fb 	mov	x27, x5
    b098:	97fffd76 	bl	a670 <mbedtls_mpi_core_bitlen>
    b09c:	91001c14 	add	x20, x0, #0x7
    b0a0:	f1009e9f 	cmp	x20, #0x27
    b0a4:	52801f41 	mov	w1, #0xfa                  	// #250
    b0a8:	d343fe9c 	lsr	x28, x20, #3
    b0ac:	927df294 	and	x20, x20, #0xfffffffffffffff8
    b0b0:	1a8182f7 	csel	w23, w23, w1, hi  // hi = pmore
    b0b4:	cb000294 	sub	x20, x20, x0
    b0b8:	aa1b03e4 	mov	x4, x27
    b0bc:	aa1a03e3 	mov	x3, x26
    b0c0:	aa1c03e2 	mov	x2, x28
    b0c4:	aa1303e1 	mov	x1, x19
    b0c8:	aa1503e0 	mov	x0, x21
    b0cc:	97ffffb7 	bl	afa8 <mbedtls_mpi_core_fill_random>
    b0d0:	2a0003f6 	mov	w22, w0
    b0d4:	350002a0 	cbnz	w0, b128 <mbedtls_mpi_core_random+0xd0>
    b0d8:	aa1403e2 	mov	x2, x20
    b0dc:	aa1303e1 	mov	x1, x19
    b0e0:	aa1503e0 	mov	x0, x21
    b0e4:	97fffe66 	bl	aa7c <mbedtls_mpi_core_shift_r>
    b0e8:	710006f7 	subs	w23, w23, #0x1
    b0ec:	540002e0 	b.eq	b148 <mbedtls_mpi_core_random+0xf0>  // b.none
    b0f0:	aa1303e2 	mov	x2, x19
    b0f4:	aa1503e1 	mov	x1, x21
    b0f8:	2a1903e0 	mov	w0, w25
    b0fc:	97fffd7f 	bl	a6f8 <mbedtls_mpi_core_uint_le_mpi>
    b100:	2a0003e3 	mov	w3, w0
    b104:	aa1303e2 	mov	x2, x19
    b108:	aa1803e1 	mov	x1, x24
    b10c:	aa1503e0 	mov	x0, x21
    b110:	b9006fe3 	str	w3, [sp, #108]
    b114:	940001e7 	bl	b8b0 <mbedtls_mpi_core_lt_ct>
    b118:	b9406fe3 	ldr	w3, [sp, #108]
    b11c:	7100007f 	cmp	w3, #0x0
    b120:	7a401804 	ccmp	w0, #0x0, #0x4, ne  // ne = any
    b124:	54fffca0 	b.eq	b0b8 <mbedtls_mpi_core_random+0x60>  // b.none
    b128:	2a1603e0 	mov	w0, w22
    b12c:	a94153f3 	ldp	x19, x20, [sp, #16]
    b130:	a9425bf5 	ldp	x21, x22, [sp, #32]
    b134:	a94363f7 	ldp	x23, x24, [sp, #48]
    b138:	a9446bf9 	ldp	x25, x26, [sp, #64]
    b13c:	a94573fb 	ldp	x27, x28, [sp, #80]
    b140:	a8c77bfd 	ldp	x29, x30, [sp], #112
    b144:	d65f03c0 	ret
    b148:	128001b6 	mov	w22, #0xfffffff2            	// #-14
    b14c:	17fffff7 	b	b128 <mbedtls_mpi_core_random+0xd0>

000000000000b150 <mbedtls_mpi_core_exp_mod_working_limbs>:
mbedtls_mpi_core_exp_mod_working_limbs():
    b150:	d37be821 	lsl	x1, x1, #5
    b154:	f1013c3f 	cmp	x1, #0x4f
    b158:	d2800021 	mov	x1, #0x1                   	// #1
    b15c:	9a9f97e2 	cset	x2, hi  // hi = pmore
    b160:	91000442 	add	x2, x2, #0x1
    b164:	9ac22021 	lsl	x1, x1, x2
    b168:	91000c21 	add	x1, x1, #0x3
    b16c:	9b007c20 	mul	x0, x1, x0
    b170:	91000400 	add	x0, x0, #0x1
    b174:	d65f03c0 	ret

000000000000b178 <mbedtls_mpi_core_exp_mod>:
mbedtls_mpi_core_exp_mod():
    b178:	a9b67bfd 	stp	x29, x30, [sp, #-160]!
    b17c:	910003fd 	mov	x29, sp
    b180:	a90153f3 	stp	x19, x20, [sp, #16]
    b184:	aa0003f4 	mov	x20, x0
    b188:	d37be8a0 	lsl	x0, x5, #5
    b18c:	f1013c1f 	cmp	x0, #0x4f
    b190:	a9046bf9 	stp	x25, x26, [sp, #64]
    b194:	9a9f97e0 	cset	x0, hi  // hi = pmore
    b198:	aa0303fa 	mov	x26, x3
    b19c:	d2800023 	mov	x3, #0x1                   	// #1
    b1a0:	8b030000 	add	x0, x0, x3
    b1a4:	a9068fe0 	stp	x0, x3, [sp, #104]
    b1a8:	aa0703f3 	mov	x19, x7
    b1ac:	3941a3e0 	ldrb	w0, [sp, #104]
    b1b0:	a9025bf5 	stp	x21, x22, [sp, #32]
    b1b4:	aa0203f5 	mov	x21, x2
    b1b8:	aa0503f6 	mov	x22, x5
    b1bc:	9ac02060 	lsl	x0, x3, x0
    b1c0:	f9003fe0 	str	x0, [sp, #120]
    b1c4:	3941a3e0 	ldrb	w0, [sp, #104]
    b1c8:	a90363f7 	stp	x23, x24, [sp, #48]
    b1cc:	d37ef757 	lsl	x23, x26, #2
    b1d0:	9ac02359 	lsl	x25, x26, x0
    b1d4:	aa0203e0 	mov	x0, x2
    b1d8:	8b1908f9 	add	x25, x7, x25, lsl #2
    b1dc:	a90573fb 	stp	x27, x28, [sp, #80]
    b1e0:	aa0603fc 	mov	x28, x6
    b1e4:	a90807e4 	stp	x4, x1, [sp, #128]
    b1e8:	97ffff0b 	bl	ae14 <mbedtls_mpi_core_montmul_init>
    b1ec:	aa1703e2 	mov	x2, x23
    b1f0:	2a0003f8 	mov	w24, w0
    b1f4:	52800001 	mov	w1, #0x0                   	// #0
    b1f8:	aa1303e0 	mov	x0, x19
    b1fc:	94000817 	bl	d258 <memset>
    b200:	f9403be3 	ldr	x3, [sp, #112]
    b204:	b9000263 	str	w3, [x19]
    b208:	8b1a0b3b 	add	x27, x25, x26, lsl #2
    b20c:	aa1c03e2 	mov	x2, x28
    b210:	aa1b03e7 	mov	x7, x27
    b214:	2a1803e6 	mov	w6, w24
    b218:	aa1a03e5 	mov	x5, x26
    b21c:	aa1503e4 	mov	x4, x21
    b220:	aa1303e1 	mov	x1, x19
    b224:	aa1303e0 	mov	x0, x19
    b228:	aa1a03e3 	mov	x3, x26
    b22c:	97ffff07 	bl	ae48 <mbedtls_mpi_core_montmul>
    b230:	f94047e8 	ldr	x8, [sp, #136]
    b234:	8b17027c 	add	x28, x19, x23
    b238:	aa1703e2 	mov	x2, x23
    b23c:	aa1c03e0 	mov	x0, x28
    b240:	aa0803e1 	mov	x1, x8
    b244:	97ffd36f 	bl	0 <memcpy>
    b248:	aa1c03e1 	mov	x1, x28
    b24c:	d2800040 	mov	x0, #0x2                   	// #2
    b250:	f9003be0 	str	x0, [sp, #112]
    b254:	a94703e2 	ldp	x2, x0, [sp, #112]
    b258:	eb02001f 	cmp	x0, x2
    b25c:	540008e1 	b.ne	b378 <mbedtls_mpi_core_exp_mod+0x200>  // b.any
    b260:	aa1703e2 	mov	x2, x23
    b264:	aa1303e1 	mov	x1, x19
    b268:	aa1403e0 	mov	x0, x20
    b26c:	97ffd365 	bl	0 <memcpy>
    b270:	52800009 	mov	w9, #0x0                   	// #0
    b274:	d280000b 	mov	x11, #0x0                   	// #0
    b278:	d280001c 	mov	x28, #0x0                   	// #0
    b27c:	aa1b03e7 	mov	x7, x27
    b280:	2a1803e6 	mov	w6, w24
    b284:	aa1a03e5 	mov	x5, x26
    b288:	aa1503e4 	mov	x4, x21
    b28c:	aa1a03e3 	mov	x3, x26
    b290:	aa1403e2 	mov	x2, x20
    b294:	aa1403e1 	mov	x1, x20
    b298:	aa1403e0 	mov	x0, x20
    b29c:	f9003feb 	str	x11, [sp, #120]
    b2a0:	b9008be9 	str	w9, [sp, #136]
    b2a4:	97fffee9 	bl	ae48 <mbedtls_mpi_core_montmul>
    b2a8:	b9408be9 	ldr	w9, [sp, #136]
    b2ac:	f9403feb 	ldr	x11, [sp, #120]
    b2b0:	b500083c 	cbnz	x28, b3b4 <mbedtls_mpi_core_exp_mod+0x23c>
    b2b4:	d10006d6 	sub	x22, x22, #0x1
    b2b8:	d28003fc 	mov	x28, #0x1f                  	// #31
    b2bc:	f94043e0 	ldr	x0, [sp, #128]
    b2c0:	9100056b 	add	x11, x11, #0x1
    b2c4:	b8767800 	ldr	w0, [x0, x22, lsl #2]
    b2c8:	1adc2400 	lsr	w0, w0, w28
    b2cc:	12000000 	and	w0, w0, #0x1
    b2d0:	2a090409 	orr	w9, w0, w9, lsl #1
    b2d4:	aa1c02c0 	orr	x0, x22, x28
    b2d8:	f9003fe0 	str	x0, [sp, #120]
    b2dc:	f94037e0 	ldr	x0, [sp, #104]
    b2e0:	eb00017f 	cmp	x11, x0
    b2e4:	54000060 	b.eq	b2f0 <mbedtls_mpi_core_exp_mod+0x178>  // b.none
    b2e8:	aa1c02c0 	orr	x0, x22, x28
    b2ec:	b5fffc80 	cbnz	x0, b27c <mbedtls_mpi_core_exp_mod+0x104>
    b2f0:	aa1303e5 	mov	x5, x19
    b2f4:	d2800004 	mov	x4, #0x0                   	// #0
    b2f8:	aa0903e1 	mov	x1, x9
    b2fc:	aa0403e0 	mov	x0, x4
    b300:	a90893e5 	stp	x5, x4, [sp, #136]
    b304:	f9004fe9 	str	x9, [sp, #152]
    b308:	94000089 	bl	b52c <mbedtls_ct_size_bool_eq>
    b30c:	f94047e5 	ldr	x5, [sp, #136]
    b310:	2a0003e3 	mov	w3, w0
    b314:	aa1a03e2 	mov	x2, x26
    b318:	aa1903e0 	mov	x0, x25
    b31c:	aa0503e1 	mov	x1, x5
    b320:	97fffd0f 	bl	a75c <mbedtls_mpi_core_cond_assign>
    b324:	a94893e5 	ldp	x5, x4, [sp, #136]
    b328:	f9403be0 	ldr	x0, [sp, #112]
    b32c:	f9404fe9 	ldr	x9, [sp, #152]
    b330:	91000484 	add	x4, x4, #0x1
    b334:	8b1700a5 	add	x5, x5, x23
    b338:	eb04001f 	cmp	x0, x4
    b33c:	54fffde1 	b.ne	b2f8 <mbedtls_mpi_core_exp_mod+0x180>  // b.any
    b340:	aa1403e0 	mov	x0, x20
    b344:	aa1b03e7 	mov	x7, x27
    b348:	2a1803e6 	mov	w6, w24
    b34c:	aa1a03e5 	mov	x5, x26
    b350:	aa1503e4 	mov	x4, x21
    b354:	aa1a03e3 	mov	x3, x26
    b358:	aa1903e2 	mov	x2, x25
    b35c:	aa1403e1 	mov	x1, x20
    b360:	97fffeba 	bl	ae48 <mbedtls_mpi_core_montmul>
    b364:	f9403fe0 	ldr	x0, [sp, #120]
    b368:	b40002a0 	cbz	x0, b3bc <mbedtls_mpi_core_exp_mod+0x244>
    b36c:	52800009 	mov	w9, #0x0                   	// #0
    b370:	d280000b 	mov	x11, #0x0                   	// #0
    b374:	17ffffc2 	b	b27c <mbedtls_mpi_core_exp_mod+0x104>
    b378:	8b170020 	add	x0, x1, x23
    b37c:	aa1b03e7 	mov	x7, x27
    b380:	2a1803e6 	mov	w6, w24
    b384:	aa1a03e5 	mov	x5, x26
    b388:	aa1503e4 	mov	x4, x21
    b38c:	aa1a03e3 	mov	x3, x26
    b390:	aa1c03e2 	mov	x2, x28
    b394:	f90047e0 	str	x0, [sp, #136]
    b398:	97fffeac 	bl	ae48 <mbedtls_mpi_core_montmul>
    b39c:	f9403be0 	ldr	x0, [sp, #112]
    b3a0:	91000400 	add	x0, x0, #0x1
    b3a4:	f9003be0 	str	x0, [sp, #112]
    b3a8:	f94047e0 	ldr	x0, [sp, #136]
    b3ac:	aa0003e1 	mov	x1, x0
    b3b0:	17ffffa9 	b	b254 <mbedtls_mpi_core_exp_mod+0xdc>
    b3b4:	d100079c 	sub	x28, x28, #0x1
    b3b8:	17ffffc1 	b	b2bc <mbedtls_mpi_core_exp_mod+0x144>
    b3bc:	a94153f3 	ldp	x19, x20, [sp, #16]
    b3c0:	a9425bf5 	ldp	x21, x22, [sp, #32]
    b3c4:	a94363f7 	ldp	x23, x24, [sp, #48]
    b3c8:	a9446bf9 	ldp	x25, x26, [sp, #64]
    b3cc:	a94573fb 	ldp	x27, x28, [sp, #80]
    b3d0:	a8ca7bfd 	ldp	x29, x30, [sp], #160
    b3d4:	d65f03c0 	ret

000000000000b3d8 <mbedtls_mpi_core_sub_int>:
mbedtls_mpi_core_sub_int():
    b3d8:	aa0003e5 	mov	x5, x0
    b3dc:	2a0203e0 	mov	w0, w2
    b3e0:	d2800002 	mov	x2, #0x0                   	// #0
    b3e4:	eb03005f 	cmp	x2, x3
    b3e8:	54000041 	b.ne	b3f0 <mbedtls_mpi_core_sub_int+0x18>  // b.any
    b3ec:	d65f03c0 	ret
    b3f0:	b8627824 	ldr	w4, [x1, x2, lsl #2]
    b3f4:	6b000084 	subs	w4, w4, w0
    b3f8:	b82278a4 	str	w4, [x5, x2, lsl #2]
    b3fc:	1a9f27e0 	cset	w0, cc  // cc = lo, ul, last
    b400:	91000442 	add	x2, x2, #0x1
    b404:	17fffff8 	b	b3e4 <mbedtls_mpi_core_sub_int+0xc>

000000000000b408 <mbedtls_mpi_core_check_zero_ct>:
mbedtls_mpi_core_check_zero_ct():
    b408:	aa0003e3 	mov	x3, x0
    b40c:	d2800002 	mov	x2, #0x0                   	// #0
    b410:	52800000 	mov	w0, #0x0                   	// #0
    b414:	eb01005f 	cmp	x2, x1
    b418:	54000041 	b.ne	b420 <mbedtls_mpi_core_check_zero_ct+0x18>  // b.any
    b41c:	d65f03c0 	ret
    b420:	b8627864 	ldr	w4, [x3, x2, lsl #2]
    b424:	91000442 	add	x2, x2, #0x1
    b428:	2a040000 	orr	w0, w0, w4
    b42c:	17fffffa 	b	b414 <mbedtls_mpi_core_check_zero_ct+0xc>

000000000000b430 <mbedtls_mpi_core_to_mont_rep>:
mbedtls_mpi_core_to_mont_rep():
    b430:	aa0203e8 	mov	x8, x2
    b434:	aa0603e7 	mov	x7, x6
    b438:	aa0503e2 	mov	x2, x5
    b43c:	2a0403e6 	mov	w6, w4
    b440:	aa0303e5 	mov	x5, x3
    b444:	aa0803e4 	mov	x4, x8
    b448:	17fffe80 	b	ae48 <mbedtls_mpi_core_montmul>

000000000000b44c <mbedtls_mpi_core_from_mont_rep>:
mbedtls_mpi_core_from_mont_rep():
    b44c:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    b450:	910003fd 	mov	x29, sp
    b454:	f9000bf3 	str	x19, [sp, #16]
    b458:	d0000073 	adrp	x19, 19000 <_DYNAMIC>
    b45c:	f9409a66 	ldr	x6, [x19, #304]
    b460:	f94000c7 	ldr	x7, [x6]
    b464:	f90017e7 	str	x7, [sp, #40]
    b468:	d2800007 	mov	x7, #0x0                   	// #0
    b46c:	52800026 	mov	w6, #0x1                   	// #1
    b470:	aa0503e7 	mov	x7, x5
    b474:	aa0303e5 	mov	x5, x3
    b478:	d2800023 	mov	x3, #0x1                   	// #1
    b47c:	b90027e6 	str	w6, [sp, #36]
    b480:	2a0403e6 	mov	w6, w4
    b484:	aa0203e4 	mov	x4, x2
    b488:	910093e2 	add	x2, sp, #0x24
    b48c:	97fffe6f 	bl	ae48 <mbedtls_mpi_core_montmul>
    b490:	f9409a73 	ldr	x19, [x19, #304]
    b494:	f94017e0 	ldr	x0, [sp, #40]
    b498:	f9400261 	ldr	x1, [x19]
    b49c:	eb010000 	subs	x0, x0, x1
    b4a0:	d2800001 	mov	x1, #0x0                   	// #0
    b4a4:	54000040 	b.eq	b4ac <mbedtls_mpi_core_from_mont_rep+0x60>  // b.none
    b4a8:	97ffd474 	bl	678 <__stack_chk_fail>
    b4ac:	f9400bf3 	ldr	x19, [sp, #16]
    b4b0:	a8c37bfd 	ldp	x29, x30, [sp], #48
    b4b4:	d65f03c0 	ret

000000000000b4b8 <mbedtls_ct_uchar_mask_of_range>:
mbedtls_ct_uchar_mask_of_range():
    b4b8:	12001c42 	and	w2, w2, #0xff
    b4bc:	12001c21 	and	w1, w1, #0xff
    b4c0:	4b020021 	sub	w1, w1, w2
    b4c4:	4b200040 	sub	w0, w2, w0, uxtb
    b4c8:	53087c21 	lsr	w1, w1, #8
    b4cc:	2a402020 	orr	w0, w1, w0, lsr #8
    b4d0:	2a2003e0 	mvn	w0, w0
    b4d4:	d65f03c0 	ret

000000000000b4d8 <mbedtls_ct_memcmp>:
mbedtls_ct_memcmp():
    b4d8:	aa0003e5 	mov	x5, x0
    b4dc:	d2800003 	mov	x3, #0x0                   	// #0
    b4e0:	52800000 	mov	w0, #0x0                   	// #0
    b4e4:	eb02007f 	cmp	x3, x2
    b4e8:	54000041 	b.ne	b4f0 <mbedtls_ct_memcmp+0x18>  // b.any
    b4ec:	d65f03c0 	ret
    b4f0:	386368a6 	ldrb	w6, [x5, x3]
    b4f4:	38636824 	ldrb	w4, [x1, x3]
    b4f8:	91000463 	add	x3, x3, #0x1
    b4fc:	4a060084 	eor	w4, w4, w6
    b500:	12001c84 	and	w4, w4, #0xff
    b504:	2a040000 	orr	w0, w0, w4
    b508:	17fffff7 	b	b4e4 <mbedtls_ct_memcmp+0xc>

000000000000b50c <mbedtls_ct_uint_mask>:
mbedtls_ct_uint_mask():
    b50c:	4b0003e1 	neg	w1, w0
    b510:	2a000020 	orr	w0, w1, w0
    b514:	131f7c00 	asr	w0, w0, #31
    b518:	d65f03c0 	ret

000000000000b51c <mbedtls_ct_mpi_uint_mask>:
mbedtls_ct_mpi_uint_mask():
    b51c:	4b0003e1 	neg	w1, w0
    b520:	2a000020 	orr	w0, w1, w0
    b524:	131f7c00 	asr	w0, w0, #31
    b528:	d65f03c0 	ret

000000000000b52c <mbedtls_ct_size_bool_eq>:
mbedtls_ct_size_bool_eq():
    b52c:	ca010001 	eor	x1, x0, x1
    b530:	cb0103e0 	neg	x0, x1
    b534:	aa010000 	orr	x0, x0, x1
    b538:	d37ffc00 	lsr	x0, x0, #63
    b53c:	52000000 	eor	w0, w0, #0x1
    b540:	d65f03c0 	ret

000000000000b544 <mbedtls_ct_mpi_uint_lt>:
mbedtls_ct_mpi_uint_lt():
    b544:	4b010002 	sub	w2, w0, w1
    b548:	4a010000 	eor	w0, w0, w1
    b54c:	4a010041 	eor	w1, w2, w1
    b550:	0a010000 	and	w0, w0, w1
    b554:	4a020000 	eor	w0, w0, w2
    b558:	531f7c00 	lsr	w0, w0, #31
    b55c:	d65f03c0 	ret

000000000000b560 <mbedtls_ct_uint_if>:
mbedtls_ct_uint_if():
    b560:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    b564:	910003fd 	mov	x29, sp
    b568:	a90153f3 	stp	x19, x20, [sp, #16]
    b56c:	2a0203f4 	mov	w20, w2
    b570:	2a0103f3 	mov	w19, w1
    b574:	4a140273 	eor	w19, w19, w20
    b578:	97ffffe5 	bl	b50c <mbedtls_ct_uint_mask>
    b57c:	0a000260 	and	w0, w19, w0
    b580:	4a140000 	eor	w0, w0, w20
    b584:	a94153f3 	ldp	x19, x20, [sp, #16]
    b588:	a8c27bfd 	ldp	x29, x30, [sp], #32
    b58c:	d65f03c0 	ret

000000000000b590 <mbedtls_ct_mpi_uint_cond_assign>:
mbedtls_ct_mpi_uint_cond_assign():
    b590:	12001c63 	and	w3, w3, #0xff
    b594:	d2800004 	mov	x4, #0x0                   	// #0
    b598:	4b0303e7 	neg	w7, w3
    b59c:	51000463 	sub	w3, w3, #0x1
    b5a0:	eb00009f 	cmp	x4, x0
    b5a4:	54000041 	b.ne	b5ac <mbedtls_ct_mpi_uint_cond_assign+0x1c>  // b.any
    b5a8:	d65f03c0 	ret
    b5ac:	b8647825 	ldr	w5, [x1, x4, lsl #2]
    b5b0:	b8647846 	ldr	w6, [x2, x4, lsl #2]
    b5b4:	0a050065 	and	w5, w3, w5
    b5b8:	0a0600e6 	and	w6, w7, w6
    b5bc:	2a0600a5 	orr	w5, w5, w6
    b5c0:	b8247825 	str	w5, [x1, x4, lsl #2]
    b5c4:	91000484 	add	x4, x4, #0x1
    b5c8:	17fffff6 	b	b5a0 <mbedtls_ct_mpi_uint_cond_assign+0x10>

000000000000b5cc <mbedtls_ct_base64_enc_char>:
mbedtls_ct_base64_enc_char():
    b5cc:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    b5d0:	12001c04 	and	w4, w0, #0xff
    b5d4:	2a0403e2 	mov	w2, w4
    b5d8:	910003fd 	mov	x29, sp
    b5dc:	52800321 	mov	w1, #0x19                  	// #25
    b5e0:	52800000 	mov	w0, #0x0                   	// #0
    b5e4:	97ffffb5 	bl	b4b8 <mbedtls_ct_uchar_mask_of_range>
    b5e8:	12001c05 	and	w5, w0, #0xff
    b5ec:	2a0403e2 	mov	w2, w4
    b5f0:	52800661 	mov	w1, #0x33                  	// #51
    b5f4:	52800340 	mov	w0, #0x1a                  	// #26
    b5f8:	97ffffb0 	bl	b4b8 <mbedtls_ct_uchar_mask_of_range>
    b5fc:	11010483 	add	w3, w4, #0x41
    b600:	12001c01 	and	w1, w0, #0xff
    b604:	11011c80 	add	w0, w4, #0x47
    b608:	0a050063 	and	w3, w3, w5
    b60c:	0a010000 	and	w0, w0, w1
    b610:	2a0403e2 	mov	w2, w4
    b614:	2a000063 	orr	w3, w3, w0
    b618:	528007a1 	mov	w1, #0x3d                  	// #61
    b61c:	52800680 	mov	w0, #0x34                  	// #52
    b620:	97ffffa6 	bl	b4b8 <mbedtls_ct_uchar_mask_of_range>
    b624:	12001c01 	and	w1, w0, #0xff
    b628:	51001080 	sub	w0, w4, #0x4
    b62c:	0a010000 	and	w0, w0, w1
    b630:	13001c63 	sxtb	w3, w3
    b634:	2a0403e2 	mov	w2, w4
    b638:	528007c1 	mov	w1, #0x3e                  	// #62
    b63c:	2a000063 	orr	w3, w3, w0
    b640:	2a0103e0 	mov	w0, w1
    b644:	97ffff9d 	bl	b4b8 <mbedtls_ct_uchar_mask_of_range>
    b648:	12001c05 	and	w5, w0, #0xff
    b64c:	528007e1 	mov	w1, #0x3f                  	// #63
    b650:	2a0403e2 	mov	w2, w4
    b654:	2a0103e0 	mov	w0, w1
    b658:	97ffff98 	bl	b4b8 <mbedtls_ct_uchar_mask_of_range>
    b65c:	528005e1 	mov	w1, #0x2f                  	// #47
    b660:	0a000020 	and	w0, w1, w0
    b664:	52800561 	mov	w1, #0x2b                  	// #43
    b668:	0a0100a5 	and	w5, w5, w1
    b66c:	13001c63 	sxtb	w3, w3
    b670:	2a050000 	orr	w0, w0, w5
    b674:	2a030000 	orr	w0, w0, w3
    b678:	a8c17bfd 	ldp	x29, x30, [sp], #16
    b67c:	d65f03c0 	ret

000000000000b680 <mbedtls_ct_base64_dec_value>:
mbedtls_ct_base64_dec_value():
    b680:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    b684:	12001c04 	and	w4, w0, #0xff
    b688:	2a0403e2 	mov	w2, w4
    b68c:	910003fd 	mov	x29, sp
    b690:	52800b41 	mov	w1, #0x5a                  	// #90
    b694:	52800820 	mov	w0, #0x41                  	// #65
    b698:	97ffff88 	bl	b4b8 <mbedtls_ct_uchar_mask_of_range>
    b69c:	12001c05 	and	w5, w0, #0xff
    b6a0:	2a0403e2 	mov	w2, w4
    b6a4:	52800f41 	mov	w1, #0x7a                  	// #122
    b6a8:	52800c20 	mov	w0, #0x61                  	// #97
    b6ac:	97ffff83 	bl	b4b8 <mbedtls_ct_uchar_mask_of_range>
    b6b0:	51010083 	sub	w3, w4, #0x40
    b6b4:	12001c01 	and	w1, w0, #0xff
    b6b8:	51011880 	sub	w0, w4, #0x46
    b6bc:	0a050063 	and	w3, w3, w5
    b6c0:	0a010000 	and	w0, w0, w1
    b6c4:	2a0403e2 	mov	w2, w4
    b6c8:	2a000063 	orr	w3, w3, w0
    b6cc:	52800721 	mov	w1, #0x39                  	// #57
    b6d0:	52800600 	mov	w0, #0x30                  	// #48
    b6d4:	97ffff79 	bl	b4b8 <mbedtls_ct_uchar_mask_of_range>
    b6d8:	2a0403e2 	mov	w2, w4
    b6dc:	12001c05 	and	w5, w0, #0xff
    b6e0:	52800561 	mov	w1, #0x2b                  	// #43
    b6e4:	2a0103e0 	mov	w0, w1
    b6e8:	97ffff74 	bl	b4b8 <mbedtls_ct_uchar_mask_of_range>
    b6ec:	12001c02 	and	w2, w0, #0xff
    b6f0:	11005081 	add	w1, w4, #0x14
    b6f4:	11001480 	add	w0, w4, #0x5
    b6f8:	0a020021 	and	w1, w1, w2
    b6fc:	0a050000 	and	w0, w0, w5
    b700:	2a010000 	orr	w0, w0, w1
    b704:	13001c63 	sxtb	w3, w3
    b708:	2a000063 	orr	w3, w3, w0
    b70c:	2a0403e2 	mov	w2, w4
    b710:	528005e1 	mov	w1, #0x2f                  	// #47
    b714:	11004484 	add	w4, w4, #0x11
    b718:	2a0103e0 	mov	w0, w1
    b71c:	97ffff67 	bl	b4b8 <mbedtls_ct_uchar_mask_of_range>
    b720:	12001c00 	and	w0, w0, #0xff
    b724:	13001c63 	sxtb	w3, w3
    b728:	0a000084 	and	w4, w4, w0
    b72c:	2a040063 	orr	w3, w3, w4
    b730:	51000460 	sub	w0, w3, #0x1
    b734:	a8c17bfd 	ldp	x29, x30, [sp], #16
    b738:	d65f03c0 	ret

000000000000b73c <mbedtls_mpi_safe_cond_assign>:
mbedtls_mpi_safe_cond_assign():
    b73c:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    b740:	910003fd 	mov	x29, sp
    b744:	a90153f3 	stp	x19, x20, [sp, #16]
    b748:	aa0103f4 	mov	x20, x1
    b74c:	aa0003f3 	mov	x19, x0
    b750:	f9001bf7 	str	x23, [sp, #48]
    b754:	12001c57 	and	w23, w2, #0xff
    b758:	2a1703e0 	mov	w0, w23
    b75c:	a9025bf5 	stp	x21, x22, [sp, #32]
    b760:	97ffff6f 	bl	b51c <mbedtls_ct_mpi_uint_mask>
    b764:	f9400681 	ldr	x1, [x20, #8]
    b768:	2a0003f5 	mov	w21, w0
    b76c:	aa1303e0 	mov	x0, x19
    b770:	97ffee91 	bl	71b4 <mbedtls_mpi_grow>
    b774:	2a0003f6 	mov	w22, w0
    b778:	35000260 	cbnz	w0, b7c4 <mbedtls_mpi_safe_cond_assign+0x88>
    b77c:	b9400260 	ldr	w0, [x19]
    b780:	2a1703e3 	mov	w3, w23
    b784:	b9400284 	ldr	w4, [x20]
    b788:	2a3503f5 	mvn	w21, w21
    b78c:	11000400 	add	w0, w0, #0x1
    b790:	11000484 	add	w4, w4, #0x1
    b794:	4a000084 	eor	w4, w4, w0
    b798:	a9408682 	ldp	x2, x1, [x20, #8]
    b79c:	0a170484 	and	w4, w4, w23, lsl #1
    b7a0:	4a000084 	eor	w4, w4, w0
    b7a4:	f9400a60 	ldr	x0, [x19, #16]
    b7a8:	51000484 	sub	w4, w4, #0x1
    b7ac:	b9000264 	str	w4, [x19]
    b7b0:	97fffbeb 	bl	a75c <mbedtls_mpi_core_cond_assign>
    b7b4:	f9400664 	ldr	x4, [x19, #8]
    b7b8:	f9400680 	ldr	x0, [x20, #8]
    b7bc:	eb00009f 	cmp	x4, x0
    b7c0:	540000e8 	b.hi	b7dc <mbedtls_mpi_safe_cond_assign+0xa0>  // b.pmore
    b7c4:	2a1603e0 	mov	w0, w22
    b7c8:	a94153f3 	ldp	x19, x20, [sp, #16]
    b7cc:	a9425bf5 	ldp	x21, x22, [sp, #32]
    b7d0:	f9401bf7 	ldr	x23, [sp, #48]
    b7d4:	a8c47bfd 	ldp	x29, x30, [sp], #64
    b7d8:	d65f03c0 	ret
    b7dc:	f9400a63 	ldr	x3, [x19, #16]
    b7e0:	d37ef402 	lsl	x2, x0, #2
    b7e4:	91000400 	add	x0, x0, #0x1
    b7e8:	b8626861 	ldr	w1, [x3, x2]
    b7ec:	0a150021 	and	w1, w1, w21
    b7f0:	b8226861 	str	w1, [x3, x2]
    b7f4:	17fffff2 	b	b7bc <mbedtls_mpi_safe_cond_assign+0x80>

000000000000b7f8 <mbedtls_mpi_safe_cond_swap>:
mbedtls_mpi_safe_cond_swap():
    b7f8:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    b7fc:	910003fd 	mov	x29, sp
    b800:	a90153f3 	stp	x19, x20, [sp, #16]
    b804:	a9025bf5 	stp	x21, x22, [sp, #32]
    b808:	eb01001f 	cmp	x0, x1
    b80c:	540004e0 	b.eq	b8a8 <mbedtls_mpi_safe_cond_swap+0xb0>  // b.none
    b810:	aa0103f4 	mov	x20, x1
    b814:	aa0003f5 	mov	x21, x0
    b818:	f9400421 	ldr	x1, [x1, #8]
    b81c:	12001c56 	and	w22, w2, #0xff
    b820:	97ffee65 	bl	71b4 <mbedtls_mpi_grow>
    b824:	2a0003f3 	mov	w19, w0
    b828:	35000360 	cbnz	w0, b894 <mbedtls_mpi_safe_cond_swap+0x9c>
    b82c:	f94006a1 	ldr	x1, [x21, #8]
    b830:	aa1403e0 	mov	x0, x20
    b834:	97ffee60 	bl	71b4 <mbedtls_mpi_grow>
    b838:	2a0003f3 	mov	w19, w0
    b83c:	350002c0 	cbnz	w0, b894 <mbedtls_mpi_safe_cond_swap+0x9c>
    b840:	b9400285 	ldr	w5, [x20]
    b844:	2a1603e3 	mov	w3, w22
    b848:	b94002a4 	ldr	w4, [x21]
    b84c:	110004a5 	add	w5, w5, #0x1
    b850:	11000484 	add	w4, w4, #0x1
    b854:	4a0400a5 	eor	w5, w5, w4
    b858:	0a1604a5 	and	w5, w5, w22, lsl #1
    b85c:	4a0400a5 	eor	w5, w5, w4
    b860:	510004a5 	sub	w5, w5, #0x1
    b864:	f9400a81 	ldr	x1, [x20, #16]
    b868:	b90002a5 	str	w5, [x21]
    b86c:	f94006a2 	ldr	x2, [x21, #8]
    b870:	b9400280 	ldr	w0, [x20]
    b874:	11000400 	add	w0, w0, #0x1
    b878:	4a040004 	eor	w4, w0, w4
    b87c:	0a160484 	and	w4, w4, w22, lsl #1
    b880:	4a000084 	eor	w4, w4, w0
    b884:	f9400aa0 	ldr	x0, [x21, #16]
    b888:	51000484 	sub	w4, w4, #0x1
    b88c:	b9000284 	str	w4, [x20]
    b890:	97fffbbc 	bl	a780 <mbedtls_mpi_core_cond_swap>
    b894:	2a1303e0 	mov	w0, w19
    b898:	a94153f3 	ldp	x19, x20, [sp, #16]
    b89c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    b8a0:	a8c37bfd 	ldp	x29, x30, [sp], #48
    b8a4:	d65f03c0 	ret
    b8a8:	52800013 	mov	w19, #0x0                   	// #0
    b8ac:	17fffffa 	b	b894 <mbedtls_mpi_safe_cond_swap+0x9c>

000000000000b8b0 <mbedtls_mpi_core_lt_ct>:
mbedtls_mpi_core_lt_ct():
    b8b0:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    b8b4:	910003fd 	mov	x29, sp
    b8b8:	a90153f3 	stp	x19, x20, [sp, #16]
    b8bc:	d1000453 	sub	x19, x2, #0x1
    b8c0:	52800014 	mov	w20, #0x0                   	// #0
    b8c4:	a9025bf5 	stp	x21, x22, [sp, #32]
    b8c8:	aa0003f5 	mov	x21, x0
    b8cc:	aa0103f6 	mov	x22, x1
    b8d0:	a90363f7 	stp	x23, x24, [sp, #48]
    b8d4:	52800017 	mov	w23, #0x0                   	// #0
    b8d8:	52800038 	mov	w24, #0x1                   	// #1
    b8dc:	b100067f 	cmn	x19, #0x1
    b8e0:	540000e1 	b.ne	b8fc <mbedtls_mpi_core_lt_ct+0x4c>  // b.any
    b8e4:	2a1703e0 	mov	w0, w23
    b8e8:	a94153f3 	ldp	x19, x20, [sp, #16]
    b8ec:	a9425bf5 	ldp	x21, x22, [sp, #32]
    b8f0:	a94363f7 	ldp	x23, x24, [sp, #48]
    b8f4:	a8c47bfd 	ldp	x29, x30, [sp], #64
    b8f8:	d65f03c0 	ret
    b8fc:	b8737aa1 	ldr	w1, [x21, x19, lsl #2]
    b900:	b8737ac0 	ldr	w0, [x22, x19, lsl #2]
    b904:	97ffff10 	bl	b544 <mbedtls_ct_mpi_uint_lt>
    b908:	2a000294 	orr	w20, w20, w0
    b90c:	b8737ac1 	ldr	w1, [x22, x19, lsl #2]
    b910:	b8737aa0 	ldr	w0, [x21, x19, lsl #2]
    b914:	d1000673 	sub	x19, x19, #0x1
    b918:	97ffff0b 	bl	b544 <mbedtls_ct_mpi_uint_lt>
    b91c:	4b140301 	sub	w1, w24, w20
    b920:	2a000294 	orr	w20, w20, w0
    b924:	0a000021 	and	w1, w1, w0
    b928:	2a0102f7 	orr	w23, w23, w1
    b92c:	17ffffec 	b	b8dc <mbedtls_mpi_core_lt_ct+0x2c>

000000000000b930 <mbedtls_mpi_lt_mpi_ct>:
mbedtls_mpi_lt_mpi_ct():
    b930:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    b934:	910003fd 	mov	x29, sp
    b938:	a90153f3 	stp	x19, x20, [sp, #16]
    b93c:	a90363f7 	stp	x23, x24, [sp, #48]
    b940:	aa0003f7 	mov	x23, x0
    b944:	f9400413 	ldr	x19, [x0, #8]
    b948:	a9025bf5 	stp	x21, x22, [sp, #32]
    b94c:	f9400420 	ldr	x0, [x1, #8]
    b950:	a9046bf9 	stp	x25, x26, [sp, #64]
    b954:	f9002bfb 	str	x27, [sp, #80]
    b958:	eb00027f 	cmp	x19, x0
    b95c:	54000621 	b.ne	ba20 <mbedtls_mpi_lt_mpi_ct+0xf0>  // b.any
    b960:	b94002e3 	ldr	w3, [x23]
    b964:	5280003a 	mov	w26, #0x1                   	// #1
    b968:	b9400020 	ldr	w0, [x1]
    b96c:	aa0103f8 	mov	x24, x1
    b970:	aa0203f6 	mov	x22, x2
    b974:	d1000673 	sub	x19, x19, #0x1
    b978:	d3410479 	ubfx	x25, x3, #1, #1
    b97c:	ca000063 	eor	x3, x3, x0
    b980:	4b19035b 	sub	w27, w26, w25
    b984:	d3410474 	ubfx	x20, x3, #1, #1
    b988:	0a430723 	and	w3, w25, w3, lsr #1
    b98c:	b90002c3 	str	w3, [x22]
    b990:	b100067f 	cmn	x19, #0x1
    b994:	54000121 	b.ne	b9b8 <mbedtls_mpi_lt_mpi_ct+0x88>  // b.any
    b998:	52800000 	mov	w0, #0x0                   	// #0
    b99c:	a94153f3 	ldp	x19, x20, [sp, #16]
    b9a0:	a9425bf5 	ldp	x21, x22, [sp, #32]
    b9a4:	a94363f7 	ldp	x23, x24, [sp, #48]
    b9a8:	a9446bf9 	ldp	x25, x26, [sp, #64]
    b9ac:	f9402bfb 	ldr	x27, [sp, #80]
    b9b0:	a8c67bfd 	ldp	x29, x30, [sp], #96
    b9b4:	d65f03c0 	ret
    b9b8:	f9400ae1 	ldr	x1, [x23, #16]
    b9bc:	d37ef675 	lsl	x21, x19, #2
    b9c0:	f9400b00 	ldr	x0, [x24, #16]
    b9c4:	d1000673 	sub	x19, x19, #0x1
    b9c8:	b8756821 	ldr	w1, [x1, x21]
    b9cc:	b8756800 	ldr	w0, [x0, x21]
    b9d0:	97fffedd 	bl	b544 <mbedtls_ct_mpi_uint_lt>
    b9d4:	4b140343 	sub	w3, w26, w20
    b9d8:	b94002c4 	ldr	w4, [x22]
    b9dc:	0a190063 	and	w3, w3, w25
    b9e0:	2a000294 	orr	w20, w20, w0
    b9e4:	0a000063 	and	w3, w3, w0
    b9e8:	f9400b01 	ldr	x1, [x24, #16]
    b9ec:	2a030083 	orr	w3, w4, w3
    b9f0:	f9400ae0 	ldr	x0, [x23, #16]
    b9f4:	b90002c3 	str	w3, [x22]
    b9f8:	b8756821 	ldr	w1, [x1, x21]
    b9fc:	b8756800 	ldr	w0, [x0, x21]
    ba00:	97fffed1 	bl	b544 <mbedtls_ct_mpi_uint_lt>
    ba04:	0a000363 	and	w3, w27, w0
    ba08:	4b140341 	sub	w1, w26, w20
    ba0c:	2a000294 	orr	w20, w20, w0
    ba10:	0a010063 	and	w3, w3, w1
    ba14:	b94002c1 	ldr	w1, [x22]
    ba18:	2a010063 	orr	w3, w3, w1
    ba1c:	17ffffdc 	b	b98c <mbedtls_mpi_lt_mpi_ct+0x5c>
    ba20:	12800060 	mov	w0, #0xfffffffc            	// #-4
    ba24:	17ffffde 	b	b99c <mbedtls_mpi_lt_mpi_ct+0x6c>

000000000000ba28 <mbedtls_ct_rsaes_pkcs1_v15_unpadding>:
mbedtls_ct_rsaes_pkcs1_v15_unpadding():
    ba28:	a9b87bfd 	stp	x29, x30, [sp, #-128]!
    ba2c:	910003fd 	mov	x29, sp
    ba30:	a90153f3 	stp	x19, x20, [sp, #16]
    ba34:	aa0003f3 	mov	x19, x0
    ba38:	d1002c34 	sub	x20, x1, #0xb
    ba3c:	a9025bf5 	stp	x21, x22, [sp, #32]
    ba40:	eb03029f 	cmp	x20, x3
    ba44:	aa0103f5 	mov	x21, x1
    ba48:	a90363f7 	stp	x23, x24, [sp, #48]
    ba4c:	9a839294 	csel	x20, x20, x3, ls  // ls = plast
    ba50:	aa0303f7 	mov	x23, x3
    ba54:	a9046bf9 	stp	x25, x26, [sp, #64]
    ba58:	aa0203f9 	mov	x25, x2
    ba5c:	d280001a 	mov	x26, #0x0                   	// #0
    ba60:	a90573fb 	stp	x27, x28, [sp, #80]
    ba64:	d2800042 	mov	x2, #0x2                   	// #2
    ba68:	39400416 	ldrb	w22, [x0, #1]
    ba6c:	39400000 	ldrb	w0, [x0]
    ba70:	521f02d6 	eor	w22, w22, #0x2
    ba74:	f90037e4 	str	x4, [sp, #104]
    ba78:	2a0002d6 	orr	w22, w22, w0
    ba7c:	52800000 	mov	w0, #0x0                   	// #0
    ba80:	12001ed6 	and	w22, w22, #0xff
    ba84:	eb15005f 	cmp	x2, x21
    ba88:	54000903 	b.cc	bba8 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x180>  // b.lo, b.ul, b.last
    ba8c:	52800022 	mov	w2, #0x1                   	// #1
    ba90:	52800001 	mov	w1, #0x0                   	// #0
    ba94:	97fffeb3 	bl	b560 <mbedtls_ct_uint_if>
    ba98:	d1002341 	sub	x1, x26, #0x8
    ba9c:	51000ea2 	sub	w2, w21, #0x3
    baa0:	4b1a0042 	sub	w2, w2, w26
    baa4:	d37ffc21 	lsr	x1, x1, #63
    baa8:	2a0102d6 	orr	w22, w22, w1
    baac:	2a1403e1 	mov	w1, w20
    bab0:	2a16001b 	orr	w27, w0, w22
    bab4:	2a1b03e0 	mov	w0, w27
    bab8:	97fffeaa 	bl	b560 <mbedtls_ct_uint_if>
    babc:	cb204296 	sub	x22, x20, w0, uxtw
    bac0:	52800002 	mov	w2, #0x0                   	// #0
    bac4:	52888001 	mov	w1, #0x4400                	// #17408
    bac8:	2a0003fc 	mov	w28, w0
    bacc:	d37ffed6 	lsr	x22, x22, #63
    bad0:	2a1603e0 	mov	w0, w22
    bad4:	97fffea3 	bl	b560 <mbedtls_ct_uint_if>
    bad8:	2a0003e2 	mov	w2, w0
    badc:	52882001 	mov	w1, #0x4100                	// #16640
    bae0:	2a1b03e0 	mov	w0, w27
    bae4:	97fffe9f 	bl	b560 <mbedtls_ct_uint_if>
    bae8:	4b0003fa 	neg	w26, w0
    baec:	2a160360 	orr	w0, w27, w22
    baf0:	97fffe87 	bl	b50c <mbedtls_ct_uint_mask>
    baf4:	2a2003e0 	mvn	w0, w0
    baf8:	d2800161 	mov	x1, #0xb                   	// #11
    bafc:	eb15003f 	cmp	x1, x21
    bb00:	540006e3 	b.cc	bbdc <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1b4>  // b.lo, b.ul, b.last
    bb04:	cb1402b5 	sub	x21, x21, x20
    bb08:	2a1603e0 	mov	w0, w22
    bb0c:	2a1c03e2 	mov	w2, w28
    bb10:	2a1403e1 	mov	w1, w20
    bb14:	8b150273 	add	x19, x19, x21
    bb18:	97fffe92 	bl	b560 <mbedtls_ct_uint_if>
    bb1c:	2a0003f6 	mov	w22, w0
    bb20:	b4000274 	cbz	x20, bb6c <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x144>
    bb24:	d1000698 	sub	x24, x20, #0x1
    bb28:	d280001b 	mov	x27, #0x0                   	// #0
    bb2c:	cb16037c 	sub	x28, x27, x22
    bb30:	d2800015 	mov	x21, #0x0                   	// #0
    bb34:	d37fff9c 	lsr	x28, x28, #63
    bb38:	2a1c03e4 	mov	w4, w28
    bb3c:	eb1802bf 	cmp	x21, x24
    bb40:	54000583 	b.cc	bbf0 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x1c8>  // b.lo, b.ul, b.last
    bb44:	38786a61 	ldrb	w1, [x19, x24]
    bb48:	2a1c03e0 	mov	w0, w28
    bb4c:	52800002 	mov	w2, #0x0                   	// #0
    bb50:	9100077b 	add	x27, x27, #0x1
    bb54:	12001c21 	and	w1, w1, #0xff
    bb58:	97fffe82 	bl	b560 <mbedtls_ct_uint_if>
    bb5c:	12001c00 	and	w0, w0, #0xff
    bb60:	38386a60 	strb	w0, [x19, x24]
    bb64:	eb1b029f 	cmp	x20, x27
    bb68:	54fffe21 	b.ne	bb2c <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x104>  // b.any
    bb6c:	b40000b7 	cbz	x23, bb80 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x158>
    bb70:	aa1403e2 	mov	x2, x20
    bb74:	aa1303e1 	mov	x1, x19
    bb78:	aa1903e0 	mov	x0, x25
    bb7c:	97ffd121 	bl	0 <memcpy>
    bb80:	f94037e0 	ldr	x0, [sp, #104]
    bb84:	a94153f3 	ldp	x19, x20, [sp, #16]
    bb88:	a94363f7 	ldp	x23, x24, [sp, #48]
    bb8c:	a94573fb 	ldp	x27, x28, [sp, #80]
    bb90:	f9000016 	str	x22, [x0]
    bb94:	2a1a03e0 	mov	w0, w26
    bb98:	a9425bf5 	ldp	x21, x22, [sp, #32]
    bb9c:	a9446bf9 	ldp	x25, x26, [sp, #64]
    bba0:	a8c87bfd 	ldp	x29, x30, [sp], #128
    bba4:	d65f03c0 	ret
    bba8:	38626a61 	ldrb	w1, [x19, x2]
    bbac:	91000442 	add	x2, x2, #0x1
    bbb0:	4b0103e3 	neg	w3, w1
    bbb4:	2a030021 	orr	w1, w1, w3
    bbb8:	d3471c21 	ubfx	x1, x1, #7, #1
    bbbc:	52000021 	eor	w1, w1, #0x1
    bbc0:	2a010000 	orr	w0, w0, w1
    bbc4:	4b0003e1 	neg	w1, w0
    bbc8:	2a010001 	orr	w1, w0, w1
    bbcc:	d2790021 	eor	x1, x1, #0x80
    bbd0:	d3471c21 	ubfx	x1, x1, #7, #1
    bbd4:	8b01035a 	add	x26, x26, x1
    bbd8:	17ffffab 	b	ba84 <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x5c>
    bbdc:	38616a62 	ldrb	w2, [x19, x1]
    bbe0:	0a020002 	and	w2, w0, w2
    bbe4:	38216a62 	strb	w2, [x19, x1]
    bbe8:	91000421 	add	x1, x1, #0x1
    bbec:	17ffffc4 	b	bafc <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0xd4>
    bbf0:	38756a61 	ldrb	w1, [x19, x21]
    bbf4:	8b150265 	add	x5, x19, x21
    bbf8:	910006b5 	add	x21, x21, #0x1
    bbfc:	2a0403e0 	mov	w0, w4
    bc00:	12001c21 	and	w1, w1, #0xff
    bc04:	b90077e4 	str	w4, [sp, #116]
    bc08:	f9003fe5 	str	x5, [sp, #120]
    bc0c:	38756a62 	ldrb	w2, [x19, x21]
    bc10:	12001c42 	and	w2, w2, #0xff
    bc14:	97fffe53 	bl	b560 <mbedtls_ct_uint_if>
    bc18:	f9403fe5 	ldr	x5, [sp, #120]
    bc1c:	12001c00 	and	w0, w0, #0xff
    bc20:	b94077e4 	ldr	w4, [sp, #116]
    bc24:	390000a0 	strb	w0, [x5]
    bc28:	17ffffc5 	b	bb3c <mbedtls_ct_rsaes_pkcs1_v15_unpadding+0x114>

000000000000bc2c <mbedtls_get_unaligned_uint16>:
mbedtls_get_unaligned_uint16():
    bc2c:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    bc30:	d0000061 	adrp	x1, 19000 <_DYNAMIC>
    bc34:	910003fd 	mov	x29, sp
    bc38:	f9409822 	ldr	x2, [x1, #304]
    bc3c:	f9409821 	ldr	x1, [x1, #304]
    bc40:	f9400043 	ldr	x3, [x2]
    bc44:	f9000fe3 	str	x3, [sp, #24]
    bc48:	d2800003 	mov	x3, #0x0                   	// #0
    bc4c:	39400002 	ldrb	w2, [x0]
    bc50:	39400400 	ldrb	w0, [x0, #1]
    bc54:	39005be2 	strb	w2, [sp, #22]
    bc58:	39005fe0 	strb	w0, [sp, #23]
    bc5c:	79402fe0 	ldrh	w0, [sp, #22]
    bc60:	f9400fe3 	ldr	x3, [sp, #24]
    bc64:	f9400022 	ldr	x2, [x1]
    bc68:	eb020063 	subs	x3, x3, x2
    bc6c:	d2800002 	mov	x2, #0x0                   	// #0
    bc70:	54000040 	b.eq	bc78 <mbedtls_get_unaligned_uint16+0x4c>  // b.none
    bc74:	97ffd281 	bl	678 <__stack_chk_fail>
    bc78:	a8c27bfd 	ldp	x29, x30, [sp], #32
    bc7c:	d65f03c0 	ret

000000000000bc80 <mbedtls_put_unaligned_uint16>:
mbedtls_put_unaligned_uint16():
    bc80:	d3483c22 	ubfx	x2, x1, #8, #8
    bc84:	39000001 	strb	w1, [x0]
    bc88:	39000402 	strb	w2, [x0, #1]
    bc8c:	d10043ff 	sub	sp, sp, #0x10
    bc90:	910043ff 	add	sp, sp, #0x10
    bc94:	d65f03c0 	ret

000000000000bc98 <mbedtls_get_unaligned_uint32>:
mbedtls_get_unaligned_uint32.localalias():
    bc98:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    bc9c:	910003fd 	mov	x29, sp
    bca0:	f9000bf3 	str	x19, [sp, #16]
    bca4:	d0000073 	adrp	x19, 19000 <_DYNAMIC>
    bca8:	f9409a61 	ldr	x1, [x19, #304]
    bcac:	f9400022 	ldr	x2, [x1]
    bcb0:	f90017e2 	str	x2, [sp, #40]
    bcb4:	d2800002 	mov	x2, #0x0                   	// #0
    bcb8:	aa0003e1 	mov	x1, x0
    bcbc:	d2800082 	mov	x2, #0x4                   	// #4
    bcc0:	910093e0 	add	x0, sp, #0x24
    bcc4:	97ffd0cf 	bl	0 <memcpy>
    bcc8:	f9409a73 	ldr	x19, [x19, #304]
    bccc:	b94027e0 	ldr	w0, [sp, #36]
    bcd0:	f94017e1 	ldr	x1, [sp, #40]
    bcd4:	f9400262 	ldr	x2, [x19]
    bcd8:	eb020021 	subs	x1, x1, x2
    bcdc:	d2800002 	mov	x2, #0x0                   	// #0
    bce0:	54000040 	b.eq	bce8 <mbedtls_get_unaligned_uint32+0x50>  // b.none
    bce4:	97ffd265 	bl	678 <__stack_chk_fail>
    bce8:	f9400bf3 	ldr	x19, [sp, #16]
    bcec:	a8c37bfd 	ldp	x29, x30, [sp], #48
    bcf0:	d65f03c0 	ret

000000000000bcf4 <mbedtls_put_unaligned_uint32>:
mbedtls_put_unaligned_uint32.localalias():
    bcf4:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    bcf8:	d2800082 	mov	x2, #0x4                   	// #4
    bcfc:	910003fd 	mov	x29, sp
    bd00:	b9001fe1 	str	w1, [sp, #28]
    bd04:	910073e1 	add	x1, sp, #0x1c
    bd08:	97ffd0be 	bl	0 <memcpy>
    bd0c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    bd10:	d65f03c0 	ret

000000000000bd14 <mbedtls_get_unaligned_uint64>:
mbedtls_get_unaligned_uint64():
    bd14:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    bd18:	910003fd 	mov	x29, sp
    bd1c:	f9000bf3 	str	x19, [sp, #16]
    bd20:	d0000073 	adrp	x19, 19000 <_DYNAMIC>
    bd24:	f9409a61 	ldr	x1, [x19, #304]
    bd28:	f9400022 	ldr	x2, [x1]
    bd2c:	f90017e2 	str	x2, [sp, #40]
    bd30:	d2800002 	mov	x2, #0x0                   	// #0
    bd34:	aa0003e1 	mov	x1, x0
    bd38:	d2800102 	mov	x2, #0x8                   	// #8
    bd3c:	910083e0 	add	x0, sp, #0x20
    bd40:	97ffd0b0 	bl	0 <memcpy>
    bd44:	f9409a73 	ldr	x19, [x19, #304]
    bd48:	f94013e0 	ldr	x0, [sp, #32]
    bd4c:	f94017e1 	ldr	x1, [sp, #40]
    bd50:	f9400262 	ldr	x2, [x19]
    bd54:	eb020021 	subs	x1, x1, x2
    bd58:	d2800002 	mov	x2, #0x0                   	// #0
    bd5c:	54000040 	b.eq	bd64 <mbedtls_get_unaligned_uint64+0x50>  // b.none
    bd60:	97ffd246 	bl	678 <__stack_chk_fail>
    bd64:	f9400bf3 	ldr	x19, [sp, #16]
    bd68:	a8c37bfd 	ldp	x29, x30, [sp], #48
    bd6c:	d65f03c0 	ret

000000000000bd70 <mbedtls_put_unaligned_uint64>:
mbedtls_put_unaligned_uint64():
    bd70:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    bd74:	d2800102 	mov	x2, #0x8                   	// #8
    bd78:	910003fd 	mov	x29, sp
    bd7c:	f9000fe1 	str	x1, [sp, #24]
    bd80:	910063e1 	add	x1, sp, #0x18
    bd84:	97ffd09f 	bl	0 <memcpy>
    bd88:	a8c27bfd 	ldp	x29, x30, [sp], #32
    bd8c:	d65f03c0 	ret

000000000000bd90 <mbedtls_xor>:
mbedtls_xor():
    bd90:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    bd94:	910003fd 	mov	x29, sp
    bd98:	a90153f3 	stp	x19, x20, [sp, #16]
    bd9c:	aa0303f4 	mov	x20, x3
    bda0:	d2800013 	mov	x19, #0x0                   	// #0
    bda4:	a9025bf5 	stp	x21, x22, [sp, #32]
    bda8:	aa0003f5 	mov	x21, x0
    bdac:	aa0103f6 	mov	x22, x1
    bdb0:	a90363f7 	stp	x23, x24, [sp, #48]
    bdb4:	aa0203f7 	mov	x23, x2
    bdb8:	f90023f9 	str	x25, [sp, #64]
    bdbc:	91001279 	add	x25, x19, #0x4
    bdc0:	eb19029f 	cmp	x20, x25
    bdc4:	54000122 	b.cs	bde8 <mbedtls_xor+0x58>  // b.hs, b.nlast
    bdc8:	eb14027f 	cmp	x19, x20
    bdcc:	54000223 	b.cc	be10 <mbedtls_xor+0x80>  // b.lo, b.ul, b.last
    bdd0:	a94153f3 	ldp	x19, x20, [sp, #16]
    bdd4:	a9425bf5 	ldp	x21, x22, [sp, #32]
    bdd8:	a94363f7 	ldp	x23, x24, [sp, #48]
    bddc:	f94023f9 	ldr	x25, [sp, #64]
    bde0:	a8c57bfd 	ldp	x29, x30, [sp], #80
    bde4:	d65f03c0 	ret
    bde8:	8b1302c0 	add	x0, x22, x19
    bdec:	97ffffab 	bl	bc98 <mbedtls_get_unaligned_uint32>
    bdf0:	2a0003f8 	mov	w24, w0
    bdf4:	8b1302e0 	add	x0, x23, x19
    bdf8:	97ffffa8 	bl	bc98 <mbedtls_get_unaligned_uint32>
    bdfc:	4a000301 	eor	w1, w24, w0
    be00:	8b1302a0 	add	x0, x21, x19
    be04:	aa1903f3 	mov	x19, x25
    be08:	97ffffbb 	bl	bcf4 <mbedtls_put_unaligned_uint32>
    be0c:	17ffffec 	b	bdbc <mbedtls_xor+0x2c>
    be10:	38736ac0 	ldrb	w0, [x22, x19]
    be14:	38736ae1 	ldrb	w1, [x23, x19]
    be18:	4a010000 	eor	w0, w0, w1
    be1c:	38336aa0 	strb	w0, [x21, x19]
    be20:	91000673 	add	x19, x19, #0x1
    be24:	17ffffe9 	b	bdc8 <mbedtls_xor+0x38>

000000000000be28 <mbedtls_platform_zeroize>:
mbedtls_platform_zeroize():
    be28:	aa0103e2 	mov	x2, x1
    be2c:	b40000c1 	cbz	x1, be44 <mbedtls_platform_zeroize+0x1c>
    be30:	d0000061 	adrp	x1, 19000 <_DYNAMIC>
    be34:	f942e023 	ldr	x3, [x1, #1472]
    be38:	52800001 	mov	w1, #0x0                   	// #0
    be3c:	aa0303f0 	mov	x16, x3
    be40:	d61f0200 	br	x16
    be44:	d65f03c0 	ret

000000000000be48 <myrand>:
myrand():
    be48:	d0000061 	adrp	x1, 19000 <_DYNAMIC>
    be4c:	d289cda3 	mov	x3, #0x4e6d                	// #20077
    be50:	f2a838c3 	movk	x3, #0x41c6, lsl #16
    be54:	d2860722 	mov	x2, #0x3039                	// #12345
    be58:	f942e420 	ldr	x0, [x1, #1480]
    be5c:	9b030800 	madd	x0, x0, x3, x2
    be60:	f902e420 	str	x0, [x1, #1480]
    be64:	53107800 	ubfx	w0, w0, #16, #15
    be68:	d65f03c0 	ret

000000000000be6c <_assert_trap>:
_assert_trap():
    be6c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    be70:	910003fd 	mov	x29, sp
    be74:	97ffeba4 	bl	6d04 <_assert_log>
    be78:	97ffebb4 	bl	6d48 <_assert_break>

000000000000be7c <bget_buf_size.part.0>:
bget_buf_size.part.0():
    be7c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    be80:	b0000063 	adrp	x3, 18000 <__func__.0+0x172>
    be84:	b0000061 	adrp	x1, 18000 <__func__.0+0x172>
    be88:	910003fd 	mov	x29, sp
    be8c:	b0000060 	adrp	x0, 18000 <__func__.0+0x172>
    be90:	91212c63 	add	x3, x3, #0x84b
    be94:	91128821 	add	x1, x1, #0x4a2
    be98:	91130800 	add	x0, x0, #0x4c2
    be9c:	52801a22 	mov	w2, #0xd1                  	// #209
    bea0:	97fffff3 	bl	be6c <_assert_trap>

000000000000bea4 <raw_malloc_return_hook.constprop.0>:
raw_malloc_return_hook.constprop.0():
    bea4:	f9401043 	ldr	x3, [x2, #32]
    bea8:	b9406c44 	ldr	w4, [x2, #108]
    beac:	eb04007f 	cmp	x3, x4
    beb0:	5400004d 	b.le	beb8 <raw_malloc_return_hook.constprop.0+0x14>
    beb4:	b9006c43 	str	w3, [x2, #108]
    beb8:	b5000100 	cbnz	x0, bed8 <raw_malloc_return_hook.constprop.0+0x34>
    bebc:	b9407444 	ldr	w4, [x2, #116]
    bec0:	11000484 	add	w4, w4, #0x1
    bec4:	b9007444 	str	w4, [x2, #116]
    bec8:	b9407844 	ldr	w4, [x2, #120]
    becc:	eb01009f 	cmp	x4, x1
    bed0:	54000042 	b.cs	bed8 <raw_malloc_return_hook.constprop.0+0x34>  // b.hs, b.nlast
    bed4:	290f0c41 	stp	w1, w3, [x2, #120]
    bed8:	d65f03c0 	ret

000000000000bedc <bget>:
bget():
    bedc:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    bee0:	910003fd 	mov	x29, sp
    bee4:	f100005f 	cmp	x2, #0x0
    bee8:	5400014c 	b.gt	bf10 <bget+0x34>
    beec:	b0000063 	adrp	x3, 18000 <__func__.0+0x172>
    bef0:	91212c63 	add	x3, x3, #0x84b
    bef4:	b0000061 	adrp	x1, 18000 <__func__.0+0x172>
    bef8:	b0000060 	adrp	x0, 18000 <__func__.0+0x172>
    befc:	91003863 	add	x3, x3, #0xe
    bf00:	91133021 	add	x1, x1, #0x4cc
    bf04:	911d4000 	add	x0, x0, #0x750
    bf08:	52804e22 	mov	w2, #0x271                 	// #625
    bf0c:	97ffffd8 	bl	be6c <_assert_trap>
    bf10:	f100001f 	cmp	x0, #0x0
    bf14:	5400024b 	b.lt	bf5c <bget+0x80>  // b.tstop
    bf18:	54000080 	b.eq	bf28 <bget+0x4c>  // b.none
    bf1c:	cb0003e4 	neg	x4, x0
    bf20:	ea24001f 	bics	xzr, x0, x4
    bf24:	540001c1 	b.ne	bf5c <bget+0x80>  // b.any
    bf28:	91004028 	add	x8, x1, #0x10
    bf2c:	f2400c3f 	tst	x1, #0xf
    bf30:	54000161 	b.ne	bf5c <bget+0x80>  // b.any
    bf34:	d2800205 	mov	x5, #0x10                  	// #16
    bf38:	eb05005f 	cmp	x2, x5
    bf3c:	9a85a042 	csel	x2, x2, x5, ge  // ge = tcont
    bf40:	b1003c44 	adds	x4, x2, #0xf
    bf44:	540000c4 	b.mi	bf5c <bget+0x80>  // b.first
    bf48:	eb02009f 	cmp	x4, x2
    bf4c:	54000083 	b.cc	bf5c <bget+0x80>  // b.lo, b.ul, b.last
    bf50:	927cec84 	and	x4, x4, #0xfffffffffffffff0
    bf54:	b1004084 	adds	x4, x4, #0x10
    bf58:	54000067 	b.vc	bf64 <bget+0x88>
    bf5c:	d2800000 	mov	x0, #0x0                   	// #0
    bf60:	14000093 	b	c1ac <bget+0x2d0>
    bf64:	ab010084 	adds	x4, x4, x1
    bf68:	54ffffa6 	b.vs	bf5c <bget+0x80>
    bf6c:	f100401f 	cmp	x0, #0x10
    bf70:	b27be7e9 	mov	x9, #0x7fffffffffffffe0    	// #9223372036854775776
    bf74:	9a85a000 	csel	x0, x0, x5, ge  // ge = tcont
    bf78:	f9400862 	ldr	x2, [x3, #16]
    bf7c:	cb0003e0 	neg	x0, x0
    bf80:	eb02007f 	cmp	x3, x2
    bf84:	54fffec0 	b.eq	bf5c <bget+0x80>  // b.none
    bf88:	f9400446 	ldr	x6, [x2, #8]
    bf8c:	eb06009f 	cmp	x4, x6
    bf90:	5400112c 	b.gt	c1b4 <bget+0x2d8>
    bf94:	cb040045 	sub	x5, x2, x4
    bf98:	8b010047 	add	x7, x2, x1
    bf9c:	8b0800a5 	add	x5, x5, x8
    bfa0:	8b0600a5 	add	x5, x5, x6
    bfa4:	8a050005 	and	x5, x0, x5
    bfa8:	cb0700a5 	sub	x5, x5, x7
    bfac:	f10040a7 	subs	x7, x5, #0x10
    bfb0:	54000080 	b.eq	bfc0 <bget+0xe4>  // b.none
    bfb4:	d100c0a5 	sub	x5, x5, #0x30
    bfb8:	eb0900bf 	cmp	x5, x9
    bfbc:	54000fc2 	b.cs	c1b4 <bget+0x2d8>  // b.hs, b.nlast
    bfc0:	f8666841 	ldr	x1, [x2, x6]
    bfc4:	8b070040 	add	x0, x2, x7
    bfc8:	8b060045 	add	x5, x2, x6
    bfcc:	eb06003f 	cmp	x1, x6
    bfd0:	54000140 	b.eq	bff8 <bget+0x11c>  // b.none
    bfd4:	b0000063 	adrp	x3, 18000 <__func__.0+0x172>
    bfd8:	91212c63 	add	x3, x3, #0x84b
    bfdc:	b0000061 	adrp	x1, 18000 <__func__.0+0x172>
    bfe0:	b0000060 	adrp	x0, 18000 <__func__.0+0x172>
    bfe4:	91003863 	add	x3, x3, #0xe
    bfe8:	91133021 	add	x1, x1, #0x4cc
    bfec:	91139400 	add	x0, x0, #0x4e5
    bff0:	52805642 	mov	w2, #0x2b2                 	// #690
    bff4:	17ffffc6 	b	bf0c <bget+0x30>
    bff8:	f9400c41 	ldr	x1, [x2, #24]
    bffc:	f826685f 	str	xzr, [x2, x6]
    c000:	f9400828 	ldr	x8, [x1, #16]
    c004:	eb02011f 	cmp	x8, x2
    c008:	54000140 	b.eq	c030 <bget+0x154>  // b.none
    c00c:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c010:	91212c63 	add	x3, x3, #0x84b
    c014:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c018:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c01c:	91003863 	add	x3, x3, #0xe
    c020:	91133021 	add	x1, x1, #0x4cc
    c024:	91141400 	add	x0, x0, #0x505
    c028:	52805742 	mov	w2, #0x2ba                 	// #698
    c02c:	17ffffb8 	b	bf0c <bget+0x30>
    c030:	f9400848 	ldr	x8, [x2, #16]
    c034:	f9400d09 	ldr	x9, [x8, #24]
    c038:	eb02013f 	cmp	x9, x2
    c03c:	54000140 	b.eq	c064 <bget+0x188>  // b.none
    c040:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c044:	91212c63 	add	x3, x3, #0x84b
    c048:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c04c:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c050:	91003863 	add	x3, x3, #0xe
    c054:	91133021 	add	x1, x1, #0x4cc
    c058:	91148000 	add	x0, x0, #0x520
    c05c:	52805762 	mov	w2, #0x2bb                 	// #699
    c060:	17ffffab 	b	bf0c <bget+0x30>
    c064:	b5000227 	cbnz	x7, c0a8 <bget+0x1cc>
    c068:	f9000828 	str	x8, [x1, #16]
    c06c:	f9400847 	ldr	x7, [x2, #16]
    c070:	f9000ce1 	str	x1, [x7, #24]
    c074:	cb0603e7 	neg	x7, x6
    c078:	f9000447 	str	x7, [x2, #8]
    c07c:	f9400402 	ldr	x2, [x0, #8]
    c080:	b7f801a2 	tbnz	x2, #63, c0b4 <bget+0x1d8>
    c084:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c088:	91212c63 	add	x3, x3, #0x84b
    c08c:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c090:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c094:	91003863 	add	x3, x3, #0xe
    c098:	91133021 	add	x1, x1, #0x4cc
    c09c:	9114ec00 	add	x0, x0, #0x53b
    c0a0:	52805a22 	mov	w2, #0x2d1                 	// #721
    c0a4:	17ffff9a 	b	bf0c <bget+0x30>
    c0a8:	cb0600e6 	sub	x6, x7, x6
    c0ac:	a9001807 	stp	x7, x6, [x0]
    c0b0:	17fffff2 	b	c078 <bget+0x19c>
    c0b4:	cb0203e2 	neg	x2, x2
    c0b8:	cb040042 	sub	x2, x2, x4
    c0bc:	f100805f 	cmp	x2, #0x20
    c0c0:	54000669 	b.ls	c18c <bget+0x2b0>  // b.plast
    c0c4:	8b040001 	add	x1, x0, x4
    c0c8:	f9000422 	str	x2, [x1, #8]
    c0cc:	f824681f 	str	xzr, [x0, x4]
    c0d0:	f9400404 	ldr	x4, [x0, #8]
    c0d4:	8b020082 	add	x2, x4, x2
    c0d8:	f9000402 	str	x2, [x0, #8]
    c0dc:	f9400c62 	ldr	x2, [x3, #24]
    c0e0:	f9400844 	ldr	x4, [x2, #16]
    c0e4:	eb03009f 	cmp	x4, x3
    c0e8:	54000140 	b.eq	c110 <bget+0x234>  // b.none
    c0ec:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c0f0:	91212c63 	add	x3, x3, #0x84b
    c0f4:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c0f8:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c0fc:	91003863 	add	x3, x3, #0xe
    c100:	91133021 	add	x1, x1, #0x4cc
    c104:	91153800 	add	x0, x0, #0x54e
    c108:	52805c42 	mov	w2, #0x2e2                 	// #738
    c10c:	17ffff80 	b	bf0c <bget+0x30>
    c110:	f9400864 	ldr	x4, [x3, #16]
    c114:	f9400c84 	ldr	x4, [x4, #24]
    c118:	eb03009f 	cmp	x4, x3
    c11c:	54000140 	b.eq	c144 <bget+0x268>  // b.none
    c120:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c124:	91212c63 	add	x3, x3, #0x84b
    c128:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c12c:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c130:	91003863 	add	x3, x3, #0xe
    c134:	91133021 	add	x1, x1, #0x4cc
    c138:	91162400 	add	x0, x0, #0x589
    c13c:	52805c82 	mov	w2, #0x2e4                 	// #740
    c140:	17ffff73 	b	bf0c <bget+0x30>
    c144:	a9010823 	stp	x3, x2, [x1, #16]
    c148:	f9000c61 	str	x1, [x3, #24]
    c14c:	f9400c22 	ldr	x2, [x1, #24]
    c150:	f9000841 	str	x1, [x2, #16]
    c154:	f9400422 	ldr	x2, [x1, #8]
    c158:	8b020021 	add	x1, x1, x2
    c15c:	eb0100bf 	cmp	x5, x1
    c160:	54000140 	b.eq	c188 <bget+0x2ac>  // b.none
    c164:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c168:	91212c63 	add	x3, x3, #0x84b
    c16c:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c170:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c174:	91003863 	add	x3, x3, #0xe
    c178:	91133021 	add	x1, x1, #0x4cc
    c17c:	91171000 	add	x0, x0, #0x5c4
    c180:	52805d62 	mov	w2, #0x2eb                 	// #747
    c184:	17ffff62 	b	bf0c <bget+0x30>
    c188:	f90000a2 	str	x2, [x5]
    c18c:	f9400402 	ldr	x2, [x0, #8]
    c190:	91004000 	add	x0, x0, #0x10
    c194:	f9401061 	ldr	x1, [x3, #32]
    c198:	cb020021 	sub	x1, x1, x2
    c19c:	f9001061 	str	x1, [x3, #32]
    c1a0:	f9401461 	ldr	x1, [x3, #40]
    c1a4:	91000421 	add	x1, x1, #0x1
    c1a8:	f9001461 	str	x1, [x3, #40]
    c1ac:	a8c17bfd 	ldp	x29, x30, [sp], #16
    c1b0:	d65f03c0 	ret
    c1b4:	f9400842 	ldr	x2, [x2, #16]
    c1b8:	17ffff72 	b	bf80 <bget+0xa4>

000000000000c1bc <bgetz>:
bgetz():
    c1bc:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    c1c0:	910003fd 	mov	x29, sp
    c1c4:	f9000bf3 	str	x19, [sp, #16]
    c1c8:	aa0203f3 	mov	x19, x2
    c1cc:	97ffff44 	bl	bedc <bget>
    c1d0:	aa0003e3 	mov	x3, x0
    c1d4:	b4000300 	cbz	x0, c234 <bgetz+0x78>
    c1d8:	f85f8000 	ldur	x0, [x0, #-8]
    c1dc:	b50001e0 	cbnz	x0, c218 <bgetz+0x5c>
    c1e0:	a97e0061 	ldp	x1, x0, [x3, #-32]
    c1e4:	d1008021 	sub	x1, x1, #0x20
    c1e8:	cb000021 	sub	x1, x1, x0
    c1ec:	eb13003f 	cmp	x1, x19
    c1f0:	5400018a 	b.ge	c220 <bgetz+0x64>  // b.tcont
    c1f4:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c1f8:	91212c63 	add	x3, x3, #0x84b
    c1fc:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c200:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c204:	91004c63 	add	x3, x3, #0x13
    c208:	91133021 	add	x1, x1, #0x4cc
    c20c:	9117a800 	add	x0, x0, #0x5ea
    c210:	52806c22 	mov	w2, #0x361                 	// #865
    c214:	97ffff16 	bl	be6c <_assert_trap>
    c218:	928001e1 	mov	x1, #0xfffffffffffffff0    	// #-16
    c21c:	17fffff3 	b	c1e8 <bgetz+0x2c>
    c220:	93407c22 	sxtw	x2, w1
    c224:	aa0303e0 	mov	x0, x3
    c228:	52800001 	mov	w1, #0x0                   	// #0
    c22c:	9400040b 	bl	d258 <memset>
    c230:	aa0003e3 	mov	x3, x0
    c234:	aa0303e0 	mov	x0, x3
    c238:	f9400bf3 	ldr	x19, [sp, #16]
    c23c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    c240:	d65f03c0 	ret

000000000000c244 <brel>:
brel():
    c244:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    c248:	2a0203e6 	mov	w6, w2
    c24c:	aa0003e3 	mov	x3, x0
    c250:	910003fd 	mov	x29, sp
    c254:	f9401822 	ldr	x2, [x1, #48]
    c258:	a90153f3 	stp	x19, x20, [sp, #16]
    c25c:	91000442 	add	x2, x2, #0x1
    c260:	f9001822 	str	x2, [x1, #48]
    c264:	b5000140 	cbnz	x0, c28c <brel+0x48>
    c268:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c26c:	91212c63 	add	x3, x3, #0x84b
    c270:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c274:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c278:	91006463 	add	x3, x3, #0x19
    c27c:	91133021 	add	x1, x1, #0x4cc
    c280:	9117e000 	add	x0, x0, #0x5f8
    c284:	52807482 	mov	w2, #0x3a4                 	// #932
    c288:	97fffef9 	bl	be6c <_assert_trap>
    c28c:	f85f8004 	ldur	x4, [x0, #-8]
    c290:	d1004000 	sub	x0, x0, #0x10
    c294:	b7f80144 	tbnz	x4, #63, c2bc <brel+0x78>
    c298:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c29c:	91212c63 	add	x3, x3, #0x84b
    c2a0:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c2a4:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c2a8:	91006463 	add	x3, x3, #0x19
    c2ac:	91133021 	add	x1, x1, #0x4cc
    c2b0:	91181000 	add	x0, x0, #0x604
    c2b4:	528078a2 	mov	w2, #0x3c5                 	// #965
    c2b8:	17fffff4 	b	c288 <brel+0x44>
    c2bc:	cb040002 	sub	x2, x0, x4
    c2c0:	f9400042 	ldr	x2, [x2]
    c2c4:	b4000142 	cbz	x2, c2ec <brel+0xa8>
    c2c8:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c2cc:	91212c63 	add	x3, x3, #0x84b
    c2d0:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c2d4:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c2d8:	91006463 	add	x3, x3, #0x19
    c2dc:	91133021 	add	x1, x1, #0x4cc
    c2e0:	91185000 	add	x0, x0, #0x614
    c2e4:	52807942 	mov	w2, #0x3ca                 	// #970
    c2e8:	17ffffe8 	b	c288 <brel+0x44>
    c2ec:	f9401025 	ldr	x5, [x1, #32]
    c2f0:	8b050085 	add	x5, x4, x5
    c2f4:	f9001025 	str	x5, [x1, #32]
    c2f8:	b6f80145 	tbz	x5, #63, c320 <brel+0xdc>
    c2fc:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c300:	91212c63 	add	x3, x3, #0x84b
    c304:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c308:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c30c:	91006463 	add	x3, x3, #0x19
    c310:	91133021 	add	x1, x1, #0x4cc
    c314:	91190000 	add	x0, x0, #0x640
    c318:	528079c2 	mov	w2, #0x3ce                 	// #974
    c31c:	17ffffdb 	b	c288 <brel+0x44>
    c320:	f85f0065 	ldur	x5, [x3, #-16]
    c324:	cb0403e2 	neg	x2, x4
    c328:	b4000425 	cbz	x5, c3ac <brel+0x168>
    c32c:	cb050013 	sub	x19, x0, x5
    c330:	f9400661 	ldr	x1, [x19, #8]
    c334:	eb0100bf 	cmp	x5, x1
    c338:	54000140 	b.eq	c360 <brel+0x11c>  // b.none
    c33c:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c340:	91212c63 	add	x3, x3, #0x84b
    c344:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c348:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c34c:	91006463 	add	x3, x3, #0x19
    c350:	91133021 	add	x1, x1, #0x4cc
    c354:	91195c00 	add	x0, x0, #0x657
    c358:	52807c42 	mov	w2, #0x3e2                 	// #994
    c35c:	17ffffcb 	b	c288 <brel+0x44>
    c360:	cb0400a5 	sub	x5, x5, x4
    c364:	f9000665 	str	x5, [x19, #8]
    c368:	f9400661 	ldr	x1, [x19, #8]
    c36c:	8b010274 	add	x20, x19, x1
    c370:	f9400683 	ldr	x3, [x20, #8]
    c374:	f100007f 	cmp	x3, #0x0
    c378:	54000a2d 	b.le	c4bc <brel+0x278>
    c37c:	f8636a84 	ldr	x4, [x20, x3]
    c380:	eb04007f 	cmp	x3, x4
    c384:	540005c0 	b.eq	c43c <brel+0x1f8>  // b.none
    c388:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c38c:	91212c63 	add	x3, x3, #0x84b
    c390:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c394:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c398:	91006463 	add	x3, x3, #0x19
    c39c:	91133021 	add	x1, x1, #0x4cc
    c3a0:	911a4000 	add	x0, x0, #0x690
    c3a4:	52808022 	mov	w2, #0x401                 	// #1025
    c3a8:	17ffffb8 	b	c288 <brel+0x44>
    c3ac:	f9400c27 	ldr	x7, [x1, #24]
    c3b0:	f94008e5 	ldr	x5, [x7, #16]
    c3b4:	eb0100bf 	cmp	x5, x1
    c3b8:	54000140 	b.eq	c3e0 <brel+0x19c>  // b.none
    c3bc:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c3c0:	91212c63 	add	x3, x3, #0x84b
    c3c4:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c3c8:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c3cc:	91006463 	add	x3, x3, #0x19
    c3d0:	91133021 	add	x1, x1, #0x4cc
    c3d4:	91153800 	add	x0, x0, #0x54e
    c3d8:	52807d42 	mov	w2, #0x3ea                 	// #1002
    c3dc:	17ffffab 	b	c288 <brel+0x44>
    c3e0:	f94008a1 	ldr	x1, [x5, #16]
    c3e4:	f9400c21 	ldr	x1, [x1, #24]
    c3e8:	eb0100bf 	cmp	x5, x1
    c3ec:	54000140 	b.eq	c414 <brel+0x1d0>  // b.none
    c3f0:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c3f4:	91212c63 	add	x3, x3, #0x84b
    c3f8:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c3fc:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c400:	91006463 	add	x3, x3, #0x19
    c404:	91133021 	add	x1, x1, #0x4cc
    c408:	91162400 	add	x0, x0, #0x589
    c40c:	52807d62 	mov	w2, #0x3eb                 	// #1003
    c410:	17ffff9e 	b	c288 <brel+0x44>
    c414:	a9011c05 	stp	x5, x7, [x0, #16]
    c418:	aa0003f3 	mov	x19, x0
    c41c:	f9000ca0 	str	x0, [x5, #24]
    c420:	f9400c01 	ldr	x1, [x0, #24]
    c424:	f9000820 	str	x0, [x1, #16]
    c428:	928003e1 	mov	x1, #0xffffffffffffffe0    	// #-32
    c42c:	f9000402 	str	x2, [x0, #8]
    c430:	cb040022 	sub	x2, x1, x4
    c434:	91004060 	add	x0, x3, #0x10
    c438:	17ffffcc 	b	c368 <brel+0x124>
    c43c:	f9400e85 	ldr	x5, [x20, #24]
    c440:	f94008a7 	ldr	x7, [x5, #16]
    c444:	eb1400ff 	cmp	x7, x20
    c448:	54000140 	b.eq	c470 <brel+0x22c>  // b.none
    c44c:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c450:	91212c63 	add	x3, x3, #0x84b
    c454:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c458:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c45c:	91006463 	add	x3, x3, #0x19
    c460:	91133021 	add	x1, x1, #0x4cc
    c464:	911b2400 	add	x0, x0, #0x6c9
    c468:	52808042 	mov	w2, #0x402                 	// #1026
    c46c:	17ffff87 	b	c288 <brel+0x44>
    c470:	f94008e4 	ldr	x4, [x7, #16]
    c474:	f9400c88 	ldr	x8, [x4, #24]
    c478:	eb07011f 	cmp	x8, x7
    c47c:	54000140 	b.eq	c4a4 <brel+0x260>  // b.none
    c480:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c484:	91212c63 	add	x3, x3, #0x84b
    c488:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c48c:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c490:	91006463 	add	x3, x3, #0x19
    c494:	91133021 	add	x1, x1, #0x4cc
    c498:	911b9800 	add	x0, x0, #0x6e6
    c49c:	52808062 	mov	w2, #0x403                 	// #1027
    c4a0:	17ffff7a 	b	c288 <brel+0x44>
    c4a4:	8b030021 	add	x1, x1, x3
    c4a8:	f90008a4 	str	x4, [x5, #16]
    c4ac:	8b010274 	add	x20, x19, x1
    c4b0:	91008042 	add	x2, x2, #0x20
    c4b4:	f9000c85 	str	x5, [x4, #24]
    c4b8:	f9000661 	str	x1, [x19, #8]
    c4bc:	34000066 	cbz	w6, c4c8 <brel+0x284>
    c4c0:	52800aa1 	mov	w1, #0x55                  	// #85
    c4c4:	94000365 	bl	d258 <memset>
    c4c8:	f9400680 	ldr	x0, [x20, #8]
    c4cc:	b7f80140 	tbnz	x0, #63, c4f4 <brel+0x2b0>
    c4d0:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c4d4:	91212c63 	add	x3, x3, #0x84b
    c4d8:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c4dc:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c4e0:	91006463 	add	x3, x3, #0x19
    c4e4:	91133021 	add	x1, x1, #0x4cc
    c4e8:	911c0c00 	add	x0, x0, #0x703
    c4ec:	528082c2 	mov	w2, #0x416                 	// #1046
    c4f0:	17ffff66 	b	c288 <brel+0x44>
    c4f4:	f9400660 	ldr	x0, [x19, #8]
    c4f8:	f9000280 	str	x0, [x20]
    c4fc:	a94153f3 	ldp	x19, x20, [sp, #16]
    c500:	a8c27bfd 	ldp	x29, x30, [sp], #32
    c504:	d65f03c0 	ret

000000000000c508 <bgetr>:
bgetr():
    c508:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    c50c:	910003fd 	mov	x29, sp
    c510:	a90153f3 	stp	x19, x20, [sp, #16]
    c514:	aa0303f4 	mov	x20, x3
    c518:	aa0403e3 	mov	x3, x4
    c51c:	a9025bf5 	stp	x21, x22, [sp, #32]
    c520:	aa0003f5 	mov	x21, x0
    c524:	aa0103e0 	mov	x0, x1
    c528:	aa0203e1 	mov	x1, x2
    c52c:	aa1403e2 	mov	x2, x20
    c530:	f9001bf7 	str	x23, [sp, #48]
    c534:	aa0403f7 	mov	x23, x4
    c538:	97fffe69 	bl	bedc <bget>
    c53c:	aa0003f6 	mov	x22, x0
    c540:	b4000400 	cbz	x0, c5c0 <bgetr+0xb8>
    c544:	b40003f5 	cbz	x21, c5c0 <bgetr+0xb8>
    c548:	f85f82a1 	ldur	x1, [x21, #-8]
    c54c:	928001f3 	mov	x19, #0xfffffffffffffff0    	// #-16
    c550:	cb010273 	sub	x19, x19, x1
    c554:	f100027f 	cmp	x19, #0x0
    c558:	5400014c 	b.gt	c580 <bgetr+0x78>
    c55c:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c560:	91212c63 	add	x3, x3, #0x84b
    c564:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c568:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c56c:	91007863 	add	x3, x3, #0x1e
    c570:	91133021 	add	x1, x1, #0x4cc
    c574:	91130800 	add	x0, x0, #0x4c2
    c578:	52807122 	mov	w2, #0x389                 	// #905
    c57c:	97fffe3c 	bl	be6c <_assert_trap>
    c580:	eb13029f 	cmp	x20, x19
    c584:	93407e81 	sxtw	x1, w20
    c588:	93407e62 	sxtw	x2, w19
    c58c:	9a81a042 	csel	x2, x2, x1, ge  // ge = tcont
    c590:	aa1503e1 	mov	x1, x21
    c594:	97ffce9b 	bl	0 <memcpy>
    c598:	eb13029f 	cmp	x20, x19
    c59c:	540000ad 	b.le	c5b0 <bgetr+0xa8>
    c5a0:	cb130282 	sub	x2, x20, x19
    c5a4:	8b1302c0 	add	x0, x22, x19
    c5a8:	52800001 	mov	w1, #0x0                   	// #0
    c5ac:	9400032b 	bl	d258 <memset>
    c5b0:	aa1703e1 	mov	x1, x23
    c5b4:	aa1503e0 	mov	x0, x21
    c5b8:	52800002 	mov	w2, #0x0                   	// #0
    c5bc:	97ffff22 	bl	c244 <brel>
    c5c0:	aa1603e0 	mov	x0, x22
    c5c4:	a94153f3 	ldp	x19, x20, [sp, #16]
    c5c8:	a9425bf5 	ldp	x21, x22, [sp, #32]
    c5cc:	f9401bf7 	ldr	x23, [sp, #48]
    c5d0:	a8c47bfd 	ldp	x29, x30, [sp], #64
    c5d4:	d65f03c0 	ret

000000000000c5d8 <bpool>:
bpool():
    c5d8:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    c5dc:	927cec21 	and	x1, x1, #0xfffffffffffffff0
    c5e0:	f1004021 	subs	x1, x1, #0x10
    c5e4:	910003fd 	mov	x29, sp
    c5e8:	54000145 	b.pl	c610 <bpool+0x38>  // b.nfrst
    c5ec:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c5f0:	91212c63 	add	x3, x3, #0x84b
    c5f4:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c5f8:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c5fc:	91009063 	add	x3, x3, #0x24
    c600:	91133021 	add	x1, x1, #0x4cc
    c604:	911c5000 	add	x0, x0, #0x714
    c608:	52808d02 	mov	w2, #0x468                 	// #1128
    c60c:	97fffe18 	bl	be6c <_assert_trap>
    c610:	f9400c44 	ldr	x4, [x2, #24]
    c614:	f9400883 	ldr	x3, [x4, #16]
    c618:	f900001f 	str	xzr, [x0]
    c61c:	eb02007f 	cmp	x3, x2
    c620:	54000140 	b.eq	c648 <bpool+0x70>  // b.none
    c624:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c628:	91212c63 	add	x3, x3, #0x84b
    c62c:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c630:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c634:	91009063 	add	x3, x3, #0x24
    c638:	91133021 	add	x1, x1, #0x4cc
    c63c:	91153800 	add	x0, x0, #0x54e
    c640:	52808e42 	mov	w2, #0x472                 	// #1138
    c644:	17fffff2 	b	c60c <bpool+0x34>
    c648:	f9400862 	ldr	x2, [x3, #16]
    c64c:	f9400c42 	ldr	x2, [x2, #24]
    c650:	eb02007f 	cmp	x3, x2
    c654:	54000140 	b.eq	c67c <bpool+0xa4>  // b.none
    c658:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c65c:	91212c63 	add	x3, x3, #0x84b
    c660:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c664:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c668:	91009063 	add	x3, x3, #0x24
    c66c:	91133021 	add	x1, x1, #0x4cc
    c670:	91162400 	add	x0, x0, #0x589
    c674:	52808e62 	mov	w2, #0x473                 	// #1139
    c678:	17ffffe5 	b	c60c <bpool+0x34>
    c67c:	a9011003 	stp	x3, x4, [x0, #16]
    c680:	f9000c60 	str	x0, [x3, #24]
    c684:	f9400c02 	ldr	x2, [x0, #24]
    c688:	f9000840 	str	x0, [x2, #16]
    c68c:	8b010002 	add	x2, x0, x1
    c690:	f9000401 	str	x1, [x0, #8]
    c694:	f8216801 	str	x1, [x0, x1]
    c698:	d2f00000 	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    c69c:	f9000440 	str	x0, [x2, #8]
    c6a0:	a8c17bfd 	ldp	x29, x30, [sp], #16
    c6a4:	d65f03c0 	ret

000000000000c6a8 <bstats>:
bstats():
    c6a8:	f94014a7 	ldr	x7, [x5, #40]
    c6ac:	f94008a6 	ldr	x6, [x5, #16]
    c6b0:	f9000067 	str	x7, [x3]
    c6b4:	f94018a3 	ldr	x3, [x5, #48]
    c6b8:	f9000083 	str	x3, [x4]
    c6bc:	f94010a3 	ldr	x3, [x5, #32]
    c6c0:	f9000003 	str	x3, [x0]
    c6c4:	f900003f 	str	xzr, [x1]
    c6c8:	92800000 	mov	x0, #0xffffffffffffffff    	// #-1
    c6cc:	f9000040 	str	x0, [x2]
    c6d0:	eb0600bf 	cmp	x5, x6
    c6d4:	54000041 	b.ne	c6dc <bstats+0x34>  // b.any
    c6d8:	d65f03c0 	ret
    c6dc:	f94004c3 	ldr	x3, [x6, #8]
    c6e0:	f100007f 	cmp	x3, #0x0
    c6e4:	5400018c 	b.gt	c714 <bstats+0x6c>
    c6e8:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    c6ec:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c6f0:	91212c63 	add	x3, x3, #0x84b
    c6f4:	910003fd 	mov	x29, sp
    c6f8:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c6fc:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c700:	9100a863 	add	x3, x3, #0x2a
    c704:	91133021 	add	x1, x1, #0x4cc
    c708:	911d2400 	add	x0, x0, #0x749
    c70c:	528093e2 	mov	w2, #0x49f                 	// #1183
    c710:	97fffdd7 	bl	be6c <_assert_trap>
    c714:	f9400020 	ldr	x0, [x1]
    c718:	8b030000 	add	x0, x0, x3
    c71c:	f9000020 	str	x0, [x1]
    c720:	f9400043 	ldr	x3, [x2]
    c724:	f94004c0 	ldr	x0, [x6, #8]
    c728:	eb03001f 	cmp	x0, x3
    c72c:	5400004d 	b.le	c734 <bstats+0x8c>
    c730:	f9000040 	str	x0, [x2]
    c734:	f94008c6 	ldr	x6, [x6, #16]
    c738:	17ffffe6 	b	c6d0 <bstats+0x28>

000000000000c73c <stats.constprop.0>:
stats.constprop.0():
    c73c:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    c740:	b0000065 	adrp	x5, 19000 <_DYNAMIC>
    c744:	911740a5 	add	x5, x5, #0x5d0
    c748:	910003fd 	mov	x29, sp
    c74c:	a90153f3 	stp	x19, x20, [sp, #16]
    c750:	b0000073 	adrp	x19, 19000 <_DYNAMIC>
    c754:	aa0003f4 	mov	x20, x0
    c758:	f9409a60 	ldr	x0, [x19, #304]
    c75c:	910103e4 	add	x4, sp, #0x40
    c760:	9100e3e3 	add	x3, sp, #0x38
    c764:	9100c3e2 	add	x2, sp, #0x30
    c768:	f9400001 	ldr	x1, [x0]
    c76c:	f90027e1 	str	x1, [sp, #72]
    c770:	d2800001 	mov	x1, #0x0                   	// #0
    c774:	910083e0 	add	x0, sp, #0x20
    c778:	9100a3e1 	add	x1, sp, #0x28
    c77c:	97ffffcb 	bl	c6a8 <bstats>
    c780:	a94217e4 	ldp	x4, x5, [sp, #32]
    c784:	aa1403e1 	mov	x1, x20
    c788:	a9430be6 	ldp	x6, x2, [sp, #48]
    c78c:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c790:	f94023e3 	ldr	x3, [sp, #64]
    c794:	911d6400 	add	x0, x0, #0x759
    c798:	97ffd361 	bl	151c <printf>
    c79c:	f9409a73 	ldr	x19, [x19, #304]
    c7a0:	f94027e0 	ldr	x0, [sp, #72]
    c7a4:	f9400261 	ldr	x1, [x19]
    c7a8:	eb010000 	subs	x0, x0, x1
    c7ac:	d2800001 	mov	x1, #0x0                   	// #0
    c7b0:	54000040 	b.eq	c7b8 <stats.constprop.0+0x7c>  // b.none
    c7b4:	97ffcfb1 	bl	678 <__stack_chk_fail>
    c7b8:	a94153f3 	ldp	x19, x20, [sp, #16]
    c7bc:	a8c57bfd 	ldp	x29, x30, [sp], #80
    c7c0:	d65f03c0 	ret

000000000000c7c4 <bget_main_test>:
bget_main_test():
    c7c4:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    c7c8:	aa0003e1 	mov	x1, x0
    c7cc:	d2809a42 	mov	x2, #0x4d2                 	// #1234
    c7d0:	910003fd 	mov	x29, sp
    c7d4:	b0000060 	adrp	x0, 19000 <_DYNAMIC>
    c7d8:	a90153f3 	stp	x19, x20, [sp, #16]
    c7dc:	a9025bf5 	stp	x21, x22, [sp, #32]
    c7e0:	a90363f7 	stp	x23, x24, [sp, #48]
    c7e4:	a9046bf9 	stp	x25, x26, [sp, #64]
    c7e8:	a90573fb 	stp	x27, x28, [sp, #80]
    c7ec:	f902e402 	str	x2, [x0, #1480]
    c7f0:	d2986a00 	mov	x0, #0xc350                	// #50000
    c7f4:	d63f0020 	blr	x1
    c7f8:	b5000140 	cbnz	x0, c820 <bget_main_test+0x5c>
    c7fc:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c800:	91212c63 	add	x3, x3, #0x84b
    c804:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c808:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c80c:	9100c463 	add	x3, x3, #0x31
    c810:	91133021 	add	x1, x1, #0x4cc
    c814:	911e6c00 	add	x0, x0, #0x79b
    c818:	5280c8a2 	mov	w2, #0x645                 	// #1605
    c81c:	97fffd94 	bl	be6c <_assert_trap>
    c820:	90000076 	adrp	x22, 18000 <__func__.0+0x172>
    c824:	91212ed6 	add	x22, x22, #0x84b
    c828:	b0000075 	adrp	x21, 19000 <_DYNAMIC>
    c82c:	910102d6 	add	x22, x22, #0x40
    c830:	911742a2 	add	x2, x21, #0x5d0
    c834:	d2986a01 	mov	x1, #0xc350                	// #50000
    c838:	5289c417 	mov	w23, #0x4e20                	// #20000
    c83c:	52800118 	mov	w24, #0x8                   	// #8
    c840:	97ffff66 	bl	c5d8 <bpool>
    c844:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c848:	911e9800 	add	x0, x0, #0x7a6
    c84c:	97ffffbc 	bl	c73c <stats.constprop.0>
    c850:	97fffd7e 	bl	be48 <myrand>
    c854:	2a0003f3 	mov	w19, w0
    c858:	97fffd7c 	bl	be48 <myrand>
    c85c:	12000800 	and	w0, w0, #0x7
    c860:	12004273 	and	w19, w19, #0x1ffff
    c864:	1ac02a73 	asr	w19, w19, w0
    c868:	94001322 	bl	114f0 <rand>
    c86c:	12000400 	and	w0, w0, #0x3
    c870:	51000400 	sub	w0, w0, #0x1
    c874:	7100081f 	cmp	w0, #0x2
    c878:	540005a8 	b.hi	c92c <bget_main_test+0x168>  // b.pmore
    c87c:	38604ad4 	ldrb	w20, [x22, w0, uxtw]
    c880:	9400131c 	bl	114f0 <rand>
    c884:	d37c0419 	ubfiz	x25, x0, #4, #2
    c888:	7100227f 	cmp	w19, #0x8
    c88c:	1a98a273 	csel	w19, w19, w24, ge  // ge = tcont
    c890:	97fffd6e 	bl	be48 <myrand>
    c894:	93407e73 	sxtw	x19, w19
    c898:	911742a3 	add	x3, x21, #0x5d0
    c89c:	aa1303e2 	mov	x2, x19
    c8a0:	aa1903e1 	mov	x1, x25
    c8a4:	36500480 	tbz	w0, #10, c934 <bget_main_test+0x170>
    c8a8:	aa1403e0 	mov	x0, x20
    c8ac:	97fffe44 	bl	c1bc <bgetz>
    c8b0:	aa0003e4 	mov	x4, x0
    c8b4:	90000093 	adrp	x19, 1c000 <data.18+0x28f0>
    c8b8:	b5000440 	cbnz	x0, c940 <bget_main_test+0x17c>
    c8bc:	f9479a61 	ldr	x1, [x19, #3888]
    c8c0:	b4000101 	cbz	x1, c8e0 <bget_main_test+0x11c>
    c8c4:	f9400020 	ldr	x0, [x1]
    c8c8:	b40000c0 	cbz	x0, c8e0 <bget_main_test+0x11c>
    c8cc:	f9400002 	ldr	x2, [x0]
    c8d0:	f9000022 	str	x2, [x1]
    c8d4:	911742a1 	add	x1, x21, #0x5d0
    c8d8:	52800022 	mov	w2, #0x1                   	// #1
    c8dc:	97fffe5a 	bl	c244 <brel>
    c8e0:	710006f7 	subs	w23, w23, #0x1
    c8e4:	54fffb61 	b.ne	c850 <bget_main_test+0x8c>  // b.any
    c8e8:	911742b5 	add	x21, x21, #0x5d0
    c8ec:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c8f0:	9120a000 	add	x0, x0, #0x828
    c8f4:	97ffff92 	bl	c73c <stats.constprop.0>
    c8f8:	f9479a60 	ldr	x0, [x19, #3888]
    c8fc:	b5000c20 	cbnz	x0, ca80 <bget_main_test+0x2bc>
    c900:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c904:	9120e800 	add	x0, x0, #0x83a
    c908:	97ffff8d 	bl	c73c <stats.constprop.0>
    c90c:	52800000 	mov	w0, #0x0                   	// #0
    c910:	a94153f3 	ldp	x19, x20, [sp, #16]
    c914:	a9425bf5 	ldp	x21, x22, [sp, #32]
    c918:	a94363f7 	ldp	x23, x24, [sp, #48]
    c91c:	a9446bf9 	ldp	x25, x26, [sp, #64]
    c920:	a94573fb 	ldp	x27, x28, [sp, #80]
    c924:	a8c67bfd 	ldp	x29, x30, [sp], #96
    c928:	d65f03c0 	ret
    c92c:	d2800014 	mov	x20, #0x0                   	// #0
    c930:	17ffffd4 	b	c880 <bget_main_test+0xbc>
    c934:	aa1403e0 	mov	x0, x20
    c938:	97fffd69 	bl	bedc <bget>
    c93c:	17ffffdd 	b	c8b0 <bget_main_test+0xec>
    c940:	b40001d4 	cbz	x20, c978 <bget_main_test+0x1b4>
    c944:	8b190000 	add	x0, x0, x25
    c948:	d1000681 	sub	x1, x20, #0x1
    c94c:	ea01001f 	tst	x0, x1
    c950:	54000140 	b.eq	c978 <bget_main_test+0x1b4>  // b.none
    c954:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    c958:	91212c63 	add	x3, x3, #0x84b
    c95c:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    c960:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    c964:	9100c463 	add	x3, x3, #0x31
    c968:	91133021 	add	x1, x1, #0x4cc
    c96c:	911ec800 	add	x0, x0, #0x7b2
    c970:	5280d082 	mov	w2, #0x684                 	// #1668
    c974:	17ffffaa 	b	c81c <bget_main_test+0x58>
    c978:	f9479a60 	ldr	x0, [x19, #3888]
    c97c:	f9000080 	str	x0, [x4]
    c980:	f9079a64 	str	x4, [x19, #3888]
    c984:	97fffd31 	bl	be48 <myrand>
    c988:	372001c0 	tbnz	w0, #4, c9c0 <bget_main_test+0x1fc>
    c98c:	97fffd2f 	bl	be48 <myrand>
    c990:	12000400 	and	w0, w0, #0x3
    c994:	7100001f 	cmp	w0, #0x0
    c998:	fa40c884 	ccmp	x4, #0x0, #0x4, gt
    c99c:	54000621 	b.ne	ca60 <bget_main_test+0x29c>  // b.any
    c9a0:	b4000104 	cbz	x4, c9c0 <bget_main_test+0x1fc>
    c9a4:	f9400080 	ldr	x0, [x4]
    c9a8:	b40000c0 	cbz	x0, c9c0 <bget_main_test+0x1fc>
    c9ac:	f9400001 	ldr	x1, [x0]
    c9b0:	f9000081 	str	x1, [x4]
    c9b4:	52800022 	mov	w2, #0x1                   	// #1
    c9b8:	911742a1 	add	x1, x21, #0x5d0
    c9bc:	97fffe22 	bl	c244 <brel>
    c9c0:	97fffd22 	bl	be48 <myrand>
    c9c4:	372ff8e0 	tbnz	w0, #5, c8e0 <bget_main_test+0x11c>
    c9c8:	f9479a7b 	ldr	x27, [x19, #3888]
    c9cc:	97fffd1f 	bl	be48 <myrand>
    c9d0:	12000400 	and	w0, w0, #0x3
    c9d4:	7100001f 	cmp	w0, #0x0
    c9d8:	fa40cb64 	ccmp	x27, #0x0, #0x4, gt
    c9dc:	54000481 	b.ne	ca6c <bget_main_test+0x2a8>  // b.any
    c9e0:	b4fff81b 	cbz	x27, c8e0 <bget_main_test+0x11c>
    c9e4:	f940037c 	ldr	x28, [x27]
    c9e8:	b4fff7dc 	cbz	x28, c8e0 <bget_main_test+0x11c>
    c9ec:	940012c1 	bl	114f0 <rand>
    c9f0:	2a0003fa 	mov	w26, w0
    c9f4:	940012bf 	bl	114f0 <rand>
    c9f8:	12000800 	and	w0, w0, #0x7
    c9fc:	12004343 	and	w3, w26, #0x1ffff
    ca00:	911742a4 	add	x4, x21, #0x5d0
    ca04:	aa1903e2 	mov	x2, x25
    ca08:	aa1403e1 	mov	x1, x20
    ca0c:	1ac02863 	asr	w3, w3, w0
    ca10:	7100207f 	cmp	w3, #0x8
    ca14:	1a98a063 	csel	w3, w3, w24, ge  // ge = tcont
    ca18:	aa1c03e0 	mov	x0, x28
    ca1c:	93407c63 	sxtw	x3, w3
    ca20:	97fffeba 	bl	c508 <bgetr>
    ca24:	b4fff5e0 	cbz	x0, c8e0 <bget_main_test+0x11c>
    ca28:	b4000294 	cbz	x20, ca78 <bget_main_test+0x2b4>
    ca2c:	8b190019 	add	x25, x0, x25
    ca30:	d1000694 	sub	x20, x20, #0x1
    ca34:	ea14033f 	tst	x25, x20
    ca38:	54000200 	b.eq	ca78 <bget_main_test+0x2b4>  // b.none
    ca3c:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    ca40:	91212c63 	add	x3, x3, #0x84b
    ca44:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    ca48:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    ca4c:	9100c463 	add	x3, x3, #0x31
    ca50:	91133021 	add	x1, x1, #0x4cc
    ca54:	911fb000 	add	x0, x0, #0x7ec
    ca58:	5280d7c2 	mov	w2, #0x6be                 	// #1726
    ca5c:	17ffff70 	b	c81c <bget_main_test+0x58>
    ca60:	51000400 	sub	w0, w0, #0x1
    ca64:	f9400084 	ldr	x4, [x4]
    ca68:	17ffffcb 	b	c994 <bget_main_test+0x1d0>
    ca6c:	51000400 	sub	w0, w0, #0x1
    ca70:	f940037b 	ldr	x27, [x27]
    ca74:	17ffffd8 	b	c9d4 <bget_main_test+0x210>
    ca78:	f9000360 	str	x0, [x27]
    ca7c:	17ffff99 	b	c8e0 <bget_main_test+0x11c>
    ca80:	f9400001 	ldr	x1, [x0]
    ca84:	f9079a61 	str	x1, [x19, #3888]
    ca88:	52800022 	mov	w2, #0x1                   	// #1
    ca8c:	aa1503e1 	mov	x1, x21
    ca90:	97fffded 	bl	c244 <brel>
    ca94:	17ffff99 	b	c8f8 <bget_main_test+0x134>

000000000000ca98 <malloc_reset_stats>:
malloc_reset_stats():
    ca98:	b0000060 	adrp	x0, 19000 <_DYNAMIC>
    ca9c:	91174000 	add	x0, x0, #0x5d0
    caa0:	b900a41f 	str	wzr, [x0, #164]
    caa4:	b900ac1f 	str	wzr, [x0, #172]
    caa8:	f900581f 	str	xzr, [x0, #176]
    caac:	d65f03c0 	ret

000000000000cab0 <raw_memalign>:
raw_memalign():
    cab0:	b40003e2 	cbz	x2, cb2c <raw_memalign+0x7c>
    cab4:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    cab8:	aa0003e5 	mov	x5, x0
    cabc:	910003fd 	mov	x29, sp
    cac0:	a90153f3 	stp	x19, x20, [sp, #16]
    cac4:	aa0303f3 	mov	x19, x3
    cac8:	cb0203e3 	neg	x3, x2
    cacc:	8a020060 	and	x0, x3, x2
    cad0:	ea23005f 	bics	xzr, x2, x3
    cad4:	54000241 	b.ne	cb1c <raw_memalign+0x6c>  // b.any
    cad8:	aa0403f4 	mov	x20, x4
    cadc:	ab010262 	adds	x2, x19, x1
    cae0:	540001a4 	b.mi	cb14 <raw_memalign+0x64>  // b.first
    cae4:	eb01005f 	cmp	x2, x1
    cae8:	54000163 	b.cc	cb14 <raw_memalign+0x64>  // b.lo, b.ul, b.last
    caec:	f100005f 	cmp	x2, #0x0
    caf0:	aa0403e3 	mov	x3, x4
    caf4:	9a9f1442 	csinc	x2, x2, xzr, ne  // ne = any
    caf8:	aa0503e1 	mov	x1, x5
    cafc:	97fffcf8 	bl	bedc <bget>
    cb00:	aa1403e2 	mov	x2, x20
    cb04:	aa1303e1 	mov	x1, x19
    cb08:	a94153f3 	ldp	x19, x20, [sp, #16]
    cb0c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    cb10:	17fffce5 	b	bea4 <raw_malloc_return_hook.constprop.0>
    cb14:	d2800000 	mov	x0, #0x0                   	// #0
    cb18:	17fffffa 	b	cb00 <raw_memalign+0x50>
    cb1c:	d2800000 	mov	x0, #0x0                   	// #0
    cb20:	a94153f3 	ldp	x19, x20, [sp, #16]
    cb24:	a8c27bfd 	ldp	x29, x30, [sp], #32
    cb28:	d65f03c0 	ret
    cb2c:	d2800000 	mov	x0, #0x0                   	// #0
    cb30:	d65f03c0 	ret

000000000000cb34 <raw_malloc>:
raw_malloc():
    cb34:	aa0303e4 	mov	x4, x3
    cb38:	aa0203e3 	mov	x3, x2
    cb3c:	d2800202 	mov	x2, #0x10                  	// #16
    cb40:	17ffffdc 	b	cab0 <raw_memalign>

000000000000cb44 <raw_free>:
raw_free():
    cb44:	12001c42 	and	w2, w2, #0xff
    cb48:	b4000040 	cbz	x0, cb50 <raw_free+0xc>
    cb4c:	17fffdbe 	b	c244 <brel>
    cb50:	d65f03c0 	ret

000000000000cb54 <raw_calloc>:
raw_calloc():
    cb54:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    cb58:	910003fd 	mov	x29, sp
    cb5c:	a90153f3 	stp	x19, x20, [sp, #16]
    cb60:	9b037c54 	mul	x20, x2, x3
    cb64:	9bc37c42 	umulh	x2, x2, x3
    cb68:	aa0403f3 	mov	x19, x4
    cb6c:	f100005f 	cmp	x2, #0x0
    cb70:	9a9f07e2 	cset	x2, ne  // ne = any
    cb74:	b7f80254 	tbnz	x20, #63, cbbc <raw_calloc+0x68>
    cb78:	b5000222 	cbnz	x2, cbbc <raw_calloc+0x68>
    cb7c:	8b010282 	add	x2, x20, x1
    cb80:	d2f00003 	mov	x3, #0x8000000000000000    	// #-9223372036854775808
    cb84:	8b030043 	add	x3, x2, x3
    cb88:	eb01007f 	cmp	x3, x1
    cb8c:	54000183 	b.cc	cbbc <raw_calloc+0x68>  // b.lo, b.ul, b.last
    cb90:	f100005f 	cmp	x2, #0x0
    cb94:	aa0003e1 	mov	x1, x0
    cb98:	aa0403e3 	mov	x3, x4
    cb9c:	9a9f1442 	csinc	x2, x2, xzr, ne  // ne = any
    cba0:	d2800000 	mov	x0, #0x0                   	// #0
    cba4:	97fffd86 	bl	c1bc <bgetz>
    cba8:	aa1303e2 	mov	x2, x19
    cbac:	aa1403e1 	mov	x1, x20
    cbb0:	a94153f3 	ldp	x19, x20, [sp, #16]
    cbb4:	a8c27bfd 	ldp	x29, x30, [sp], #32
    cbb8:	17fffcbb 	b	bea4 <raw_malloc_return_hook.constprop.0>
    cbbc:	d2800000 	mov	x0, #0x0                   	// #0
    cbc0:	17fffffa 	b	cba8 <raw_calloc+0x54>

000000000000cbc4 <raw_realloc>:
raw_realloc():
    cbc4:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    cbc8:	910003fd 	mov	x29, sp
    cbcc:	a90153f3 	stp	x19, x20, [sp, #16]
    cbd0:	ab010073 	adds	x19, x3, x1
    cbd4:	a9025bf5 	stp	x21, x22, [sp, #32]
    cbd8:	a90363f7 	stp	x23, x24, [sp, #48]
    cbdc:	aa0303f7 	mov	x23, x3
    cbe0:	aa0403f8 	mov	x24, x4
    cbe4:	54000124 	b.mi	cc08 <raw_realloc+0x44>  // b.first
    cbe8:	eb01027f 	cmp	x19, x1
    cbec:	540000e3 	b.cc	cc08 <raw_realloc+0x44>  // b.lo, b.ul, b.last
    cbf0:	8b020273 	add	x19, x19, x2
    cbf4:	aa0003f5 	mov	x21, x0
    cbf8:	d2f00000 	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    cbfc:	8b000260 	add	x0, x19, x0
    cc00:	eb02001f 	cmp	x0, x2
    cc04:	54000142 	b.cs	cc2c <raw_realloc+0x68>  // b.hs, b.nlast
    cc08:	d2800014 	mov	x20, #0x0                   	// #0
    cc0c:	aa1803e2 	mov	x2, x24
    cc10:	aa1703e1 	mov	x1, x23
    cc14:	aa1403e0 	mov	x0, x20
    cc18:	a94153f3 	ldp	x19, x20, [sp, #16]
    cc1c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    cc20:	a94363f7 	ldp	x23, x24, [sp, #48]
    cc24:	a8c47bfd 	ldp	x29, x30, [sp], #64
    cc28:	17fffc9f 	b	bea4 <raw_malloc_return_hook.constprop.0>
    cc2c:	f100027f 	cmp	x19, #0x0
    cc30:	aa0403e3 	mov	x3, x4
    cc34:	9a9f1673 	csinc	x19, x19, xzr, ne  // ne = any
    cc38:	d2800001 	mov	x1, #0x0                   	// #0
    cc3c:	aa1303e2 	mov	x2, x19
    cc40:	d2800000 	mov	x0, #0x0                   	// #0
    cc44:	97fffca6 	bl	bedc <bget>
    cc48:	f100001f 	cmp	x0, #0x0
    cc4c:	aa0003f4 	mov	x20, x0
    cc50:	fa401aa4 	ccmp	x21, #0x0, #0x4, ne  // ne = any
    cc54:	54fffdc0 	b.eq	cc0c <raw_realloc+0x48>  // b.none
    cc58:	f85f82a1 	ldur	x1, [x21, #-8]
    cc5c:	928001f6 	mov	x22, #0xfffffffffffffff0    	// #-16
    cc60:	cb0102d6 	sub	x22, x22, x1
    cc64:	f10002df 	cmp	x22, #0x0
    cc68:	5400004c 	b.gt	cc70 <raw_realloc+0xac>
    cc6c:	97fffc84 	bl	be7c <bget_buf_size.part.0>
    cc70:	eb16027f 	cmp	x19, x22
    cc74:	540001ad 	b.le	cca8 <raw_realloc+0xe4>
    cc78:	aa1603e2 	mov	x2, x22
    cc7c:	aa1503e1 	mov	x1, x21
    cc80:	97ffcce0 	bl	0 <memcpy>
    cc84:	cb160262 	sub	x2, x19, x22
    cc88:	8b160280 	add	x0, x20, x22
    cc8c:	52800001 	mov	w1, #0x0                   	// #0
    cc90:	94000172 	bl	d258 <memset>
    cc94:	aa1803e1 	mov	x1, x24
    cc98:	aa1503e0 	mov	x0, x21
    cc9c:	52800002 	mov	w2, #0x0                   	// #0
    cca0:	97fffd69 	bl	c244 <brel>
    cca4:	17ffffda 	b	cc0c <raw_realloc+0x48>
    cca8:	aa1303e2 	mov	x2, x19
    ccac:	aa1503e1 	mov	x1, x21
    ccb0:	97ffccd4 	bl	0 <memcpy>
    ccb4:	17fffff8 	b	cc94 <raw_realloc+0xd0>

000000000000ccb8 <malloc>:
malloc():
    ccb8:	b0000063 	adrp	x3, 19000 <_DYNAMIC>
    ccbc:	91174063 	add	x3, x3, #0x5d0
    ccc0:	aa0003e2 	mov	x2, x0
    ccc4:	9100e063 	add	x3, x3, #0x38
    ccc8:	d2800001 	mov	x1, #0x0                   	// #0
    cccc:	d2800000 	mov	x0, #0x0                   	// #0
    ccd0:	17ffff99 	b	cb34 <raw_malloc>

000000000000ccd4 <calloc>:
calloc():
    ccd4:	b0000064 	adrp	x4, 19000 <_DYNAMIC>
    ccd8:	91174084 	add	x4, x4, #0x5d0
    ccdc:	aa0103e3 	mov	x3, x1
    cce0:	aa0003e2 	mov	x2, x0
    cce4:	9100e084 	add	x4, x4, #0x38
    cce8:	d2800001 	mov	x1, #0x0                   	// #0
    ccec:	d2800000 	mov	x0, #0x0                   	// #0
    ccf0:	17ffff99 	b	cb54 <raw_calloc>

000000000000ccf4 <realloc>:
realloc():
    ccf4:	b0000064 	adrp	x4, 19000 <_DYNAMIC>
    ccf8:	91174084 	add	x4, x4, #0x5d0
    ccfc:	aa0103e3 	mov	x3, x1
    cd00:	9100e084 	add	x4, x4, #0x38
    cd04:	d2800002 	mov	x2, #0x0                   	// #0
    cd08:	d2800001 	mov	x1, #0x0                   	// #0
    cd0c:	17ffffae 	b	cbc4 <raw_realloc>

000000000000cd10 <memalign>:
memalign():
    cd10:	b0000064 	adrp	x4, 19000 <_DYNAMIC>
    cd14:	91174084 	add	x4, x4, #0x5d0
    cd18:	aa0103e3 	mov	x3, x1
    cd1c:	aa0003e2 	mov	x2, x0
    cd20:	9100e084 	add	x4, x4, #0x38
    cd24:	d2800001 	mov	x1, #0x0                   	// #0
    cd28:	d2800000 	mov	x0, #0x0                   	// #0
    cd2c:	17ffff61 	b	cab0 <raw_memalign>

000000000000cd30 <aligned_alloc>:
aligned_alloc():
    cd30:	9ac00822 	udiv	x2, x1, x0
    cd34:	9b008442 	msub	x2, x2, x0, x1
    cd38:	b5000042 	cbnz	x2, cd40 <aligned_alloc+0x10>
    cd3c:	17fffff5 	b	cd10 <memalign>
    cd40:	d2800000 	mov	x0, #0x0                   	// #0
    cd44:	d65f03c0 	ret

000000000000cd48 <free>:
free():
    cd48:	b0000061 	adrp	x1, 19000 <_DYNAMIC>
    cd4c:	91174021 	add	x1, x1, #0x5d0
    cd50:	9100e021 	add	x1, x1, #0x38
    cd54:	52800002 	mov	w2, #0x0                   	// #0
    cd58:	17ffff7b 	b	cb44 <raw_free>

000000000000cd5c <free_wipe>:
free_wipe():
    cd5c:	b0000061 	adrp	x1, 19000 <_DYNAMIC>
    cd60:	91174021 	add	x1, x1, #0x5d0
    cd64:	9100e021 	add	x1, x1, #0x38
    cd68:	52800022 	mov	w2, #0x1                   	// #1
    cd6c:	17ffff76 	b	cb44 <raw_free>

000000000000cd70 <raw_malloc_get_ctx_size>:
raw_malloc_get_ctx_size():
    cd70:	d2801000 	mov	x0, #0x80                  	// #128
    cd74:	d65f03c0 	ret

000000000000cd78 <raw_malloc_init_ctx>:
raw_malloc_init_ctx():
    cd78:	4f000400 	movi	v0.4s, #0x0
    cd7c:	ad000000 	stp	q0, q0, [x0]
    cd80:	a9010000 	stp	x0, x0, [x0, #16]
    cd84:	ad010000 	stp	q0, q0, [x0, #32]
    cd88:	ad020000 	stp	q0, q0, [x0, #64]
    cd8c:	ad030000 	stp	q0, q0, [x0, #96]
    cd90:	d65f03c0 	ret

000000000000cd94 <raw_malloc_add_pool>:
raw_malloc_add_pool():
    cd94:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    cd98:	910003fd 	mov	x29, sp
    cd9c:	a90153f3 	stp	x19, x20, [sp, #16]
    cda0:	8b020034 	add	x20, x1, x2
    cda4:	91003c21 	add	x1, x1, #0xf
    cda8:	927cee94 	and	x20, x20, #0xfffffffffffffff0
    cdac:	a9025bf5 	stp	x21, x22, [sp, #32]
    cdb0:	927cec35 	and	x21, x1, #0xfffffffffffffff0
    cdb4:	eb1402bf 	cmp	x21, x20
    cdb8:	54000508 	b.hi	ce58 <raw_malloc_add_pool+0xc4>  // b.pmore
    cdbc:	cb150294 	sub	x20, x20, x21
    cdc0:	f100be9f 	cmp	x20, #0x2f
    cdc4:	540004a9 	b.ls	ce58 <raw_malloc_add_pool+0xc4>  // b.plast
    cdc8:	aa0003f3 	mov	x19, x0
    cdcc:	f9402000 	ldr	x0, [x0, #64]
    cdd0:	b5000060 	cbnz	x0, cddc <raw_malloc_add_pool+0x48>
    cdd4:	f10ffe9f 	cmp	x20, #0x3ff
    cdd8:	54000409 	b.ls	ce58 <raw_malloc_add_pool+0xc4>  // b.plast
    cddc:	aa1303e2 	mov	x2, x19
    cde0:	aa1403e1 	mov	x1, x20
    cde4:	aa1503e0 	mov	x0, x21
    cde8:	97fffdfc 	bl	c5d8 <bpool>
    cdec:	a943da60 	ldp	x0, x22, [x19, #56]
    cdf0:	aa1303e4 	mov	x4, x19
    cdf4:	d2800002 	mov	x2, #0x0                   	// #0
    cdf8:	d2800001 	mov	x1, #0x0                   	// #0
    cdfc:	910006d6 	add	x22, x22, #0x1
    ce00:	d37ceec3 	lsl	x3, x22, #4
    ce04:	97ffff70 	bl	cbc4 <raw_realloc>
    ce08:	b5000140 	cbnz	x0, ce30 <raw_malloc_add_pool+0x9c>
    ce0c:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    ce10:	91212c63 	add	x3, x3, #0x84b
    ce14:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    ce18:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    ce1c:	91010c63 	add	x3, x3, #0x43
    ce20:	91128821 	add	x1, x1, #0x4a2
    ce24:	91212400 	add	x0, x0, #0x849
    ce28:	52807522 	mov	w2, #0x3a9                 	// #937
    ce2c:	97fffc10 	bl	be6c <_assert_trap>
    ce30:	f9402261 	ldr	x1, [x19, #64]
    ce34:	f9001e60 	str	x0, [x19, #56]
    ce38:	d37cec22 	lsl	x2, x1, #4
    ce3c:	8b011001 	add	x1, x0, x1, lsl #4
    ce40:	f8226815 	str	x21, [x0, x2]
    ce44:	b9407260 	ldr	w0, [x19, #112]
    ce48:	f9000434 	str	x20, [x1, #8]
    ce4c:	0b140000 	add	w0, w0, w20
    ce50:	f9002276 	str	x22, [x19, #64]
    ce54:	b9007260 	str	w0, [x19, #112]
    ce58:	a94153f3 	ldp	x19, x20, [sp, #16]
    ce5c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    ce60:	a8c37bfd 	ldp	x29, x30, [sp], #48
    ce64:	d65f03c0 	ret

000000000000ce68 <raw_malloc_buffer_overlaps_heap>:
raw_malloc_buffer_overlaps_heap():
    ce68:	ab020022 	adds	x2, x1, x2
    ce6c:	aa0003e6 	mov	x6, x0
    ce70:	f9402008 	ldr	x8, [x0, #64]
    ce74:	9a9f37e9 	cset	x9, cs  // cs = hs, nlast
    ce78:	d2800005 	mov	x5, #0x0                   	// #0
    ce7c:	eb05011f 	cmp	x8, x5
    ce80:	54000061 	b.ne	ce8c <raw_malloc_buffer_overlaps_heap+0x24>  // b.any
    ce84:	52800000 	mov	w0, #0x0                   	// #0
    ce88:	d65f03c0 	ret
    ce8c:	f9401cc3 	ldr	x3, [x6, #56]
    ce90:	d37ceca0 	lsl	x0, x5, #4
    ce94:	8b051064 	add	x4, x3, x5, lsl #4
    ce98:	f8606867 	ldr	x7, [x3, x0]
    ce9c:	f9400483 	ldr	x3, [x4, #8]
    cea0:	ab070064 	adds	x4, x3, x7
    cea4:	1a9f37e3 	cset	w3, cs  // cs = hs, nlast
    cea8:	2a090060 	orr	w0, w3, w9
    ceac:	35fffee0 	cbnz	w0, ce88 <raw_malloc_buffer_overlaps_heap+0x20>
    ceb0:	eb07003f 	cmp	x1, x7
    ceb4:	1a9f37e3 	cset	w3, cs  // cs = hs, nlast
    ceb8:	eb04003f 	cmp	x1, x4
    cebc:	1a9f27e0 	cset	w0, cc  // cc = lo, ul, last
    cec0:	6a000060 	ands	w0, w3, w0
    cec4:	54fffe21 	b.ne	ce88 <raw_malloc_buffer_overlaps_heap+0x20>  // b.any
    cec8:	eb07005f 	cmp	x2, x7
    cecc:	1a9f97e3 	cset	w3, hi  // hi = pmore
    ced0:	eb04005f 	cmp	x2, x4
    ced4:	1a9f27e0 	cset	w0, cc  // cc = lo, ul, last
    ced8:	6a000060 	ands	w0, w3, w0
    cedc:	54fffd61 	b.ne	ce88 <raw_malloc_buffer_overlaps_heap+0x20>  // b.any
    cee0:	910004a5 	add	x5, x5, #0x1
    cee4:	17ffffe6 	b	ce7c <raw_malloc_buffer_overlaps_heap+0x14>

000000000000cee8 <raw_malloc_buffer_is_within_alloced>:
raw_malloc_buffer_is_within_alloced():
    cee8:	ab020022 	adds	x2, x1, x2
    ceec:	54000a22 	b.cs	d030 <raw_malloc_buffer_is_within_alloced+0x148>  // b.hs, b.nlast
    cef0:	f9401c08 	ldr	x8, [x0, #56]
    cef4:	aa0003e7 	mov	x7, x0
    cef8:	d2800006 	mov	x6, #0x0                   	// #0
    cefc:	d2f0000a 	mov	x10, #0x8000000000000000    	// #-9223372036854775808
    cf00:	928001eb 	mov	x11, #0xfffffffffffffff0    	// #-16
    cf04:	f9400104 	ldr	x4, [x8]
    cf08:	aa0403e5 	mov	x5, x4
    cf0c:	f9400483 	ldr	x3, [x4, #8]
    cf10:	eb0a007f 	cmp	x3, x10
    cf14:	54000860 	b.eq	d020 <raw_malloc_buffer_is_within_alloced+0x138>  // b.none
    cf18:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
    cf1c:	910003fd 	mov	x29, sp
    cf20:	1400000d 	b	cf54 <raw_malloc_buffer_is_within_alloced+0x6c>
    cf24:	910040a5 	add	x5, x5, #0x10
    cf28:	8b0300a3 	add	x3, x5, x3
    cf2c:	eb03005f 	cmp	x2, x3
    cf30:	1a9f87e3 	cset	w3, ls  // ls = plast
    cf34:	eb05003f 	cmp	x1, x5
    cf38:	1a9f37e0 	cset	w0, cs  // cs = hs, nlast
    cf3c:	6a000060 	ands	w0, w3, w0
    cf40:	54000661 	b.ne	d00c <raw_malloc_buffer_is_within_alloced+0x124>  // b.any
    cf44:	f9400483 	ldr	x3, [x4, #8]
    cf48:	aa0403e5 	mov	x5, x4
    cf4c:	eb0a007f 	cmp	x3, x10
    cf50:	54000540 	b.eq	cff8 <raw_malloc_buffer_is_within_alloced+0x110>  // b.none
    cf54:	b6f80123 	tbz	x3, #63, cf78 <raw_malloc_buffer_is_within_alloced+0x90>
    cf58:	cb0303e9 	neg	x9, x3
    cf5c:	52800000 	mov	w0, #0x0                   	// #0
    cf60:	8b090084 	add	x4, x4, x9
    cf64:	35ffff00 	cbnz	w0, cf44 <raw_malloc_buffer_is_within_alloced+0x5c>
    cf68:	cb030163 	sub	x3, x11, x3
    cf6c:	f100007f 	cmp	x3, #0x0
    cf70:	54fffdac 	b.gt	cf24 <raw_malloc_buffer_is_within_alloced+0x3c>
    cf74:	97fffbc2 	bl	be7c <bget_buf_size.part.0>
    cf78:	f9400c80 	ldr	x0, [x4, #24]
    cf7c:	f9400800 	ldr	x0, [x0, #16]
    cf80:	eb04001f 	cmp	x0, x4
    cf84:	54000140 	b.eq	cfac <raw_malloc_buffer_is_within_alloced+0xc4>  // b.none
    cf88:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    cf8c:	91212c63 	add	x3, x3, #0x84b
    cf90:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    cf94:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    cf98:	91015c63 	add	x3, x3, #0x57
    cf9c:	91128821 	add	x1, x1, #0x4a2
    cfa0:	91141400 	add	x0, x0, #0x505
    cfa4:	52803002 	mov	w2, #0x180                 	// #384
    cfa8:	97fffbb1 	bl	be6c <_assert_trap>
    cfac:	f9400880 	ldr	x0, [x4, #16]
    cfb0:	f9400c00 	ldr	x0, [x0, #24]
    cfb4:	eb04001f 	cmp	x0, x4
    cfb8:	54000140 	b.eq	cfe0 <raw_malloc_buffer_is_within_alloced+0xf8>  // b.none
    cfbc:	90000063 	adrp	x3, 18000 <__func__.0+0x172>
    cfc0:	91212c63 	add	x3, x3, #0x84b
    cfc4:	90000061 	adrp	x1, 18000 <__func__.0+0x172>
    cfc8:	90000060 	adrp	x0, 18000 <__func__.0+0x172>
    cfcc:	91015c63 	add	x3, x3, #0x57
    cfd0:	91128821 	add	x1, x1, #0x4a2
    cfd4:	91148000 	add	x0, x0, #0x520
    cfd8:	52803022 	mov	w2, #0x181                 	// #385
    cfdc:	97fffba4 	bl	be6c <_assert_trap>
    cfe0:	aa0303e9 	mov	x9, x3
    cfe4:	52800020 	mov	w0, #0x1                   	// #1
    cfe8:	17ffffde 	b	cf60 <raw_malloc_buffer_is_within_alloced+0x78>
    cfec:	d37cecc0 	lsl	x0, x6, #4
    cff0:	f8606904 	ldr	x4, [x8, x0]
    cff4:	17ffffd4 	b	cf44 <raw_malloc_buffer_is_within_alloced+0x5c>
    cff8:	f94020e0 	ldr	x0, [x7, #64]
    cffc:	910004c6 	add	x6, x6, #0x1
    d000:	eb0000df 	cmp	x6, x0
    d004:	54ffff43 	b.cc	cfec <raw_malloc_buffer_is_within_alloced+0x104>  // b.lo, b.ul, b.last
    d008:	52800000 	mov	w0, #0x0                   	// #0
    d00c:	a8c17bfd 	ldp	x29, x30, [sp], #16
    d010:	d65f03c0 	ret
    d014:	d37cecc0 	lsl	x0, x6, #4
    d018:	f8606904 	ldr	x4, [x8, x0]
    d01c:	17ffffbb 	b	cf08 <raw_malloc_buffer_is_within_alloced+0x20>
    d020:	f94020e0 	ldr	x0, [x7, #64]
    d024:	910004c6 	add	x6, x6, #0x1
    d028:	eb0000df 	cmp	x6, x0
    d02c:	54ffff43 	b.cc	d014 <raw_malloc_buffer_is_within_alloced+0x12c>  // b.lo, b.ul, b.last
    d030:	52800000 	mov	w0, #0x0                   	// #0
    d034:	d65f03c0 	ret

000000000000d038 <raw_malloc_get_stats>:
raw_malloc_get_stats():
    d038:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    d03c:	aa0103e3 	mov	x3, x1
    d040:	d2800702 	mov	x2, #0x38                  	// #56
    d044:	910003fd 	mov	x29, sp
    d048:	f9000bf3 	str	x19, [sp, #16]
    d04c:	aa0003f3 	mov	x19, x0
    d050:	91012001 	add	x1, x0, #0x48
    d054:	aa0303e0 	mov	x0, x3
    d058:	97ffcbea 	bl	0 <memcpy>
    d05c:	aa0003e3 	mov	x3, x0
    d060:	f9401260 	ldr	x0, [x19, #32]
    d064:	f9400bf3 	ldr	x19, [sp, #16]
    d068:	b9002060 	str	w0, [x3, #32]
    d06c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    d070:	d65f03c0 	ret

000000000000d074 <malloc_get_stats>:
malloc_get_stats():
    d074:	aa0003e1 	mov	x1, x0
    d078:	90000060 	adrp	x0, 19000 <_DYNAMIC>
    d07c:	91174000 	add	x0, x0, #0x5d0
    d080:	9100e000 	add	x0, x0, #0x38
    d084:	17ffffed 	b	d038 <raw_malloc_get_stats>

000000000000d088 <malloc_add_pool>:
malloc_add_pool():
    d088:	aa0103e2 	mov	x2, x1
    d08c:	aa0003e1 	mov	x1, x0
    d090:	90000060 	adrp	x0, 19000 <_DYNAMIC>
    d094:	91174000 	add	x0, x0, #0x5d0
    d098:	9100e000 	add	x0, x0, #0x38
    d09c:	17ffff3e 	b	cd94 <raw_malloc_add_pool>

000000000000d0a0 <malloc_buffer_is_within_alloced>:
malloc_buffer_is_within_alloced():
    d0a0:	aa0103e2 	mov	x2, x1
    d0a4:	aa0003e1 	mov	x1, x0
    d0a8:	90000060 	adrp	x0, 19000 <_DYNAMIC>
    d0ac:	91174000 	add	x0, x0, #0x5d0
    d0b0:	9100e000 	add	x0, x0, #0x38
    d0b4:	17ffff8d 	b	cee8 <raw_malloc_buffer_is_within_alloced>

000000000000d0b8 <malloc_buffer_overlaps_heap>:
malloc_buffer_overlaps_heap():
    d0b8:	aa0103e2 	mov	x2, x1
    d0bc:	aa0003e1 	mov	x1, x0
    d0c0:	90000060 	adrp	x0, 19000 <_DYNAMIC>
    d0c4:	91174000 	add	x0, x0, #0x5d0
    d0c8:	9100e000 	add	x0, x0, #0x38
    d0cc:	17ffff67 	b	ce68 <raw_malloc_buffer_overlaps_heap>

000000000000d0d0 <snprintf>:
snprintf():
    d0d0:	a9ad7bfd 	stp	x29, x30, [sp, #-304]!
    d0d4:	910003fd 	mov	x29, sp
    d0d8:	a90153f3 	stp	x19, x20, [sp, #16]
    d0dc:	90000073 	adrp	x19, 19000 <_DYNAMIC>
    d0e0:	aa0003f4 	mov	x20, x0
    d0e4:	f9409a60 	ldr	x0, [x19, #304]
    d0e8:	a9025bf5 	stp	x21, x22, [sp, #32]
    d0ec:	aa0103f5 	mov	x21, x1
    d0f0:	3d8023e0 	str	q0, [sp, #128]
    d0f4:	aa0203f6 	mov	x22, x2
    d0f8:	d2800402 	mov	x2, #0x20                  	// #32
    d0fc:	3d8027e1 	str	q1, [sp, #144]
    d100:	3d802be2 	str	q2, [sp, #160]
    d104:	3d802fe3 	str	q3, [sp, #176]
    d108:	3d8033e4 	str	q4, [sp, #192]
    d10c:	3d8037e5 	str	q5, [sp, #208]
    d110:	3d803be6 	str	q6, [sp, #224]
    d114:	3d803fe7 	str	q7, [sp, #240]
    d118:	a91093e3 	stp	x3, x4, [sp, #264]
    d11c:	9100c3e3 	add	x3, sp, #0x30
    d120:	a9119be5 	stp	x5, x6, [sp, #280]
    d124:	f90097e7 	str	x7, [sp, #296]
    d128:	f9400001 	ldr	x1, [x0]
    d12c:	f9003fe1 	str	x1, [sp, #120]
    d130:	d2800001 	mov	x1, #0x0                   	// #0
    d134:	9104c3e0 	add	x0, sp, #0x130
    d138:	a90583e0 	stp	x0, x0, [sp, #88]
    d13c:	910403e0 	add	x0, sp, #0x100
    d140:	910163e1 	add	x1, sp, #0x58
    d144:	f90037e0 	str	x0, [sp, #104]
    d148:	128004e0 	mov	w0, #0xffffffd8            	// #-40
    d14c:	b90073e0 	str	w0, [sp, #112]
    d150:	12800fe0 	mov	w0, #0xffffff80            	// #-128
    d154:	b90077e0 	str	w0, [sp, #116]
    d158:	aa0303e0 	mov	x0, x3
    d15c:	97ffcba9 	bl	0 <memcpy>
    d160:	aa0003e3 	mov	x3, x0
    d164:	aa1603e2 	mov	x2, x22
    d168:	aa1503e1 	mov	x1, x21
    d16c:	aa1403e0 	mov	x0, x20
    d170:	52800004 	mov	w4, #0x0                   	// #0
    d174:	97ffcd4d 	bl	6a8 <__vsnprintf>
    d178:	f9409a73 	ldr	x19, [x19, #304]
    d17c:	f9403fe1 	ldr	x1, [sp, #120]
    d180:	f9400262 	ldr	x2, [x19]
    d184:	eb020021 	subs	x1, x1, x2
    d188:	d2800002 	mov	x2, #0x0                   	// #0
    d18c:	54000040 	b.eq	d194 <snprintf+0xc4>  // b.none
    d190:	97ffcd3a 	bl	678 <__stack_chk_fail>
    d194:	a94153f3 	ldp	x19, x20, [sp, #16]
    d198:	a9425bf5 	ldp	x21, x22, [sp, #32]
    d19c:	a8d37bfd 	ldp	x29, x30, [sp], #304
    d1a0:	d65f03c0 	ret

000000000000d1a4 <vsnprintf>:
vsnprintf():
    d1a4:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    d1a8:	9100c3e4 	add	x4, sp, #0x30
    d1ac:	910003fd 	mov	x29, sp
    d1b0:	a90153f3 	stp	x19, x20, [sp, #16]
    d1b4:	aa0003f3 	mov	x19, x0
    d1b8:	aa0103f4 	mov	x20, x1
    d1bc:	aa0403e0 	mov	x0, x4
    d1c0:	aa0303e1 	mov	x1, x3
    d1c4:	f90013f5 	str	x21, [sp, #32]
    d1c8:	aa0203f5 	mov	x21, x2
    d1cc:	d2800402 	mov	x2, #0x20                  	// #32
    d1d0:	97ffcb8c 	bl	0 <memcpy>
    d1d4:	aa1503e2 	mov	x2, x21
    d1d8:	aa0003e3 	mov	x3, x0
    d1dc:	aa1403e1 	mov	x1, x20
    d1e0:	aa1303e0 	mov	x0, x19
    d1e4:	52800004 	mov	w4, #0x0                   	// #0
    d1e8:	97ffcd30 	bl	6a8 <__vsnprintf>
    d1ec:	a94153f3 	ldp	x19, x20, [sp, #16]
    d1f0:	f94013f5 	ldr	x21, [sp, #32]
    d1f4:	a8c57bfd 	ldp	x29, x30, [sp], #80
    d1f8:	d65f03c0 	ret

000000000000d1fc <memmove>:
memmove():
    d1fc:	eb01001f 	cmp	x0, x1
    d200:	54000289 	b.ls	d250 <memmove+0x54>  // b.plast
    d204:	8b020023 	add	x3, x1, x2
    d208:	eb00007f 	cmp	x3, x0
    d20c:	54000229 	b.ls	d250 <memmove+0x54>  // b.plast
    d210:	8b020004 	add	x4, x0, x2
    d214:	aa2203e2 	mvn	x2, x2
    d218:	d2800001 	mov	x1, #0x0                   	// #0
    d21c:	d1000421 	sub	x1, x1, #0x1
    d220:	eb01005f 	cmp	x2, x1
    d224:	54000041 	b.ne	d22c <memmove+0x30>  // b.any
    d228:	d65f03c0 	ret
    d22c:	38616865 	ldrb	w5, [x3, x1]
    d230:	38216885 	strb	w5, [x4, x1]
    d234:	17fffffa 	b	d21c <memmove+0x20>
    d238:	38636824 	ldrb	w4, [x1, x3]
    d23c:	38236804 	strb	w4, [x0, x3]
    d240:	91000463 	add	x3, x3, #0x1
    d244:	eb03005f 	cmp	x2, x3
    d248:	54ffff81 	b.ne	d238 <memmove+0x3c>  // b.any
    d24c:	17fffff7 	b	d228 <memmove+0x2c>
    d250:	d2800003 	mov	x3, #0x0                   	// #0
    d254:	17fffffc 	b	d244 <memmove+0x48>

000000000000d258 <memset>:
memset():
    d258:	d2800003 	mov	x3, #0x0                   	// #0
    d25c:	eb03005f 	cmp	x2, x3
    d260:	54000041 	b.ne	d268 <memset+0x10>  // b.any
    d264:	d65f03c0 	ret
    d268:	38236801 	strb	w1, [x0, x3]
    d26c:	91000463 	add	x3, x3, #0x1
    d270:	17fffffb 	b	d25c <memset+0x4>

000000000000d274 <strcmp>:
strcmp():
    d274:	d2800002 	mov	x2, #0x0                   	// #0
    d278:	38626803 	ldrb	w3, [x0, x2]
    d27c:	38626824 	ldrb	w4, [x1, x2]
    d280:	34000083 	cbz	w3, d290 <strcmp+0x1c>
    d284:	91000442 	add	x2, x2, #0x1
    d288:	6b04007f 	cmp	w3, w4
    d28c:	54ffff60 	b.eq	d278 <strcmp+0x4>  // b.none
    d290:	4b040060 	sub	w0, w3, w4
    d294:	d65f03c0 	ret

000000000000d298 <strlcpy>:
strlcpy():
    d298:	aa0103e3 	mov	x3, x1
    d29c:	b4000142 	cbz	x2, d2c4 <strlcpy+0x2c>
    d2a0:	f1000442 	subs	x2, x2, #0x1
    d2a4:	540000e0 	b.eq	d2c0 <strlcpy+0x28>  // b.none
    d2a8:	38401464 	ldrb	w4, [x3], #1
    d2ac:	38001404 	strb	w4, [x0], #1
    d2b0:	35ffff84 	cbnz	w4, d2a0 <strlcpy+0x8>
    d2b4:	cb010060 	sub	x0, x3, x1
    d2b8:	d1000400 	sub	x0, x0, #0x1
    d2bc:	d65f03c0 	ret
    d2c0:	3900001f 	strb	wzr, [x0]
    d2c4:	38401460 	ldrb	w0, [x3], #1
    d2c8:	35ffffe0 	cbnz	w0, d2c4 <strlcpy+0x2c>
    d2cc:	17fffffa 	b	d2b4 <strlcpy+0x1c>

000000000000d2d0 <mempool_alloc_pool>:
mempool_alloc_pool():
    d2d0:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    d2d4:	910003fd 	mov	x29, sp
    d2d8:	f90013f5 	str	x21, [sp, #32]
    d2dc:	aa0003f5 	mov	x21, x0
    d2e0:	d2800020 	mov	x0, #0x1                   	// #1
    d2e4:	a90153f3 	stp	x19, x20, [sp, #16]
    d2e8:	aa0103f3 	mov	x19, x1
    d2ec:	d2800301 	mov	x1, #0x18                  	// #24
    d2f0:	97fffe79 	bl	ccd4 <calloc>
    d2f4:	f2400abf 	tst	x21, #0x7
    d2f8:	54000140 	b.eq	d320 <mempool_alloc_pool+0x50>  // b.none
    d2fc:	f0000043 	adrp	x3, 18000 <__func__.0+0x172>
    d300:	f0000041 	adrp	x1, 18000 <__func__.0+0x172>
    d304:	f0000040 	adrp	x0, 18000 <__func__.0+0x172>
    d308:	9124f863 	add	x3, x3, #0x93e
    d30c:	9122d421 	add	x1, x1, #0x8b5
    d310:	91234000 	add	x0, x0, #0x8d0
    d314:	52800fa2 	mov	w2, #0x7d                  	// #125
    d318:	97ffe67b 	bl	6d04 <_assert_log>
    d31c:	97ffe68b 	bl	6d48 <_assert_break>
    d320:	aa0003f4 	mov	x20, x0
    d324:	b4000300 	cbz	x0, d384 <mempool_alloc_pool+0xb4>
    d328:	a9005413 	stp	x19, x21, [x0]
    d32c:	97fffe91 	bl	cd70 <raw_malloc_get_ctx_size>
    d330:	f9400681 	ldr	x1, [x20, #8]
    d334:	8b010273 	add	x19, x19, x1
    d338:	cb000273 	sub	x19, x19, x0
    d33c:	927cee73 	and	x19, x19, #0xfffffffffffffff0
    d340:	eb13003f 	cmp	x1, x19
    d344:	54000143 	b.cc	d36c <mempool_alloc_pool+0x9c>  // b.lo, b.ul, b.last
    d348:	f0000043 	adrp	x3, 18000 <__func__.0+0x172>
    d34c:	9124f863 	add	x3, x3, #0x93e
    d350:	f0000041 	adrp	x1, 18000 <__func__.0+0x172>
    d354:	f0000040 	adrp	x0, 18000 <__func__.0+0x172>
    d358:	91004c63 	add	x3, x3, #0x13
    d35c:	9122d421 	add	x1, x1, #0x8b5
    d360:	9123dc00 	add	x0, x0, #0x8f7
    d364:	52800aa2 	mov	w2, #0x55                  	// #85
    d368:	17ffffec 	b	d318 <mempool_alloc_pool+0x48>
    d36c:	f9000a93 	str	x19, [x20, #16]
    d370:	aa1303e0 	mov	x0, x19
    d374:	97fffe81 	bl	cd78 <raw_malloc_init_ctx>
    d378:	a9408281 	ldp	x1, x0, [x20, #8]
    d37c:	cb010262 	sub	x2, x19, x1
    d380:	97fffe85 	bl	cd94 <raw_malloc_add_pool>
    d384:	aa1403e0 	mov	x0, x20
    d388:	a94153f3 	ldp	x19, x20, [sp, #16]
    d38c:	f94013f5 	ldr	x21, [sp, #32]
    d390:	a8c37bfd 	ldp	x29, x30, [sp], #48
    d394:	d65f03c0 	ret

000000000000d398 <mempool_alloc>:
mempool_alloc():
    d398:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    d39c:	aa0103e2 	mov	x2, x1
    d3a0:	910003fd 	mov	x29, sp
    d3a4:	f9400803 	ldr	x3, [x0, #16]
    d3a8:	d2800000 	mov	x0, #0x0                   	// #0
    d3ac:	a90153f3 	stp	x19, x20, [sp, #16]
    d3b0:	aa0103f4 	mov	x20, x1
    d3b4:	d2800001 	mov	x1, #0x0                   	// #0
    d3b8:	97fffddf 	bl	cb34 <raw_malloc>
    d3bc:	aa0003f3 	mov	x19, x0
    d3c0:	b5000160 	cbnz	x0, d3ec <mempool_alloc+0x54>
    d3c4:	f0000040 	adrp	x0, 18000 <__func__.0+0x172>
    d3c8:	9124f800 	add	x0, x0, #0x93e
    d3cc:	f0000044 	adrp	x4, 18000 <__func__.0+0x172>
    d3d0:	aa1403e5 	mov	x5, x20
    d3d4:	91241884 	add	x4, x4, #0x906
    d3d8:	91007800 	add	x0, x0, #0x1e
    d3dc:	52800023 	mov	w3, #0x1                   	// #1
    d3e0:	52800022 	mov	w2, #0x1                   	// #1
    d3e4:	52801441 	mov	w1, #0xa2                  	// #162
    d3e8:	97ffcc6a 	bl	590 <trace_printf>
    d3ec:	aa1303e0 	mov	x0, x19
    d3f0:	a94153f3 	ldp	x19, x20, [sp, #16]
    d3f4:	a8c27bfd 	ldp	x29, x30, [sp], #32
    d3f8:	d65f03c0 	ret

000000000000d3fc <mempool_calloc>:
mempool_calloc():
    d3fc:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    d400:	9bc27c23 	umulh	x3, x1, x2
    d404:	910003fd 	mov	x29, sp
    d408:	a90153f3 	stp	x19, x20, [sp, #16]
    d40c:	9b027c34 	mul	x20, x1, x2
    d410:	b5000123 	cbnz	x3, d434 <mempool_calloc+0x38>
    d414:	aa1403e1 	mov	x1, x20
    d418:	97ffffe0 	bl	d398 <mempool_alloc>
    d41c:	aa0003f3 	mov	x19, x0
    d420:	b50000e0 	cbnz	x0, d43c <mempool_calloc+0x40>
    d424:	aa1303e0 	mov	x0, x19
    d428:	a94153f3 	ldp	x19, x20, [sp, #16]
    d42c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    d430:	d65f03c0 	ret
    d434:	d2800013 	mov	x19, #0x0                   	// #0
    d438:	17fffffb 	b	d424 <mempool_calloc+0x28>
    d43c:	aa1403e2 	mov	x2, x20
    d440:	52800001 	mov	w1, #0x0                   	// #0
    d444:	97ffff85 	bl	d258 <memset>
    d448:	17fffff7 	b	d424 <mempool_calloc+0x28>

000000000000d44c <mempool_free>:
mempool_free():
    d44c:	aa0003e3 	mov	x3, x0
    d450:	aa0103e0 	mov	x0, x1
    d454:	b4000081 	cbz	x1, d464 <mempool_free+0x18>
    d458:	f9400861 	ldr	x1, [x3, #16]
    d45c:	52800002 	mov	w2, #0x0                   	// #0
    d460:	17fffdb9 	b	cb44 <raw_free>
    d464:	d65f03c0 	ret

000000000000d468 <consttime_memcmp>:
consttime_memcmp():
    d468:	d10043ff 	sub	sp, sp, #0x10
    d46c:	52802003 	mov	w3, #0x100                 	// #256
    d470:	d2800005 	mov	x5, #0x0                   	// #0
    d474:	52800006 	mov	w6, #0x0                   	// #0
    d478:	b9000fe3 	str	w3, [sp, #12]
    d47c:	52800003 	mov	w3, #0x0                   	// #0
    d480:	eb0200bf 	cmp	x5, x2
    d484:	540000a1 	b.ne	d498 <consttime_memcmp+0x30>  // b.any
    d488:	53087c63 	lsr	w3, w3, #8
    d48c:	4b462060 	sub	w0, w3, w6, lsr #8
    d490:	910043ff 	add	sp, sp, #0x10
    d494:	d65f03c0 	ret
    d498:	38656808 	ldrb	w8, [x0, x5]
    d49c:	38656824 	ldrb	w4, [x1, x5]
    d4a0:	910004a5 	add	x5, x5, #0x1
    d4a4:	b9400fe9 	ldr	w9, [sp, #12]
    d4a8:	4b040107 	sub	w7, w8, w4
    d4ac:	4b080084 	sub	w4, w4, w8
    d4b0:	0a0900e7 	and	w7, w7, w9
    d4b4:	2a0700c6 	orr	w6, w6, w7
    d4b8:	b9400fe7 	ldr	w7, [sp, #12]
    d4bc:	0a070084 	and	w4, w4, w7
    d4c0:	b9400fe7 	ldr	w7, [sp, #12]
    d4c4:	2a040063 	orr	w3, w3, w4
    d4c8:	2a0300c4 	orr	w4, w6, w3
    d4cc:	0a2400e4 	bic	w4, w7, w4
    d4d0:	b9000fe4 	str	w4, [sp, #12]
    d4d4:	17ffffeb 	b	d480 <consttime_memcmp+0x18>

000000000000d4d8 <__tee_alg_get_main_alg>:
__tee_alg_get_main_alg():
    d4d8:	2a0003e1 	mov	w1, w0
    d4dc:	528c0860 	mov	w0, #0x6043                	// #24643
    d4e0:	72ae0000 	movk	w0, #0x7000, lsl #16
    d4e4:	6b00003f 	cmp	w1, w0
    d4e8:	54000760 	b.eq	d5d4 <__tee_alg_get_main_alg+0xfc>  // b.none
    d4ec:	540004c8 	b.hi	d584 <__tee_alg_get_main_alg+0xac>  // b.pmore
    d4f0:	528008a0 	mov	w0, #0x45                  	// #69
    d4f4:	72ac0000 	movk	w0, #0x6000, lsl #16
    d4f8:	6b00003f 	cmp	w1, w0
    d4fc:	54000700 	b.eq	d5dc <__tee_alg_get_main_alg+0x104>  // b.none
    d500:	540001c8 	b.hi	d538 <__tee_alg_get_main_alg+0x60>  // b.pmore
    d504:	52802020 	mov	w0, #0x101                 	// #257
    d508:	72aa0000 	movk	w0, #0x5000, lsl #16
    d50c:	6b00003f 	cmp	w1, w0
    d510:	540006a0 	b.eq	d5e4 <__tee_alg_get_main_alg+0x10c>  // b.none
    d514:	52802042 	mov	w2, #0x102                 	// #258
    d518:	52801880 	mov	w0, #0xc4                  	// #196
    d51c:	72aa0002 	movk	w2, #0x5000, lsl #16
    d520:	6b02003f 	cmp	w1, w2
    d524:	54000080 	b.eq	d534 <__tee_alg_get_main_alg+0x5c>  // b.none
    d528:	12001c20 	and	w0, w1, #0xff
    d52c:	14000002 	b	d534 <__tee_alg_get_main_alg+0x5c>
    d530:	528008e0 	mov	w0, #0x47                  	// #71
    d534:	d65f03c0 	ret
    d538:	52860840 	mov	w0, #0x3042                	// #12354
    d53c:	72ae0000 	movk	w0, #0x7000, lsl #16
    d540:	6b00003f 	cmp	w1, w0
    d544:	540001c0 	b.eq	d57c <__tee_alg_get_main_alg+0xa4>  // b.none
    d548:	54000108 	b.hi	d568 <__tee_alg_get_main_alg+0x90>  // b.pmore
    d54c:	51400800 	sub	w0, w0, #0x2, lsl #12
    d550:	6b00003f 	cmp	w1, w0
    d554:	52800820 	mov	w0, #0x41                  	// #65
    d558:	54fffee0 	b.eq	d534 <__tee_alg_get_main_alg+0x5c>  // b.none
    d55c:	52840842 	mov	w2, #0x2042                	// #8258
    d560:	72ae0002 	movk	w2, #0x7000, lsl #16
    d564:	17ffffef 	b	d520 <__tee_alg_get_main_alg+0x48>
    d568:	52880840 	mov	w0, #0x4042                	// #16450
    d56c:	12137822 	and	w2, w1, #0xffffefff
    d570:	72ae0000 	movk	w0, #0x7000, lsl #16
    d574:	6b00005f 	cmp	w2, w0
    d578:	54fffd81 	b.ne	d528 <__tee_alg_get_main_alg+0x50>  // b.any
    d57c:	52800820 	mov	w0, #0x41                  	// #65
    d580:	17ffffed 	b	d534 <__tee_alg_get_main_alg+0x5c>
    d584:	529ff780 	mov	w0, #0xffbc                	// #65468
    d588:	72afffe0 	movk	w0, #0x7fff, lsl #16
    d58c:	0b000020 	add	w0, w1, w0
    d590:	71000c1f 	cmp	w0, #0x3
    d594:	54fffca8 	b.hi	d528 <__tee_alg_get_main_alg+0x50>  // b.pmore
    d598:	529ff760 	mov	w0, #0xffbb                	// #65467
    d59c:	72afffe0 	movk	w0, #0x7fff, lsl #16
    d5a0:	0b000021 	add	w1, w1, w0
    d5a4:	7100083f 	cmp	w1, #0x2
    d5a8:	54000228 	b.hi	d5ec <__tee_alg_get_main_alg+0x114>  // b.pmore
    d5ac:	d0000040 	adrp	x0, 17000 <__text_end+0x3c08>
    d5b0:	91251000 	add	x0, x0, #0x944
    d5b4:	38614800 	ldrb	w0, [x0, w1, uxtw]
    d5b8:	10000061 	adr	x1, d5c4 <__tee_alg_get_main_alg+0xec>
    d5bc:	8b208820 	add	x0, x1, w0, sxtb #2
    d5c0:	d61f0000 	br	x0
    d5c4:	52801800 	mov	w0, #0xc0                  	// #192
    d5c8:	17ffffdb 	b	d534 <__tee_alg_get_main_alg+0x5c>
    d5cc:	52800920 	mov	w0, #0x49                  	// #73
    d5d0:	17ffffd9 	b	d534 <__tee_alg_get_main_alg+0x5c>
    d5d4:	52800860 	mov	w0, #0x43                  	// #67
    d5d8:	17ffffd7 	b	d534 <__tee_alg_get_main_alg+0x5c>
    d5dc:	528008c0 	mov	w0, #0x46                  	// #70
    d5e0:	17ffffd5 	b	d534 <__tee_alg_get_main_alg+0x5c>
    d5e4:	52801860 	mov	w0, #0xc3                  	// #195
    d5e8:	17ffffd3 	b	d534 <__tee_alg_get_main_alg+0x5c>
    d5ec:	52800880 	mov	w0, #0x44                  	// #68
    d5f0:	17ffffd1 	b	d534 <__tee_alg_get_main_alg+0x5c>

000000000000d5f4 <tee_buffer_update>:
tee_buffer_update():
    d5f4:	a9b87bfd 	stp	x29, x30, [sp, #-128]!
    d5f8:	910003fd 	mov	x29, sp
    d5fc:	a90153f3 	stp	x19, x20, [sp, #16]
    d600:	aa0003f3 	mov	x19, x0
    d604:	90000060 	adrp	x0, 19000 <_DYNAMIC>
    d608:	a9025bf5 	stp	x21, x22, [sp, #32]
    d60c:	aa0303f4 	mov	x20, x3
    d610:	f9409800 	ldr	x0, [x0, #304]
    d614:	a90363f7 	stp	x23, x24, [sp, #48]
    d618:	aa0103f7 	mov	x23, x1
    d61c:	a9046bf9 	stp	x25, x26, [sp, #64]
    d620:	a90573fb 	stp	x27, x28, [sp, #80]
    d624:	f90037e5 	str	x5, [sp, #104]
    d628:	f94000b8 	ldr	x24, [x5]
    d62c:	f9400001 	ldr	x1, [x0]
    d630:	f9003fe1 	str	x1, [sp, #120]
    d634:	d2800001 	mov	x1, #0x0                   	// #0
    d638:	b5000202 	cbnz	x2, d678 <tee_buffer_update+0x84>
    d63c:	b5000183 	cbnz	x3, d66c <tee_buffer_update+0x78>
    d640:	d280001a 	mov	x26, #0x0                   	// #0
    d644:	f94037e0 	ldr	x0, [sp, #104]
    d648:	f900001a 	str	x26, [x0]
    d64c:	90000060 	adrp	x0, 19000 <_DYNAMIC>
    d650:	f9409800 	ldr	x0, [x0, #304]
    d654:	f9403fe2 	ldr	x2, [sp, #120]
    d658:	f9400001 	ldr	x1, [x0]
    d65c:	eb010042 	subs	x2, x2, x1
    d660:	d2800001 	mov	x1, #0x0                   	// #0
    d664:	54000e00 	b.eq	d824 <tee_buffer_update+0x230>  // b.none
    d668:	97ffcc04 	bl	678 <__stack_chk_fail>
    d66c:	52800000 	mov	w0, #0x0                   	// #0
    d670:	97ffdfb7 	bl	554c <TEE_Panic>
    d674:	17fffff3 	b	d640 <tee_buffer_update+0x4c>
    d678:	39410260 	ldrb	w0, [x19, #64]
    d67c:	aa0203fb 	mov	x27, x2
    d680:	aa0403fc 	mov	x28, x4
    d684:	f9402675 	ldr	x21, [x19, #72]
    d688:	34000860 	cbz	w0, d794 <tee_buffer_update+0x1a0>
    d68c:	d37ffab6 	lsl	x22, x21, #1
    d690:	d2800039 	mov	x25, #0x1                   	// #1
    d694:	f9402a60 	ldr	x0, [x19, #80]
    d698:	b4000260 	cbz	x0, d6e4 <tee_buffer_update+0xf0>
    d69c:	eb15001f 	cmp	x0, x21
    d6a0:	54000802 	b.cs	d7a0 <tee_buffer_update+0x1ac>  // b.hs, b.nlast
    d6a4:	cb0002b5 	sub	x21, x21, x0
    d6a8:	f9401e63 	ldr	x3, [x19, #56]
    d6ac:	eb1402bf 	cmp	x21, x20
    d6b0:	9a9492b5 	csel	x21, x21, x20, ls  // ls = plast
    d6b4:	aa1b03e1 	mov	x1, x27
    d6b8:	aa1503e2 	mov	x2, x21
    d6bc:	8b000060 	add	x0, x3, x0
    d6c0:	97ffca50 	bl	0 <memcpy>
    d6c4:	a9448262 	ldp	x2, x0, [x19, #72]
    d6c8:	8b0002a0 	add	x0, x21, x0
    d6cc:	f9002a60 	str	x0, [x19, #80]
    d6d0:	9ac20801 	udiv	x1, x0, x2
    d6d4:	9b028020 	msub	x0, x1, x2, x0
    d6d8:	b5fffb40 	cbnz	x0, d640 <tee_buffer_update+0x4c>
    d6dc:	8b15037b 	add	x27, x27, x21
    d6e0:	cb150294 	sub	x20, x20, x21
    d6e4:	f9402a7a 	ldr	x26, [x19, #80]
    d6e8:	8b1902d9 	add	x25, x22, x25
    d6ec:	b400061a 	cbz	x26, d7ac <tee_buffer_update+0x1b8>
    d6f0:	8b140355 	add	x21, x26, x20
    d6f4:	eb1902bf 	cmp	x21, x25
    d6f8:	54000583 	b.cc	d7a8 <tee_buffer_update+0x1b4>  // b.lo, b.ul, b.last
    d6fc:	f9402660 	ldr	x0, [x19, #72]
    d700:	cb1602b5 	sub	x21, x21, x22
    d704:	9101c3e4 	add	x4, sp, #0x70
    d708:	aa1c03e3 	mov	x3, x28
    d70c:	d1000401 	sub	x1, x0, #0x1
    d710:	cb0003e0 	neg	x0, x0
    d714:	8b0102b5 	add	x21, x21, x1
    d718:	f9003bf8 	str	x24, [sp, #112]
    d71c:	8a0002b5 	and	x21, x21, x0
    d720:	b9405a60 	ldr	w0, [x19, #88]
    d724:	f9401e61 	ldr	x1, [x19, #56]
    d728:	eb1a02bf 	cmp	x21, x26
    d72c:	9a9a92b5 	csel	x21, x21, x26, ls  // ls = plast
    d730:	aa1503e2 	mov	x2, x21
    d734:	d63f02e0 	blr	x23
    d738:	34000040 	cbz	w0, d740 <tee_buffer_update+0x14c>
    d73c:	97ffdf84 	bl	554c <TEE_Panic>
    d740:	f9402a60 	ldr	x0, [x19, #80]
    d744:	f9403bfa 	ldr	x26, [sp, #112]
    d748:	cb150000 	sub	x0, x0, x21
    d74c:	f9002a60 	str	x0, [x19, #80]
    d750:	8b1a039c 	add	x28, x28, x26
    d754:	cb1a0318 	sub	x24, x24, x26
    d758:	b40002a0 	cbz	x0, d7ac <tee_buffer_update+0x1b8>
    d75c:	f9401e60 	ldr	x0, [x19, #56]
    d760:	cb1502c2 	sub	x2, x22, x21
    d764:	8b150001 	add	x1, x0, x21
    d768:	97ffca26 	bl	0 <memcpy>
    d76c:	f9401e63 	ldr	x3, [x19, #56]
    d770:	aa1403e2 	mov	x2, x20
    d774:	f9402a60 	ldr	x0, [x19, #80]
    d778:	aa1b03e1 	mov	x1, x27
    d77c:	8b000060 	add	x0, x3, x0
    d780:	97ffca20 	bl	0 <memcpy>
    d784:	f9402a60 	ldr	x0, [x19, #80]
    d788:	8b140000 	add	x0, x0, x20
    d78c:	f9002a60 	str	x0, [x19, #80]
    d790:	17ffffad 	b	d644 <tee_buffer_update+0x50>
    d794:	aa1503f6 	mov	x22, x21
    d798:	d2800019 	mov	x25, #0x0                   	// #0
    d79c:	17ffffbe 	b	d694 <tee_buffer_update+0xa0>
    d7a0:	cb0002d5 	sub	x21, x22, x0
    d7a4:	17ffffc1 	b	d6a8 <tee_buffer_update+0xb4>
    d7a8:	d280001a 	mov	x26, #0x0                   	// #0
    d7ac:	eb19029f 	cmp	x20, x25
    d7b0:	54fffde3 	b.cc	d76c <tee_buffer_update+0x178>  // b.lo, b.ul, b.last
    d7b4:	f9402660 	ldr	x0, [x19, #72]
    d7b8:	cb160281 	sub	x1, x20, x22
    d7bc:	b9400263 	ldr	w3, [x19]
    d7c0:	cb0003e2 	neg	x2, x0
    d7c4:	d1000404 	sub	x4, x0, #0x1
    d7c8:	cb160015 	sub	x21, x0, x22
    d7cc:	52806200 	mov	w0, #0x310                 	// #784
    d7d0:	72a20000 	movk	w0, #0x1000, lsl #16
    d7d4:	6b00007f 	cmp	w3, w0
    d7d8:	b9405a60 	ldr	w0, [x19, #88]
    d7dc:	8b040021 	add	x1, x1, x4
    d7e0:	8b1402b5 	add	x21, x21, x20
    d7e4:	8a020021 	and	x1, x1, x2
    d7e8:	8a0202b5 	and	x21, x21, x2
    d7ec:	9101c3e4 	add	x4, sp, #0x70
    d7f0:	9a8112b5 	csel	x21, x21, x1, ne  // ne = any
    d7f4:	aa1c03e3 	mov	x3, x28
    d7f8:	aa1503e2 	mov	x2, x21
    d7fc:	aa1b03e1 	mov	x1, x27
    d800:	f9003bf8 	str	x24, [sp, #112]
    d804:	d63f02e0 	blr	x23
    d808:	34000040 	cbz	w0, d810 <tee_buffer_update+0x21c>
    d80c:	97ffdf50 	bl	554c <TEE_Panic>
    d810:	f9403be0 	ldr	x0, [sp, #112]
    d814:	8b15037b 	add	x27, x27, x21
    d818:	cb150294 	sub	x20, x20, x21
    d81c:	8b00035a 	add	x26, x26, x0
    d820:	17ffffd3 	b	d76c <tee_buffer_update+0x178>
    d824:	52800000 	mov	w0, #0x0                   	// #0
    d828:	a94153f3 	ldp	x19, x20, [sp, #16]
    d82c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    d830:	a94363f7 	ldp	x23, x24, [sp, #48]
    d834:	a9446bf9 	ldp	x25, x26, [sp, #64]
    d838:	a94573fb 	ldp	x27, x28, [sp, #80]
    d83c:	a8c87bfd 	ldp	x29, x30, [sp], #128
    d840:	d65f03c0 	ret

000000000000d844 <__tee_alg_get_class>:
__tee_alg_get_class():
    d844:	528008c1 	mov	w1, #0x46                  	// #70
    d848:	72b00001 	movk	w1, #0x8000, lsl #16
    d84c:	6b01001f 	cmp	w0, w1
    d850:	54000340 	b.eq	d8b8 <__tee_alg_get_class+0x74>  // b.none
    d854:	528008a1 	mov	w1, #0x45                  	// #69
    d858:	72ac0001 	movk	w1, #0x6000, lsl #16
    d85c:	6b01001f 	cmp	w0, w1
    d860:	54000300 	b.eq	d8c0 <__tee_alg_get_class+0x7c>  // b.none
    d864:	52810601 	mov	w1, #0x830                 	// #2096
    d868:	72be0001 	movk	w1, #0xf000, lsl #16
    d86c:	6b01001f 	cmp	w0, w1
    d870:	54000340 	b.eq	d8d8 <__tee_alg_get_class+0x94>  // b.none
    d874:	51087421 	sub	w1, w1, #0x21d
    d878:	6b01001f 	cmp	w0, w1
    d87c:	54000260 	b.eq	d8c8 <__tee_alg_get_class+0x84>  // b.none
    d880:	5107fc21 	sub	w1, w1, #0x1ff
    d884:	6b01001f 	cmp	w0, w1
    d888:	54000240 	b.eq	d8d0 <__tee_alg_get_class+0x8c>  // b.none
    d88c:	52832601 	mov	w1, #0x1930                	// #6448
    d890:	72be0221 	movk	w1, #0xf011, lsl #16
    d894:	6b01001f 	cmp	w0, w1
    d898:	54000200 	b.eq	d8d8 <__tee_alg_get_class+0x94>  // b.none
    d89c:	52804602 	mov	w2, #0x230                 	// #560
    d8a0:	531c7c01 	lsr	w1, w0, #28
    d8a4:	72be0222 	movk	w2, #0xf011, lsl #16
    d8a8:	6b02001f 	cmp	w0, w2
    d8ac:	528000c0 	mov	w0, #0x6                   	// #6
    d8b0:	1a801020 	csel	w0, w1, w0, ne  // ne = any
    d8b4:	d65f03c0 	ret
    d8b8:	528000c0 	mov	w0, #0x6                   	// #6
    d8bc:	17fffffe 	b	d8b4 <__tee_alg_get_class+0x70>
    d8c0:	52800100 	mov	w0, #0x8                   	// #8
    d8c4:	17fffffc 	b	d8b4 <__tee_alg_get_class+0x70>
    d8c8:	52800060 	mov	w0, #0x3                   	// #3
    d8cc:	17fffffa 	b	d8b4 <__tee_alg_get_class+0x70>
    d8d0:	52800020 	mov	w0, #0x1                   	// #1
    d8d4:	17fffff8 	b	d8b4 <__tee_alg_get_class+0x70>
    d8d8:	528000e0 	mov	w0, #0x7                   	// #7
    d8dc:	17fffff6 	b	d8b4 <__tee_alg_get_class+0x70>

000000000000d8e0 <ae_update_helper>:
ae_update_helper():
    d8e0:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    d8e4:	90000065 	adrp	x5, 19000 <_DYNAMIC>
    d8e8:	910003fd 	mov	x29, sp
    d8ec:	a90153f3 	stp	x19, x20, [sp, #16]
    d8f0:	aa0403f3 	mov	x19, x4
    d8f4:	aa0503f4 	mov	x20, x5
    d8f8:	f94098a4 	ldr	x4, [x5, #304]
    d8fc:	f9400086 	ldr	x6, [x4]
    d900:	f90017e6 	str	x6, [sp, #40]
    d904:	d2800006 	mov	x6, #0x0                   	// #0
    d908:	aa020024 	orr	x4, x1, x2
    d90c:	b5000084 	cbnz	x4, d91c <ae_update_helper+0x3c>
    d910:	f900027f 	str	xzr, [x19]
    d914:	52800000 	mov	w0, #0x0                   	// #0
    d918:	1400000e 	b	d950 <ae_update_helper+0x70>
    d91c:	f9402404 	ldr	x4, [x0, #72]
    d920:	f100049f 	cmp	x4, #0x1
    d924:	54000249 	b.ls	d96c <ae_update_helper+0x8c>  // b.plast
    d928:	f9402805 	ldr	x5, [x0, #80]
    d92c:	cb0403e6 	neg	x6, x4
    d930:	8b050045 	add	x5, x2, x5
    d934:	8a0600a5 	and	x5, x5, x6
    d938:	f9400266 	ldr	x6, [x19]
    d93c:	f90013e6 	str	x6, [sp, #32]
    d940:	eb0500df 	cmp	x6, x5
    d944:	54000182 	b.cs	d974 <ae_update_helper+0x94>  // b.hs, b.nlast
    d948:	129ffde0 	mov	w0, #0xffff0010            	// #-65520
    d94c:	f9000265 	str	x5, [x19]
    d950:	f9409a94 	ldr	x20, [x20, #304]
    d954:	f94017e1 	ldr	x1, [sp, #40]
    d958:	f9400282 	ldr	x2, [x20]
    d95c:	eb020021 	subs	x1, x1, x2
    d960:	d2800002 	mov	x2, #0x0                   	// #0
    d964:	540002e0 	b.eq	d9c0 <ae_update_helper+0xe0>  // b.none
    d968:	97ffcb44 	bl	678 <__stack_chk_fail>
    d96c:	aa0203e5 	mov	x5, x2
    d970:	17fffff2 	b	d938 <ae_update_helper+0x58>
    d974:	f100049f 	cmp	x4, #0x1
    d978:	54000129 	b.ls	d99c <ae_update_helper+0xbc>  // b.plast
    d97c:	aa0303e4 	mov	x4, x3
    d980:	aa0203e3 	mov	x3, x2
    d984:	aa0103e2 	mov	x2, x1
    d988:	910083e5 	add	x5, sp, #0x20
    d98c:	f940d681 	ldr	x1, [x20, #424]
    d990:	97ffff19 	bl	d5f4 <tee_buffer_update>
    d994:	35fffde0 	cbnz	w0, d950 <ae_update_helper+0x70>
    d998:	14000007 	b	d9b4 <ae_update_helper+0xd4>
    d99c:	b40000a2 	cbz	x2, d9b0 <ae_update_helper+0xd0>
    d9a0:	b9405800 	ldr	w0, [x0, #88]
    d9a4:	910083e4 	add	x4, sp, #0x20
    d9a8:	97ffd20d 	bl	21dc <_utee_authenc_update_payload>
    d9ac:	17fffffa 	b	d994 <ae_update_helper+0xb4>
    d9b0:	f90013ff 	str	xzr, [sp, #32]
    d9b4:	f94013e0 	ldr	x0, [sp, #32]
    d9b8:	f9000260 	str	x0, [x19]
    d9bc:	17ffffd6 	b	d914 <ae_update_helper+0x34>
    d9c0:	a94153f3 	ldp	x19, x20, [sp, #16]
    d9c4:	a8c37bfd 	ldp	x29, x30, [sp], #48
    d9c8:	d65f03c0 	ret

000000000000d9cc <reset_operation_state>:
reset_operation_state():
    d9cc:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    d9d0:	910003fd 	mov	x29, sp
    d9d4:	f9000bf3 	str	x19, [sp, #16]
    d9d8:	aa0003f3 	mov	x19, x0
    d9dc:	b900301f 	str	wzr, [x0, #48]
    d9e0:	b9400400 	ldr	w0, [x0, #4]
    d9e4:	7100141f 	cmp	w0, #0x5
    d9e8:	540001a1 	b.ne	da1c <reset_operation_state+0x50>  // b.any
    d9ec:	b9405a60 	ldr	w0, [x19, #88]
    d9f0:	d2800002 	mov	x2, #0x0                   	// #0
    d9f4:	d2800001 	mov	x1, #0x0                   	// #0
    d9f8:	97ffd1c3 	bl	2104 <_utee_hash_init>
    d9fc:	34000040 	cbz	w0, da04 <reset_operation_state+0x38>
    da00:	97ffded3 	bl	554c <TEE_Panic>
    da04:	b9401e60 	ldr	w0, [x19, #28]
    da08:	320f0000 	orr	w0, w0, #0x20000
    da0c:	b9001e60 	str	w0, [x19, #28]
    da10:	f9400bf3 	ldr	x19, [sp, #16]
    da14:	a8c27bfd 	ldp	x29, x30, [sp], #32
    da18:	d65f03c0 	ret
    da1c:	b9401e60 	ldr	w0, [x19, #28]
    da20:	120e7800 	and	w0, w0, #0xfffdffff
    da24:	17fffffa 	b	da0c <reset_operation_state+0x40>

000000000000da28 <set_operation_key2>:
set_operation_key2():
    da28:	a9b67bfd 	stp	x29, x30, [sp, #-160]!
    da2c:	90000063 	adrp	x3, 19000 <_DYNAMIC>
    da30:	910003fd 	mov	x29, sp
    da34:	f9409863 	ldr	x3, [x3, #304]
    da38:	a90153f3 	stp	x19, x20, [sp, #16]
    da3c:	aa0003f4 	mov	x20, x0
    da40:	a9025bf5 	stp	x21, x22, [sp, #32]
    da44:	f9001bf7 	str	x23, [sp, #48]
    da48:	f9400060 	ldr	x0, [x3]
    da4c:	f9004fe0 	str	x0, [sp, #152]
    da50:	d2800000 	mov	x0, #0x0                   	// #0
    da54:	b5000154 	cbnz	x20, da7c <set_operation_key2+0x54>
    da58:	129fff33 	mov	w19, #0xffff0006            	// #-65530
    da5c:	7100027f 	cmp	w19, #0x0
    da60:	12be0200 	mov	w0, #0xfefffff             	// #267386879
    da64:	0b000260 	add	w0, w19, w0
    da68:	7a431800 	ccmp	w0, #0x3, #0x0, ne  // ne = any
    da6c:	54000309 	b.ls	dacc <set_operation_key2+0xa4>  // b.plast
    da70:	2a1303e0 	mov	w0, w19
    da74:	97ffdeb6 	bl	554c <TEE_Panic>
    da78:	14000015 	b	dacc <set_operation_key2+0xa4>
    da7c:	f100003f 	cmp	x1, #0x0
    da80:	aa0103f6 	mov	x22, x1
    da84:	1a9f17e1 	cset	w1, eq  // eq = none
    da88:	f100005f 	cmp	x2, #0x0
    da8c:	aa0203f5 	mov	x21, x2
    da90:	1a9f17e0 	cset	w0, eq  // eq = none
    da94:	aa0202c2 	orr	x2, x22, x2
    da98:	b50002a2 	cbnz	x2, daec <set_operation_key2+0xc4>
    da9c:	f9401280 	ldr	x0, [x20, #32]
    daa0:	940011f7 	bl	1227c <TEE_ResetTransientObject>
    daa4:	f9401680 	ldr	x0, [x20, #40]
    daa8:	940011f5 	bl	1227c <TEE_ResetTransientObject>
    daac:	b9403293 	ldr	w19, [x20, #48]
    dab0:	b9401e80 	ldr	w0, [x20, #28]
    dab4:	120d7800 	and	w0, w0, #0xfffbffff
    dab8:	b9001e80 	str	w0, [x20, #28]
    dabc:	34000093 	cbz	w19, dacc <set_operation_key2+0xa4>
    dac0:	52800013 	mov	w19, #0x0                   	// #0
    dac4:	aa1403e0 	mov	x0, x20
    dac8:	97ffffc1 	bl	d9cc <reset_operation_state>
    dacc:	90000063 	adrp	x3, 19000 <_DYNAMIC>
    dad0:	f9409863 	ldr	x3, [x3, #304]
    dad4:	f9404fe0 	ldr	x0, [sp, #152]
    dad8:	f9400061 	ldr	x1, [x3]
    dadc:	eb010000 	subs	x0, x0, x1
    dae0:	d2800001 	mov	x1, #0x0                   	// #0
    dae4:	54000880 	b.eq	dbf4 <set_operation_key2+0x1cc>  // b.none
    dae8:	97ffcae4 	bl	678 <__stack_chk_fail>
    daec:	7100003f 	cmp	w1, #0x0
    daf0:	7a400800 	ccmp	w0, #0x0, #0x0, eq  // eq = none
    daf4:	54fffb21 	b.ne	da58 <set_operation_key2+0x30>  // b.any
    daf8:	b9400680 	ldr	w0, [x20, #4]
    dafc:	7100141f 	cmp	w0, #0x5
    db00:	54fffac0 	b.eq	da58 <set_operation_key2+0x30>  // b.none
    db04:	b9401e80 	ldr	w0, [x20, #28]
    db08:	369ffa80 	tbz	w0, #19, da58 <set_operation_key2+0x30>
    db0c:	910123e1 	add	x1, sp, #0x48
    db10:	aa1603e0 	mov	x0, x22
    db14:	94001031 	bl	11bd8 <TEE_GetObjectInfo1>
    db18:	2a0003f3 	mov	w19, w0
    db1c:	35fffa00 	cbnz	w0, da5c <set_operation_key2+0x34>
    db20:	b9401a80 	ldr	w0, [x20, #24]
    db24:	b94057e1 	ldr	w1, [sp, #84]
    db28:	6a21001f 	bics	wzr, w0, w1
    db2c:	54fff961 	b.ne	da58 <set_operation_key2+0x30>  // b.any
    db30:	9101c3e1 	add	x1, sp, #0x70
    db34:	aa1503e0 	mov	x0, x21
    db38:	94001028 	bl	11bd8 <TEE_GetObjectInfo1>
    db3c:	2a0003f3 	mov	w19, w0
    db40:	34000100 	cbz	w0, db60 <set_operation_key2+0x138>
    db44:	52800020 	mov	w0, #0x1                   	// #1
    db48:	72be0200 	movk	w0, #0xf010, lsl #16
    db4c:	6b00027f 	cmp	w19, w0
    db50:	54fff861 	b.ne	da5c <set_operation_key2+0x34>  // b.any
    db54:	52800053 	mov	w19, #0x2                   	// #2
    db58:	72be0213 	movk	w19, #0xf010, lsl #16
    db5c:	17ffffc0 	b	da5c <set_operation_key2+0x34>
    db60:	b9401a80 	ldr	w0, [x20, #24]
    db64:	b9407fe1 	ldr	w1, [sp, #124]
    db68:	6a21001f 	bics	wzr, w0, w1
    db6c:	54fff761 	b.ne	da58 <set_operation_key2+0x30>  // b.any
    db70:	b9404ff7 	ldr	w23, [sp, #76]
    db74:	b94077e0 	ldr	w0, [sp, #116]
    db78:	6b0002ff 	cmp	w23, w0
    db7c:	54fff6e1 	b.ne	da58 <set_operation_key2+0x30>  // b.any
    db80:	b9401280 	ldr	w0, [x20, #16]
    db84:	6b0002ff 	cmp	w23, w0
    db88:	54fff688 	b.hi	da58 <set_operation_key2+0x30>  // b.pmore
    db8c:	f9401280 	ldr	x0, [x20, #32]
    db90:	940011bb 	bl	1227c <TEE_ResetTransientObject>
    db94:	f9401680 	ldr	x0, [x20, #40]
    db98:	940011b9 	bl	1227c <TEE_ResetTransientObject>
    db9c:	b9401e80 	ldr	w0, [x20, #28]
    dba0:	aa1603e1 	mov	x1, x22
    dba4:	120d7800 	and	w0, w0, #0xfffbffff
    dba8:	b9001e80 	str	w0, [x20, #28]
    dbac:	f9401280 	ldr	x0, [x20, #32]
    dbb0:	940012ac 	bl	12660 <TEE_CopyObjectAttributes1>
    dbb4:	2a0003f3 	mov	w19, w0
    dbb8:	35fff520 	cbnz	w0, da5c <set_operation_key2+0x34>
    dbbc:	f9401680 	ldr	x0, [x20, #40]
    dbc0:	aa1503e1 	mov	x1, x21
    dbc4:	940012a7 	bl	12660 <TEE_CopyObjectAttributes1>
    dbc8:	2a0003f3 	mov	w19, w0
    dbcc:	35fffbc0 	cbnz	w0, db44 <set_operation_key2+0x11c>
    dbd0:	b9401e80 	ldr	w0, [x20, #28]
    dbd4:	b9001697 	str	w23, [x20, #20]
    dbd8:	320e0000 	orr	w0, w0, #0x40000
    dbdc:	b9001e80 	str	w0, [x20, #28]
    dbe0:	b9403280 	ldr	w0, [x20, #48]
    dbe4:	34fff3c0 	cbz	w0, da5c <set_operation_key2+0x34>
    dbe8:	aa1403e0 	mov	x0, x20
    dbec:	97ffff78 	bl	d9cc <reset_operation_state>
    dbf0:	17ffff9b 	b	da5c <set_operation_key2+0x34>
    dbf4:	2a1303e0 	mov	w0, w19
    dbf8:	a94153f3 	ldp	x19, x20, [sp, #16]
    dbfc:	a9425bf5 	ldp	x21, x22, [sp, #32]
    dc00:	f9401bf7 	ldr	x23, [sp, #48]
    dc04:	a8ca7bfd 	ldp	x29, x30, [sp], #160
    dc08:	d65f03c0 	ret

000000000000dc0c <TEE_FreeOperation>:
TEE_FreeOperation():
    dc0c:	b40001e0 	cbz	x0, dc48 <TEE_FreeOperation+0x3c>
    dc10:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    dc14:	910003fd 	mov	x29, sp
    dc18:	f9000bf3 	str	x19, [sp, #16]
    dc1c:	aa0003f3 	mov	x19, x0
    dc20:	b9405800 	ldr	w0, [x0, #88]
    dc24:	97ffd135 	bl	20f8 <_utee_cryp_state_free>
    dc28:	34000040 	cbz	w0, dc30 <TEE_FreeOperation+0x24>
    dc2c:	97ffde48 	bl	554c <TEE_Panic>
    dc30:	f9401e60 	ldr	x0, [x19, #56]
    dc34:	97ffd588 	bl	3254 <TEE_Free>
    dc38:	aa1303e0 	mov	x0, x19
    dc3c:	f9400bf3 	ldr	x19, [sp, #16]
    dc40:	a8c27bfd 	ldp	x29, x30, [sp], #32
    dc44:	17ffd584 	b	3254 <TEE_Free>
    dc48:	d65f03c0 	ret

000000000000dc4c <TEE_AllocateOperation>:
TEE_AllocateOperation():
    dc4c:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
    dc50:	910003fd 	mov	x29, sp
    dc54:	a90153f3 	stp	x19, x20, [sp, #16]
    dc58:	2a0103f3 	mov	w19, w1
    dc5c:	a9025bf5 	stp	x21, x22, [sp, #32]
    dc60:	a90363f7 	stp	x23, x24, [sp, #48]
    dc64:	a9046bf9 	stp	x25, x26, [sp, #64]
    dc68:	2a0303f9 	mov	w25, w3
    dc6c:	a90573fb 	stp	x27, x28, [sp, #80]
    dc70:	2a0203fb 	mov	w27, w2
    dc74:	f90037e0 	str	x0, [sp, #104]
    dc78:	b5000040 	cbnz	x0, dc80 <TEE_AllocateOperation+0x34>
    dc7c:	97ffde34 	bl	554c <TEE_Panic>
    dc80:	52808200 	mov	w0, #0x410                 	// #1040
    dc84:	72a20000 	movk	w0, #0x1000, lsl #16
    dc88:	6b00027f 	cmp	w19, w0
    dc8c:	528008a0 	mov	w0, #0x45                  	// #69
    dc90:	72ac0000 	movk	w0, #0x6000, lsl #16
    dc94:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
    dc98:	540006e0 	b.eq	dd74 <TEE_AllocateOperation+0x128>  // b.none
    dc9c:	52808280 	mov	w0, #0x414                 	// #1044
    dca0:	72be0000 	movk	w0, #0xf000, lsl #16
    dca4:	6b00027f 	cmp	w19, w0
    dca8:	1a9f17f7 	cset	w23, eq  // eq = none
    dcac:	530d32f7 	lsl	w23, w23, #19
    dcb0:	52882620 	mov	w0, #0x4131                	// #16689
    dcb4:	72ae0000 	movk	w0, #0x7000, lsl #16
    dcb8:	6b00027f 	cmp	w19, w0
    dcbc:	54002580 	b.eq	e16c <TEE_AllocateOperation+0x520>  // b.none
    dcc0:	54001008 	b.hi	dec0 <TEE_AllocateOperation+0x274>  // b.pmore
    dcc4:	51400800 	sub	w0, w0, #0x2, lsl #12
    dcc8:	6b00027f 	cmp	w19, w0
    dccc:	540023c0 	b.eq	e144 <TEE_AllocateOperation+0x4f8>  // b.none
    dcd0:	54000ce8 	b.hi	de6c <TEE_AllocateOperation+0x220>  // b.pmore
    dcd4:	52820840 	mov	w0, #0x1042                	// #4162
    dcd8:	72ae0000 	movk	w0, #0x7000, lsl #16
    dcdc:	6b00027f 	cmp	w19, w0
    dce0:	540004e8 	b.hi	dd7c <TEE_AllocateOperation+0x130>  // b.pmore
    dce4:	51000800 	sub	w0, w0, #0x2
    dce8:	6b00027f 	cmp	w19, w0
    dcec:	54002468 	b.hi	e178 <TEE_AllocateOperation+0x52c>  // b.pmore
    dcf0:	528008a0 	mov	w0, #0x45                  	// #69
    dcf4:	72ac0000 	movk	w0, #0x6000, lsl #16
    dcf8:	6b00027f 	cmp	w19, w0
    dcfc:	54002440 	b.eq	e184 <TEE_AllocateOperation+0x538>  // b.none
    dd00:	52810200 	mov	w0, #0x810                 	// #2064
    dd04:	72a80000 	movk	w0, #0x4000, lsl #16
    dd08:	6b00027f 	cmp	w19, w0
    dd0c:	54003b60 	b.eq	e478 <TEE_AllocateOperation+0x82c>  // b.none
    dd10:	54002ec8 	b.hi	e2e8 <TEE_AllocateOperation+0x69c>  // b.pmore
    dd14:	52806200 	mov	w0, #0x310                 	// #784
    dd18:	72a20000 	movk	w0, #0x1000, lsl #16
    dd1c:	6b00027f 	cmp	w19, w0
    dd20:	54003a80 	b.eq	e470 <TEE_AllocateOperation+0x824>  // b.none
    dd24:	540027c8 	b.hi	e21c <TEE_AllocateOperation+0x5d0>  // b.pmore
    dd28:	5107f000 	sub	w0, w0, #0x1fc
    dd2c:	6b00027f 	cmp	w19, w0
    dd30:	540024c8 	b.hi	e1c8 <TEE_AllocateOperation+0x57c>  // b.pmore
    dd34:	51000800 	sub	w0, w0, #0x2
    dd38:	6b00027f 	cmp	w19, w0
    dd3c:	54000188 	b.hi	dd6c <TEE_AllocateOperation+0x120>  // b.pmore
    dd40:	5103f800 	sub	w0, w0, #0xfe
    dd44:	6b00027f 	cmp	w19, w0
    dd48:	540023c8 	b.hi	e1c0 <TEE_AllocateOperation+0x574>  // b.pmore
    dd4c:	51000800 	sub	w0, w0, #0x2
    dd50:	6b00027f 	cmp	w19, w0
    dd54:	540000c8 	b.hi	dd6c <TEE_AllocateOperation+0x120>  // b.pmore
    dd58:	529ffe00 	mov	w0, #0xfff0                	// #65520
    dd5c:	72bdffe0 	movk	w0, #0xefff, lsl #16
    dd60:	0b000260 	add	w0, w19, w0
    dd64:	7100041f 	cmp	w0, #0x1
    dd68:	54001f88 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    dd6c:	52800014 	mov	w20, #0x0                   	// #0
    dd70:	1400011e 	b	e1e8 <TEE_AllocateOperation+0x59c>
    dd74:	52a00117 	mov	w23, #0x80000               	// #524288
    dd78:	17ffffce 	b	dcb0 <TEE_AllocateOperation+0x64>
    dd7c:	529bf7e0 	mov	w0, #0xdfbf                	// #57279
    dd80:	72b1ffe0 	movk	w0, #0x8fff, lsl #16
    dd84:	0b000260 	add	w0, w19, w0
    dd88:	7100041f 	cmp	w0, #0x1
    dd8c:	54005649 	b.ls	e854 <TEE_AllocateOperation+0xc08>  // b.plast
    dd90:	528a0800 	mov	w0, #0x5040                	// #20544
    dd94:	72ae0000 	movk	w0, #0x7000, lsl #16
    dd98:	6b00027f 	cmp	w19, w0
    dd9c:	54000588 	b.hi	de4c <TEE_AllocateOperation+0x200>  // b.pmore
    dda0:	51204000 	sub	w0, w0, #0x810
    dda4:	6b00027f 	cmp	w19, w0
    dda8:	54000520 	b.eq	de4c <TEE_AllocateOperation+0x200>  // b.none
    ddac:	54001d68 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    ddb0:	511fb800 	sub	w0, w0, #0x7ee
    ddb4:	6b00027f 	cmp	w19, w0
    ddb8:	54001d08 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    ddbc:	51000800 	sub	w0, w0, #0x2
    ddc0:	6b00027f 	cmp	w19, w0
    ddc4:	54000448 	b.hi	de4c <TEE_AllocateOperation+0x200>  // b.pmore
    ddc8:	51204000 	sub	w0, w0, #0x810
    ddcc:	6b00027f 	cmp	w19, w0
    ddd0:	540003e0 	b.eq	de4c <TEE_AllocateOperation+0x200>  // b.none
    ddd4:	54001c28 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    ddd8:	511bfc00 	sub	w0, w0, #0x6ff
    dddc:	6b00027f 	cmp	w19, w0
    dde0:	54000360 	b.eq	de4c <TEE_AllocateOperation+0x200>  // b.none
    dde4:	5103bc00 	sub	w0, w0, #0xef
    dde8:	6b00027f 	cmp	w19, w0
    ddec:	54001b68 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    ddf0:	51000800 	sub	w0, w0, #0x2
    ddf4:	6b00027f 	cmp	w19, w0
    ddf8:	540002a8 	b.hi	de4c <TEE_AllocateOperation+0x200>  // b.pmore
    ddfc:	51204000 	sub	w0, w0, #0x810
    de00:	6b00027f 	cmp	w19, w0
    de04:	54000240 	b.eq	de4c <TEE_AllocateOperation+0x200>  // b.none
    de08:	129ffeb4 	mov	w20, #0xffff000a            	// #-65526
    de0c:	54000908 	b.hi	df2c <TEE_AllocateOperation+0x2e0>  // b.pmore
    de10:	511bfc00 	sub	w0, w0, #0x6ff
    de14:	6b00027f 	cmp	w19, w0
    de18:	540001a0 	b.eq	de4c <TEE_AllocateOperation+0x200>  // b.none
    de1c:	5103bc00 	sub	w0, w0, #0xef
    de20:	6b00027f 	cmp	w19, w0
    de24:	54000848 	b.hi	df2c <TEE_AllocateOperation+0x2e0>  // b.pmore
    de28:	51000800 	sub	w0, w0, #0x2
    de2c:	6b00027f 	cmp	w19, w0
    de30:	540000e8 	b.hi	de4c <TEE_AllocateOperation+0x200>  // b.pmore
    de34:	513ff800 	sub	w0, w0, #0xffe
    de38:	6b00027f 	cmp	w19, w0
    de3c:	54002c88 	b.hi	e3cc <TEE_AllocateOperation+0x780>  // b.pmore
    de40:	51000800 	sub	w0, w0, #0x2
    de44:	6b00027f 	cmp	w19, w0
    de48:	54000729 	b.ls	df2c <TEE_AllocateOperation+0x2e0>  // b.plast
    de4c:	71000b7f 	cmp	w27, #0x2
    de50:	54003a20 	b.eq	e594 <TEE_AllocateOperation+0x948>  // b.none
    de54:	71000f7f 	cmp	w27, #0x3
    de58:	54001801 	b.ne	e158 <TEE_AllocateOperation+0x50c>  // b.any
    de5c:	52800014 	mov	w20, #0x0                   	// #0
    de60:	5280001c 	mov	w28, #0x0                   	// #0
    de64:	52800416 	mov	w22, #0x20                  	// #32
    de68:	140000d4 	b	e1b8 <TEE_AllocateOperation+0x56c>
    de6c:	52862620 	mov	w0, #0x3131                	// #12593
    de70:	72ae0000 	movk	w0, #0x7000, lsl #16
    de74:	6b00027f 	cmp	w19, w0
    de78:	54001740 	b.eq	e160 <TEE_AllocateOperation+0x514>  // b.none
    de7c:	54000128 	b.hi	dea0 <TEE_AllocateOperation+0x254>  // b.pmore
    de80:	5299f7e0 	mov	w0, #0xcfbf                	// #53183
    de84:	72b1ffe0 	movk	w0, #0x8fff, lsl #16
    de88:	0b000260 	add	w0, w19, w0
    de8c:	7100041f 	cmp	w0, #0x1
    de90:	54fff808 	b.hi	dd90 <TEE_AllocateOperation+0x144>  // b.pmore
    de94:	7104033f 	cmp	w25, #0x100
    de98:	54fff7c0 	b.eq	dd90 <TEE_AllocateOperation+0x144>  // b.none
    de9c:	140000af 	b	e158 <TEE_AllocateOperation+0x50c>
    dea0:	5297f7e0 	mov	w0, #0xbfbf                	// #49087
    dea4:	72b1ffe0 	movk	w0, #0x8fff, lsl #16
    dea8:	0b000260 	add	w0, w19, w0
    deac:	7100041f 	cmp	w0, #0x1
    deb0:	54fff708 	b.hi	dd90 <TEE_AllocateOperation+0x144>  // b.pmore
    deb4:	7106033f 	cmp	w25, #0x180
    deb8:	129ffeb4 	mov	w20, #0xffff000a            	// #-65526
    debc:	14000268 	b	e85c <TEE_AllocateOperation+0xc10>
    dec0:	528008c0 	mov	w0, #0x46                  	// #70
    dec4:	72b00000 	movk	w0, #0x8000, lsl #16
    dec8:	6b00027f 	cmp	w19, w0
    decc:	54004dc0 	b.eq	e884 <TEE_AllocateOperation+0xc38>  // b.none
    ded0:	54000b48 	b.hi	e038 <TEE_AllocateOperation+0x3ec>  // b.pmore
    ded4:	51001000 	sub	w0, w0, #0x4
    ded8:	6b00027f 	cmp	w19, w0
    dedc:	54001600 	b.eq	e19c <TEE_AllocateOperation+0x550>  // b.none
    dee0:	540008e8 	b.hi	dffc <TEE_AllocateOperation+0x3b0>  // b.pmore
    dee4:	528c0860 	mov	w0, #0x6043                	// #24643
    dee8:	72ae0000 	movk	w0, #0x7000, lsl #16
    deec:	6b00027f 	cmp	w19, w0
    def0:	54004c40 	b.eq	e878 <TEE_AllocateOperation+0xc2c>  // b.none
    def4:	540002c8 	b.hi	df4c <TEE_AllocateOperation+0x300>  // b.pmore
    def8:	5295f7e0 	mov	w0, #0xafbf                	// #44991
    defc:	72b1ffe0 	movk	w0, #0x8fff, lsl #16
    df00:	0b000260 	add	w0, w19, w0
    df04:	7100041f 	cmp	w0, #0x1
    df08:	54001449 	b.ls	e190 <TEE_AllocateOperation+0x544>  // b.plast
    df0c:	528b0600 	mov	w0, #0x5830                	// #22576
    df10:	72ae0000 	movk	w0, #0x7000, lsl #16
    df14:	6b00027f 	cmp	w19, w0
    df18:	54fff9a0 	b.eq	de4c <TEE_AllocateOperation+0x200>  // b.none
    df1c:	511fb800 	sub	w0, w0, #0x7ee
    df20:	129ffeb4 	mov	w20, #0xffff000a            	// #-65526
    df24:	6b00027f 	cmp	w19, w0
    df28:	54fff349 	b.ls	dd90 <TEE_AllocateOperation+0x144>  // b.plast
    df2c:	2a1403e0 	mov	w0, w20
    df30:	a94153f3 	ldp	x19, x20, [sp, #16]
    df34:	a9425bf5 	ldp	x21, x22, [sp, #32]
    df38:	a94363f7 	ldp	x23, x24, [sp, #48]
    df3c:	a9446bf9 	ldp	x25, x26, [sp, #64]
    df40:	a94573fb 	ldp	x27, x28, [sp, #80]
    df44:	a8c77bfd 	ldp	x29, x30, [sp], #112
    df48:	d65f03c0 	ret
    df4c:	528c08a0 	mov	w0, #0x6045                	// #24645
    df50:	72ae0000 	movk	w0, #0x7000, lsl #16
    df54:	6b00027f 	cmp	w19, w0
    df58:	540049a0 	b.eq	e88c <TEE_AllocateOperation+0xc40>  // b.none
    df5c:	52800640 	mov	w0, #0x32                  	// #50
    df60:	72b00000 	movk	w0, #0x8000, lsl #16
    df64:	6b00027f 	cmp	w19, w0
    df68:	540011e0 	b.eq	e1a4 <TEE_AllocateOperation+0x558>  // b.none
    df6c:	54000f68 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    df70:	528d2600 	mov	w0, #0x6930                	// #26928
    df74:	72ae0c20 	movk	w0, #0x7061, lsl #16
    df78:	6b00027f 	cmp	w19, w0
    df7c:	54fff680 	b.eq	de4c <TEE_AllocateOperation+0x200>  // b.none
    df80:	54000ec8 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    df84:	51440400 	sub	w0, w0, #0x101, lsl #12
    df88:	6b00027f 	cmp	w19, w0
    df8c:	54fff600 	b.eq	de4c <TEE_AllocateOperation+0x200>  // b.none
    df90:	54000e48 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    df94:	51440400 	sub	w0, w0, #0x101, lsl #12
    df98:	6b00027f 	cmp	w19, w0
    df9c:	54fff580 	b.eq	de4c <TEE_AllocateOperation+0x200>  // b.none
    dfa0:	54000dc8 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    dfa4:	51440400 	sub	w0, w0, #0x101, lsl #12
    dfa8:	6b00027f 	cmp	w19, w0
    dfac:	54fff500 	b.eq	de4c <TEE_AllocateOperation+0x200>  // b.none
    dfb0:	54000d48 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    dfb4:	51440400 	sub	w0, w0, #0x101, lsl #12
    dfb8:	6b00027f 	cmp	w19, w0
    dfbc:	54fff480 	b.eq	de4c <TEE_AllocateOperation+0x200>  // b.none
    dfc0:	54000cc8 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    dfc4:	528d0600 	mov	w0, #0x6830                	// #26672
    dfc8:	72ae0000 	movk	w0, #0x7000, lsl #16
    dfcc:	6b00027f 	cmp	w19, w0
    dfd0:	54fff3e0 	b.eq	de4c <TEE_AllocateOperation+0x200>  // b.none
    dfd4:	54000c28 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    dfd8:	511fac00 	sub	w0, w0, #0x7eb
    dfdc:	6b00027f 	cmp	w19, w0
    dfe0:	54fff360 	b.eq	de4c <TEE_AllocateOperation+0x200>  // b.none
    dfe4:	54000ba8 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    dfe8:	51000800 	sub	w0, w0, #0x2
    dfec:	6b00027f 	cmp	w19, w0
    dff0:	54fff2e0 	b.eq	de4c <TEE_AllocateOperation+0x200>  // b.none
    dff4:	54000b28 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    dff8:	17ffffc5 	b	df0c <TEE_AllocateOperation+0x2c0>
    dffc:	52800880 	mov	w0, #0x44                  	// #68
    e000:	72b00000 	movk	w0, #0x8000, lsl #16
    e004:	6b00027f 	cmp	w19, w0
    e008:	540042e0 	b.eq	e864 <TEE_AllocateOperation+0xc18>  // b.none
    e00c:	52800880 	mov	w0, #0x44                  	// #68
    e010:	72b00000 	movk	w0, #0x8000, lsl #16
    e014:	6b00027f 	cmp	w19, w0
    e018:	54000a08 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    e01c:	51000800 	sub	w0, w0, #0x2
    e020:	6b00027f 	cmp	w19, w0
    e024:	54000c00 	b.eq	e1a4 <TEE_AllocateOperation+0x558>  // b.none
    e028:	11000400 	add	w0, w0, #0x1
    e02c:	6b00027f 	cmp	w19, w0
    e030:	54000940 	b.eq	e158 <TEE_AllocateOperation+0x50c>  // b.none
    e034:	17ffffca 	b	df5c <TEE_AllocateOperation+0x310>
    e038:	52860840 	mov	w0, #0x3042                	// #12354
    e03c:	72b00000 	movk	w0, #0x8000, lsl #16
    e040:	6b00027f 	cmp	w19, w0
    e044:	54004140 	b.eq	e86c <TEE_AllocateOperation+0xc20>  // b.none
    e048:	54000548 	b.hi	e0f0 <TEE_AllocateOperation+0x4a4>  // b.pmore
    e04c:	51400800 	sub	w0, w0, #0x2, lsl #12
    e050:	6b00027f 	cmp	w19, w0
    e054:	54003f20 	b.eq	e838 <TEE_AllocateOperation+0xbec>  // b.none
    e058:	11400400 	add	w0, w0, #0x1, lsl #12
    e05c:	6b00027f 	cmp	w19, w0
    e060:	54003f40 	b.eq	e848 <TEE_AllocateOperation+0xbfc>  // b.none
    e064:	52881820 	mov	w0, #0x40c1                	// #16577
    e068:	72b00000 	movk	w0, #0x8000, lsl #16
    e06c:	6b00027f 	cmp	w19, w0
    e070:	54000748 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    e074:	51000800 	sub	w0, w0, #0x2
    e078:	6b00027f 	cmp	w19, w0
    e07c:	54000948 	b.hi	e1a4 <TEE_AllocateOperation+0x558>  // b.pmore
    e080:	5101f400 	sub	w0, w0, #0x7d
    e084:	6b00027f 	cmp	w19, w0
    e088:	540008e0 	b.eq	e1a4 <TEE_AllocateOperation+0x558>  // b.none
    e08c:	513e0400 	sub	w0, w0, #0xf81
    e090:	6b00027f 	cmp	w19, w0
    e094:	54000628 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    e098:	51000800 	sub	w0, w0, #0x2
    e09c:	6b00027f 	cmp	w19, w0
    e0a0:	54000828 	b.hi	e1a4 <TEE_AllocateOperation+0x558>  // b.pmore
    e0a4:	5101f400 	sub	w0, w0, #0x7d
    e0a8:	6b00027f 	cmp	w19, w0
    e0ac:	540007c0 	b.eq	e1a4 <TEE_AllocateOperation+0x558>  // b.none
    e0b0:	513e0000 	sub	w0, w0, #0xf80
    e0b4:	6b00027f 	cmp	w19, w0
    e0b8:	54000508 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    e0bc:	51000c00 	sub	w0, w0, #0x3
    e0c0:	6b00027f 	cmp	w19, w0
    e0c4:	54000708 	b.hi	e1a4 <TEE_AllocateOperation+0x558>  // b.pmore
    e0c8:	5101f400 	sub	w0, w0, #0x7d
    e0cc:	6b00027f 	cmp	w19, w0
    e0d0:	540006a0 	b.eq	e1a4 <TEE_AllocateOperation+0x558>  // b.none
    e0d4:	54000428 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    e0d8:	51400400 	sub	w0, w0, #0x1, lsl #12
    e0dc:	6b00027f 	cmp	w19, w0
    e0e0:	54000620 	b.eq	e1a4 <TEE_AllocateOperation+0x558>  // b.none
    e0e4:	1101f800 	add	w0, w0, #0x7e
    e0e8:	6b00027f 	cmp	w19, w0
    e0ec:	14000027 	b	e188 <TEE_AllocateOperation+0x53c>
    e0f0:	52880840 	mov	w0, #0x4042                	// #16450
    e0f4:	72b00000 	movk	w0, #0x8000, lsl #16
    e0f8:	6b00027f 	cmp	w19, w0
    e0fc:	54003cc0 	b.eq	e894 <TEE_AllocateOperation+0xc48>  // b.none
    e100:	11400400 	add	w0, w0, #0x1, lsl #12
    e104:	6b00027f 	cmp	w19, w0
    e108:	54000440 	b.eq	e190 <TEE_AllocateOperation+0x544>  // b.none
    e10c:	52808280 	mov	w0, #0x414                 	// #1044
    e110:	72be0000 	movk	w0, #0xf000, lsl #16
    e114:	6b00027f 	cmp	w19, w0
    e118:	54001ac0 	b.eq	e470 <TEE_AllocateOperation+0x824>  // b.none
    e11c:	54001848 	b.hi	e424 <TEE_AllocateOperation+0x7d8>  // b.pmore
    e120:	528008c0 	mov	w0, #0x46                  	// #70
    e124:	72b00000 	movk	w0, #0x8000, lsl #16
    e128:	6b00027f 	cmp	w19, w0
    e12c:	54001380 	b.eq	e39c <TEE_AllocateOperation+0x750>  // b.none
    e130:	54001588 	b.hi	e3e0 <TEE_AllocateOperation+0x794>  // b.pmore
    e134:	51000800 	sub	w0, w0, #0x2
    e138:	6b00027f 	cmp	w19, w0
    e13c:	54fff681 	b.ne	e00c <TEE_AllocateOperation+0x3c0>  // b.any
    e140:	14000019 	b	e1a4 <TEE_AllocateOperation+0x558>
    e144:	51080320 	sub	w0, w25, #0x200
    e148:	7108001f 	cmp	w0, #0x200
    e14c:	54000068 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    e150:	f240173f 	tst	x25, #0x3f
    e154:	54ffe7c0 	b.eq	de4c <TEE_AllocateOperation+0x200>  // b.none
    e158:	129ffeb4 	mov	w20, #0xffff000a            	// #-65526
    e15c:	17ffff74 	b	df2c <TEE_AllocateOperation+0x2e0>
    e160:	7120033f 	cmp	w25, #0x800
    e164:	54ffffa1 	b.ne	e158 <TEE_AllocateOperation+0x50c>  // b.any
    e168:	17ffff39 	b	de4c <TEE_AllocateOperation+0x200>
    e16c:	12157b20 	and	w0, w25, #0xfffffbff
    e170:	7120001f 	cmp	w0, #0x800
    e174:	17fffffc 	b	e164 <TEE_AllocateOperation+0x518>
    e178:	7103033f 	cmp	w25, #0xc0
    e17c:	54ffdc20 	b.eq	dd00 <TEE_AllocateOperation+0xb4>  // b.none
    e180:	17fffff6 	b	e158 <TEE_AllocateOperation+0x50c>
    e184:	7108033f 	cmp	w25, #0x200
    e188:	54fffe81 	b.ne	e158 <TEE_AllocateOperation+0x50c>  // b.any
    e18c:	14000006 	b	e1a4 <TEE_AllocateOperation+0x558>
    e190:	7108273f 	cmp	w25, #0x209
    e194:	54fffbc0 	b.eq	e10c <TEE_AllocateOperation+0x4c0>  // b.none
    e198:	17fffff0 	b	e158 <TEE_AllocateOperation+0x50c>
    e19c:	7108273f 	cmp	w25, #0x209
    e1a0:	54fffdc8 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    e1a4:	71001b7f 	cmp	w27, #0x6
    e1a8:	54fffd81 	b.ne	e158 <TEE_AllocateOperation+0x50c>  // b.any
    e1ac:	52800014 	mov	w20, #0x0                   	// #0
    e1b0:	5280003c 	mov	w28, #0x1                   	// #1
    e1b4:	52800816 	mov	w22, #0x40                  	// #64
    e1b8:	d280003a 	mov	x26, #0x1                   	// #1
    e1bc:	140000bb 	b	e4a8 <TEE_AllocateOperation+0x85c>
    e1c0:	529fde00 	mov	w0, #0xfef0                	// #65264
    e1c4:	17fffee6 	b	dd5c <TEE_AllocateOperation+0x110>
    e1c8:	52804200 	mov	w0, #0x210                 	// #528
    e1cc:	52800014 	mov	w20, #0x0                   	// #0
    e1d0:	72a20000 	movk	w0, #0x1000, lsl #16
    e1d4:	6b00027f 	cmp	w19, w0
    e1d8:	54001520 	b.eq	e47c <TEE_AllocateOperation+0x830>  // b.none
    e1dc:	11001000 	add	w0, w0, #0x4
    e1e0:	6b00027f 	cmp	w19, w0
    e1e4:	54fffba1 	b.ne	e158 <TEE_AllocateOperation+0x50c>  // b.any
    e1e8:	2a1303e0 	mov	w0, w19
    e1ec:	97fffcbb 	bl	d4d8 <__tee_alg_get_main_alg>
    e1f0:	121d7800 	and	w0, w0, #0xfffffffb
    e1f4:	d280021a 	mov	x26, #0x10                  	// #16
    e1f8:	7100401f 	cmp	w0, #0x10
    e1fc:	d2800100 	mov	x0, #0x8                   	// #8
    e200:	9a80035a 	csel	x26, x26, x0, eq  // eq = none
    e204:	340014fb 	cbz	w27, e4a0 <TEE_AllocateOperation+0x854>
    e208:	7100077f 	cmp	w27, #0x1
    e20c:	54fffa61 	b.ne	e158 <TEE_AllocateOperation+0x50c>  // b.any
    e210:	5280001c 	mov	w28, #0x0                   	// #0
    e214:	52800096 	mov	w22, #0x4                   	// #4
    e218:	140000a4 	b	e4a8 <TEE_AllocateOperation+0x85c>
    e21c:	52802260 	mov	w0, #0x113                 	// #275
    e220:	72a60000 	movk	w0, #0x3000, lsl #16
    e224:	6b00027f 	cmp	w19, w0
    e228:	540002c0 	b.eq	e280 <TEE_AllocateOperation+0x634>  // b.none
    e22c:	54000368 	b.hi	e298 <TEE_AllocateOperation+0x64c>  // b.pmore
    e230:	52808200 	mov	w0, #0x410                 	// #1040
    e234:	72a20000 	movk	w0, #0x1000, lsl #16
    e238:	6b00027f 	cmp	w19, w0
    e23c:	540011a0 	b.eq	e470 <TEE_AllocateOperation+0x824>  // b.none
    e240:	51000400 	sub	w0, w0, #0x1
    e244:	6b00027f 	cmp	w19, w0
    e248:	54fff889 	b.ls	e158 <TEE_AllocateOperation+0x50c>  // b.plast
    e24c:	52800160 	mov	w0, #0xb                   	// #11
    e250:	72a60000 	movk	w0, #0x3000, lsl #16
    e254:	6b00027f 	cmp	w19, w0
    e258:	540000a8 	b.hi	e26c <TEE_AllocateOperation+0x620>  // b.pmore
    e25c:	52a60000 	mov	w0, #0x30000000            	// #805306368
    e260:	6b00027f 	cmp	w19, w0
    e264:	54fff7a9 	b.ls	e158 <TEE_AllocateOperation+0x50c>  // b.plast
    e268:	14000006 	b	e280 <TEE_AllocateOperation+0x634>
    e26c:	529fde00 	mov	w0, #0xfef0                	// #65264
    e270:	72b9ffe0 	movk	w0, #0xcfff, lsl #16
    e274:	0b000260 	add	w0, w19, w0
    e278:	7100041f 	cmp	w0, #0x1
    e27c:	54fff6e8 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    e280:	7100137f 	cmp	w27, #0x4
    e284:	54fff6a1 	b.ne	e158 <TEE_AllocateOperation+0x50c>  // b.any
    e288:	52800014 	mov	w20, #0x0                   	// #0
    e28c:	5280001c 	mov	w28, #0x0                   	// #0
    e290:	52800116 	mov	w22, #0x8                   	// #8
    e294:	17ffffc9 	b	e1b8 <TEE_AllocateOperation+0x56c>
    e298:	5280c200 	mov	w0, #0x610                 	// #1552
    e29c:	72a60000 	movk	w0, #0x3000, lsl #16
    e2a0:	6b00027f 	cmp	w19, w0
    e2a4:	54fffee0 	b.eq	e280 <TEE_AllocateOperation+0x634>  // b.none
    e2a8:	54000168 	b.hi	e2d4 <TEE_AllocateOperation+0x688>  // b.pmore
    e2ac:	5103fc00 	sub	w0, w0, #0xff
    e2b0:	6b00027f 	cmp	w19, w0
    e2b4:	54000068 	b.hi	e2c0 <TEE_AllocateOperation+0x674>  // b.pmore
    e2b8:	51000800 	sub	w0, w0, #0x2
    e2bc:	17ffffe9 	b	e260 <TEE_AllocateOperation+0x614>
    e2c0:	5280a260 	mov	w0, #0x513                 	// #1299
    e2c4:	72a60000 	movk	w0, #0x3000, lsl #16
    e2c8:	6b00027f 	cmp	w19, w0
    e2cc:	54fffda0 	b.eq	e280 <TEE_AllocateOperation+0x634>  // b.none
    e2d0:	17ffffa2 	b	e158 <TEE_AllocateOperation+0x50c>
    e2d4:	5280e200 	mov	w0, #0x710                 	// #1808
    e2d8:	72a80000 	movk	w0, #0x4000, lsl #16
    e2dc:	6b00027f 	cmp	w19, w0
    e2e0:	54ffd460 	b.eq	dd6c <TEE_AllocateOperation+0x120>  // b.none
    e2e4:	17ffff9d 	b	e158 <TEE_AllocateOperation+0x50c>
    e2e8:	52800600 	mov	w0, #0x30                  	// #48
    e2ec:	72ac0000 	movk	w0, #0x6000, lsl #16
    e2f0:	6b00027f 	cmp	w19, w0
    e2f4:	54000c80 	b.eq	e484 <TEE_AllocateOperation+0x838>  // b.none
    e2f8:	540002a8 	b.hi	e34c <TEE_AllocateOperation+0x700>  // b.pmore
    e2fc:	52800160 	mov	w0, #0xb                   	// #11
    e300:	72aa0000 	movk	w0, #0x5000, lsl #16
    e304:	6b00027f 	cmp	w19, w0
    e308:	54000168 	b.hi	e334 <TEE_AllocateOperation+0x6e8>  // b.pmore
    e30c:	52aa0000 	mov	w0, #0x50000000            	// #1342177280
    e310:	6b00027f 	cmp	w19, w0
    e314:	54fff229 	b.ls	e158 <TEE_AllocateOperation+0x50c>  // b.plast
    e318:	7100177f 	cmp	w27, #0x5
    e31c:	54fff1e1 	b.ne	e158 <TEE_AllocateOperation+0x50c>  // b.any
    e320:	320e02f7 	orr	w23, w23, #0x40000
    e324:	52800014 	mov	w20, #0x0                   	// #0
    e328:	5280001c 	mov	w28, #0x0                   	// #0
    e32c:	52800016 	mov	w22, #0x0                   	// #0
    e330:	17ffffa2 	b	e1b8 <TEE_AllocateOperation+0x56c>
    e334:	529fdfe0 	mov	w0, #0xfeff                	// #65279
    e338:	72b5ffe0 	movk	w0, #0xafff, lsl #16
    e33c:	0b000260 	add	w0, w19, w0
    e340:	7100041f 	cmp	w0, #0x1
    e344:	54fffea9 	b.ls	e318 <TEE_AllocateOperation+0x6cc>  // b.plast
    e348:	17ffff84 	b	e158 <TEE_AllocateOperation+0x50c>
    e34c:	52804600 	mov	w0, #0x230                 	// #560
    e350:	72ac0c20 	movk	w0, #0x6061, lsl #16
    e354:	6b00027f 	cmp	w19, w0
    e358:	54000220 	b.eq	e39c <TEE_AllocateOperation+0x750>  // b.none
    e35c:	54ffed88 	b.hi	e10c <TEE_AllocateOperation+0x4c0>  // b.pmore
    e360:	514c0000 	sub	w0, w0, #0x300, lsl #12
    e364:	6b00027f 	cmp	w19, w0
    e368:	540001a0 	b.eq	e39c <TEE_AllocateOperation+0x750>  // b.none
    e36c:	54000268 	b.hi	e3b8 <TEE_AllocateOperation+0x76c>  // b.pmore
    e370:	51440000 	sub	w0, w0, #0x100, lsl #12
    e374:	6b00027f 	cmp	w19, w0
    e378:	54000120 	b.eq	e39c <TEE_AllocateOperation+0x750>  // b.none
    e37c:	54ffeee8 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    e380:	528008a0 	mov	w0, #0x45                  	// #69
    e384:	72ac0000 	movk	w0, #0x6000, lsl #16
    e388:	6b00027f 	cmp	w19, w0
    e38c:	54fff0c0 	b.eq	e1a4 <TEE_AllocateOperation+0x558>  // b.none
    e390:	1103ac00 	add	w0, w0, #0xeb
    e394:	6b00027f 	cmp	w19, w0
    e398:	54ffee01 	b.ne	e158 <TEE_AllocateOperation+0x50c>  // b.any
    e39c:	3400105b 	cbz	w27, e5a4 <TEE_AllocateOperation+0x958>
    e3a0:	7100077f 	cmp	w27, #0x1
    e3a4:	54ffeda1 	b.ne	e158 <TEE_AllocateOperation+0x50c>  // b.any
    e3a8:	2a1b03fc 	mov	w28, w27
    e3ac:	52800014 	mov	w20, #0x0                   	// #0
    e3b0:	52800096 	mov	w22, #0x4                   	// #4
    e3b4:	17ffff81 	b	e1b8 <TEE_AllocateOperation+0x56c>
    e3b8:	120b7a61 	and	w1, w19, #0xffefffff
    e3bc:	52804600 	mov	w0, #0x230                 	// #560
    e3c0:	72ac0820 	movk	w0, #0x6041, lsl #16
    e3c4:	6b00003f 	cmp	w1, w0
    e3c8:	17fffff4 	b	e398 <TEE_AllocateOperation+0x74c>
    e3cc:	52830600 	mov	w0, #0x1830                	// #6192
    e3d0:	72ae0000 	movk	w0, #0x7000, lsl #16
    e3d4:	6b00027f 	cmp	w19, w0
    e3d8:	54ffdaa1 	b.ne	df2c <TEE_AllocateOperation+0x2e0>  // b.any
    e3dc:	17fffe9c 	b	de4c <TEE_AllocateOperation+0x200>
    e3e0:	528c1820 	mov	w0, #0x60c1                	// #24769
    e3e4:	72b00000 	movk	w0, #0x8000, lsl #16
    e3e8:	6b00027f 	cmp	w19, w0
    e3ec:	54ffeb68 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    e3f0:	51000800 	sub	w0, w0, #0x2
    e3f4:	6b00027f 	cmp	w19, w0
    e3f8:	54ffed68 	b.hi	e1a4 <TEE_AllocateOperation+0x558>  // b.pmore
    e3fc:	513ff800 	sub	w0, w0, #0xffe
    e400:	6b00027f 	cmp	w19, w0
    e404:	54ffeaa8 	b.hi	e158 <TEE_AllocateOperation+0x50c>  // b.pmore
    e408:	51000800 	sub	w0, w0, #0x2
    e40c:	6b00027f 	cmp	w19, w0
    e410:	54ffeca8 	b.hi	e1a4 <TEE_AllocateOperation+0x558>  // b.pmore
    e414:	5101f400 	sub	w0, w0, #0x7d
    e418:	6b00027f 	cmp	w19, w0
    e41c:	54ffe241 	b.ne	e064 <TEE_AllocateOperation+0x418>  // b.any
    e420:	17ffff61 	b	e1a4 <TEE_AllocateOperation+0x558>
    e424:	5280c260 	mov	w0, #0x613                 	// #1555
    e428:	72be0000 	movk	w0, #0xf000, lsl #16
    e42c:	6b00027f 	cmp	w19, w0
    e430:	54fff280 	b.eq	e280 <TEE_AllocateOperation+0x634>  // b.none
    e434:	51000400 	sub	w0, w0, #0x1
    e438:	6b00027f 	cmp	w19, w0
    e43c:	54ffe8e9 	b.ls	e158 <TEE_AllocateOperation+0x50c>  // b.plast
    e440:	52804600 	mov	w0, #0x230                 	// #560
    e444:	72be0220 	movk	w0, #0xf011, lsl #16
    e448:	6b00027f 	cmp	w19, w0
    e44c:	54fffa80 	b.eq	e39c <TEE_AllocateOperation+0x750>  // b.none
    e450:	52832600 	mov	w0, #0x1930                	// #6448
    e454:	72be0220 	movk	w0, #0xf011, lsl #16
    e458:	6b00027f 	cmp	w19, w0
    e45c:	54ffcf80 	b.eq	de4c <TEE_AllocateOperation+0x200>  // b.none
    e460:	52810600 	mov	w0, #0x830                 	// #2096
    e464:	72be0000 	movk	w0, #0xf000, lsl #16
    e468:	6b00027f 	cmp	w19, w0
    e46c:	17ffff3e 	b	e164 <TEE_AllocateOperation+0x518>
    e470:	52800034 	mov	w20, #0x1                   	// #1
    e474:	17ffff5d 	b	e1e8 <TEE_AllocateOperation+0x59c>
    e478:	52800014 	mov	w20, #0x0                   	// #0
    e47c:	d280003a 	mov	x26, #0x1                   	// #1
    e480:	17ffff61 	b	e204 <TEE_AllocateOperation+0x5b8>
    e484:	3400099b 	cbz	w27, e5b4 <TEE_AllocateOperation+0x968>
    e488:	7100077f 	cmp	w27, #0x1
    e48c:	54ffe661 	b.ne	e158 <TEE_AllocateOperation+0x50c>  // b.any
    e490:	2a1b03fc 	mov	w28, w27
    e494:	52800014 	mov	w20, #0x0                   	// #0
    e498:	52800296 	mov	w22, #0x14                  	// #20
    e49c:	17ffff47 	b	e1b8 <TEE_AllocateOperation+0x56c>
    e4a0:	5280001c 	mov	w28, #0x0                   	// #0
    e4a4:	52800056 	mov	w22, #0x2                   	// #2
    e4a8:	52800001 	mov	w1, #0x0                   	// #0
    e4ac:	d2800c00 	mov	x0, #0x60                  	// #96
    e4b0:	97ffd31e 	bl	3128 <TEE_Malloc>
    e4b4:	aa0003f8 	mov	x24, x0
    e4b8:	b4001b80 	cbz	x0, e828 <TEE_AllocateOperation+0xbdc>
    e4bc:	b9000313 	str	w19, [x24]
    e4c0:	2a1303e0 	mov	w0, w19
    e4c4:	97fffce0 	bl	d844 <__tee_alg_get_class>
    e4c8:	2a0003f5 	mov	w21, w0
    e4cc:	52810600 	mov	w0, #0x830                 	// #2096
    e4d0:	528000e1 	mov	w1, #0x7                   	// #7
    e4d4:	72be0000 	movk	w0, #0xf000, lsl #16
    e4d8:	6b00027f 	cmp	w19, w0
    e4dc:	1a8112a1 	csel	w1, w21, w1, ne  // ne = any
    e4e0:	52800160 	mov	w0, #0xb                   	// #11
    e4e4:	2900ef01 	stp	w1, w27, [x24, #4]
    e4e8:	72aa0000 	movk	w0, #0x5000, lsl #16
    e4ec:	6b00027f 	cmp	w19, w0
    e4f0:	54000bc8 	b.hi	e668 <TEE_AllocateOperation+0xa1c>  // b.pmore
    e4f4:	52aa0000 	mov	w0, #0x50000000            	// #1342177280
    e4f8:	6b00027f 	cmp	w19, w0
    e4fc:	54000648 	b.hi	e5c4 <TEE_AllocateOperation+0x978>  // b.pmore
    e500:	52800160 	mov	w0, #0xb                   	// #11
    e504:	72a60000 	movk	w0, #0x3000, lsl #16
    e508:	6b00027f 	cmp	w19, w0
    e50c:	54000788 	b.hi	e5fc <TEE_AllocateOperation+0x9b0>  // b.pmore
    e510:	52a60000 	mov	w0, #0x30000000            	// #805306368
    e514:	6b00027f 	cmp	w19, w0
    e518:	540006c8 	b.hi	e5f0 <TEE_AllocateOperation+0x9a4>  // b.pmore
    e51c:	d2800004 	mov	x4, #0x0                   	// #0
    e520:	7100143f 	cmp	w1, #0x5
    e524:	2901e704 	stp	w4, w25, [x24, #12]
    e528:	9a84135a 	csel	x26, x26, x4, ne  // ne = any
    e52c:	29035f16 	stp	w22, w23, [x24, #24]
    e530:	f100075f 	cmp	x26, #0x1
    e534:	54001068 	b.hi	e740 <TEE_AllocateOperation+0xaf4>  // b.pmore
    e538:	39010314 	strb	w20, [x24, #64]
    e53c:	f900271a 	str	x26, [x24, #72]
    e540:	710016bf 	cmp	w21, #0x5
    e544:	54001101 	b.ne	e764 <TEE_AllocateOperation+0xb18>  // b.any
    e548:	a9420f02 	ldp	x2, x3, [x24, #32]
    e54c:	91016304 	add	x4, x24, #0x58
    e550:	2a1b03e1 	mov	w1, w27
    e554:	2a1303e0 	mov	w0, w19
    e558:	97ffcee2 	bl	20e0 <_utee_cryp_state_alloc>
    e55c:	2a0003f4 	mov	w20, w0
    e560:	34001360 	cbz	w0, e7cc <TEE_AllocateOperation+0xb80>
    e564:	129ffe60 	mov	w0, #0xffff000c            	// #-65524
    e568:	6b00029f 	cmp	w20, w0
    e56c:	129ffea0 	mov	w0, #0xffff000a            	// #-65526
    e570:	7a401284 	ccmp	w20, w0, #0x4, ne  // ne = any
    e574:	54000060 	b.eq	e580 <TEE_AllocateOperation+0x934>  // b.none
    e578:	2a1403e0 	mov	w0, w20
    e57c:	97ffdbf4 	bl	554c <TEE_Panic>
    e580:	b9405b00 	ldr	w0, [x24, #88]
    e584:	34001400 	cbz	w0, e804 <TEE_AllocateOperation+0xbb8>
    e588:	aa1803e0 	mov	x0, x24
    e58c:	97fffda0 	bl	dc0c <TEE_FreeOperation>
    e590:	17fffe67 	b	df2c <TEE_AllocateOperation+0x2e0>
    e594:	52800014 	mov	w20, #0x0                   	// #0
    e598:	5280003c 	mov	w28, #0x1                   	// #1
    e59c:	52800216 	mov	w22, #0x10                  	// #16
    e5a0:	17ffff06 	b	e1b8 <TEE_AllocateOperation+0x56c>
    e5a4:	52800014 	mov	w20, #0x0                   	// #0
    e5a8:	5280001c 	mov	w28, #0x0                   	// #0
    e5ac:	52800056 	mov	w22, #0x2                   	// #2
    e5b0:	17ffff02 	b	e1b8 <TEE_AllocateOperation+0x56c>
    e5b4:	52800014 	mov	w20, #0x0                   	// #0
    e5b8:	5280001c 	mov	w28, #0x0                   	// #0
    e5bc:	52800456 	mov	w22, #0x22                  	// #34
    e5c0:	17fffefe 	b	e1b8 <TEE_AllocateOperation+0x56c>
    e5c4:	529fffc0 	mov	w0, #0xfffe                	// #65534
    e5c8:	72b5ffe0 	movk	w0, #0xafff, lsl #16
    e5cc:	0b000260 	add	w0, w19, w0
    e5d0:	7100241f 	cmp	w0, #0x9
    e5d4:	540009e8 	b.hi	e710 <TEE_AllocateOperation+0xac4>  // b.pmore
    e5d8:	b0000043 	adrp	x3, 17000 <__text_end+0x3c08>
    e5dc:	91252063 	add	x3, x3, #0x948
    e5e0:	38604863 	ldrb	w3, [x3, w0, uxtw]
    e5e4:	10000060 	adr	x0, e5f0 <TEE_AllocateOperation+0x9a4>
    e5e8:	8b238803 	add	x3, x0, w3, sxtb #2
    e5ec:	d61f0060 	br	x3
    e5f0:	529fffc0 	mov	w0, #0xfffe                	// #65534
    e5f4:	72b9ffe0 	movk	w0, #0xcfff, lsl #16
    e5f8:	17fffff5 	b	e5cc <TEE_AllocateOperation+0x980>
    e5fc:	5280a200 	mov	w0, #0x510                 	// #1296
    e600:	72a60000 	movk	w0, #0x3000, lsl #16
    e604:	6b00027f 	cmp	w19, w0
    e608:	54000840 	b.eq	e710 <TEE_AllocateOperation+0xac4>  // b.none
    e60c:	54000148 	b.hi	e634 <TEE_AllocateOperation+0x9e8>  // b.pmore
    e610:	121e7a63 	and	w3, w19, #0xfffffffd
    e614:	510ffc00 	sub	w0, w0, #0x3ff
    e618:	6b00007f 	cmp	w3, w0
    e61c:	540007e0 	b.eq	e718 <TEE_AllocateOperation+0xacc>  // b.none
    e620:	51000400 	sub	w0, w0, #0x1
    e624:	6b00027f 	cmp	w19, w0
    e628:	9a9f17e4 	cset	x4, eq  // eq = none
    e62c:	d37cec84 	lsl	x4, x4, #4
    e630:	17ffffbc 	b	e520 <TEE_AllocateOperation+0x8d4>
    e634:	5280a260 	mov	w0, #0x513                 	// #1299
    e638:	72a60000 	movk	w0, #0x3000, lsl #16
    e63c:	6b00027f 	cmp	w19, w0
    e640:	540006c0 	b.eq	e718 <TEE_AllocateOperation+0xacc>  // b.none
    e644:	1103f400 	add	w0, w0, #0xfd
    e648:	d2800204 	mov	x4, #0x10                  	// #16
    e64c:	6b00027f 	cmp	w19, w0
    e650:	54fff680 	b.eq	e520 <TEE_AllocateOperation+0x8d4>  // b.none
    e654:	5103fc00 	sub	w0, w0, #0xff
    e658:	6b00027f 	cmp	w19, w0
    e65c:	9a9f17e4 	cset	x4, eq  // eq = none
    e660:	d37df084 	lsl	x4, x4, #3
    e664:	17ffffaf 	b	e520 <TEE_AllocateOperation+0x8d4>
    e668:	52862620 	mov	w0, #0x3131                	// #12593
    e66c:	72ae0000 	movk	w0, #0x7000, lsl #16
    e670:	6b00027f 	cmp	w19, w0
    e674:	54000560 	b.eq	e720 <TEE_AllocateOperation+0xad4>  // b.none
    e678:	54000288 	b.hi	e6c8 <TEE_AllocateOperation+0xa7c>  // b.pmore
    e67c:	51400400 	sub	w0, w0, #0x1, lsl #12
    e680:	6b00027f 	cmp	w19, w0
    e684:	54000520 	b.eq	e728 <TEE_AllocateOperation+0xadc>  // b.none
    e688:	54000148 	b.hi	e6b0 <TEE_AllocateOperation+0xa64>  // b.pmore
    e68c:	52820840 	mov	w0, #0x1042                	// #4162
    e690:	72ae0000 	movk	w0, #0x7000, lsl #16
    e694:	6b00027f 	cmp	w19, w0
    e698:	54000480 	b.eq	e728 <TEE_AllocateOperation+0xadc>  // b.none
    e69c:	11400400 	add	w0, w0, #0x1, lsl #12
    e6a0:	d2800384 	mov	x4, #0x1c                  	// #28
    e6a4:	6b00027f 	cmp	w19, w0
    e6a8:	9a9f0084 	csel	x4, x4, xzr, eq  // eq = none
    e6ac:	17ffff9d 	b	e520 <TEE_AllocateOperation+0x8d4>
    e6b0:	52860840 	mov	w0, #0x3042                	// #12354
    e6b4:	72ae0000 	movk	w0, #0x7000, lsl #16
    e6b8:	6b00027f 	cmp	w19, w0
    e6bc:	9a9f17e4 	cset	x4, eq  // eq = none
    e6c0:	d37be884 	lsl	x4, x4, #5
    e6c4:	17ffff97 	b	e520 <TEE_AllocateOperation+0x8d4>
    e6c8:	52882620 	mov	w0, #0x4131                	// #16689
    e6cc:	72ae0000 	movk	w0, #0x7000, lsl #16
    e6d0:	6b00027f 	cmp	w19, w0
    e6d4:	540002e0 	b.eq	e730 <TEE_AllocateOperation+0xae4>  // b.none
    e6d8:	540000a8 	b.hi	e6ec <TEE_AllocateOperation+0xaa0>  // b.pmore
    e6dc:	5103bc00 	sub	w0, w0, #0xef
    e6e0:	d2800604 	mov	x4, #0x30                  	// #48
    e6e4:	6b00027f 	cmp	w19, w0
    e6e8:	17fffff0 	b	e6a8 <TEE_AllocateOperation+0xa5c>
    e6ec:	528a0840 	mov	w0, #0x5042                	// #20546
    e6f0:	72ae0000 	movk	w0, #0x7000, lsl #16
    e6f4:	6b00027f 	cmp	w19, w0
    e6f8:	54000200 	b.eq	e738 <TEE_AllocateOperation+0xaec>  // b.none
    e6fc:	5280c260 	mov	w0, #0x613                 	// #1555
    e700:	72be0000 	movk	w0, #0xf000, lsl #16
    e704:	17ffffd5 	b	e658 <TEE_AllocateOperation+0xa0c>
    e708:	d2800604 	mov	x4, #0x30                  	// #48
    e70c:	17ffff85 	b	e520 <TEE_AllocateOperation+0x8d4>
    e710:	d2800204 	mov	x4, #0x10                  	// #16
    e714:	17ffff83 	b	e520 <TEE_AllocateOperation+0x8d4>
    e718:	d2800104 	mov	x4, #0x8                   	// #8
    e71c:	17ffff81 	b	e520 <TEE_AllocateOperation+0x8d4>
    e720:	d2800384 	mov	x4, #0x1c                  	// #28
    e724:	17ffff7f 	b	e520 <TEE_AllocateOperation+0x8d4>
    e728:	d2800284 	mov	x4, #0x14                  	// #20
    e72c:	17ffff7d 	b	e520 <TEE_AllocateOperation+0x8d4>
    e730:	d2800404 	mov	x4, #0x20                  	// #32
    e734:	17ffff7b 	b	e520 <TEE_AllocateOperation+0x8d4>
    e738:	d2800804 	mov	x4, #0x40                  	// #64
    e73c:	17ffff79 	b	e520 <TEE_AllocateOperation+0x8d4>
    e740:	7100029f 	cmp	w20, #0x0
    e744:	d37ffb40 	lsl	x0, x26, #1
    e748:	9a9a1000 	csel	x0, x0, x26, ne  // ne = any
    e74c:	52b00001 	mov	w1, #0x80000000            	// #-2147483648
    e750:	97ffd276 	bl	3128 <TEE_Malloc>
    e754:	f9001f00 	str	x0, [x24, #56]
    e758:	b5ffef00 	cbnz	x0, e538 <TEE_AllocateOperation+0x8ec>
    e75c:	129ffe74 	mov	w20, #0xffff000c            	// #-65524
    e760:	17ffff88 	b	e580 <TEE_AllocateOperation+0x934>
    e764:	2a1303e0 	mov	w0, w19
    e768:	97fffb5c 	bl	d4d8 <__tee_alg_get_main_alg>
    e76c:	7100039f 	cmp	w28, #0x0
    e770:	52b40001 	mov	w1, #0xa0000000            	// #-1610612736
    e774:	52b42002 	mov	w2, #0xa1000000            	// #-1593835520
    e778:	2a010001 	orr	w1, w0, w1
    e77c:	2a020000 	orr	w0, w0, w2
    e780:	1a811017 	csel	w23, w0, w1, ne  // ne = any
    e784:	b9401f00 	ldr	w0, [x24, #28]
    e788:	36980040 	tbz	w0, #19, e790 <TEE_AllocateOperation+0xb44>
    e78c:	53017f39 	lsr	w25, w25, #1
    e790:	91008302 	add	x2, x24, #0x20
    e794:	2a1903e1 	mov	w1, w25
    e798:	2a1703e0 	mov	w0, w23
    e79c:	94000e8d 	bl	121d0 <TEE_AllocateTransientObject>
    e7a0:	2a0003f4 	mov	w20, w0
    e7a4:	35ffee00 	cbnz	w0, e564 <TEE_AllocateOperation+0x918>
    e7a8:	b9401f00 	ldr	w0, [x24, #28]
    e7ac:	369fece0 	tbz	w0, #19, e548 <TEE_AllocateOperation+0x8fc>
    e7b0:	9100a302 	add	x2, x24, #0x28
    e7b4:	2a1903e1 	mov	w1, w25
    e7b8:	2a1703e0 	mov	w0, w23
    e7bc:	94000e85 	bl	121d0 <TEE_AllocateTransientObject>
    e7c0:	2a0003f4 	mov	w20, w0
    e7c4:	34ffec20 	cbz	w0, e548 <TEE_AllocateOperation+0x8fc>
    e7c8:	17ffff67 	b	e564 <TEE_AllocateOperation+0x918>
    e7cc:	710016bf 	cmp	w21, #0x5
    e7d0:	54000121 	b.ne	e7f4 <TEE_AllocateOperation+0xba8>  // b.any
    e7d4:	b9405b00 	ldr	w0, [x24, #88]
    e7d8:	d2800002 	mov	x2, #0x0                   	// #0
    e7dc:	d2800001 	mov	x1, #0x0                   	// #0
    e7e0:	97ffce49 	bl	2104 <_utee_hash_init>
    e7e4:	35000260 	cbnz	w0, e830 <TEE_AllocateOperation+0xbe4>
    e7e8:	b9401f00 	ldr	w0, [x24, #28]
    e7ec:	320f0000 	orr	w0, w0, #0x20000
    e7f0:	b9001f00 	str	w0, [x24, #28]
    e7f4:	f94037e0 	ldr	x0, [sp, #104]
    e7f8:	b900331f 	str	wzr, [x24, #48]
    e7fc:	f9000018 	str	x24, [x0]
    e800:	17fffdcb 	b	df2c <TEE_AllocateOperation+0x2e0>
    e804:	f9401f00 	ldr	x0, [x24, #56]
    e808:	97ffd293 	bl	3254 <TEE_Free>
    e80c:	f9401300 	ldr	x0, [x24, #32]
    e810:	94000e77 	bl	121ec <TEE_FreeTransientObject>
    e814:	f9401700 	ldr	x0, [x24, #40]
    e818:	94000e75 	bl	121ec <TEE_FreeTransientObject>
    e81c:	aa1803e0 	mov	x0, x24
    e820:	97ffd28d 	bl	3254 <TEE_Free>
    e824:	17fffdc2 	b	df2c <TEE_AllocateOperation+0x2e0>
    e828:	129ffe74 	mov	w20, #0xffff000c            	// #-65524
    e82c:	17fffdc0 	b	df2c <TEE_AllocateOperation+0x2e0>
    e830:	2a0003f4 	mov	w20, w0
    e834:	17ffff4c 	b	e564 <TEE_AllocateOperation+0x918>
    e838:	7103033f 	cmp	w25, #0xc0
    e83c:	129ffeb4 	mov	w20, #0xffff000a            	// #-65526
    e840:	54ffb761 	b.ne	df2c <TEE_AllocateOperation+0x2e0>  // b.any
    e844:	17fffe08 	b	e064 <TEE_AllocateOperation+0x418>
    e848:	7103833f 	cmp	w25, #0xe0
    e84c:	54ffc0c0 	b.eq	e064 <TEE_AllocateOperation+0x418>  // b.none
    e850:	17fffe42 	b	e158 <TEE_AllocateOperation+0x50c>
    e854:	7103833f 	cmp	w25, #0xe0
    e858:	129ffeb4 	mov	w20, #0xffff000a            	// #-65526
    e85c:	54ffb681 	b.ne	df2c <TEE_AllocateOperation+0x2e0>  // b.any
    e860:	17fffd4c 	b	dd90 <TEE_AllocateOperation+0x144>
    e864:	7104033f 	cmp	w25, #0x100
    e868:	17fffe48 	b	e188 <TEE_AllocateOperation+0x53c>
    e86c:	7104033f 	cmp	w25, #0x100
    e870:	129ffeb4 	mov	w20, #0xffff000a            	// #-65526
    e874:	17fffff3 	b	e840 <TEE_AllocateOperation+0xbf4>
    e878:	7104033f 	cmp	w25, #0x100
    e87c:	129ffeb4 	mov	w20, #0xffff000a            	// #-65526
    e880:	17fffed6 	b	e3d8 <TEE_AllocateOperation+0x78c>
    e884:	7104033f 	cmp	w25, #0x100
    e888:	17fffec4 	b	e398 <TEE_AllocateOperation+0x74c>
    e88c:	7104033f 	cmp	w25, #0x100
    e890:	17fffe35 	b	e164 <TEE_AllocateOperation+0x518>
    e894:	7106033f 	cmp	w25, #0x180
    e898:	17ffffed 	b	e84c <TEE_AllocateOperation+0xc00>

000000000000e89c <__GP11_TEE_FreeOperation>:
__GP11_TEE_FreeOperation():
    e89c:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    e8a0:	910003fd 	mov	x29, sp
    e8a4:	f9000bf3 	str	x19, [sp, #16]
    e8a8:	aa0003f3 	mov	x19, x0
    e8ac:	b5000060 	cbnz	x0, e8b8 <__GP11_TEE_FreeOperation+0x1c>
    e8b0:	52800000 	mov	w0, #0x0                   	// #0
    e8b4:	97ffdb26 	bl	554c <TEE_Panic>
    e8b8:	aa1303e0 	mov	x0, x19
    e8bc:	f9400bf3 	ldr	x19, [sp, #16]
    e8c0:	a8c27bfd 	ldp	x29, x30, [sp], #32
    e8c4:	17fffcd2 	b	dc0c <TEE_FreeOperation>

000000000000e8c8 <TEE_GetOperationInfo>:
TEE_GetOperationInfo():
    e8c8:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    e8cc:	910003fd 	mov	x29, sp
    e8d0:	a90153f3 	stp	x19, x20, [sp, #16]
    e8d4:	aa0003f4 	mov	x20, x0
    e8d8:	aa0103f3 	mov	x19, x1
    e8dc:	b5000060 	cbnz	x0, e8e8 <TEE_GetOperationInfo+0x20>
    e8e0:	52800000 	mov	w0, #0x0                   	// #0
    e8e4:	97ffdb1a 	bl	554c <TEE_Panic>
    e8e8:	aa1303e0 	mov	x0, x19
    e8ec:	d2800401 	mov	x1, #0x20                  	// #32
    e8f0:	97ffdb75 	bl	56c4 <__utee_check_out_annotation>
    e8f4:	aa1403e1 	mov	x1, x20
    e8f8:	aa1303e0 	mov	x0, x19
    e8fc:	d2800402 	mov	x2, #0x20                  	// #32
    e900:	97ffc5c0 	bl	0 <memcpy>
    e904:	b9401e60 	ldr	w0, [x19, #28]
    e908:	36980040 	tbz	w0, #19, e910 <TEE_GetOperationInfo+0x48>
    e90c:	2902fe7f 	stp	wzr, wzr, [x19, #20]
    e910:	a94153f3 	ldp	x19, x20, [sp, #16]
    e914:	a8c27bfd 	ldp	x29, x30, [sp], #32
    e918:	d65f03c0 	ret

000000000000e91c <TEE_GetOperationInfoMultiple>:
TEE_GetOperationInfoMultiple():
    e91c:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    e920:	910003fd 	mov	x29, sp
    e924:	a9025bf5 	stp	x21, x22, [sp, #32]
    e928:	aa0003f5 	mov	x21, x0
    e92c:	f0000040 	adrp	x0, 19000 <_DYNAMIC>
    e930:	a90153f3 	stp	x19, x20, [sp, #16]
    e934:	aa0103f4 	mov	x20, x1
    e938:	f9409800 	ldr	x0, [x0, #304]
    e93c:	f9400001 	ldr	x1, [x0]
    e940:	f9002fe1 	str	x1, [sp, #88]
    e944:	d2800001 	mov	x1, #0x0                   	// #0
    e948:	a9037fff 	stp	xzr, xzr, [sp, #48]
    e94c:	a9047fff 	stp	xzr, xzr, [sp, #64]
    e950:	f9002bff 	str	xzr, [sp, #80]
    e954:	b5000215 	cbnz	x21, e994 <TEE_GetOperationInfoMultiple+0x78>
    e958:	129fff33 	mov	w19, #0xffff0006            	// #-65530
    e95c:	7100027f 	cmp	w19, #0x0
    e960:	129ffde0 	mov	w0, #0xffff0010            	// #-65520
    e964:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
    e968:	54000060 	b.eq	e974 <TEE_GetOperationInfoMultiple+0x58>  // b.none
    e96c:	2a1303e0 	mov	w0, w19
    e970:	97ffdaf7 	bl	554c <TEE_Panic>
    e974:	f0000040 	adrp	x0, 19000 <_DYNAMIC>
    e978:	f9409800 	ldr	x0, [x0, #304]
    e97c:	f9402fe2 	ldr	x2, [sp, #88]
    e980:	f9400001 	ldr	x1, [x0]
    e984:	eb010042 	subs	x2, x2, x1
    e988:	d2800001 	mov	x1, #0x0                   	// #0
    e98c:	54000960 	b.eq	eab8 <TEE_GetOperationInfoMultiple+0x19c>  // b.none
    e990:	97ffc73a 	bl	678 <__stack_chk_fail>
    e994:	aa0203f3 	mov	x19, x2
    e998:	aa0203e1 	mov	x1, x2
    e99c:	aa1403e0 	mov	x0, x20
    e9a0:	97ffdaf1 	bl	5564 <__utee_check_outbuf_annotation>
    e9a4:	f9400273 	ldr	x19, [x19]
    e9a8:	f1007e7f 	cmp	x19, #0x1f
    e9ac:	54fffd69 	b.ls	e958 <TEE_GetOperationInfoMultiple+0x3c>  // b.plast
    e9b0:	aa1403e0 	mov	x0, x20
    e9b4:	52800001 	mov	w1, #0x0                   	// #0
    e9b8:	aa1303e2 	mov	x2, x19
    e9bc:	97ffd186 	bl	2fd4 <TEE_MemFill>
    e9c0:	b9400aa1 	ldr	w1, [x21, #8]
    e9c4:	b9401ea0 	ldr	w0, [x21, #28]
    e9c8:	7100143f 	cmp	w1, #0x5
    e9cc:	540006e0 	b.eq	eaa8 <TEE_GetOperationInfoMultiple+0x18c>  // b.none
    e9d0:	d1008273 	sub	x19, x19, #0x20
    e9d4:	379803c0 	tbnz	w0, #19, ea4c <TEE_GetOperationInfoMultiple+0x130>
    e9d8:	f1001e7f 	cmp	x19, #0x7
    e9dc:	540006a9 	b.ls	eab0 <TEE_GetOperationInfoMultiple+0x194>  // b.plast
    e9e0:	f94012a0 	ldr	x0, [x21, #32]
    e9e4:	9100c3e1 	add	x1, sp, #0x30
    e9e8:	94000c7c 	bl	11bd8 <TEE_GetObjectInfo1>
    e9ec:	2a0003f3 	mov	w19, w0
    e9f0:	35fffb60 	cbnz	w0, e95c <TEE_GetOperationInfoMultiple+0x40>
    e9f4:	b94037e0 	ldr	w0, [sp, #52]
    e9f8:	b9002280 	str	w0, [x20, #32]
    e9fc:	b9401aa0 	ldr	w0, [x21, #24]
    ea00:	b9002680 	str	w0, [x20, #36]
    ea04:	52800020 	mov	w0, #0x1                   	// #1
    ea08:	b9001e80 	str	w0, [x20, #28]
    ea0c:	52800013 	mov	w19, #0x0                   	// #0
    ea10:	b94002a0 	ldr	w0, [x21]
    ea14:	b9000280 	str	w0, [x20]
    ea18:	b94006a0 	ldr	w0, [x21, #4]
    ea1c:	b9000680 	str	w0, [x20, #4]
    ea20:	b9400aa0 	ldr	w0, [x21, #8]
    ea24:	b9000a80 	str	w0, [x20, #8]
    ea28:	b9400ea0 	ldr	w0, [x21, #12]
    ea2c:	b9000e80 	str	w0, [x20, #12]
    ea30:	b94012a0 	ldr	w0, [x21, #16]
    ea34:	b9001280 	str	w0, [x20, #16]
    ea38:	b9401ea0 	ldr	w0, [x21, #28]
    ea3c:	b9001680 	str	w0, [x20, #20]
    ea40:	b94032a0 	ldr	w0, [x21, #48]
    ea44:	b9001a80 	str	w0, [x20, #24]
    ea48:	17ffffc5 	b	e95c <TEE_GetOperationInfoMultiple+0x40>
    ea4c:	f1003e7f 	cmp	x19, #0xf
    ea50:	54000309 	b.ls	eab0 <TEE_GetOperationInfoMultiple+0x194>  // b.plast
    ea54:	f94012a0 	ldr	x0, [x21, #32]
    ea58:	9100c3f6 	add	x22, sp, #0x30
    ea5c:	aa1603e1 	mov	x1, x22
    ea60:	94000c5e 	bl	11bd8 <TEE_GetObjectInfo1>
    ea64:	2a0003f3 	mov	w19, w0
    ea68:	35fff7a0 	cbnz	w0, e95c <TEE_GetOperationInfoMultiple+0x40>
    ea6c:	b94037e0 	ldr	w0, [sp, #52]
    ea70:	aa1603e1 	mov	x1, x22
    ea74:	b9002280 	str	w0, [x20, #32]
    ea78:	b9401aa0 	ldr	w0, [x21, #24]
    ea7c:	b9002680 	str	w0, [x20, #36]
    ea80:	f94016a0 	ldr	x0, [x21, #40]
    ea84:	94000c55 	bl	11bd8 <TEE_GetObjectInfo1>
    ea88:	2a0003f3 	mov	w19, w0
    ea8c:	35fff680 	cbnz	w0, e95c <TEE_GetOperationInfoMultiple+0x40>
    ea90:	b94037e0 	ldr	w0, [sp, #52]
    ea94:	b9002a80 	str	w0, [x20, #40]
    ea98:	b9401aa0 	ldr	w0, [x21, #24]
    ea9c:	b9002e80 	str	w0, [x20, #44]
    eaa0:	52800040 	mov	w0, #0x2                   	// #2
    eaa4:	17ffffd9 	b	ea08 <TEE_GetOperationInfoMultiple+0xec>
    eaa8:	52800000 	mov	w0, #0x0                   	// #0
    eaac:	17ffffd7 	b	ea08 <TEE_GetOperationInfoMultiple+0xec>
    eab0:	129ffdf3 	mov	w19, #0xffff0010            	// #-65520
    eab4:	17ffffaa 	b	e95c <TEE_GetOperationInfoMultiple+0x40>
    eab8:	2a1303e0 	mov	w0, w19
    eabc:	a94153f3 	ldp	x19, x20, [sp, #16]
    eac0:	a9425bf5 	ldp	x21, x22, [sp, #32]
    eac4:	a8c67bfd 	ldp	x29, x30, [sp], #96
    eac8:	d65f03c0 	ret

000000000000eacc <__GP11_TEE_GetOperationInfoMultiple>:
__GP11_TEE_GetOperationInfoMultiple():
    eacc:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    ead0:	910003fd 	mov	x29, sp
    ead4:	a90153f3 	stp	x19, x20, [sp, #16]
    ead8:	f0000054 	adrp	x20, 19000 <_DYNAMIC>
    eadc:	aa0203f3 	mov	x19, x2
    eae0:	a9025bf5 	stp	x21, x22, [sp, #32]
    eae4:	aa0003f6 	mov	x22, x0
    eae8:	aa0103f5 	mov	x21, x1
    eaec:	f9409a80 	ldr	x0, [x20, #304]
    eaf0:	f9400001 	ldr	x1, [x0]
    eaf4:	f9001fe1 	str	x1, [sp, #56]
    eaf8:	d2800001 	mov	x1, #0x0                   	// #0
    eafc:	aa1503e0 	mov	x0, x21
    eb00:	aa0203e1 	mov	x1, x2
    eb04:	f9001bff 	str	xzr, [sp, #48]
    eb08:	97ffdaaa 	bl	55b0 <__utee_check_gp11_outbuf_annotation>
    eb0c:	b9400260 	ldr	w0, [x19]
    eb10:	9100c3e2 	add	x2, sp, #0x30
    eb14:	aa1503e1 	mov	x1, x21
    eb18:	f9001be0 	str	x0, [sp, #48]
    eb1c:	aa1603e0 	mov	x0, x22
    eb20:	97ffff7f 	bl	e91c <TEE_GetOperationInfoMultiple>
    eb24:	f9409a94 	ldr	x20, [x20, #304]
    eb28:	f9401be1 	ldr	x1, [sp, #48]
    eb2c:	b9000261 	str	w1, [x19]
    eb30:	f9401fe1 	ldr	x1, [sp, #56]
    eb34:	f9400282 	ldr	x2, [x20]
    eb38:	eb020021 	subs	x1, x1, x2
    eb3c:	d2800002 	mov	x2, #0x0                   	// #0
    eb40:	54000040 	b.eq	eb48 <__GP11_TEE_GetOperationInfoMultiple+0x7c>  // b.none
    eb44:	97ffc6cd 	bl	678 <__stack_chk_fail>
    eb48:	a94153f3 	ldp	x19, x20, [sp, #16]
    eb4c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    eb50:	a8c47bfd 	ldp	x29, x30, [sp], #64
    eb54:	d65f03c0 	ret

000000000000eb58 <TEE_ResetOperation>:
TEE_ResetOperation():
    eb58:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    eb5c:	910003fd 	mov	x29, sp
    eb60:	f9000bf3 	str	x19, [sp, #16]
    eb64:	aa0003f3 	mov	x19, x0
    eb68:	b5000060 	cbnz	x0, eb74 <TEE_ResetOperation+0x1c>
    eb6c:	52800000 	mov	w0, #0x0                   	// #0
    eb70:	97ffda77 	bl	554c <TEE_Panic>
    eb74:	b9401e60 	ldr	w0, [x19, #28]
    eb78:	37900060 	tbnz	w0, #18, eb84 <TEE_ResetOperation+0x2c>
    eb7c:	52800000 	mov	w0, #0x0                   	// #0
    eb80:	97ffda73 	bl	554c <TEE_Panic>
    eb84:	aa1303e0 	mov	x0, x19
    eb88:	f9400bf3 	ldr	x19, [sp, #16]
    eb8c:	a8c27bfd 	ldp	x29, x30, [sp], #32
    eb90:	17fffb8f 	b	d9cc <reset_operation_state>

000000000000eb94 <TEE_SetOperationKey>:
TEE_SetOperationKey():
    eb94:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    eb98:	f0000042 	adrp	x2, 19000 <_DYNAMIC>
    eb9c:	910003fd 	mov	x29, sp
    eba0:	f9409842 	ldr	x2, [x2, #304]
    eba4:	a90153f3 	stp	x19, x20, [sp, #16]
    eba8:	aa0003f3 	mov	x19, x0
    ebac:	a9025bf5 	stp	x21, x22, [sp, #32]
    ebb0:	f9400040 	ldr	x0, [x2]
    ebb4:	f9002fe0 	str	x0, [sp, #88]
    ebb8:	d2800000 	mov	x0, #0x0                   	// #0
    ebbc:	b5000173 	cbnz	x19, ebe8 <TEE_SetOperationKey+0x54>
    ebc0:	129fff34 	mov	w20, #0xffff0006            	// #-65530
    ebc4:	121e7a80 	and	w0, w20, #0xfffffffd
    ebc8:	7100029f 	cmp	w20, #0x0
    ebcc:	52800021 	mov	w1, #0x1                   	// #1
    ebd0:	72be0201 	movk	w1, #0xf010, lsl #16
    ebd4:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
    ebd8:	54000200 	b.eq	ec18 <TEE_SetOperationKey+0x84>  // b.none
    ebdc:	2a1403e0 	mov	w0, w20
    ebe0:	97ffda5b 	bl	554c <TEE_Panic>
    ebe4:	1400000d 	b	ec18 <TEE_SetOperationKey+0x84>
    ebe8:	aa0103f5 	mov	x21, x1
    ebec:	b5000261 	cbnz	x1, ec38 <TEE_SetOperationKey+0xa4>
    ebf0:	f9401260 	ldr	x0, [x19, #32]
    ebf4:	94000da2 	bl	1227c <TEE_ResetTransientObject>
    ebf8:	b9403274 	ldr	w20, [x19, #48]
    ebfc:	b9401e60 	ldr	w0, [x19, #28]
    ec00:	120d7800 	and	w0, w0, #0xfffbffff
    ec04:	b9001e60 	str	w0, [x19, #28]
    ec08:	34000094 	cbz	w20, ec18 <TEE_SetOperationKey+0x84>
    ec0c:	52800014 	mov	w20, #0x0                   	// #0
    ec10:	aa1303e0 	mov	x0, x19
    ec14:	97fffb6e 	bl	d9cc <reset_operation_state>
    ec18:	f0000042 	adrp	x2, 19000 <_DYNAMIC>
    ec1c:	f9409842 	ldr	x2, [x2, #304]
    ec20:	f9402fe0 	ldr	x0, [sp, #88]
    ec24:	f9400041 	ldr	x1, [x2]
    ec28:	eb010000 	subs	x0, x0, x1
    ec2c:	d2800001 	mov	x1, #0x0                   	// #0
    ec30:	540004e0 	b.eq	eccc <TEE_SetOperationKey+0x138>  // b.none
    ec34:	97ffc691 	bl	678 <__stack_chk_fail>
    ec38:	b9400660 	ldr	w0, [x19, #4]
    ec3c:	7100141f 	cmp	w0, #0x5
    ec40:	54fffc00 	b.eq	ebc0 <TEE_SetOperationKey+0x2c>  // b.none
    ec44:	b9401e60 	ldr	w0, [x19, #28]
    ec48:	379ffbc0 	tbnz	w0, #19, ebc0 <TEE_SetOperationKey+0x2c>
    ec4c:	9100c3e1 	add	x1, sp, #0x30
    ec50:	aa1503e0 	mov	x0, x21
    ec54:	94000be1 	bl	11bd8 <TEE_GetObjectInfo1>
    ec58:	2a0003f4 	mov	w20, w0
    ec5c:	35fffb40 	cbnz	w0, ebc4 <TEE_SetOperationKey+0x30>
    ec60:	b9401a60 	ldr	w0, [x19, #24]
    ec64:	b9403fe1 	ldr	w1, [sp, #60]
    ec68:	6a21001f 	bics	wzr, w0, w1
    ec6c:	54fffaa1 	b.ne	ebc0 <TEE_SetOperationKey+0x2c>  // b.any
    ec70:	b9401260 	ldr	w0, [x19, #16]
    ec74:	b94037f6 	ldr	w22, [sp, #52]
    ec78:	6b16001f 	cmp	w0, w22
    ec7c:	54fffa23 	b.cc	ebc0 <TEE_SetOperationKey+0x2c>  // b.lo, b.ul, b.last
    ec80:	f9401260 	ldr	x0, [x19, #32]
    ec84:	94000d7e 	bl	1227c <TEE_ResetTransientObject>
    ec88:	b9401e60 	ldr	w0, [x19, #28]
    ec8c:	aa1503e1 	mov	x1, x21
    ec90:	120d7800 	and	w0, w0, #0xfffbffff
    ec94:	b9001e60 	str	w0, [x19, #28]
    ec98:	f9401260 	ldr	x0, [x19, #32]
    ec9c:	94000e71 	bl	12660 <TEE_CopyObjectAttributes1>
    eca0:	2a0003f4 	mov	w20, w0
    eca4:	35fff900 	cbnz	w0, ebc4 <TEE_SetOperationKey+0x30>
    eca8:	b9401e60 	ldr	w0, [x19, #28]
    ecac:	b9001676 	str	w22, [x19, #20]
    ecb0:	320e0000 	orr	w0, w0, #0x40000
    ecb4:	b9001e60 	str	w0, [x19, #28]
    ecb8:	b9403260 	ldr	w0, [x19, #48]
    ecbc:	34fff840 	cbz	w0, ebc4 <TEE_SetOperationKey+0x30>
    ecc0:	aa1303e0 	mov	x0, x19
    ecc4:	97fffb42 	bl	d9cc <reset_operation_state>
    ecc8:	17ffffbf 	b	ebc4 <TEE_SetOperationKey+0x30>
    eccc:	2a1403e0 	mov	w0, w20
    ecd0:	a94153f3 	ldp	x19, x20, [sp, #16]
    ecd4:	a9425bf5 	ldp	x21, x22, [sp, #32]
    ecd8:	a8c67bfd 	ldp	x29, x30, [sp], #96
    ecdc:	d65f03c0 	ret

000000000000ece0 <__GP11_TEE_SetOperationKey>:
__GP11_TEE_SetOperationKey():
    ece0:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
    ece4:	910003fd 	mov	x29, sp
    ece8:	a90153f3 	stp	x19, x20, [sp, #16]
    ecec:	aa0003f3 	mov	x19, x0
    ecf0:	aa0103f4 	mov	x20, x1
    ecf4:	b4000060 	cbz	x0, ed00 <__GP11_TEE_SetOperationKey+0x20>
    ecf8:	b9403000 	ldr	w0, [x0, #48]
    ecfc:	34000060 	cbz	w0, ed08 <__GP11_TEE_SetOperationKey+0x28>
    ed00:	52800000 	mov	w0, #0x0                   	// #0
    ed04:	97ffda12 	bl	554c <TEE_Panic>
    ed08:	aa1403e1 	mov	x1, x20
    ed0c:	aa1303e0 	mov	x0, x19
    ed10:	a94153f3 	ldp	x19, x20, [sp, #16]
    ed14:	a8c27bfd 	ldp	x29, x30, [sp], #32
    ed18:	17ffff9f 	b	eb94 <TEE_SetOperationKey>

000000000000ed1c <TEE_SetOperationKey2>:
TEE_SetOperationKey2():
    ed1c:	f100001f 	cmp	x0, #0x0
    ed20:	fa401824 	ccmp	x1, #0x0, #0x4, ne  // ne = any
    ed24:	54000060 	b.eq	ed30 <TEE_SetOperationKey2+0x14>  // b.none
    ed28:	eb02003f 	cmp	x1, x2
    ed2c:	54000040 	b.eq	ed34 <TEE_SetOperationKey2+0x18>  // b.none
    ed30:	17fffb3e 	b	da28 <set_operation_key2>
    ed34:	129ffe00 	mov	w0, #0xffff000f            	// #-65521
    ed38:	d65f03c0 	ret

000000000000ed3c <__GP11_TEE_SetOperationKey2>:
__GP11_TEE_SetOperationKey2():
    ed3c:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    ed40:	910003fd 	mov	x29, sp
    ed44:	a90153f3 	stp	x19, x20, [sp, #16]
    ed48:	aa0003f3 	mov	x19, x0
    ed4c:	aa0103f4 	mov	x20, x1
    ed50:	f90013f5 	str	x21, [sp, #32]
    ed54:	aa0203f5 	mov	x21, x2
    ed58:	b4000060 	cbz	x0, ed64 <__GP11_TEE_SetOperationKey2+0x28>
    ed5c:	b9403000 	ldr	w0, [x0, #48]
    ed60:	34000060 	cbz	w0, ed6c <__GP11_TEE_SetOperationKey2+0x30>
    ed64:	52800000 	mov	w0, #0x0                   	// #0
    ed68:	97ffd9f9 	bl	554c <TEE_Panic>
    ed6c:	aa1503e2 	mov	x2, x21
    ed70:	aa1403e1 	mov	x1, x20
    ed74:	aa1303e0 	mov	x0, x19
    ed78:	a94153f3 	ldp	x19, x20, [sp, #16]
    ed7c:	f94013f5 	ldr	x21, [sp, #32]
    ed80:	a8c37bfd 	ldp	x29, x30, [sp], #48
    ed84:	17fffb29 	b	da28 <set_operation_key2>

000000000000ed88 <TEE_CopyOperation>:
TEE_CopyOperation():
    ed88:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    ed8c:	f100001f 	cmp	x0, #0x0
    ed90:	fa401824 	ccmp	x1, #0x0, #0x4, ne  // ne = any
    ed94:	910003fd 	mov	x29, sp
    ed98:	a90153f3 	stp	x19, x20, [sp, #16]
    ed9c:	aa0003f4 	mov	x20, x0
    eda0:	aa0103f3 	mov	x19, x1
    eda4:	f90013f5 	str	x21, [sp, #32]
    eda8:	54000061 	b.ne	edb4 <TEE_CopyOperation+0x2c>  // b.any
    edac:	52800000 	mov	w0, #0x0                   	// #0
    edb0:	97ffd9e7 	bl	554c <TEE_Panic>
    edb4:	b9400260 	ldr	w0, [x19]
    edb8:	b9400281 	ldr	w1, [x20]
    edbc:	6b00003f 	cmp	w1, w0
    edc0:	54000060 	b.eq	edcc <TEE_CopyOperation+0x44>  // b.none
    edc4:	52800000 	mov	w0, #0x0                   	// #0
    edc8:	97ffd9e1 	bl	554c <TEE_Panic>
    edcc:	b9400a60 	ldr	w0, [x19, #8]
    edd0:	b9400a81 	ldr	w1, [x20, #8]
    edd4:	6b00003f 	cmp	w1, w0
    edd8:	54000060 	b.eq	ede4 <TEE_CopyOperation+0x5c>  // b.none
    eddc:	52800000 	mov	w0, #0x0                   	// #0
    ede0:	97ffd9db 	bl	554c <TEE_Panic>
    ede4:	b9400660 	ldr	w0, [x19, #4]
    ede8:	7100141f 	cmp	w0, #0x5
    edec:	540000e0 	b.eq	ee08 <TEE_CopyOperation+0x80>  // b.none
    edf0:	b9401e60 	ldr	w0, [x19, #28]
    edf4:	369005c0 	tbz	w0, #18, eeac <TEE_CopyOperation+0x124>
    edf8:	a9420a61 	ldp	x1, x2, [x19, #32]
    edfc:	379805e0 	tbnz	w0, #19, eeb8 <TEE_CopyOperation+0x130>
    ee00:	aa1403e0 	mov	x0, x20
    ee04:	97ffff64 	bl	eb94 <TEE_SetOperationKey>
    ee08:	b9401e60 	ldr	w0, [x19, #28]
    ee0c:	b9001e80 	str	w0, [x20, #28]
    ee10:	b9401660 	ldr	w0, [x19, #20]
    ee14:	b9001680 	str	w0, [x20, #20]
    ee18:	b9400e60 	ldr	w0, [x19, #12]
    ee1c:	b9000e80 	str	w0, [x20, #12]
    ee20:	b9403260 	ldr	w0, [x19, #48]
    ee24:	39410281 	ldrb	w1, [x20, #64]
    ee28:	b9003280 	str	w0, [x20, #48]
    ee2c:	39410260 	ldrb	w0, [x19, #64]
    ee30:	6b00003f 	cmp	w1, w0
    ee34:	540000a1 	b.ne	ee48 <TEE_CopyOperation+0xc0>  // b.any
    ee38:	f9402660 	ldr	x0, [x19, #72]
    ee3c:	f9402681 	ldr	x1, [x20, #72]
    ee40:	eb00003f 	cmp	x1, x0
    ee44:	54000060 	b.eq	ee50 <TEE_CopyOperation+0xc8>  // b.none
    ee48:	52800000 	mov	w0, #0x0                   	// #0
    ee4c:	97ffd9c0 	bl	554c <TEE_Panic>
    ee50:	f9401e81 	ldr	x1, [x20, #56]
    ee54:	f9401e60 	ldr	x0, [x19, #56]
    ee58:	b4000361 	cbz	x1, eec4 <TEE_CopyOperation+0x13c>
    ee5c:	f9402675 	ldr	x21, [x19, #72]
    ee60:	b5000040 	cbnz	x0, ee68 <TEE_CopyOperation+0xe0>
    ee64:	97ffd9ba 	bl	554c <TEE_Panic>
    ee68:	39410260 	ldrb	w0, [x19, #64]
    ee6c:	34000040 	cbz	w0, ee74 <TEE_CopyOperation+0xec>
    ee70:	d37ffab5 	lsl	x21, x21, #1
    ee74:	f9401e61 	ldr	x1, [x19, #56]
    ee78:	aa1503e2 	mov	x2, x21
    ee7c:	f9401e80 	ldr	x0, [x20, #56]
    ee80:	97ffc460 	bl	0 <memcpy>
    ee84:	f9402a60 	ldr	x0, [x19, #80]
    ee88:	f9002a80 	str	x0, [x20, #80]
    ee8c:	b9405a61 	ldr	w1, [x19, #88]
    ee90:	b9405a80 	ldr	w0, [x20, #88]
    ee94:	97ffcc96 	bl	20ec <_utee_cryp_state_copy>
    ee98:	340001e0 	cbz	w0, eed4 <TEE_CopyOperation+0x14c>
    ee9c:	a94153f3 	ldp	x19, x20, [sp, #16]
    eea0:	f94013f5 	ldr	x21, [sp, #32]
    eea4:	a8c37bfd 	ldp	x29, x30, [sp], #48
    eea8:	17ffd9a9 	b	554c <TEE_Panic>
    eeac:	d2800002 	mov	x2, #0x0                   	// #0
    eeb0:	d2800001 	mov	x1, #0x0                   	// #0
    eeb4:	17ffffd2 	b	edfc <TEE_CopyOperation+0x74>
    eeb8:	aa1403e0 	mov	x0, x20
    eebc:	97ffff98 	bl	ed1c <TEE_SetOperationKey2>
    eec0:	17ffffd2 	b	ee08 <TEE_CopyOperation+0x80>
    eec4:	b4fffe40 	cbz	x0, ee8c <TEE_CopyOperation+0x104>
    eec8:	52800000 	mov	w0, #0x0                   	// #0
    eecc:	97ffd9a0 	bl	554c <TEE_Panic>
    eed0:	17ffffef 	b	ee8c <TEE_CopyOperation+0x104>
    eed4:	a94153f3 	ldp	x19, x20, [sp, #16]
    eed8:	f94013f5 	ldr	x21, [sp, #32]
    eedc:	a8c37bfd 	ldp	x29, x30, [sp], #48
    eee0:	d65f03c0 	ret

000000000000eee4 <TEE_DigestUpdate>:
TEE_DigestUpdate():
    eee4:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    eee8:	910003fd 	mov	x29, sp
    eeec:	a90153f3 	stp	x19, x20, [sp, #16]
    eef0:	aa0003f3 	mov	x19, x0
    eef4:	aa0103f4 	mov	x20, x1
    eef8:	f90013f5 	str	x21, [sp, #32]
    eefc:	aa0203f5 	mov	x21, x2
    ef00:	b4000080 	cbz	x0, ef10 <TEE_DigestUpdate+0x2c>
    ef04:	b9400400 	ldr	w0, [x0, #4]
    ef08:	7100141f 	cmp	w0, #0x5
    ef0c:	54000060 	b.eq	ef18 <TEE_DigestUpdate+0x34>  // b.none
    ef10:	52800000 	mov	w0, #0x0                   	// #0
    ef14:	97ffd98e 	bl	554c <TEE_Panic>
    ef18:	52800020 	mov	w0, #0x1                   	// #1
    ef1c:	b9003260 	str	w0, [x19, #48]
    ef20:	b9405a60 	ldr	w0, [x19, #88]
    ef24:	aa1503e2 	mov	x2, x21
    ef28:	aa1403e1 	mov	x1, x20
    ef2c:	97ffcc79 	bl	2110 <_utee_hash_update>
    ef30:	340000a0 	cbz	w0, ef44 <TEE_DigestUpdate+0x60>
    ef34:	a94153f3 	ldp	x19, x20, [sp, #16]
    ef38:	f94013f5 	ldr	x21, [sp, #32]
    ef3c:	a8c37bfd 	ldp	x29, x30, [sp], #48
    ef40:	17ffd983 	b	554c <TEE_Panic>
    ef44:	a94153f3 	ldp	x19, x20, [sp, #16]
    ef48:	f94013f5 	ldr	x21, [sp, #32]
    ef4c:	a8c37bfd 	ldp	x29, x30, [sp], #48
    ef50:	d65f03c0 	ret

000000000000ef54 <__GP11_TEE_DigestUpdate>:
__GP11_TEE_DigestUpdate():
    ef54:	2a0203e2 	mov	w2, w2
    ef58:	17ffffe3 	b	eee4 <TEE_DigestUpdate>

000000000000ef5c <TEE_DigestDoFinal>:
TEE_DigestDoFinal():
    ef5c:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    ef60:	f0000045 	adrp	x5, 19000 <_DYNAMIC>
    ef64:	910003fd 	mov	x29, sp
    ef68:	f94098a5 	ldr	x5, [x5, #304]
    ef6c:	a90153f3 	stp	x19, x20, [sp, #16]
    ef70:	aa0003f3 	mov	x19, x0
    ef74:	a9025bf5 	stp	x21, x22, [sp, #32]
    ef78:	f9001bf7 	str	x23, [sp, #48]
    ef7c:	f94000a0 	ldr	x0, [x5]
    ef80:	f90027e0 	str	x0, [sp, #72]
    ef84:	d2800000 	mov	x0, #0x0                   	// #0
    ef88:	f90023ff 	str	xzr, [sp, #64]
    ef8c:	b40008f3 	cbz	x19, f0a8 <TEE_DigestDoFinal+0x14c>
    ef90:	f100003f 	cmp	x1, #0x0
    ef94:	aa0103f6 	mov	x22, x1
    ef98:	aa0203f4 	mov	x20, x2
    ef9c:	fa400844 	ccmp	x2, #0x0, #0x4, eq  // eq = none
    efa0:	54000841 	b.ne	f0a8 <TEE_DigestDoFinal+0x14c>  // b.any
    efa4:	b9400660 	ldr	w0, [x19, #4]
    efa8:	7100141f 	cmp	w0, #0x5
    efac:	540007e1 	b.ne	f0a8 <TEE_DigestDoFinal+0x14c>  // b.any
    efb0:	b9403260 	ldr	w0, [x19, #48]
    efb4:	aa0303f7 	mov	x23, x3
    efb8:	aa0403f5 	mov	x21, x4
    efbc:	7100081f 	cmp	w0, #0x2
    efc0:	54000041 	b.ne	efc8 <TEE_DigestDoFinal+0x6c>  // b.any
    efc4:	b5000722 	cbnz	x2, f0a8 <TEE_DigestDoFinal+0x14c>
    efc8:	aa1503e0 	mov	x0, x21
    efcc:	d2800101 	mov	x1, #0x8                   	// #8
    efd0:	97ffd9cf 	bl	570c <__utee_check_inout_annotation>
    efd4:	b9403260 	ldr	w0, [x19, #48]
    efd8:	7100081f 	cmp	w0, #0x2
    efdc:	f94002a0 	ldr	x0, [x21]
    efe0:	54000321 	b.ne	f044 <TEE_DigestDoFinal+0xe8>  // b.any
    efe4:	f9401e63 	ldr	x3, [x19, #56]
    efe8:	b40002e3 	cbz	x3, f044 <TEE_DigestDoFinal+0xe8>
    efec:	a9448674 	ldp	x20, x1, [x19, #72]
    eff0:	cb010294 	sub	x20, x20, x1
    eff4:	8b010061 	add	x1, x3, x1
    eff8:	eb00029f 	cmp	x20, x0
    effc:	9a809294 	csel	x20, x20, x0, ls  // ls = plast
    f000:	aa1703e0 	mov	x0, x23
    f004:	aa1403e2 	mov	x2, x20
    f008:	97ffc3fe 	bl	0 <memcpy>
    f00c:	f90002b4 	str	x20, [x21]
    f010:	b9405a60 	ldr	w0, [x19, #88]
    f014:	d2800002 	mov	x2, #0x0                   	// #0
    f018:	d2800001 	mov	x1, #0x0                   	// #0
    f01c:	97ffcc3a 	bl	2104 <_utee_hash_init>
    f020:	34000040 	cbz	w0, f028 <TEE_DigestDoFinal+0xcc>
    f024:	97ffd94a 	bl	554c <TEE_Panic>
    f028:	b9401e60 	ldr	w0, [x19, #28]
    f02c:	52800014 	mov	w20, #0x0                   	// #0
    f030:	b900327f 	str	wzr, [x19, #48]
    f034:	320f0000 	orr	w0, w0, #0x20000
    f038:	b9001e60 	str	w0, [x19, #28]
    f03c:	f9002a7f 	str	xzr, [x19, #80]
    f040:	1400000c 	b	f070 <TEE_DigestDoFinal+0x114>
    f044:	f90023e0 	str	x0, [sp, #64]
    f048:	aa1403e2 	mov	x2, x20
    f04c:	b9405a60 	ldr	w0, [x19, #88]
    f050:	910103e4 	add	x4, sp, #0x40
    f054:	aa1703e3 	mov	x3, x23
    f058:	aa1603e1 	mov	x1, x22
    f05c:	97ffcc30 	bl	211c <_utee_hash_final>
    f060:	2a0003f4 	mov	w20, w0
    f064:	f94023e0 	ldr	x0, [sp, #64]
    f068:	f90002a0 	str	x0, [x21]
    f06c:	34fffd34 	cbz	w20, f010 <TEE_DigestDoFinal+0xb4>
    f070:	7100029f 	cmp	w20, #0x0
    f074:	129ffde0 	mov	w0, #0xffff0010            	// #-65520
    f078:	7a401284 	ccmp	w20, w0, #0x4, ne  // ne = any
    f07c:	54000060 	b.eq	f088 <TEE_DigestDoFinal+0x12c>  // b.none
    f080:	2a1403e0 	mov	w0, w20
    f084:	97ffd932 	bl	554c <TEE_Panic>
    f088:	d0000045 	adrp	x5, 19000 <_DYNAMIC>
    f08c:	f94098a5 	ldr	x5, [x5, #304]
    f090:	f94027e0 	ldr	x0, [sp, #72]
    f094:	f94000a1 	ldr	x1, [x5]
    f098:	eb010000 	subs	x0, x0, x1
    f09c:	d2800001 	mov	x1, #0x0                   	// #0
    f0a0:	54000080 	b.eq	f0b0 <TEE_DigestDoFinal+0x154>  // b.none
    f0a4:	97ffc575 	bl	678 <__stack_chk_fail>
    f0a8:	129fff34 	mov	w20, #0xffff0006            	// #-65530
    f0ac:	17fffff1 	b	f070 <TEE_DigestDoFinal+0x114>
    f0b0:	2a1403e0 	mov	w0, w20
    f0b4:	a94153f3 	ldp	x19, x20, [sp, #16]
    f0b8:	a9425bf5 	ldp	x21, x22, [sp, #32]
    f0bc:	f9401bf7 	ldr	x23, [sp, #48]
    f0c0:	a8c57bfd 	ldp	x29, x30, [sp], #80
    f0c4:	d65f03c0 	ret

000000000000f0c8 <__GP11_TEE_DigestDoFinal>:
__GP11_TEE_DigestDoFinal():
    f0c8:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    f0cc:	910003fd 	mov	x29, sp
    f0d0:	a90153f3 	stp	x19, x20, [sp, #16]
    f0d4:	d0000054 	adrp	x20, 19000 <_DYNAMIC>
    f0d8:	aa0403f3 	mov	x19, x4
    f0dc:	a9025bf5 	stp	x21, x22, [sp, #32]
    f0e0:	aa0003f5 	mov	x21, x0
    f0e4:	aa0103f6 	mov	x22, x1
    f0e8:	f9409a80 	ldr	x0, [x20, #304]
    f0ec:	a90363f7 	stp	x23, x24, [sp, #48]
    f0f0:	2a0203f7 	mov	w23, w2
    f0f4:	f9400001 	ldr	x1, [x0]
    f0f8:	f90027e1 	str	x1, [sp, #72]
    f0fc:	d2800001 	mov	x1, #0x0                   	// #0
    f100:	aa0303f8 	mov	x24, x3
    f104:	aa0403e0 	mov	x0, x4
    f108:	d2800081 	mov	x1, #0x4                   	// #4
    f10c:	f90023ff 	str	xzr, [sp, #64]
    f110:	97ffd97f 	bl	570c <__utee_check_inout_annotation>
    f114:	b9400260 	ldr	w0, [x19]
    f118:	2a1703e2 	mov	w2, w23
    f11c:	aa1603e1 	mov	x1, x22
    f120:	910103e4 	add	x4, sp, #0x40
    f124:	aa1803e3 	mov	x3, x24
    f128:	f90023e0 	str	x0, [sp, #64]
    f12c:	aa1503e0 	mov	x0, x21
    f130:	97ffff8b 	bl	ef5c <TEE_DigestDoFinal>
    f134:	f9409a94 	ldr	x20, [x20, #304]
    f138:	f94023e1 	ldr	x1, [sp, #64]
    f13c:	b9000261 	str	w1, [x19]
    f140:	f94027e1 	ldr	x1, [sp, #72]
    f144:	f9400282 	ldr	x2, [x20]
    f148:	eb020021 	subs	x1, x1, x2
    f14c:	d2800002 	mov	x2, #0x0                   	// #0
    f150:	54000040 	b.eq	f158 <__GP11_TEE_DigestDoFinal+0x90>  // b.none
    f154:	97ffc549 	bl	678 <__stack_chk_fail>
    f158:	a94153f3 	ldp	x19, x20, [sp, #16]
    f15c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    f160:	a94363f7 	ldp	x23, x24, [sp, #48]
    f164:	a8c57bfd 	ldp	x29, x30, [sp], #80
    f168:	d65f03c0 	ret

000000000000f16c <TEE_DigestExtract>:
TEE_DigestExtract():
    f16c:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    f170:	d0000044 	adrp	x4, 19000 <_DYNAMIC>
    f174:	910003fd 	mov	x29, sp
    f178:	f9409884 	ldr	x4, [x4, #304]
    f17c:	a90153f3 	stp	x19, x20, [sp, #16]
    f180:	aa0003f3 	mov	x19, x0
    f184:	a9025bf5 	stp	x21, x22, [sp, #32]
    f188:	aa0103f6 	mov	x22, x1
    f18c:	aa0203f5 	mov	x21, x2
    f190:	f9400080 	ldr	x0, [x4]
    f194:	f9001fe0 	str	x0, [sp, #56]
    f198:	d2800000 	mov	x0, #0x0                   	// #0
    f19c:	f9001bff 	str	xzr, [sp, #48]
    f1a0:	b4000093 	cbz	x19, f1b0 <TEE_DigestExtract+0x44>
    f1a4:	b9400660 	ldr	w0, [x19, #4]
    f1a8:	7100141f 	cmp	w0, #0x5
    f1ac:	54000060 	b.eq	f1b8 <TEE_DigestExtract+0x4c>  // b.none
    f1b0:	52800000 	mov	w0, #0x0                   	// #0
    f1b4:	97ffd8e6 	bl	554c <TEE_Panic>
    f1b8:	aa1503e0 	mov	x0, x21
    f1bc:	d2800101 	mov	x1, #0x8                   	// #8
    f1c0:	97ffd953 	bl	570c <__utee_check_inout_annotation>
    f1c4:	f9401e63 	ldr	x3, [x19, #56]
    f1c8:	b5000363 	cbnz	x3, f234 <TEE_DigestExtract+0xc8>
    f1cc:	b9401e60 	ldr	w0, [x19, #28]
    f1d0:	9100c3e4 	add	x4, sp, #0x30
    f1d4:	aa1603e3 	mov	x3, x22
    f1d8:	d2800002 	mov	x2, #0x0                   	// #0
    f1dc:	320c0000 	orr	w0, w0, #0x100000
    f1e0:	b9001e60 	str	w0, [x19, #28]
    f1e4:	52800040 	mov	w0, #0x2                   	// #2
    f1e8:	b9003260 	str	w0, [x19, #48]
    f1ec:	f94002a0 	ldr	x0, [x21]
    f1f0:	f9001be0 	str	x0, [sp, #48]
    f1f4:	b9405a60 	ldr	w0, [x19, #88]
    f1f8:	d2800001 	mov	x1, #0x0                   	// #0
    f1fc:	97ffcbc8 	bl	211c <_utee_hash_final>
    f200:	34000060 	cbz	w0, f20c <TEE_DigestExtract+0xa0>
    f204:	52800000 	mov	w0, #0x0                   	// #0
    f208:	97ffd8d1 	bl	554c <TEE_Panic>
    f20c:	f9401be0 	ldr	x0, [sp, #48]
    f210:	f90002a0 	str	x0, [x21]
    f214:	d0000044 	adrp	x4, 19000 <_DYNAMIC>
    f218:	f9409884 	ldr	x4, [x4, #304]
    f21c:	f9401fe0 	ldr	x0, [sp, #56]
    f220:	f9400081 	ldr	x1, [x4]
    f224:	eb010000 	subs	x0, x0, x1
    f228:	d2800001 	mov	x1, #0x0                   	// #0
    f22c:	54000680 	b.eq	f2fc <TEE_DigestExtract+0x190>  // b.none
    f230:	97ffc512 	bl	678 <__stack_chk_fail>
    f234:	b9403261 	ldr	w1, [x19, #48]
    f238:	f9402660 	ldr	x0, [x19, #72]
    f23c:	7100083f 	cmp	w1, #0x2
    f240:	54000400 	b.eq	f2c0 <TEE_DigestExtract+0x154>  // b.none
    f244:	f9001be0 	str	x0, [sp, #48]
    f248:	9100c3e4 	add	x4, sp, #0x30
    f24c:	b9405a60 	ldr	w0, [x19, #88]
    f250:	d2800002 	mov	x2, #0x0                   	// #0
    f254:	d2800001 	mov	x1, #0x0                   	// #0
    f258:	97ffcbb1 	bl	211c <_utee_hash_final>
    f25c:	34000060 	cbz	w0, f268 <TEE_DigestExtract+0xfc>
    f260:	52800000 	mov	w0, #0x0                   	// #0
    f264:	97ffd8ba 	bl	554c <TEE_Panic>
    f268:	f9401be0 	ldr	x0, [sp, #48]
    f26c:	f9402661 	ldr	x1, [x19, #72]
    f270:	eb00003f 	cmp	x1, x0
    f274:	54000060 	b.eq	f280 <TEE_DigestExtract+0x114>  // b.none
    f278:	52800000 	mov	w0, #0x0                   	// #0
    f27c:	97ffd8b4 	bl	554c <TEE_Panic>
    f280:	f9402a60 	ldr	x0, [x19, #80]
    f284:	b4000140 	cbz	x0, f2ac <TEE_DigestExtract+0x140>
    f288:	90000043 	adrp	x3, 17000 <__text_end+0x3c08>
    f28c:	b0000041 	adrp	x1, 18000 <__func__.0+0x172>
    f290:	91254863 	add	x3, x3, #0x952
    f294:	9125a821 	add	x1, x1, #0x96a
    f298:	b0000040 	adrp	x0, 18000 <__func__.0+0x172>
    f29c:	91262c00 	add	x0, x0, #0x98b
    f2a0:	52807e82 	mov	w2, #0x3f4                 	// #1012
    f2a4:	97ffde98 	bl	6d04 <_assert_log>
    f2a8:	97ffdea8 	bl	6d48 <_assert_break>
    f2ac:	b9401e60 	ldr	w0, [x19, #28]
    f2b0:	320c0000 	orr	w0, w0, #0x100000
    f2b4:	b9001e60 	str	w0, [x19, #28]
    f2b8:	52800040 	mov	w0, #0x2                   	// #2
    f2bc:	b9003260 	str	w0, [x19, #48]
    f2c0:	a9448274 	ldp	x20, x0, [x19, #72]
    f2c4:	f94002a1 	ldr	x1, [x21]
    f2c8:	cb000294 	sub	x20, x20, x0
    f2cc:	eb01029f 	cmp	x20, x1
    f2d0:	9a819294 	csel	x20, x20, x1, ls  // ls = plast
    f2d4:	f9401e61 	ldr	x1, [x19, #56]
    f2d8:	aa1403e2 	mov	x2, x20
    f2dc:	8b000021 	add	x1, x1, x0
    f2e0:	aa1603e0 	mov	x0, x22
    f2e4:	97ffc347 	bl	0 <memcpy>
    f2e8:	f90002b4 	str	x20, [x21]
    f2ec:	f9402a60 	ldr	x0, [x19, #80]
    f2f0:	8b140000 	add	x0, x0, x20
    f2f4:	f9002a60 	str	x0, [x19, #80]
    f2f8:	17ffffc7 	b	f214 <TEE_DigestExtract+0xa8>
    f2fc:	52800000 	mov	w0, #0x0                   	// #0
    f300:	a94153f3 	ldp	x19, x20, [sp, #16]
    f304:	a9425bf5 	ldp	x21, x22, [sp, #32]
    f308:	a8c47bfd 	ldp	x29, x30, [sp], #64
    f30c:	d65f03c0 	ret

000000000000f310 <TEE_CipherInit>:
TEE_CipherInit():
    f310:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    f314:	910003fd 	mov	x29, sp
    f318:	a90153f3 	stp	x19, x20, [sp, #16]
    f31c:	aa0003f3 	mov	x19, x0
    f320:	aa0103f4 	mov	x20, x1
    f324:	f90013f5 	str	x21, [sp, #32]
    f328:	aa0203f5 	mov	x21, x2
    f32c:	b5000060 	cbnz	x0, f338 <TEE_CipherInit+0x28>
    f330:	52800000 	mov	w0, #0x0                   	// #0
    f334:	97ffd886 	bl	554c <TEE_Panic>
    f338:	b9400660 	ldr	w0, [x19, #4]
    f33c:	7100041f 	cmp	w0, #0x1
    f340:	54000060 	b.eq	f34c <TEE_CipherInit+0x3c>  // b.none
    f344:	52800000 	mov	w0, #0x0                   	// #0
    f348:	97ffd881 	bl	554c <TEE_Panic>
    f34c:	b9401e60 	ldr	w0, [x19, #28]
    f350:	36900060 	tbz	w0, #18, f35c <TEE_CipherInit+0x4c>
    f354:	f9401260 	ldr	x0, [x19, #32]
    f358:	b5000060 	cbnz	x0, f364 <TEE_CipherInit+0x54>
    f35c:	52800000 	mov	w0, #0x0                   	// #0
    f360:	97ffd87b 	bl	554c <TEE_Panic>
    f364:	b9403260 	ldr	w0, [x19, #48]
    f368:	34000060 	cbz	w0, f374 <TEE_CipherInit+0x64>
    f36c:	aa1303e0 	mov	x0, x19
    f370:	97fffdfa 	bl	eb58 <TEE_ResetOperation>
    f374:	f100029f 	cmp	x20, #0x0
    f378:	fa401aa4 	ccmp	x21, #0x0, #0x4, ne  // ne = any
    f37c:	540001a0 	b.eq	f3b0 <TEE_CipherInit+0xa0>  // b.none
    f380:	b9400260 	ldr	w0, [x19]
    f384:	529ffe01 	mov	w1, #0xfff0                	// #65520
    f388:	72bdffe1 	movk	w1, #0xefff, lsl #16
    f38c:	529ffda2 	mov	w2, #0xffed                	// #65517
    f390:	0b010001 	add	w1, w0, w1
    f394:	72bdffe2 	movk	w2, #0xefff, lsl #16
    f398:	7100043f 	cmp	w1, #0x1
    f39c:	0b020000 	add	w0, w0, w2
    f3a0:	7a418800 	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
    f3a4:	54000068 	b.hi	f3b0 <TEE_CipherInit+0xa0>  // b.pmore
    f3a8:	52800000 	mov	w0, #0x0                   	// #0
    f3ac:	97ffd868 	bl	554c <TEE_Panic>
    f3b0:	52800020 	mov	w0, #0x1                   	// #1
    f3b4:	b9003260 	str	w0, [x19, #48]
    f3b8:	b9405a60 	ldr	w0, [x19, #88]
    f3bc:	aa1503e2 	mov	x2, x21
    f3c0:	aa1403e1 	mov	x1, x20
    f3c4:	97ffcb59 	bl	2128 <_utee_cipher_init>
    f3c8:	34000040 	cbz	w0, f3d0 <TEE_CipherInit+0xc0>
    f3cc:	97ffd860 	bl	554c <TEE_Panic>
    f3d0:	b9401e60 	ldr	w0, [x19, #28]
    f3d4:	f94013f5 	ldr	x21, [sp, #32]
    f3d8:	320f0000 	orr	w0, w0, #0x20000
    f3dc:	b9001e60 	str	w0, [x19, #28]
    f3e0:	f9002a7f 	str	xzr, [x19, #80]
    f3e4:	a94153f3 	ldp	x19, x20, [sp, #16]
    f3e8:	a8c37bfd 	ldp	x29, x30, [sp], #48
    f3ec:	d65f03c0 	ret

000000000000f3f0 <__GP11_TEE_CipherInit>:
__GP11_TEE_CipherInit():
    f3f0:	2a0203e2 	mov	w2, w2
    f3f4:	17ffffc7 	b	f310 <TEE_CipherInit>

000000000000f3f8 <TEE_CipherUpdate>:
TEE_CipherUpdate():
    f3f8:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    f3fc:	910003fd 	mov	x29, sp
    f400:	a90153f3 	stp	x19, x20, [sp, #16]
    f404:	aa0003f3 	mov	x19, x0
    f408:	d0000040 	adrp	x0, 19000 <_DYNAMIC>
    f40c:	a90363f7 	stp	x23, x24, [sp, #48]
    f410:	aa0103f7 	mov	x23, x1
    f414:	aa0203f4 	mov	x20, x2
    f418:	f9409801 	ldr	x1, [x0, #304]
    f41c:	a9025bf5 	stp	x21, x22, [sp, #32]
    f420:	aa0003f5 	mov	x21, x0
    f424:	f9400022 	ldr	x2, [x1]
    f428:	f90027e2 	str	x2, [sp, #72]
    f42c:	d2800002 	mov	x2, #0x0                   	// #0
    f430:	b50001f3 	cbnz	x19, f46c <TEE_CipherUpdate+0x74>
    f434:	129fff33 	mov	w19, #0xffff0006            	// #-65530
    f438:	7100027f 	cmp	w19, #0x0
    f43c:	129ffde0 	mov	w0, #0xffff0010            	// #-65520
    f440:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
    f444:	54000060 	b.eq	f450 <TEE_CipherUpdate+0x58>  // b.none
    f448:	2a1303e0 	mov	w0, w19
    f44c:	97ffd840 	bl	554c <TEE_Panic>
    f450:	f9409ab5 	ldr	x21, [x21, #304]
    f454:	f94027e0 	ldr	x0, [sp, #72]
    f458:	f94002a1 	ldr	x1, [x21]
    f45c:	eb010000 	subs	x0, x0, x1
    f460:	d2800001 	mov	x1, #0x0                   	// #0
    f464:	54000880 	b.eq	f574 <TEE_CipherUpdate+0x17c>  // b.none
    f468:	97ffc484 	bl	678 <__stack_chk_fail>
    f46c:	f10002ff 	cmp	x23, #0x0
    f470:	fa400a84 	ccmp	x20, #0x0, #0x4, eq  // eq = none
    f474:	54fffe01 	b.ne	f434 <TEE_CipherUpdate+0x3c>  // b.any
    f478:	aa0403e0 	mov	x0, x4
    f47c:	aa0303f8 	mov	x24, x3
    f480:	aa0403f6 	mov	x22, x4
    f484:	d2800101 	mov	x1, #0x8                   	// #8
    f488:	97ffd8a1 	bl	570c <__utee_check_inout_annotation>
    f48c:	b9400660 	ldr	w0, [x19, #4]
    f490:	7100041f 	cmp	w0, #0x1
    f494:	54fffd01 	b.ne	f434 <TEE_CipherUpdate+0x3c>  // b.any
    f498:	b9401e60 	ldr	w0, [x19, #28]
    f49c:	368ffcc0 	tbz	w0, #17, f434 <TEE_CipherUpdate+0x3c>
    f4a0:	b9403260 	ldr	w0, [x19, #48]
    f4a4:	7100041f 	cmp	w0, #0x1
    f4a8:	54fffc61 	b.ne	f434 <TEE_CipherUpdate+0x3c>  // b.any
    f4ac:	aa1402e0 	orr	x0, x23, x20
    f4b0:	b5000080 	cbnz	x0, f4c0 <TEE_CipherUpdate+0xc8>
    f4b4:	52800013 	mov	w19, #0x0                   	// #0
    f4b8:	f90002df 	str	xzr, [x22]
    f4bc:	17ffffdf 	b	f438 <TEE_CipherUpdate+0x40>
    f4c0:	f9402660 	ldr	x0, [x19, #72]
    f4c4:	f100041f 	cmp	x0, #0x1
    f4c8:	54000209 	b.ls	f508 <TEE_CipherUpdate+0x110>  // b.plast
    f4cc:	f9402a65 	ldr	x5, [x19, #80]
    f4d0:	8b050285 	add	x5, x20, x5
    f4d4:	9ac008a5 	udiv	x5, x5, x0
    f4d8:	9b007ca5 	mul	x5, x5, x0
    f4dc:	39410261 	ldrb	w1, [x19, #64]
    f4e0:	34000081 	cbz	w1, f4f0 <TEE_CipherUpdate+0xf8>
    f4e4:	cb0004a1 	sub	x1, x5, x0, lsl #1
    f4e8:	eb0004bf 	cmp	x5, x0, lsl #1
    f4ec:	9a9f8025 	csel	x5, x1, xzr, hi  // hi = pmore
    f4f0:	f94002c1 	ldr	x1, [x22]
    f4f4:	eb05003f 	cmp	x1, x5
    f4f8:	540000c2 	b.cs	f510 <TEE_CipherUpdate+0x118>  // b.hs, b.nlast
    f4fc:	129ffdf3 	mov	w19, #0xffff0010            	// #-65520
    f500:	f90002c5 	str	x5, [x22]
    f504:	17ffffcd 	b	f438 <TEE_CipherUpdate+0x40>
    f508:	aa1403e5 	mov	x5, x20
    f50c:	17fffff4 	b	f4dc <TEE_CipherUpdate+0xe4>
    f510:	f90023e1 	str	x1, [sp, #64]
    f514:	f100041f 	cmp	x0, #0x1
    f518:	54000189 	b.ls	f548 <TEE_CipherUpdate+0x150>  // b.plast
    f51c:	f940eaa1 	ldr	x1, [x21, #464]
    f520:	910103e5 	add	x5, sp, #0x40
    f524:	aa1803e4 	mov	x4, x24
    f528:	aa1403e3 	mov	x3, x20
    f52c:	aa1703e2 	mov	x2, x23
    f530:	aa1303e0 	mov	x0, x19
    f534:	97fff830 	bl	d5f4 <tee_buffer_update>
    f538:	2a0003f3 	mov	w19, w0
    f53c:	f94023e0 	ldr	x0, [sp, #64]
    f540:	f90002c0 	str	x0, [x22]
    f544:	17ffffbd 	b	f438 <TEE_CipherUpdate+0x40>
    f548:	b4000114 	cbz	x20, f568 <TEE_CipherUpdate+0x170>
    f54c:	b9405a60 	ldr	w0, [x19, #88]
    f550:	910103e4 	add	x4, sp, #0x40
    f554:	aa1803e3 	mov	x3, x24
    f558:	aa1403e2 	mov	x2, x20
    f55c:	aa1703e1 	mov	x1, x23
    f560:	97ffcaf5 	bl	2134 <_utee_cipher_update>
    f564:	17fffff5 	b	f538 <TEE_CipherUpdate+0x140>
    f568:	52800013 	mov	w19, #0x0                   	// #0
    f56c:	f90023ff 	str	xzr, [sp, #64]
    f570:	17fffff3 	b	f53c <TEE_CipherUpdate+0x144>
    f574:	2a1303e0 	mov	w0, w19
    f578:	a94153f3 	ldp	x19, x20, [sp, #16]
    f57c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    f580:	a94363f7 	ldp	x23, x24, [sp, #48]
    f584:	a8c57bfd 	ldp	x29, x30, [sp], #80
    f588:	d65f03c0 	ret

000000000000f58c <__GP11_TEE_CipherUpdate>:
__GP11_TEE_CipherUpdate():
    f58c:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    f590:	910003fd 	mov	x29, sp
    f594:	a90153f3 	stp	x19, x20, [sp, #16]
    f598:	d0000054 	adrp	x20, 19000 <_DYNAMIC>
    f59c:	aa0403f3 	mov	x19, x4
    f5a0:	a9025bf5 	stp	x21, x22, [sp, #32]
    f5a4:	aa0003f5 	mov	x21, x0
    f5a8:	aa0103f6 	mov	x22, x1
    f5ac:	f9409a80 	ldr	x0, [x20, #304]
    f5b0:	a90363f7 	stp	x23, x24, [sp, #48]
    f5b4:	2a0203f7 	mov	w23, w2
    f5b8:	f9400001 	ldr	x1, [x0]
    f5bc:	f90027e1 	str	x1, [sp, #72]
    f5c0:	d2800001 	mov	x1, #0x0                   	// #0
    f5c4:	aa0303f8 	mov	x24, x3
    f5c8:	aa0403e0 	mov	x0, x4
    f5cc:	d2800081 	mov	x1, #0x4                   	// #4
    f5d0:	f90023ff 	str	xzr, [sp, #64]
    f5d4:	97ffd84e 	bl	570c <__utee_check_inout_annotation>
    f5d8:	b9400260 	ldr	w0, [x19]
    f5dc:	2a1703e2 	mov	w2, w23
    f5e0:	aa1603e1 	mov	x1, x22
    f5e4:	910103e4 	add	x4, sp, #0x40
    f5e8:	aa1803e3 	mov	x3, x24
    f5ec:	f90023e0 	str	x0, [sp, #64]
    f5f0:	aa1503e0 	mov	x0, x21
    f5f4:	97ffff81 	bl	f3f8 <TEE_CipherUpdate>
    f5f8:	f9409a94 	ldr	x20, [x20, #304]
    f5fc:	f94023e1 	ldr	x1, [sp, #64]
    f600:	b9000261 	str	w1, [x19]
    f604:	f94027e1 	ldr	x1, [sp, #72]
    f608:	f9400282 	ldr	x2, [x20]
    f60c:	eb020021 	subs	x1, x1, x2
    f610:	d2800002 	mov	x2, #0x0                   	// #0
    f614:	54000040 	b.eq	f61c <__GP11_TEE_CipherUpdate+0x90>  // b.none
    f618:	97ffc418 	bl	678 <__stack_chk_fail>
    f61c:	a94153f3 	ldp	x19, x20, [sp, #16]
    f620:	a9425bf5 	ldp	x21, x22, [sp, #32]
    f624:	a94363f7 	ldp	x23, x24, [sp, #48]
    f628:	a8c57bfd 	ldp	x29, x30, [sp], #80
    f62c:	d65f03c0 	ret

000000000000f630 <TEE_CipherDoFinal>:
TEE_CipherDoFinal():
    f630:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
    f634:	910003fd 	mov	x29, sp
    f638:	a90153f3 	stp	x19, x20, [sp, #16]
    f63c:	aa0003f3 	mov	x19, x0
    f640:	d0000040 	adrp	x0, 19000 <_DYNAMIC>
    f644:	aa0103f4 	mov	x20, x1
    f648:	a9025bf5 	stp	x21, x22, [sp, #32]
    f64c:	aa0203f5 	mov	x21, x2
    f650:	f9409801 	ldr	x1, [x0, #304]
    f654:	a90363f7 	stp	x23, x24, [sp, #48]
    f658:	aa0003f8 	mov	x24, x0
    f65c:	f90023f9 	str	x25, [sp, #64]
    f660:	f9400022 	ldr	x2, [x1]
    f664:	f9002fe2 	str	x2, [sp, #88]
    f668:	d2800002 	mov	x2, #0x0                   	// #0
    f66c:	f9002bff 	str	xzr, [sp, #80]
    f670:	b50001f3 	cbnz	x19, f6ac <TEE_CipherDoFinal+0x7c>
    f674:	129fff34 	mov	w20, #0xffff0006            	// #-65530
    f678:	7100029f 	cmp	w20, #0x0
    f67c:	129ffde0 	mov	w0, #0xffff0010            	// #-65520
    f680:	7a401284 	ccmp	w20, w0, #0x4, ne  // ne = any
    f684:	54000060 	b.eq	f690 <TEE_CipherDoFinal+0x60>  // b.none
    f688:	2a1403e0 	mov	w0, w20
    f68c:	97ffd7b0 	bl	554c <TEE_Panic>
    f690:	f9409b18 	ldr	x24, [x24, #304]
    f694:	f9402fe0 	ldr	x0, [sp, #88]
    f698:	f9400301 	ldr	x1, [x24]
    f69c:	eb010000 	subs	x0, x0, x1
    f6a0:	d2800001 	mov	x1, #0x0                   	// #0
    f6a4:	54000c40 	b.eq	f82c <TEE_CipherDoFinal+0x1fc>  // b.none
    f6a8:	97ffc3f4 	bl	678 <__stack_chk_fail>
    f6ac:	f100029f 	cmp	x20, #0x0
    f6b0:	fa400aa4 	ccmp	x21, #0x0, #0x4, eq  // eq = none
    f6b4:	54fffe01 	b.ne	f674 <TEE_CipherDoFinal+0x44>  // b.any
    f6b8:	aa0303f7 	mov	x23, x3
    f6bc:	aa0403f6 	mov	x22, x4
    f6c0:	b4000084 	cbz	x4, f6d0 <TEE_CipherDoFinal+0xa0>
    f6c4:	aa0403e0 	mov	x0, x4
    f6c8:	d2800101 	mov	x1, #0x8                   	// #8
    f6cc:	97ffd810 	bl	570c <__utee_check_inout_annotation>
    f6d0:	b9400660 	ldr	w0, [x19, #4]
    f6d4:	7100041f 	cmp	w0, #0x1
    f6d8:	54fffce1 	b.ne	f674 <TEE_CipherDoFinal+0x44>  // b.any
    f6dc:	b9401e60 	ldr	w0, [x19, #28]
    f6e0:	368ffca0 	tbz	w0, #17, f674 <TEE_CipherDoFinal+0x44>
    f6e4:	b9403260 	ldr	w0, [x19, #48]
    f6e8:	7100041f 	cmp	w0, #0x1
    f6ec:	54fffc41 	b.ne	f674 <TEE_CipherDoFinal+0x44>  // b.any
    f6f0:	b9400260 	ldr	w0, [x19]
    f6f4:	12802021 	mov	w1, #0xfffffefe            	// #-258
    f6f8:	52800202 	mov	w2, #0x10                  	// #16
    f6fc:	0a010001 	and	w1, w0, w1
    f700:	72a20002 	movk	w2, #0x1000, lsl #16
    f704:	6b02003f 	cmp	w1, w2
    f708:	f9402661 	ldr	x1, [x19, #72]
    f70c:	540000e0 	b.eq	f728 <TEE_CipherDoFinal+0xf8>  // b.none
    f710:	12177800 	and	w0, w0, #0xfffffeff
    f714:	529ffda2 	mov	w2, #0xffed                	// #65517
    f718:	72bdffe2 	movk	w2, #0xefff, lsl #16
    f71c:	0b020000 	add	w0, w0, w2
    f720:	7100041f 	cmp	w0, #0x1
    f724:	540000c8 	b.hi	f73c <TEE_CipherDoFinal+0x10c>  // b.pmore
    f728:	f9402a60 	ldr	x0, [x19, #80]
    f72c:	8b0002a0 	add	x0, x21, x0
    f730:	9ac10802 	udiv	x2, x0, x1
    f734:	9b018040 	msub	x0, x2, x1, x0
    f738:	b5fff9e0 	cbnz	x0, f674 <TEE_CipherDoFinal+0x44>
    f73c:	f100043f 	cmp	x1, #0x1
    f740:	540001a9 	b.ls	f774 <TEE_CipherDoFinal+0x144>  // b.plast
    f744:	f9402a60 	ldr	x0, [x19, #80]
    f748:	8b0002a0 	add	x0, x21, x0
    f74c:	b4000076 	cbz	x22, f758 <TEE_CipherDoFinal+0x128>
    f750:	f94002c2 	ldr	x2, [x22]
    f754:	f9002be2 	str	x2, [sp, #80]
    f758:	f9402be2 	ldr	x2, [sp, #80]
    f75c:	eb00005f 	cmp	x2, x0
    f760:	540000e2 	b.cs	f77c <TEE_CipherDoFinal+0x14c>  // b.hs, b.nlast
    f764:	b4000056 	cbz	x22, f76c <TEE_CipherDoFinal+0x13c>
    f768:	f90002c0 	str	x0, [x22]
    f76c:	129ffdf4 	mov	w20, #0xffff0010            	// #-65520
    f770:	17ffffc2 	b	f678 <TEE_CipherDoFinal+0x48>
    f774:	aa1503e0 	mov	x0, x21
    f778:	17fffff5 	b	f74c <TEE_CipherDoFinal+0x11c>
    f77c:	f100043f 	cmp	x1, #0x1
    f780:	910143f9 	add	x25, sp, #0x50
    f784:	54000429 	b.ls	f808 <TEE_CipherDoFinal+0x1d8>  // b.plast
    f788:	b40001f5 	cbz	x21, f7c4 <TEE_CipherDoFinal+0x194>
    f78c:	f940eb01 	ldr	x1, [x24, #464]
    f790:	aa1403e2 	mov	x2, x20
    f794:	aa1903e5 	mov	x5, x25
    f798:	aa1703e4 	mov	x4, x23
    f79c:	aa1503e3 	mov	x3, x21
    f7a0:	aa1303e0 	mov	x0, x19
    f7a4:	97fff794 	bl	d5f4 <tee_buffer_update>
    f7a8:	2a0003f4 	mov	w20, w0
    f7ac:	35fff660 	cbnz	w0, f678 <TEE_CipherDoFinal+0x48>
    f7b0:	f9402bf5 	ldr	x21, [sp, #80]
    f7b4:	f94002c0 	ldr	x0, [x22]
    f7b8:	8b1502f7 	add	x23, x23, x21
    f7bc:	cb150000 	sub	x0, x0, x21
    f7c0:	f9002be0 	str	x0, [sp, #80]
    f7c4:	b9405a60 	ldr	w0, [x19, #88]
    f7c8:	aa1903e4 	mov	x4, x25
    f7cc:	f9401e61 	ldr	x1, [x19, #56]
    f7d0:	aa1703e3 	mov	x3, x23
    f7d4:	f9402a62 	ldr	x2, [x19, #80]
    f7d8:	97ffca5a 	bl	2140 <_utee_cipher_final>
    f7dc:	2a0003f4 	mov	w20, w0
    f7e0:	35fff4d4 	cbnz	w20, f678 <TEE_CipherDoFinal+0x48>
    f7e4:	b4000096 	cbz	x22, f7f4 <TEE_CipherDoFinal+0x1c4>
    f7e8:	f9402be0 	ldr	x0, [sp, #80]
    f7ec:	8b150000 	add	x0, x0, x21
    f7f0:	f90002c0 	str	x0, [x22]
    f7f4:	b9401e60 	ldr	w0, [x19, #28]
    f7f8:	b900327f 	str	wzr, [x19, #48]
    f7fc:	120e7800 	and	w0, w0, #0xfffdffff
    f800:	b9001e60 	str	w0, [x19, #28]
    f804:	17ffff9d 	b	f678 <TEE_CipherDoFinal+0x48>
    f808:	b9405a60 	ldr	w0, [x19, #88]
    f80c:	aa1503e2 	mov	x2, x21
    f810:	aa1403e1 	mov	x1, x20
    f814:	aa1903e4 	mov	x4, x25
    f818:	aa1703e3 	mov	x3, x23
    f81c:	d2800015 	mov	x21, #0x0                   	// #0
    f820:	97ffca48 	bl	2140 <_utee_cipher_final>
    f824:	2a0003f4 	mov	w20, w0
    f828:	17ffffee 	b	f7e0 <TEE_CipherDoFinal+0x1b0>
    f82c:	2a1403e0 	mov	w0, w20
    f830:	a94153f3 	ldp	x19, x20, [sp, #16]
    f834:	a9425bf5 	ldp	x21, x22, [sp, #32]
    f838:	a94363f7 	ldp	x23, x24, [sp, #48]
    f83c:	f94023f9 	ldr	x25, [sp, #64]
    f840:	a8c67bfd 	ldp	x29, x30, [sp], #96
    f844:	d65f03c0 	ret

000000000000f848 <__GP11_TEE_CipherDoFinal>:
__GP11_TEE_CipherDoFinal():
    f848:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    f84c:	d0000045 	adrp	x5, 19000 <_DYNAMIC>
    f850:	910003fd 	mov	x29, sp
    f854:	f94098a5 	ldr	x5, [x5, #304]
    f858:	a90153f3 	stp	x19, x20, [sp, #16]
    f85c:	aa0003f4 	mov	x20, x0
    f860:	a9025bf5 	stp	x21, x22, [sp, #32]
    f864:	aa0403f3 	mov	x19, x4
    f868:	aa0103f5 	mov	x21, x1
    f86c:	f9001bf7 	str	x23, [sp, #48]
    f870:	2a0203f6 	mov	w22, w2
    f874:	aa0303f7 	mov	x23, x3
    f878:	f94000a0 	ldr	x0, [x5]
    f87c:	f90027e0 	str	x0, [sp, #72]
    f880:	d2800000 	mov	x0, #0x0                   	// #0
    f884:	f90023ff 	str	xzr, [sp, #64]
    f888:	b40000c4 	cbz	x4, f8a0 <__GP11_TEE_CipherDoFinal+0x58>
    f88c:	aa0403e0 	mov	x0, x4
    f890:	d2800081 	mov	x1, #0x4                   	// #4
    f894:	97ffd79e 	bl	570c <__utee_check_inout_annotation>
    f898:	b9400260 	ldr	w0, [x19]
    f89c:	f90023e0 	str	x0, [sp, #64]
    f8a0:	910103e4 	add	x4, sp, #0x40
    f8a4:	aa1703e3 	mov	x3, x23
    f8a8:	2a1603e2 	mov	w2, w22
    f8ac:	aa1503e1 	mov	x1, x21
    f8b0:	aa1403e0 	mov	x0, x20
    f8b4:	97ffff5f 	bl	f630 <TEE_CipherDoFinal>
    f8b8:	b4000073 	cbz	x19, f8c4 <__GP11_TEE_CipherDoFinal+0x7c>
    f8bc:	f94023e1 	ldr	x1, [sp, #64]
    f8c0:	b9000261 	str	w1, [x19]
    f8c4:	d0000045 	adrp	x5, 19000 <_DYNAMIC>
    f8c8:	f94098a5 	ldr	x5, [x5, #304]
    f8cc:	f94027e1 	ldr	x1, [sp, #72]
    f8d0:	f94000a2 	ldr	x2, [x5]
    f8d4:	eb020021 	subs	x1, x1, x2
    f8d8:	d2800002 	mov	x2, #0x0                   	// #0
    f8dc:	54000040 	b.eq	f8e4 <__GP11_TEE_CipherDoFinal+0x9c>  // b.none
    f8e0:	97ffc366 	bl	678 <__stack_chk_fail>
    f8e4:	a94153f3 	ldp	x19, x20, [sp, #16]
    f8e8:	a9425bf5 	ldp	x21, x22, [sp, #32]
    f8ec:	f9401bf7 	ldr	x23, [sp, #48]
    f8f0:	a8c57bfd 	ldp	x29, x30, [sp], #80
    f8f4:	d65f03c0 	ret

000000000000f8f8 <TEE_MACInit>:
TEE_MACInit():
    f8f8:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    f8fc:	910003fd 	mov	x29, sp
    f900:	a90153f3 	stp	x19, x20, [sp, #16]
    f904:	aa0003f3 	mov	x19, x0
    f908:	aa0103f4 	mov	x20, x1
    f90c:	f90013f5 	str	x21, [sp, #32]
    f910:	aa0203f5 	mov	x21, x2
    f914:	b5000060 	cbnz	x0, f920 <TEE_MACInit+0x28>
    f918:	52800000 	mov	w0, #0x0                   	// #0
    f91c:	97ffd70c 	bl	554c <TEE_Panic>
    f920:	b9400660 	ldr	w0, [x19, #4]
    f924:	71000c1f 	cmp	w0, #0x3
    f928:	54000060 	b.eq	f934 <TEE_MACInit+0x3c>  // b.none
    f92c:	52800000 	mov	w0, #0x0                   	// #0
    f930:	97ffd707 	bl	554c <TEE_Panic>
    f934:	b9401e60 	ldr	w0, [x19, #28]
    f938:	36900060 	tbz	w0, #18, f944 <TEE_MACInit+0x4c>
    f93c:	f9401260 	ldr	x0, [x19, #32]
    f940:	b5000060 	cbnz	x0, f94c <TEE_MACInit+0x54>
    f944:	52800000 	mov	w0, #0x0                   	// #0
    f948:	97ffd701 	bl	554c <TEE_Panic>
    f94c:	b9403260 	ldr	w0, [x19, #48]
    f950:	34000060 	cbz	w0, f95c <TEE_MACInit+0x64>
    f954:	aa1303e0 	mov	x0, x19
    f958:	97fffc80 	bl	eb58 <TEE_ResetOperation>
    f95c:	52800020 	mov	w0, #0x1                   	// #1
    f960:	b9003260 	str	w0, [x19, #48]
    f964:	b9405a60 	ldr	w0, [x19, #88]
    f968:	2a1503e2 	mov	w2, w21
    f96c:	aa1403e1 	mov	x1, x20
    f970:	97ffc9e5 	bl	2104 <_utee_hash_init>
    f974:	34000040 	cbz	w0, f97c <TEE_MACInit+0x84>
    f978:	97ffd6f5 	bl	554c <TEE_Panic>
    f97c:	b9401e60 	ldr	w0, [x19, #28]
    f980:	f94013f5 	ldr	x21, [sp, #32]
    f984:	320f0000 	orr	w0, w0, #0x20000
    f988:	b9001e60 	str	w0, [x19, #28]
    f98c:	f9002a7f 	str	xzr, [x19, #80]
    f990:	a94153f3 	ldp	x19, x20, [sp, #16]
    f994:	a8c37bfd 	ldp	x29, x30, [sp], #48
    f998:	d65f03c0 	ret

000000000000f99c <__GP11_TEE_MACInit>:
__GP11_TEE_MACInit():
    f99c:	2a0203e2 	mov	w2, w2
    f9a0:	17ffffd6 	b	f8f8 <TEE_MACInit>

000000000000f9a4 <TEE_MACUpdate>:
TEE_MACUpdate():
    f9a4:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    f9a8:	910003fd 	mov	x29, sp
    f9ac:	a90153f3 	stp	x19, x20, [sp, #16]
    f9b0:	aa0003f3 	mov	x19, x0
    f9b4:	aa0103f4 	mov	x20, x1
    f9b8:	f90013f5 	str	x21, [sp, #32]
    f9bc:	aa0203f5 	mov	x21, x2
    f9c0:	b4000080 	cbz	x0, f9d0 <TEE_MACUpdate+0x2c>
    f9c4:	f100003f 	cmp	x1, #0x0
    f9c8:	fa400844 	ccmp	x2, #0x0, #0x4, eq  // eq = none
    f9cc:	54000060 	b.eq	f9d8 <TEE_MACUpdate+0x34>  // b.none
    f9d0:	52800000 	mov	w0, #0x0                   	// #0
    f9d4:	97ffd6de 	bl	554c <TEE_Panic>
    f9d8:	b9400660 	ldr	w0, [x19, #4]
    f9dc:	71000c1f 	cmp	w0, #0x3
    f9e0:	54000060 	b.eq	f9ec <TEE_MACUpdate+0x48>  // b.none
    f9e4:	52800000 	mov	w0, #0x0                   	// #0
    f9e8:	97ffd6d9 	bl	554c <TEE_Panic>
    f9ec:	b9401e60 	ldr	w0, [x19, #28]
    f9f0:	37880060 	tbnz	w0, #17, f9fc <TEE_MACUpdate+0x58>
    f9f4:	52800000 	mov	w0, #0x0                   	// #0
    f9f8:	97ffd6d5 	bl	554c <TEE_Panic>
    f9fc:	b9403260 	ldr	w0, [x19, #48]
    fa00:	7100041f 	cmp	w0, #0x1
    fa04:	54000060 	b.eq	fa10 <TEE_MACUpdate+0x6c>  // b.none
    fa08:	52800000 	mov	w0, #0x0                   	// #0
    fa0c:	97ffd6d0 	bl	554c <TEE_Panic>
    fa10:	b9405a60 	ldr	w0, [x19, #88]
    fa14:	aa1503e2 	mov	x2, x21
    fa18:	aa1403e1 	mov	x1, x20
    fa1c:	97ffc9bd 	bl	2110 <_utee_hash_update>
    fa20:	340000a0 	cbz	w0, fa34 <TEE_MACUpdate+0x90>
    fa24:	a94153f3 	ldp	x19, x20, [sp, #16]
    fa28:	f94013f5 	ldr	x21, [sp, #32]
    fa2c:	a8c37bfd 	ldp	x29, x30, [sp], #48
    fa30:	17ffd6c7 	b	554c <TEE_Panic>
    fa34:	a94153f3 	ldp	x19, x20, [sp, #16]
    fa38:	f94013f5 	ldr	x21, [sp, #32]
    fa3c:	a8c37bfd 	ldp	x29, x30, [sp], #48
    fa40:	d65f03c0 	ret

000000000000fa44 <__GP11_TEE_MACUpdate>:
__GP11_TEE_MACUpdate():
    fa44:	2a0203e2 	mov	w2, w2
    fa48:	17ffffd7 	b	f9a4 <TEE_MACUpdate>

000000000000fa4c <TEE_MACComputeFinal>:
TEE_MACComputeFinal():
    fa4c:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    fa50:	d0000045 	adrp	x5, 19000 <_DYNAMIC>
    fa54:	910003fd 	mov	x29, sp
    fa58:	f94098a5 	ldr	x5, [x5, #304]
    fa5c:	a90153f3 	stp	x19, x20, [sp, #16]
    fa60:	aa0003f3 	mov	x19, x0
    fa64:	a9025bf5 	stp	x21, x22, [sp, #32]
    fa68:	f9001bf7 	str	x23, [sp, #48]
    fa6c:	f94000a0 	ldr	x0, [x5]
    fa70:	f90027e0 	str	x0, [sp, #72]
    fa74:	d2800000 	mov	x0, #0x0                   	// #0
    fa78:	b5000213 	cbnz	x19, fab8 <TEE_MACComputeFinal+0x6c>
    fa7c:	129fff34 	mov	w20, #0xffff0006            	// #-65530
    fa80:	7100029f 	cmp	w20, #0x0
    fa84:	129ffde0 	mov	w0, #0xffff0010            	// #-65520
    fa88:	7a401284 	ccmp	w20, w0, #0x4, ne  // ne = any
    fa8c:	54000060 	b.eq	fa98 <TEE_MACComputeFinal+0x4c>  // b.none
    fa90:	2a1403e0 	mov	w0, w20
    fa94:	97ffd6ae 	bl	554c <TEE_Panic>
    fa98:	d0000045 	adrp	x5, 19000 <_DYNAMIC>
    fa9c:	f94098a5 	ldr	x5, [x5, #304]
    faa0:	f94027e0 	ldr	x0, [sp, #72]
    faa4:	f94000a1 	ldr	x1, [x5]
    faa8:	eb010000 	subs	x0, x0, x1
    faac:	d2800001 	mov	x1, #0x0                   	// #0
    fab0:	540004a0 	b.eq	fb44 <TEE_MACComputeFinal+0xf8>  // b.none
    fab4:	97ffc2f1 	bl	678 <__stack_chk_fail>
    fab8:	f100003f 	cmp	x1, #0x0
    fabc:	aa0103f4 	mov	x20, x1
    fac0:	aa0203f6 	mov	x22, x2
    fac4:	fa400844 	ccmp	x2, #0x0, #0x4, eq  // eq = none
    fac8:	54fffda1 	b.ne	fa7c <TEE_MACComputeFinal+0x30>  // b.any
    facc:	aa0403e0 	mov	x0, x4
    fad0:	aa0303f7 	mov	x23, x3
    fad4:	aa0403f5 	mov	x21, x4
    fad8:	d2800101 	mov	x1, #0x8                   	// #8
    fadc:	97ffd70c 	bl	570c <__utee_check_inout_annotation>
    fae0:	b9400660 	ldr	w0, [x19, #4]
    fae4:	71000c1f 	cmp	w0, #0x3
    fae8:	54fffca1 	b.ne	fa7c <TEE_MACComputeFinal+0x30>  // b.any
    faec:	b9401e60 	ldr	w0, [x19, #28]
    faf0:	368ffc60 	tbz	w0, #17, fa7c <TEE_MACComputeFinal+0x30>
    faf4:	b9403260 	ldr	w0, [x19, #48]
    faf8:	7100041f 	cmp	w0, #0x1
    fafc:	54fffc01 	b.ne	fa7c <TEE_MACComputeFinal+0x30>  // b.any
    fb00:	f94002a0 	ldr	x0, [x21]
    fb04:	f90023e0 	str	x0, [sp, #64]
    fb08:	b9405a60 	ldr	w0, [x19, #88]
    fb0c:	aa1403e1 	mov	x1, x20
    fb10:	910103e4 	add	x4, sp, #0x40
    fb14:	aa1703e3 	mov	x3, x23
    fb18:	aa1603e2 	mov	x2, x22
    fb1c:	97ffc980 	bl	211c <_utee_hash_final>
    fb20:	2a0003f4 	mov	w20, w0
    fb24:	f94023e0 	ldr	x0, [sp, #64]
    fb28:	f90002a0 	str	x0, [x21]
    fb2c:	35fffab4 	cbnz	w20, fa80 <TEE_MACComputeFinal+0x34>
    fb30:	b9401e60 	ldr	w0, [x19, #28]
    fb34:	b900327f 	str	wzr, [x19, #48]
    fb38:	120e7800 	and	w0, w0, #0xfffdffff
    fb3c:	b9001e60 	str	w0, [x19, #28]
    fb40:	17ffffd0 	b	fa80 <TEE_MACComputeFinal+0x34>
    fb44:	2a1403e0 	mov	w0, w20
    fb48:	a94153f3 	ldp	x19, x20, [sp, #16]
    fb4c:	a9425bf5 	ldp	x21, x22, [sp, #32]
    fb50:	f9401bf7 	ldr	x23, [sp, #48]
    fb54:	a8c57bfd 	ldp	x29, x30, [sp], #80
    fb58:	d65f03c0 	ret

000000000000fb5c <__GP11_TEE_MACComputeFinal>:
__GP11_TEE_MACComputeFinal():
    fb5c:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    fb60:	910003fd 	mov	x29, sp
    fb64:	a90153f3 	stp	x19, x20, [sp, #16]
    fb68:	d0000054 	adrp	x20, 19000 <_DYNAMIC>
    fb6c:	aa0403f3 	mov	x19, x4
    fb70:	a9025bf5 	stp	x21, x22, [sp, #32]
    fb74:	aa0003f5 	mov	x21, x0
    fb78:	aa0103f6 	mov	x22, x1
    fb7c:	f9409a80 	ldr	x0, [x20, #304]
    fb80:	a90363f7 	stp	x23, x24, [sp, #48]
    fb84:	2a0203f7 	mov	w23, w2
    fb88:	f9400001 	ldr	x1, [x0]
    fb8c:	f90027e1 	str	x1, [sp, #72]
    fb90:	d2800001 	mov	x1, #0x0                   	// #0
    fb94:	aa0303f8 	mov	x24, x3
    fb98:	aa0403e0 	mov	x0, x4
    fb9c:	d2800081 	mov	x1, #0x4                   	// #4
    fba0:	f90023ff 	str	xzr, [sp, #64]
    fba4:	97ffd6da 	bl	570c <__utee_check_inout_annotation>
    fba8:	b9400260 	ldr	w0, [x19]
    fbac:	2a1703e2 	mov	w2, w23
    fbb0:	aa1603e1 	mov	x1, x22
    fbb4:	910103e4 	add	x4, sp, #0x40
    fbb8:	aa1803e3 	mov	x3, x24
    fbbc:	f90023e0 	str	x0, [sp, #64]
    fbc0:	aa1503e0 	mov	x0, x21
    fbc4:	97ffffa2 	bl	fa4c <TEE_MACComputeFinal>
    fbc8:	f9409a94 	ldr	x20, [x20, #304]
    fbcc:	f94023e1 	ldr	x1, [sp, #64]
    fbd0:	b9000261 	str	w1, [x19]
    fbd4:	f94027e1 	ldr	x1, [sp, #72]
    fbd8:	f9400282 	ldr	x2, [x20]
    fbdc:	eb020021 	subs	x1, x1, x2
    fbe0:	d2800002 	mov	x2, #0x0                   	// #0
    fbe4:	54000040 	b.eq	fbec <__GP11_TEE_MACComputeFinal+0x90>  // b.none
    fbe8:	97ffc2a4 	bl	678 <__stack_chk_fail>
    fbec:	a94153f3 	ldp	x19, x20, [sp, #16]
    fbf0:	a9425bf5 	ldp	x21, x22, [sp, #32]
    fbf4:	a94363f7 	ldp	x23, x24, [sp, #48]
    fbf8:	a8c57bfd 	ldp	x29, x30, [sp], #80
    fbfc:	d65f03c0 	ret

000000000000fc00 <TEE_MACCompareFinal>:
TEE_MACCompareFinal():
    fc00:	a9b77bfd 	stp	x29, x30, [sp, #-144]!
    fc04:	d0000045 	adrp	x5, 19000 <_DYNAMIC>
    fc08:	910003fd 	mov	x29, sp
    fc0c:	f94098a5 	ldr	x5, [x5, #304]
    fc10:	a90153f3 	stp	x19, x20, [sp, #16]
    fc14:	a9025bf5 	stp	x21, x22, [sp, #32]
    fc18:	aa0303f5 	mov	x21, x3
    fc1c:	f9001bf7 	str	x23, [sp, #48]
    fc20:	f94000a3 	ldr	x3, [x5]
    fc24:	f90047e3 	str	x3, [sp, #136]
    fc28:	d2800003 	mov	x3, #0x0                   	// #0
    fc2c:	a9057fff 	stp	xzr, xzr, [sp, #80]
    fc30:	d2800803 	mov	x3, #0x40                  	// #64
    fc34:	a9047fe3 	stp	x3, xzr, [sp, #64]
    fc38:	b9400403 	ldr	w3, [x0, #4]
    fc3c:	a9067fff 	stp	xzr, xzr, [sp, #96]
    fc40:	a9077fff 	stp	xzr, xzr, [sp, #112]
    fc44:	f90043ff 	str	xzr, [sp, #128]
    fc48:	71000c7f 	cmp	w3, #0x3
    fc4c:	540004c1 	b.ne	fce4 <TEE_MACCompareFinal+0xe4>  // b.any
    fc50:	b9401c03 	ldr	w3, [x0, #28]
    fc54:	aa0003f4 	mov	x20, x0
    fc58:	36880463 	tbz	w3, #17, fce4 <TEE_MACCompareFinal+0xe4>
    fc5c:	b9403003 	ldr	w3, [x0, #48]
    fc60:	7100047f 	cmp	w3, #0x1
    fc64:	54000401 	b.ne	fce4 <TEE_MACCompareFinal+0xe4>  // b.any
    fc68:	910123f7 	add	x23, sp, #0x48
    fc6c:	aa0403f6 	mov	x22, x4
    fc70:	aa1703e3 	mov	x3, x23
    fc74:	910103e4 	add	x4, sp, #0x40
    fc78:	97ffff75 	bl	fa4c <TEE_MACComputeFinal>
    fc7c:	2a0003f3 	mov	w19, w0
    fc80:	350000a0 	cbnz	w0, fc94 <TEE_MACCompareFinal+0x94>
    fc84:	f94023e2 	ldr	x2, [sp, #64]
    fc88:	eb16005f 	cmp	x2, x22
    fc8c:	54000200 	b.eq	fccc <TEE_MACCompareFinal+0xcc>  // b.none
    fc90:	1299f1d3 	mov	w19, #0xffff3071            	// #-53135
    fc94:	7100027f 	cmp	w19, #0x0
    fc98:	1299f1c0 	mov	w0, #0xffff3071            	// #-53135
    fc9c:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
    fca0:	54000060 	b.eq	fcac <TEE_MACCompareFinal+0xac>  // b.none
    fca4:	2a1303e0 	mov	w0, w19
    fca8:	97ffd629 	bl	554c <TEE_Panic>
    fcac:	d0000045 	adrp	x5, 19000 <_DYNAMIC>
    fcb0:	f94098a5 	ldr	x5, [x5, #304]
    fcb4:	f94047e0 	ldr	x0, [sp, #136]
    fcb8:	f94000a1 	ldr	x1, [x5]
    fcbc:	eb010000 	subs	x0, x0, x1
    fcc0:	d2800001 	mov	x1, #0x0                   	// #0
    fcc4:	54000140 	b.eq	fcec <TEE_MACCompareFinal+0xec>  // b.none
    fcc8:	97ffc26c 	bl	678 <__stack_chk_fail>
    fccc:	aa1703e1 	mov	x1, x23
    fcd0:	aa1503e0 	mov	x0, x21
    fcd4:	97fff5e5 	bl	d468 <consttime_memcmp>
    fcd8:	35fffdc0 	cbnz	w0, fc90 <TEE_MACCompareFinal+0x90>
    fcdc:	b900329f 	str	wzr, [x20, #48]
    fce0:	17ffffed 	b	fc94 <TEE_MACCompareFinal+0x94>
    fce4:	129fff33 	mov	w19, #0xffff0006            	// #-65530
    fce8:	17ffffeb 	b	fc94 <TEE_MACCompareFinal+0x94>
    fcec:	2a1303e0 	mov	w0, w19
    fcf0:	a94153f3 	ldp	x19, x20, [sp, #16]
    fcf4:	a9425bf5 	ldp	x21, x22, [sp, #32]
    fcf8:	f9401bf7 	ldr	x23, [sp, #48]
    fcfc:	a8c97bfd 	ldp	x29, x30, [sp], #144
    fd00:	d65f03c0 	ret

000000000000fd04 <__GP11_TEE_MACCompareFinal>:
__GP11_TEE_MACCompareFinal():
    fd04:	2a0403e4 	mov	w4, w4
    fd08:	2a0203e2 	mov	w2, w2
    fd0c:	17ffffbd 	b	fc00 <TEE_MACCompareFinal>

000000000000fd10 <TEE_AEInit>:
TEE_AEInit():
    fd10:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    fd14:	f100001f 	cmp	x0, #0x0
    fd18:	fa401824 	ccmp	x1, #0x0, #0x4, ne  // ne = any
    fd1c:	910003fd 	mov	x29, sp
    fd20:	a90153f3 	stp	x19, x20, [sp, #16]
    fd24:	f90013f5 	str	x21, [sp, #32]
    fd28:	540004e0 	b.eq	fdc4 <TEE_AEInit+0xb4>  // b.none
    fd2c:	aa0003f4 	mov	x20, x0
    fd30:	b9400400 	ldr	w0, [x0, #4]
    fd34:	7100101f 	cmp	w0, #0x4
    fd38:	54000461 	b.ne	fdc4 <TEE_AEInit+0xb4>  // b.any
    fd3c:	b9403280 	ldr	w0, [x20, #48]
    fd40:	35000420 	cbnz	w0, fdc4 <TEE_AEInit+0xb4>
    fd44:	b9400286 	ldr	w6, [x20]
    fd48:	52810200 	mov	w0, #0x810                 	// #2064
    fd4c:	72a80000 	movk	w0, #0x4000, lsl #16
    fd50:	6b0000df 	cmp	w6, w0
    fd54:	540000c1 	b.ne	fd6c <TEE_AEInit+0x5c>  // b.any
    fd58:	51018060 	sub	w0, w3, #0x60
    fd5c:	7100801f 	cmp	w0, #0x20
    fd60:	54000368 	b.hi	fdcc <TEE_AEInit+0xbc>  // b.pmore
    fd64:	f240087f 	tst	x3, #0x7
    fd68:	54000321 	b.ne	fdcc <TEE_AEInit+0xbc>  // b.any
    fd6c:	b9405a80 	ldr	w0, [x20, #88]
    fd70:	53037c75 	lsr	w21, w3, #3
    fd74:	53037c63 	lsr	w3, w3, #3
    fd78:	97ffc913 	bl	21c4 <_utee_authenc_init>
    fd7c:	2a0003f3 	mov	w19, w0
    fd80:	350000c0 	cbnz	w0, fd98 <TEE_AEInit+0x88>
    fd84:	b9401e80 	ldr	w0, [x20, #28]
    fd88:	b9000e95 	str	w21, [x20, #12]
    fd8c:	320f0000 	orr	w0, w0, #0x20000
    fd90:	b9001e80 	str	w0, [x20, #28]
    fd94:	f9002a9f 	str	xzr, [x20, #80]
    fd98:	7100027f 	cmp	w19, #0x0
    fd9c:	129ffea0 	mov	w0, #0xffff000a            	// #-65526
    fda0:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
    fda4:	54000060 	b.eq	fdb0 <TEE_AEInit+0xa0>  // b.none
    fda8:	2a1303e0 	mov	w0, w19
    fdac:	97ffd5e8 	bl	554c <TEE_Panic>
    fdb0:	2a1303e0 	mov	w0, w19
    fdb4:	a94153f3 	ldp	x19, x20, [sp, #16]
    fdb8:	f94013f5 	ldr	x21, [sp, #32]
    fdbc:	a8c37bfd 	ldp	x29, x30, [sp], #48
    fdc0:	d65f03c0 	ret
    fdc4:	129fff33 	mov	w19, #0xffff0006            	// #-65530
    fdc8:	17fffff4 	b	fd98 <TEE_AEInit+0x88>
    fdcc:	129ffeb3 	mov	w19, #0xffff000a            	// #-65526
    fdd0:	17fffff2 	b	fd98 <TEE_AEInit+0x88>

000000000000fdd4 <__GP11_TEE_AEInit>:
__GP11_TEE_AEInit():
    fdd4:	2a0503e5 	mov	w5, w5
    fdd8:	2a0403e4 	mov	w4, w4
    fddc:	2a0203e2 	mov	w2, w2
    fde0:	17ffffcc 	b	fd10 <TEE_AEInit>

000000000000fde4 <TEE_AEUpdateAAD>:
TEE_AEUpdateAAD():
    fde4:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    fde8:	910003fd 	mov	x29, sp
    fdec:	a90153f3 	stp	x19, x20, [sp, #16]
    fdf0:	aa0003f3 	mov	x19, x0
    fdf4:	aa0103f4 	mov	x20, x1
    fdf8:	f90013f5 	str	x21, [sp, #32]
    fdfc:	aa0203f5 	mov	x21, x2
    fe00:	b4000080 	cbz	x0, fe10 <TEE_AEUpdateAAD+0x2c>
    fe04:	f100003f 	cmp	x1, #0x0
    fe08:	fa400844 	ccmp	x2, #0x0, #0x4, eq  // eq = none
    fe0c:	54000060 	b.eq	fe18 <TEE_AEUpdateAAD+0x34>  // b.none
    fe10:	52800000 	mov	w0, #0x0                   	// #0
    fe14:	97ffd5ce 	bl	554c <TEE_Panic>
    fe18:	b9400660 	ldr	w0, [x19, #4]
    fe1c:	7100101f 	cmp	w0, #0x4
    fe20:	54000060 	b.eq	fe2c <TEE_AEUpdateAAD+0x48>  // b.none
    fe24:	52800000 	mov	w0, #0x0                   	// #0
    fe28:	97ffd5c9 	bl	554c <TEE_Panic>
    fe2c:	b9403260 	ldr	w0, [x19, #48]
    fe30:	34000060 	cbz	w0, fe3c <TEE_AEUpdateAAD+0x58>
    fe34:	52800000 	mov	w0, #0x0                   	// #0
    fe38:	97ffd5c5 	bl	554c <TEE_Panic>
    fe3c:	b9401e60 	ldr	w0, [x19, #28]
    fe40:	37880060 	tbnz	w0, #17, fe4c <TEE_AEUpdateAAD+0x68>
    fe44:	52800000 	mov	w0, #0x0                   	// #0
    fe48:	97ffd5c1 	bl	554c <TEE_Panic>
    fe4c:	b9405a60 	ldr	w0, [x19, #88]
    fe50:	aa1503e2 	mov	x2, x21
    fe54:	aa1403e1 	mov	x1, x20
    fe58:	97ffc8de 	bl	21d0 <_utee_authenc_update_aad>
    fe5c:	340000a0 	cbz	w0, fe70 <TEE_AEUpdateAAD+0x8c>
    fe60:	a94153f3 	ldp	x19, x20, [sp, #16]
    fe64:	f94013f5 	ldr	x21, [sp, #32]
    fe68:	a8c37bfd 	ldp	x29, x30, [sp], #48
    fe6c:	17ffd5b8 	b	554c <TEE_Panic>
    fe70:	a94153f3 	ldp	x19, x20, [sp, #16]
    fe74:	f94013f5 	ldr	x21, [sp, #32]
    fe78:	a8c37bfd 	ldp	x29, x30, [sp], #48
    fe7c:	d65f03c0 	ret

000000000000fe80 <__GP11_TEE_AEUpdateAAD>:
__GP11_TEE_AEUpdateAAD():
    fe80:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
    fe84:	910003fd 	mov	x29, sp
    fe88:	a90153f3 	stp	x19, x20, [sp, #16]
    fe8c:	aa0003f3 	mov	x19, x0
    fe90:	aa0103f4 	mov	x20, x1
    fe94:	f90013f5 	str	x21, [sp, #32]
    fe98:	2a0203f5 	mov	w21, w2
    fe9c:	b4000080 	cbz	x0, feac <__GP11_TEE_AEUpdateAAD+0x2c>
    fea0:	f100003f 	cmp	x1, #0x0
    fea4:	7a400844 	ccmp	w2, #0x0, #0x4, eq  // eq = none
    fea8:	54000060 	b.eq	feb4 <__GP11_TEE_AEUpdateAAD+0x34>  // b.none
    feac:	52800000 	mov	w0, #0x0                   	// #0
    feb0:	97ffd5a7 	bl	554c <TEE_Panic>
    feb4:	b9400660 	ldr	w0, [x19, #4]
    feb8:	7100101f 	cmp	w0, #0x4
    febc:	54000060 	b.eq	fec8 <__GP11_TEE_AEUpdateAAD+0x48>  // b.none
    fec0:	52800000 	mov	w0, #0x0                   	// #0
    fec4:	97ffd5a2 	bl	554c <TEE_Panic>
    fec8:	b9401e60 	ldr	w0, [x19, #28]
    fecc:	37880060 	tbnz	w0, #17, fed8 <__GP11_TEE_AEUpdateAAD+0x58>
    fed0:	52800000 	mov	w0, #0x0                   	// #0
    fed4:	97ffd59e 	bl	554c <TEE_Panic>
    fed8:	b9405a60 	ldr	w0, [x19, #88]
    fedc:	aa1403e1 	mov	x1, x20
    fee0:	2a1503e2 	mov	w2, w21
    fee4:	97ffc8bb 	bl	21d0 <_utee_authenc_update_aad>
    fee8:	52800021 	mov	w1, #0x1                   	// #1
    feec:	b9003261 	str	w1, [x19, #48]
    fef0:	340000a0 	cbz	w0, ff04 <__GP11_TEE_AEUpdateAAD+0x84>
    fef4:	a94153f3 	ldp	x19, x20, [sp, #16]
    fef8:	f94013f5 	ldr	x21, [sp, #32]
    fefc:	a8c37bfd 	ldp	x29, x30, [sp], #48
    ff00:	17ffd593 	b	554c <TEE_Panic>
    ff04:	a94153f3 	ldp	x19, x20, [sp, #16]
    ff08:	f94013f5 	ldr	x21, [sp, #32]
    ff0c:	a8c37bfd 	ldp	x29, x30, [sp], #48
    ff10:	d65f03c0 	ret

000000000000ff14 <TEE_AEUpdate>:
TEE_AEUpdate():
    ff14:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
    ff18:	910003fd 	mov	x29, sp
    ff1c:	a90153f3 	stp	x19, x20, [sp, #16]
    ff20:	a9025bf5 	stp	x21, x22, [sp, #32]
    ff24:	a90363f7 	stp	x23, x24, [sp, #48]
    ff28:	b50001c0 	cbnz	x0, ff60 <TEE_AEUpdate+0x4c>
    ff2c:	129fff33 	mov	w19, #0xffff0006            	// #-65530
    ff30:	7100027f 	cmp	w19, #0x0
    ff34:	129ffde0 	mov	w0, #0xffff0010            	// #-65520
    ff38:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
    ff3c:	54000060 	b.eq	ff48 <TEE_AEUpdate+0x34>  // b.none
    ff40:	2a1303e0 	mov	w0, w19
    ff44:	97ffd582 	bl	554c <TEE_Panic>
    ff48:	2a1303e0 	mov	w0, w19
    ff4c:	a94153f3 	ldp	x19, x20, [sp, #16]
    ff50:	a9425bf5 	ldp	x21, x22, [sp, #32]
    ff54:	a94363f7 	ldp	x23, x24, [sp, #48]
    ff58:	a8c47bfd 	ldp	x29, x30, [sp], #64
    ff5c:	d65f03c0 	ret
    ff60:	f100005f 	cmp	x2, #0x0
    ff64:	aa0103f3 	mov	x19, x1
    ff68:	1a9f07f8 	cset	w24, ne  // ne = any
    ff6c:	f100003f 	cmp	x1, #0x0
    ff70:	aa0203f5 	mov	x21, x2
    ff74:	7a400b04 	ccmp	w24, #0x0, #0x4, eq  // eq = none
    ff78:	54fffda1 	b.ne	ff2c <TEE_AEUpdate+0x18>  // b.any
    ff7c:	aa0003f4 	mov	x20, x0
    ff80:	aa0303f6 	mov	x22, x3
    ff84:	aa0303e0 	mov	x0, x3
    ff88:	aa0403f7 	mov	x23, x4
    ff8c:	aa0403e1 	mov	x1, x4
    ff90:	97ffd575 	bl	5564 <__utee_check_outbuf_annotation>
    ff94:	b9400680 	ldr	w0, [x20, #4]
    ff98:	7100101f 	cmp	w0, #0x4
    ff9c:	54fffc81 	b.ne	ff2c <TEE_AEUpdate+0x18>  // b.any
    ffa0:	b9401e80 	ldr	w0, [x20, #28]
    ffa4:	368ffc40 	tbz	w0, #17, ff2c <TEE_AEUpdate+0x18>
    ffa8:	aa1303e1 	mov	x1, x19
    ffac:	aa1703e4 	mov	x4, x23
    ffb0:	aa1603e3 	mov	x3, x22
    ffb4:	aa1503e2 	mov	x2, x21
    ffb8:	aa1403e0 	mov	x0, x20
    ffbc:	97fff649 	bl	d8e0 <ae_update_helper>
    ffc0:	7100031f 	cmp	w24, #0x0
    ffc4:	2a0003f3 	mov	w19, w0
    ffc8:	129ffde0 	mov	w0, #0xffff0010            	// #-65520
    ffcc:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
    ffd0:	54fffb00 	b.eq	ff30 <TEE_AEUpdate+0x1c>  // b.none
    ffd4:	52800020 	mov	w0, #0x1                   	// #1
    ffd8:	b9003280 	str	w0, [x20, #48]
    ffdc:	17ffffd5 	b	ff30 <TEE_AEUpdate+0x1c>

000000000000ffe0 <__GP11_TEE_AEUpdate>:
__GP11_TEE_AEUpdate():
    ffe0:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
    ffe4:	d0000045 	adrp	x5, 19000 <_DYNAMIC>
    ffe8:	910003fd 	mov	x29, sp
    ffec:	f94098a5 	ldr	x5, [x5, #304]
    fff0:	a90153f3 	stp	x19, x20, [sp, #16]
    fff4:	aa0003f4 	mov	x20, x0
    fff8:	a9025bf5 	stp	x21, x22, [sp, #32]
    fffc:	f9001bf7 	str	x23, [sp, #48]
   10000:	f94000a0 	ldr	x0, [x5]
   10004:	f90027e0 	str	x0, [sp, #72]
   10008:	d2800000 	mov	x0, #0x0                   	// #0
   1000c:	f90023ff 	str	xzr, [sp, #64]
   10010:	b5000214 	cbnz	x20, 10050 <__GP11_TEE_AEUpdate+0x70>
   10014:	129fff33 	mov	w19, #0xffff0006            	// #-65530
   10018:	7100027f 	cmp	w19, #0x0
   1001c:	129ffde0 	mov	w0, #0xffff0010            	// #-65520
   10020:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
   10024:	54000060 	b.eq	10030 <__GP11_TEE_AEUpdate+0x50>  // b.none
   10028:	2a1303e0 	mov	w0, w19
   1002c:	97ffd548 	bl	554c <TEE_Panic>
   10030:	b0000045 	adrp	x5, 19000 <_DYNAMIC>
   10034:	f94098a5 	ldr	x5, [x5, #304]
   10038:	f94027e0 	ldr	x0, [sp, #72]
   1003c:	f94000a1 	ldr	x1, [x5]
   10040:	eb010000 	subs	x0, x0, x1
   10044:	d2800001 	mov	x1, #0x0                   	// #0
   10048:	54000400 	b.eq	100c8 <__GP11_TEE_AEUpdate+0xe8>  // b.none
   1004c:	97ffc18b 	bl	678 <__stack_chk_fail>
   10050:	f100003f 	cmp	x1, #0x0
   10054:	aa0103f3 	mov	x19, x1
   10058:	2a0203f6 	mov	w22, w2
   1005c:	7a400844 	ccmp	w2, #0x0, #0x4, eq  // eq = none
   10060:	54fffda1 	b.ne	10014 <__GP11_TEE_AEUpdate+0x34>  // b.any
   10064:	aa0303e0 	mov	x0, x3
   10068:	aa0303f7 	mov	x23, x3
   1006c:	aa0403f5 	mov	x21, x4
   10070:	aa0403e1 	mov	x1, x4
   10074:	97ffd54f 	bl	55b0 <__utee_check_gp11_outbuf_annotation>
   10078:	b9400680 	ldr	w0, [x20, #4]
   1007c:	7100101f 	cmp	w0, #0x4
   10080:	54fffca1 	b.ne	10014 <__GP11_TEE_AEUpdate+0x34>  // b.any
   10084:	b9401e80 	ldr	w0, [x20, #28]
   10088:	368ffc60 	tbz	w0, #17, 10014 <__GP11_TEE_AEUpdate+0x34>
   1008c:	b94002a0 	ldr	w0, [x21]
   10090:	aa1303e1 	mov	x1, x19
   10094:	910103e4 	add	x4, sp, #0x40
   10098:	aa1703e3 	mov	x3, x23
   1009c:	2a1603e2 	mov	w2, w22
   100a0:	f90023e0 	str	x0, [sp, #64]
   100a4:	aa1403e0 	mov	x0, x20
   100a8:	97fff60e 	bl	d8e0 <ae_update_helper>
   100ac:	2a0003f3 	mov	w19, w0
   100b0:	f94023e0 	ldr	x0, [sp, #64]
   100b4:	b90002a0 	str	w0, [x21]
   100b8:	35fffb13 	cbnz	w19, 10018 <__GP11_TEE_AEUpdate+0x38>
   100bc:	52800020 	mov	w0, #0x1                   	// #1
   100c0:	b9003280 	str	w0, [x20, #48]
   100c4:	17ffffd5 	b	10018 <__GP11_TEE_AEUpdate+0x38>
   100c8:	2a1303e0 	mov	w0, w19
   100cc:	a94153f3 	ldp	x19, x20, [sp, #16]
   100d0:	a9425bf5 	ldp	x21, x22, [sp, #32]
   100d4:	f9401bf7 	ldr	x23, [sp, #48]
   100d8:	a8c57bfd 	ldp	x29, x30, [sp], #80
   100dc:	d65f03c0 	ret

00000000000100e0 <TEE_AEEncryptFinal>:
TEE_AEEncryptFinal():
   100e0:	a9b87bfd 	stp	x29, x30, [sp, #-128]!
   100e4:	910003fd 	mov	x29, sp
   100e8:	a90153f3 	stp	x19, x20, [sp, #16]
   100ec:	aa0003f4 	mov	x20, x0
   100f0:	b0000040 	adrp	x0, 19000 <_DYNAMIC>
   100f4:	a90363f7 	stp	x23, x24, [sp, #48]
   100f8:	aa0103f8 	mov	x24, x1
   100fc:	aa0203f7 	mov	x23, x2
   10100:	f9409801 	ldr	x1, [x0, #304]
   10104:	a9025bf5 	stp	x21, x22, [sp, #32]
   10108:	a9046bf9 	stp	x25, x26, [sp, #64]
   1010c:	aa0003f9 	mov	x25, x0
   10110:	a90573fb 	stp	x27, x28, [sp, #80]
   10114:	f9400022 	ldr	x2, [x1]
   10118:	f9003fe2 	str	x2, [sp, #120]
   1011c:	d2800002 	mov	x2, #0x0                   	// #0
   10120:	a906ffff 	stp	xzr, xzr, [sp, #104]
   10124:	b50001f4 	cbnz	x20, 10160 <TEE_AEEncryptFinal+0x80>
   10128:	129fff33 	mov	w19, #0xffff0006            	// #-65530
   1012c:	7100027f 	cmp	w19, #0x0
   10130:	129ffde0 	mov	w0, #0xffff0010            	// #-65520
   10134:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
   10138:	54000060 	b.eq	10144 <TEE_AEEncryptFinal+0x64>  // b.none
   1013c:	2a1303e0 	mov	w0, w19
   10140:	97ffd503 	bl	554c <TEE_Panic>
   10144:	f9409b39 	ldr	x25, [x25, #304]
   10148:	f9403fe0 	ldr	x0, [sp, #120]
   1014c:	f9400321 	ldr	x1, [x25]
   10150:	eb010000 	subs	x0, x0, x1
   10154:	d2800001 	mov	x1, #0x0                   	// #0
   10158:	54000b40 	b.eq	102c0 <TEE_AEEncryptFinal+0x1e0>  // b.none
   1015c:	97ffc147 	bl	678 <__stack_chk_fail>
   10160:	f100031f 	cmp	x24, #0x0
   10164:	fa400ae4 	ccmp	x23, #0x0, #0x4, eq  // eq = none
   10168:	54fffe01 	b.ne	10128 <TEE_AEEncryptFinal+0x48>  // b.any
   1016c:	aa0603f6 	mov	x22, x6
   10170:	aa0403e0 	mov	x0, x4
   10174:	aa0303fa 	mov	x26, x3
   10178:	aa0403f5 	mov	x21, x4
   1017c:	aa0503fb 	mov	x27, x5
   10180:	d2800101 	mov	x1, #0x8                   	// #8
   10184:	97ffd562 	bl	570c <__utee_check_inout_annotation>
   10188:	aa1603e0 	mov	x0, x22
   1018c:	d2800101 	mov	x1, #0x8                   	// #8
   10190:	97ffd55f 	bl	570c <__utee_check_inout_annotation>
   10194:	b9400680 	ldr	w0, [x20, #4]
   10198:	7100101f 	cmp	w0, #0x4
   1019c:	54fffc61 	b.ne	10128 <TEE_AEEncryptFinal+0x48>  // b.any
   101a0:	b9401e80 	ldr	w0, [x20, #28]
   101a4:	368ffc20 	tbz	w0, #17, 10128 <TEE_AEEncryptFinal+0x48>
   101a8:	f9402a80 	ldr	x0, [x20, #80]
   101ac:	f94002a1 	ldr	x1, [x21]
   101b0:	8b0002e0 	add	x0, x23, x0
   101b4:	eb00003f 	cmp	x1, x0
   101b8:	54000162 	b.cs	101e4 <TEE_AEEncryptFinal+0x104>  // b.hs, b.nlast
   101bc:	129ffdf3 	mov	w19, #0xffff0010            	// #-65520
   101c0:	f90002a0 	str	x0, [x21]
   101c4:	f94002c0 	ldr	x0, [x22]
   101c8:	129ffde1 	mov	w1, #0xffff0010            	// #-65520
   101cc:	b9400e82 	ldr	w2, [x20, #12]
   101d0:	eb02001f 	cmp	x0, x2
   101d4:	540000c2 	b.cs	101ec <TEE_AEEncryptFinal+0x10c>  // b.hs, b.nlast
   101d8:	2a0103f3 	mov	w19, w1
   101dc:	f90002c2 	str	x2, [x22]
   101e0:	17ffffd3 	b	1012c <TEE_AEEncryptFinal+0x4c>
   101e4:	52bffff3 	mov	w19, #0xffff0000            	// #-65536
   101e8:	17fffff7 	b	101c4 <TEE_AEEncryptFinal+0xe4>
   101ec:	6b01027f 	cmp	w19, w1
   101f0:	54fff9e0 	b.eq	1012c <TEE_AEEncryptFinal+0x4c>  // b.none
   101f4:	f9003be0 	str	x0, [sp, #112]
   101f8:	9101a3fc 	add	x28, sp, #0x68
   101fc:	f94002a0 	ldr	x0, [x21]
   10200:	f90037e0 	str	x0, [sp, #104]
   10204:	f9402680 	ldr	x0, [x20, #72]
   10208:	f100041f 	cmp	x0, #0x1
   1020c:	54000449 	b.ls	10294 <TEE_AEEncryptFinal+0x1b4>  // b.plast
   10210:	f940d721 	ldr	x1, [x25, #424]
   10214:	aa1c03e5 	mov	x5, x28
   10218:	aa1a03e4 	mov	x4, x26
   1021c:	aa1703e3 	mov	x3, x23
   10220:	aa1803e2 	mov	x2, x24
   10224:	aa1403e0 	mov	x0, x20
   10228:	97fff4f3 	bl	d5f4 <tee_buffer_update>
   1022c:	2a0003f3 	mov	w19, w0
   10230:	35fff7e0 	cbnz	w0, 1012c <TEE_AEEncryptFinal+0x4c>
   10234:	f94002a0 	ldr	x0, [x21]
   10238:	9101c3e6 	add	x6, sp, #0x70
   1023c:	f94037f7 	ldr	x23, [sp, #104]
   10240:	aa1b03e5 	mov	x5, x27
   10244:	f9401e81 	ldr	x1, [x20, #56]
   10248:	cb170000 	sub	x0, x0, x23
   1024c:	f90037e0 	str	x0, [sp, #104]
   10250:	aa1c03e4 	mov	x4, x28
   10254:	b9405a80 	ldr	w0, [x20, #88]
   10258:	8b170343 	add	x3, x26, x23
   1025c:	f9402a82 	ldr	x2, [x20, #80]
   10260:	97ffc7e2 	bl	21e8 <_utee_authenc_enc_final>
   10264:	2a0003f3 	mov	w19, w0
   10268:	f9403be0 	ldr	x0, [sp, #112]
   1026c:	f90002c0 	str	x0, [x22]
   10270:	35fff5f3 	cbnz	w19, 1012c <TEE_AEEncryptFinal+0x4c>
   10274:	f94037e0 	ldr	x0, [sp, #104]
   10278:	8b170000 	add	x0, x0, x23
   1027c:	f90002a0 	str	x0, [x21]
   10280:	b9401e80 	ldr	w0, [x20, #28]
   10284:	b900329f 	str	wzr, [x20, #48]
   10288:	120e7800 	and	w0, w0, #0xfffdffff
   1028c:	b9001e80 	str	w0, [x20, #28]
   10290:	17ffffa7 	b	1012c <TEE_AEEncryptFinal+0x4c>
   10294:	b9405a80 	ldr	w0, [x20, #88]
   10298:	aa1703e2 	mov	x2, x23
   1029c:	9101c3e6 	add	x6, sp, #0x70
   102a0:	aa1b03e5 	mov	x5, x27
   102a4:	aa1c03e4 	mov	x4, x28
   102a8:	aa1a03e3 	mov	x3, x26
   102ac:	aa1803e1 	mov	x1, x24
   102b0:	d2800017 	mov	x23, #0x0                   	// #0
   102b4:	97ffc7cd 	bl	21e8 <_utee_authenc_enc_final>
   102b8:	2a0003f3 	mov	w19, w0
   102bc:	17ffffeb 	b	10268 <TEE_AEEncryptFinal+0x188>
   102c0:	2a1303e0 	mov	w0, w19
   102c4:	a94153f3 	ldp	x19, x20, [sp, #16]
   102c8:	a9425bf5 	ldp	x21, x22, [sp, #32]
   102cc:	a94363f7 	ldp	x23, x24, [sp, #48]
   102d0:	a9446bf9 	ldp	x25, x26, [sp, #64]
   102d4:	a94573fb 	ldp	x27, x28, [sp, #80]
   102d8:	a8c87bfd 	ldp	x29, x30, [sp], #128
   102dc:	d65f03c0 	ret

00000000000102e0 <__GP11_TEE_AEEncryptFinal>:
__GP11_TEE_AEEncryptFinal():
   102e0:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
   102e4:	910003fd 	mov	x29, sp
   102e8:	a9025bf5 	stp	x21, x22, [sp, #32]
   102ec:	b0000055 	adrp	x21, 19000 <_DYNAMIC>
   102f0:	aa0003f6 	mov	x22, x0
   102f4:	f9409aa0 	ldr	x0, [x21, #304]
   102f8:	a90153f3 	stp	x19, x20, [sp, #16]
   102fc:	aa0403f4 	mov	x20, x4
   10300:	a90363f7 	stp	x23, x24, [sp, #48]
   10304:	aa0103f7 	mov	x23, x1
   10308:	aa0603f3 	mov	x19, x6
   1030c:	a9046bf9 	stp	x25, x26, [sp, #64]
   10310:	2a0203f8 	mov	w24, w2
   10314:	aa0303f9 	mov	x25, x3
   10318:	f9400001 	ldr	x1, [x0]
   1031c:	f90037e1 	str	x1, [sp, #104]
   10320:	d2800001 	mov	x1, #0x0                   	// #0
   10324:	aa0503fa 	mov	x26, x5
   10328:	aa0403e0 	mov	x0, x4
   1032c:	d2800081 	mov	x1, #0x4                   	// #4
   10330:	a905ffff 	stp	xzr, xzr, [sp, #88]
   10334:	97ffd4f6 	bl	570c <__utee_check_inout_annotation>
   10338:	aa1303e0 	mov	x0, x19
   1033c:	d2800081 	mov	x1, #0x4                   	// #4
   10340:	97ffd4f3 	bl	570c <__utee_check_inout_annotation>
   10344:	b9400280 	ldr	w0, [x20]
   10348:	2a1803e2 	mov	w2, w24
   1034c:	f9002fe0 	str	x0, [sp, #88]
   10350:	aa1703e1 	mov	x1, x23
   10354:	b9400260 	ldr	w0, [x19]
   10358:	910183e6 	add	x6, sp, #0x60
   1035c:	aa1a03e5 	mov	x5, x26
   10360:	910163e4 	add	x4, sp, #0x58
   10364:	aa1903e3 	mov	x3, x25
   10368:	f90033e0 	str	x0, [sp, #96]
   1036c:	aa1603e0 	mov	x0, x22
   10370:	97ffff5c 	bl	100e0 <TEE_AEEncryptFinal>
   10374:	f9402fe1 	ldr	x1, [sp, #88]
   10378:	b9000281 	str	w1, [x20]
   1037c:	f9409ab5 	ldr	x21, [x21, #304]
   10380:	f94033e1 	ldr	x1, [sp, #96]
   10384:	b9000261 	str	w1, [x19]
   10388:	f94037e1 	ldr	x1, [sp, #104]
   1038c:	f94002a2 	ldr	x2, [x21]
   10390:	eb020021 	subs	x1, x1, x2
   10394:	d2800002 	mov	x2, #0x0                   	// #0
   10398:	54000040 	b.eq	103a0 <__GP11_TEE_AEEncryptFinal+0xc0>  // b.none
   1039c:	97ffc0b7 	bl	678 <__stack_chk_fail>
   103a0:	a94153f3 	ldp	x19, x20, [sp, #16]
   103a4:	a9425bf5 	ldp	x21, x22, [sp, #32]
   103a8:	a94363f7 	ldp	x23, x24, [sp, #48]
   103ac:	a9446bf9 	ldp	x25, x26, [sp, #64]
   103b0:	a8c77bfd 	ldp	x29, x30, [sp], #112
   103b4:	d65f03c0 	ret

00000000000103b8 <TEE_AEDecryptFinal>:
TEE_AEDecryptFinal():
   103b8:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
   103bc:	910003fd 	mov	x29, sp
   103c0:	a90153f3 	stp	x19, x20, [sp, #16]
   103c4:	aa0003f4 	mov	x20, x0
   103c8:	b0000040 	adrp	x0, 19000 <_DYNAMIC>
   103cc:	a90363f7 	stp	x23, x24, [sp, #48]
   103d0:	aa0103f8 	mov	x24, x1
   103d4:	aa0203f3 	mov	x19, x2
   103d8:	f9409801 	ldr	x1, [x0, #304]
   103dc:	a9025bf5 	stp	x21, x22, [sp, #32]
   103e0:	aa0003f7 	mov	x23, x0
   103e4:	a9046bf9 	stp	x25, x26, [sp, #64]
   103e8:	f9002bfb 	str	x27, [sp, #80]
   103ec:	f9400022 	ldr	x2, [x1]
   103f0:	f90037e2 	str	x2, [sp, #104]
   103f4:	d2800002 	mov	x2, #0x0                   	// #0
   103f8:	f90033ff 	str	xzr, [sp, #96]
   103fc:	b5000254 	cbnz	x20, 10444 <TEE_AEDecryptFinal+0x8c>
   10400:	129fff33 	mov	w19, #0xffff0006            	// #-65530
   10404:	7100027f 	cmp	w19, #0x0
   10408:	129ffde0 	mov	w0, #0xffff0010            	// #-65520
   1040c:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
   10410:	540000c0 	b.eq	10428 <TEE_AEDecryptFinal+0x70>  // b.none
   10414:	1299f1c0 	mov	w0, #0xffff3071            	// #-53135
   10418:	6b00027f 	cmp	w19, w0
   1041c:	54000060 	b.eq	10428 <TEE_AEDecryptFinal+0x70>  // b.none
   10420:	2a1303e0 	mov	w0, w19
   10424:	97ffd44a 	bl	554c <TEE_Panic>
   10428:	f9409af7 	ldr	x23, [x23, #304]
   1042c:	f94037e0 	ldr	x0, [sp, #104]
   10430:	f94002e1 	ldr	x1, [x23]
   10434:	eb010000 	subs	x0, x0, x1
   10438:	d2800001 	mov	x1, #0x0                   	// #0
   1043c:	54000980 	b.eq	1056c <TEE_AEDecryptFinal+0x1b4>  // b.none
   10440:	97ffc08e 	bl	678 <__stack_chk_fail>
   10444:	f100031f 	cmp	x24, #0x0
   10448:	fa400a64 	ccmp	x19, #0x0, #0x4, eq  // eq = none
   1044c:	54fffda1 	b.ne	10400 <TEE_AEDecryptFinal+0x48>  // b.any
   10450:	aa0403e0 	mov	x0, x4
   10454:	aa0303f9 	mov	x25, x3
   10458:	aa0403f5 	mov	x21, x4
   1045c:	aa0503fa 	mov	x26, x5
   10460:	aa0603f6 	mov	x22, x6
   10464:	d2800101 	mov	x1, #0x8                   	// #8
   10468:	97ffd4a9 	bl	570c <__utee_check_inout_annotation>
   1046c:	b9400680 	ldr	w0, [x20, #4]
   10470:	7100101f 	cmp	w0, #0x4
   10474:	54fffc61 	b.ne	10400 <TEE_AEDecryptFinal+0x48>  // b.any
   10478:	b9401e80 	ldr	w0, [x20, #28]
   1047c:	368ffc20 	tbz	w0, #17, 10400 <TEE_AEDecryptFinal+0x48>
   10480:	f9402a80 	ldr	x0, [x20, #80]
   10484:	f94002a1 	ldr	x1, [x21]
   10488:	8b000260 	add	x0, x19, x0
   1048c:	eb00003f 	cmp	x1, x0
   10490:	54000082 	b.cs	104a0 <TEE_AEDecryptFinal+0xe8>  // b.hs, b.nlast
   10494:	129ffdf3 	mov	w19, #0xffff0010            	// #-65520
   10498:	f90002a0 	str	x0, [x21]
   1049c:	17ffffda 	b	10404 <TEE_AEDecryptFinal+0x4c>
   104a0:	f9402680 	ldr	x0, [x20, #72]
   104a4:	f90033e1 	str	x1, [sp, #96]
   104a8:	910183fb 	add	x27, sp, #0x60
   104ac:	f100041f 	cmp	x0, #0x1
   104b0:	54000489 	b.ls	10540 <TEE_AEDecryptFinal+0x188>  // b.plast
   104b4:	f940d6e1 	ldr	x1, [x23, #424]
   104b8:	aa1303e3 	mov	x3, x19
   104bc:	aa1b03e5 	mov	x5, x27
   104c0:	aa1903e4 	mov	x4, x25
   104c4:	aa1803e2 	mov	x2, x24
   104c8:	aa1403e0 	mov	x0, x20
   104cc:	97fff44a 	bl	d5f4 <tee_buffer_update>
   104d0:	2a0003f3 	mov	w19, w0
   104d4:	35fff980 	cbnz	w0, 10404 <TEE_AEDecryptFinal+0x4c>
   104d8:	f94002a0 	ldr	x0, [x21]
   104dc:	aa1603e6 	mov	x6, x22
   104e0:	f94033f8 	ldr	x24, [sp, #96]
   104e4:	aa1a03e5 	mov	x5, x26
   104e8:	f9401e81 	ldr	x1, [x20, #56]
   104ec:	cb180000 	sub	x0, x0, x24
   104f0:	f90033e0 	str	x0, [sp, #96]
   104f4:	aa1b03e4 	mov	x4, x27
   104f8:	b9405a80 	ldr	w0, [x20, #88]
   104fc:	8b180323 	add	x3, x25, x24
   10500:	f9402a82 	ldr	x2, [x20, #80]
   10504:	97ffc73c 	bl	21f4 <_utee_authenc_dec_final>
   10508:	2a0003f3 	mov	w19, w0
   1050c:	35fff7d3 	cbnz	w19, 10404 <TEE_AEDecryptFinal+0x4c>
   10510:	b9400e80 	ldr	w0, [x20, #12]
   10514:	1299f1d3 	mov	w19, #0xffff3071            	// #-53135
   10518:	eb16001f 	cmp	x0, x22
   1051c:	f94033e0 	ldr	x0, [sp, #96]
   10520:	1a9303f3 	csel	w19, wzr, w19, eq  // eq = none
   10524:	8b180000 	add	x0, x0, x24
   10528:	f90002a0 	str	x0, [x21]
   1052c:	b9401e80 	ldr	w0, [x20, #28]
   10530:	b900329f 	str	wzr, [x20, #48]
   10534:	120e7800 	and	w0, w0, #0xfffdffff
   10538:	b9001e80 	str	w0, [x20, #28]
   1053c:	17ffffb2 	b	10404 <TEE_AEDecryptFinal+0x4c>
   10540:	b9405a80 	ldr	w0, [x20, #88]
   10544:	aa1303e2 	mov	x2, x19
   10548:	aa1803e1 	mov	x1, x24
   1054c:	aa1603e6 	mov	x6, x22
   10550:	aa1a03e5 	mov	x5, x26
   10554:	aa1b03e4 	mov	x4, x27
   10558:	aa1903e3 	mov	x3, x25
   1055c:	d2800018 	mov	x24, #0x0                   	// #0
   10560:	97ffc725 	bl	21f4 <_utee_authenc_dec_final>
   10564:	2a0003f3 	mov	w19, w0
   10568:	17ffffe9 	b	1050c <TEE_AEDecryptFinal+0x154>
   1056c:	2a1303e0 	mov	w0, w19
   10570:	a94153f3 	ldp	x19, x20, [sp, #16]
   10574:	a9425bf5 	ldp	x21, x22, [sp, #32]
   10578:	a94363f7 	ldp	x23, x24, [sp, #48]
   1057c:	a9446bf9 	ldp	x25, x26, [sp, #64]
   10580:	f9402bfb 	ldr	x27, [sp, #80]
   10584:	a8c77bfd 	ldp	x29, x30, [sp], #112
   10588:	d65f03c0 	ret

000000000001058c <__GP11_TEE_AEDecryptFinal>:
__GP11_TEE_AEDecryptFinal():
   1058c:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
   10590:	910003fd 	mov	x29, sp
   10594:	a90153f3 	stp	x19, x20, [sp, #16]
   10598:	b0000054 	adrp	x20, 19000 <_DYNAMIC>
   1059c:	aa0403f3 	mov	x19, x4
   105a0:	a9025bf5 	stp	x21, x22, [sp, #32]
   105a4:	aa0003f5 	mov	x21, x0
   105a8:	aa0103f6 	mov	x22, x1
   105ac:	f9409a80 	ldr	x0, [x20, #304]
   105b0:	a90363f7 	stp	x23, x24, [sp, #48]
   105b4:	2a0203f7 	mov	w23, w2
   105b8:	a9046bf9 	stp	x25, x26, [sp, #64]
   105bc:	aa0303f8 	mov	x24, x3
   105c0:	aa0503f9 	mov	x25, x5
   105c4:	f9400001 	ldr	x1, [x0]
   105c8:	f9002fe1 	str	x1, [sp, #88]
   105cc:	d2800001 	mov	x1, #0x0                   	// #0
   105d0:	2a0603fa 	mov	w26, w6
   105d4:	aa0403e0 	mov	x0, x4
   105d8:	d2800081 	mov	x1, #0x4                   	// #4
   105dc:	f9002bff 	str	xzr, [sp, #80]
   105e0:	97ffd44b 	bl	570c <__utee_check_inout_annotation>
   105e4:	b9400260 	ldr	w0, [x19]
   105e8:	2a1703e2 	mov	w2, w23
   105ec:	aa1603e1 	mov	x1, x22
   105f0:	2a1a03e6 	mov	w6, w26
   105f4:	aa1903e5 	mov	x5, x25
   105f8:	910143e4 	add	x4, sp, #0x50
   105fc:	aa1803e3 	mov	x3, x24
   10600:	f9002be0 	str	x0, [sp, #80]
   10604:	aa1503e0 	mov	x0, x21
   10608:	97ffff6c 	bl	103b8 <TEE_AEDecryptFinal>
   1060c:	f9409a94 	ldr	x20, [x20, #304]
   10610:	f9402be1 	ldr	x1, [sp, #80]
   10614:	b9000261 	str	w1, [x19]
   10618:	f9402fe1 	ldr	x1, [sp, #88]
   1061c:	f9400282 	ldr	x2, [x20]
   10620:	eb020021 	subs	x1, x1, x2
   10624:	d2800002 	mov	x2, #0x0                   	// #0
   10628:	54000040 	b.eq	10630 <__GP11_TEE_AEDecryptFinal+0xa4>  // b.none
   1062c:	97ffc013 	bl	678 <__stack_chk_fail>
   10630:	a94153f3 	ldp	x19, x20, [sp, #16]
   10634:	a9425bf5 	ldp	x21, x22, [sp, #32]
   10638:	a94363f7 	ldp	x23, x24, [sp, #48]
   1063c:	a9446bf9 	ldp	x25, x26, [sp, #64]
   10640:	a8c67bfd 	ldp	x29, x30, [sp], #96
   10644:	d65f03c0 	ret

0000000000010648 <TEE_AsymmetricEncrypt>:
TEE_AsymmetricEncrypt():
   10648:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
   1064c:	b0000047 	adrp	x7, 19000 <_DYNAMIC>
   10650:	910003fd 	mov	x29, sp
   10654:	f94098e7 	ldr	x7, [x7, #304]
   10658:	a90153f3 	stp	x19, x20, [sp, #16]
   1065c:	aa0003f3 	mov	x19, x0
   10660:	a9025bf5 	stp	x21, x22, [sp, #32]
   10664:	aa0603f4 	mov	x20, x6
   10668:	aa0303f6 	mov	x22, x3
   1066c:	a90363f7 	stp	x23, x24, [sp, #48]
   10670:	aa0103f8 	mov	x24, x1
   10674:	aa0403f7 	mov	x23, x4
   10678:	a9046bf9 	stp	x25, x26, [sp, #64]
   1067c:	2a0203fa 	mov	w26, w2
   10680:	aa1a03f5 	mov	x21, x26
   10684:	f9002bfb 	str	x27, [sp, #80]
   10688:	aa0503f9 	mov	x25, x5
   1068c:	f94000e0 	ldr	x0, [x7]
   10690:	f90037a0 	str	x0, [x29, #104]
   10694:	d2800000 	mov	x0, #0x0                   	// #0
   10698:	52800307 	mov	w7, #0x18                  	// #24
   1069c:	f90033bf 	str	xzr, [x29, #96]
   106a0:	9ba77f47 	umull	x7, w26, w7
   106a4:	91003ce7 	add	x7, x7, #0xf
   106a8:	927c84e7 	and	x7, x7, #0x3ffffffff0
   106ac:	cb2763ff 	sub	sp, sp, x7
   106b0:	910003fb 	mov	x27, sp
   106b4:	b4000093 	cbz	x19, 106c4 <TEE_AsymmetricEncrypt+0x7c>
   106b8:	f100007f 	cmp	x3, #0x0
   106bc:	fa400884 	ccmp	x4, #0x0, #0x4, eq  // eq = none
   106c0:	54000060 	b.eq	106cc <TEE_AsymmetricEncrypt+0x84>  // b.none
   106c4:	52800000 	mov	w0, #0x0                   	// #0
   106c8:	97ffd3a1 	bl	554c <TEE_Panic>
   106cc:	aa1a03e1 	mov	x1, x26
   106d0:	aa1803e0 	mov	x0, x24
   106d4:	97ffd404 	bl	56e4 <__utee_check_attr_in_annotation>
   106d8:	aa1403e0 	mov	x0, x20
   106dc:	d2800101 	mov	x1, #0x8                   	// #8
   106e0:	97ffd40b 	bl	570c <__utee_check_inout_annotation>
   106e4:	f9401260 	ldr	x0, [x19, #32]
   106e8:	b5000040 	cbnz	x0, 106f0 <TEE_AsymmetricEncrypt+0xa8>
   106ec:	97ffd398 	bl	554c <TEE_Panic>
   106f0:	b9400660 	ldr	w0, [x19, #4]
   106f4:	7100181f 	cmp	w0, #0x6
   106f8:	54000060 	b.eq	10704 <TEE_AsymmetricEncrypt+0xbc>  // b.none
   106fc:	52800000 	mov	w0, #0x0                   	// #0
   10700:	97ffd393 	bl	554c <TEE_Panic>
   10704:	b9400a60 	ldr	w0, [x19, #8]
   10708:	34000060 	cbz	w0, 10714 <TEE_AsymmetricEncrypt+0xcc>
   1070c:	52800000 	mov	w0, #0x0                   	// #0
   10710:	97ffd38f 	bl	554c <TEE_Panic>
   10714:	2a1503e2 	mov	w2, w21
   10718:	aa1803e1 	mov	x1, x24
   1071c:	aa1b03e0 	mov	x0, x27
   10720:	940004a5 	bl	119b4 <__utee_from_attr>
   10724:	f9400280 	ldr	x0, [x20]
   10728:	f90033a0 	str	x0, [x29, #96]
   1072c:	b9405a60 	ldr	w0, [x19, #88]
   10730:	aa1b03e1 	mov	x1, x27
   10734:	910183a6 	add	x6, x29, #0x60
   10738:	aa1903e5 	mov	x5, x25
   1073c:	aa1703e4 	mov	x4, x23
   10740:	aa1603e3 	mov	x3, x22
   10744:	aa1a03e2 	mov	x2, x26
   10748:	97ffc6ae 	bl	2200 <_utee_asymm_operate>
   1074c:	2a0003f3 	mov	w19, w0
   10750:	f94033a1 	ldr	x1, [x29, #96]
   10754:	f9000281 	str	x1, [x20]
   10758:	340001c0 	cbz	w0, 10790 <TEE_AsymmetricEncrypt+0x148>
   1075c:	529fff41 	mov	w1, #0xfffa                	// #65530
   10760:	0b010002 	add	w2, w0, w1
   10764:	92808221 	mov	x1, #0xfffffffffffffbee    	// #-1042
   10768:	71002c5f 	cmp	w2, #0xb
   1076c:	9ac22821 	asr	x1, x1, x2
   10770:	12000021 	and	w1, w1, #0x1
   10774:	1a9f3421 	csinc	w1, w1, wzr, cc  // cc = lo, ul, last
   10778:	7100003f 	cmp	w1, #0x0
   1077c:	528000c1 	mov	w1, #0x6                   	// #6
   10780:	72be0201 	movk	w1, #0xf010, lsl #16
   10784:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
   10788:	54000040 	b.eq	10790 <TEE_AsymmetricEncrypt+0x148>  // b.none
   1078c:	97ffd370 	bl	554c <TEE_Panic>
   10790:	b0000047 	adrp	x7, 19000 <_DYNAMIC>
   10794:	f94098e7 	ldr	x7, [x7, #304]
   10798:	f94037a0 	ldr	x0, [x29, #104]
   1079c:	f94000e1 	ldr	x1, [x7]
   107a0:	eb010000 	subs	x0, x0, x1
   107a4:	d2800001 	mov	x1, #0x0                   	// #0
   107a8:	54000040 	b.eq	107b0 <TEE_AsymmetricEncrypt+0x168>  // b.none
   107ac:	97ffbfb3 	bl	678 <__stack_chk_fail>
   107b0:	910003bf 	mov	sp, x29
   107b4:	2a1303e0 	mov	w0, w19
   107b8:	a94153f3 	ldp	x19, x20, [sp, #16]
   107bc:	a9425bf5 	ldp	x21, x22, [sp, #32]
   107c0:	a94363f7 	ldp	x23, x24, [sp, #48]
   107c4:	a9446bf9 	ldp	x25, x26, [sp, #64]
   107c8:	f9402bfb 	ldr	x27, [sp, #80]
   107cc:	a8c77bfd 	ldp	x29, x30, [sp], #112
   107d0:	d65f03c0 	ret

00000000000107d4 <__GP11_TEE_AsymmetricEncrypt>:
__GP11_TEE_AsymmetricEncrypt():
   107d4:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
   107d8:	b0000047 	adrp	x7, 19000 <_DYNAMIC>
   107dc:	910003fd 	mov	x29, sp
   107e0:	f94098e7 	ldr	x7, [x7, #304]
   107e4:	a90153f3 	stp	x19, x20, [sp, #16]
   107e8:	aa0003f3 	mov	x19, x0
   107ec:	a9025bf5 	stp	x21, x22, [sp, #32]
   107f0:	aa0603f4 	mov	x20, x6
   107f4:	aa0303f6 	mov	x22, x3
   107f8:	a90363f7 	stp	x23, x24, [sp, #48]
   107fc:	aa0103f8 	mov	x24, x1
   10800:	2a0403f7 	mov	w23, w4
   10804:	a9046bf9 	stp	x25, x26, [sp, #64]
   10808:	2a0203fa 	mov	w26, w2
   1080c:	aa1a03f5 	mov	x21, x26
   10810:	f9002bfb 	str	x27, [sp, #80]
   10814:	aa0503f9 	mov	x25, x5
   10818:	f94000e0 	ldr	x0, [x7]
   1081c:	f90037a0 	str	x0, [x29, #104]
   10820:	d2800000 	mov	x0, #0x0                   	// #0
   10824:	52800307 	mov	w7, #0x18                  	// #24
   10828:	f90033bf 	str	xzr, [x29, #96]
   1082c:	9ba77f47 	umull	x7, w26, w7
   10830:	91003ce7 	add	x7, x7, #0xf
   10834:	927c84e7 	and	x7, x7, #0x3ffffffff0
   10838:	cb2763ff 	sub	sp, sp, x7
   1083c:	910003fb 	mov	x27, sp
   10840:	b4000093 	cbz	x19, 10850 <__GP11_TEE_AsymmetricEncrypt+0x7c>
   10844:	f100007f 	cmp	x3, #0x0
   10848:	7a400884 	ccmp	w4, #0x0, #0x4, eq  // eq = none
   1084c:	54000060 	b.eq	10858 <__GP11_TEE_AsymmetricEncrypt+0x84>  // b.none
   10850:	52800000 	mov	w0, #0x0                   	// #0
   10854:	97ffd33e 	bl	554c <TEE_Panic>
   10858:	aa1a03e1 	mov	x1, x26
   1085c:	aa1803e0 	mov	x0, x24
   10860:	97ffd3aa 	bl	5708 <__utee_check_gp11_attr_in_annotation>
   10864:	aa1403e0 	mov	x0, x20
   10868:	d2800081 	mov	x1, #0x4                   	// #4
   1086c:	97ffd3a8 	bl	570c <__utee_check_inout_annotation>
   10870:	f9401260 	ldr	x0, [x19, #32]
   10874:	b5000040 	cbnz	x0, 1087c <__GP11_TEE_AsymmetricEncrypt+0xa8>
   10878:	97ffd335 	bl	554c <TEE_Panic>
   1087c:	b9400660 	ldr	w0, [x19, #4]
   10880:	7100181f 	cmp	w0, #0x6
   10884:	54000060 	b.eq	10890 <__GP11_TEE_AsymmetricEncrypt+0xbc>  // b.none
   10888:	52800000 	mov	w0, #0x0                   	// #0
   1088c:	97ffd330 	bl	554c <TEE_Panic>
   10890:	b9400a60 	ldr	w0, [x19, #8]
   10894:	34000060 	cbz	w0, 108a0 <__GP11_TEE_AsymmetricEncrypt+0xcc>
   10898:	52800000 	mov	w0, #0x0                   	// #0
   1089c:	97ffd32c 	bl	554c <TEE_Panic>
   108a0:	2a1503e2 	mov	w2, w21
   108a4:	aa1803e1 	mov	x1, x24
   108a8:	aa1b03e0 	mov	x0, x27
   108ac:	94000456 	bl	11a04 <__utee_from_gp11_attr>
   108b0:	b9400280 	ldr	w0, [x20]
   108b4:	aa1b03e1 	mov	x1, x27
   108b8:	f90033a0 	str	x0, [x29, #96]
   108bc:	910183a6 	add	x6, x29, #0x60
   108c0:	b9405a60 	ldr	w0, [x19, #88]
   108c4:	aa1903e5 	mov	x5, x25
   108c8:	2a1703e4 	mov	w4, w23
   108cc:	aa1603e3 	mov	x3, x22
   108d0:	aa1a03e2 	mov	x2, x26
   108d4:	97ffc64b 	bl	2200 <_utee_asymm_operate>
   108d8:	7100001f 	cmp	w0, #0x0
   108dc:	f94033a1 	ldr	x1, [x29, #96]
   108e0:	b9000281 	str	w1, [x20]
   108e4:	2a0003f3 	mov	w19, w0
   108e8:	129ffde1 	mov	w1, #0xffff0010            	// #-65520
   108ec:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
   108f0:	540000a0 	b.eq	10904 <__GP11_TEE_AsymmetricEncrypt+0x130>  // b.none
   108f4:	129fff21 	mov	w1, #0xffff0006            	// #-65530
   108f8:	6b01001f 	cmp	w0, w1
   108fc:	54000040 	b.eq	10904 <__GP11_TEE_AsymmetricEncrypt+0x130>  // b.none
   10900:	97ffd313 	bl	554c <TEE_Panic>
   10904:	b0000047 	adrp	x7, 19000 <_DYNAMIC>
   10908:	f94098e7 	ldr	x7, [x7, #304]
   1090c:	f94037a0 	ldr	x0, [x29, #104]
   10910:	f94000e1 	ldr	x1, [x7]
   10914:	eb010000 	subs	x0, x0, x1
   10918:	d2800001 	mov	x1, #0x0                   	// #0
   1091c:	54000040 	b.eq	10924 <__GP11_TEE_AsymmetricEncrypt+0x150>  // b.none
   10920:	97ffbf56 	bl	678 <__stack_chk_fail>
   10924:	910003bf 	mov	sp, x29
   10928:	2a1303e0 	mov	w0, w19
   1092c:	a94153f3 	ldp	x19, x20, [sp, #16]
   10930:	a9425bf5 	ldp	x21, x22, [sp, #32]
   10934:	a94363f7 	ldp	x23, x24, [sp, #48]
   10938:	a9446bf9 	ldp	x25, x26, [sp, #64]
   1093c:	f9402bfb 	ldr	x27, [sp, #80]
   10940:	a8c77bfd 	ldp	x29, x30, [sp], #112
   10944:	d65f03c0 	ret

0000000000010948 <TEE_AsymmetricDecrypt>:
TEE_AsymmetricDecrypt():
   10948:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
   1094c:	b0000047 	adrp	x7, 19000 <_DYNAMIC>
   10950:	910003fd 	mov	x29, sp
   10954:	f94098e7 	ldr	x7, [x7, #304]
   10958:	a90153f3 	stp	x19, x20, [sp, #16]
   1095c:	aa0003f3 	mov	x19, x0
   10960:	a9025bf5 	stp	x21, x22, [sp, #32]
   10964:	aa0603f4 	mov	x20, x6
   10968:	aa0303f6 	mov	x22, x3
   1096c:	a90363f7 	stp	x23, x24, [sp, #48]
   10970:	aa0103f8 	mov	x24, x1
   10974:	aa0403f7 	mov	x23, x4
   10978:	a9046bf9 	stp	x25, x26, [sp, #64]
   1097c:	2a0203fa 	mov	w26, w2
   10980:	aa1a03f5 	mov	x21, x26
   10984:	f9002bfb 	str	x27, [sp, #80]
   10988:	aa0503f9 	mov	x25, x5
   1098c:	f94000e0 	ldr	x0, [x7]
   10990:	f90037a0 	str	x0, [x29, #104]
   10994:	d2800000 	mov	x0, #0x0                   	// #0
   10998:	52800307 	mov	w7, #0x18                  	// #24
   1099c:	f90033bf 	str	xzr, [x29, #96]
   109a0:	9ba77f47 	umull	x7, w26, w7
   109a4:	91003ce7 	add	x7, x7, #0xf
   109a8:	927c84e7 	and	x7, x7, #0x3ffffffff0
   109ac:	cb2763ff 	sub	sp, sp, x7
   109b0:	910003fb 	mov	x27, sp
   109b4:	b4000093 	cbz	x19, 109c4 <TEE_AsymmetricDecrypt+0x7c>
   109b8:	f100007f 	cmp	x3, #0x0
   109bc:	fa400884 	ccmp	x4, #0x0, #0x4, eq  // eq = none
   109c0:	54000060 	b.eq	109cc <TEE_AsymmetricDecrypt+0x84>  // b.none
   109c4:	52800000 	mov	w0, #0x0                   	// #0
   109c8:	97ffd2e1 	bl	554c <TEE_Panic>
   109cc:	aa1a03e1 	mov	x1, x26
   109d0:	aa1803e0 	mov	x0, x24
   109d4:	97ffd344 	bl	56e4 <__utee_check_attr_in_annotation>
   109d8:	aa1403e0 	mov	x0, x20
   109dc:	d2800101 	mov	x1, #0x8                   	// #8
   109e0:	97ffd34b 	bl	570c <__utee_check_inout_annotation>
   109e4:	f9401260 	ldr	x0, [x19, #32]
   109e8:	b5000040 	cbnz	x0, 109f0 <TEE_AsymmetricDecrypt+0xa8>
   109ec:	97ffd2d8 	bl	554c <TEE_Panic>
   109f0:	b9400660 	ldr	w0, [x19, #4]
   109f4:	7100181f 	cmp	w0, #0x6
   109f8:	54000060 	b.eq	10a04 <TEE_AsymmetricDecrypt+0xbc>  // b.none
   109fc:	52800000 	mov	w0, #0x0                   	// #0
   10a00:	97ffd2d3 	bl	554c <TEE_Panic>
   10a04:	b9400a60 	ldr	w0, [x19, #8]
   10a08:	7100041f 	cmp	w0, #0x1
   10a0c:	54000060 	b.eq	10a18 <TEE_AsymmetricDecrypt+0xd0>  // b.none
   10a10:	52800000 	mov	w0, #0x0                   	// #0
   10a14:	97ffd2ce 	bl	554c <TEE_Panic>
   10a18:	2a1503e2 	mov	w2, w21
   10a1c:	aa1803e1 	mov	x1, x24
   10a20:	aa1b03e0 	mov	x0, x27
   10a24:	940003e4 	bl	119b4 <__utee_from_attr>
   10a28:	f9400280 	ldr	x0, [x20]
   10a2c:	f90033a0 	str	x0, [x29, #96]
   10a30:	b9405a60 	ldr	w0, [x19, #88]
   10a34:	aa1b03e1 	mov	x1, x27
   10a38:	910183a6 	add	x6, x29, #0x60
   10a3c:	aa1903e5 	mov	x5, x25
   10a40:	aa1703e4 	mov	x4, x23
   10a44:	aa1603e3 	mov	x3, x22
   10a48:	aa1a03e2 	mov	x2, x26
   10a4c:	97ffc5ed 	bl	2200 <_utee_asymm_operate>
   10a50:	2a0003f3 	mov	w19, w0
   10a54:	f94033a1 	ldr	x1, [x29, #96]
   10a58:	f9000281 	str	x1, [x20]
   10a5c:	340001c0 	cbz	w0, 10a94 <TEE_AsymmetricDecrypt+0x14c>
   10a60:	529fff41 	mov	w1, #0xfffa                	// #65530
   10a64:	0b010002 	add	w2, w0, w1
   10a68:	92808221 	mov	x1, #0xfffffffffffffbee    	// #-1042
   10a6c:	71002c5f 	cmp	w2, #0xb
   10a70:	9ac22821 	asr	x1, x1, x2
   10a74:	12000021 	and	w1, w1, #0x1
   10a78:	1a9f3421 	csinc	w1, w1, wzr, cc  // cc = lo, ul, last
   10a7c:	7100003f 	cmp	w1, #0x0
   10a80:	528000c1 	mov	w1, #0x6                   	// #6
   10a84:	72be0201 	movk	w1, #0xf010, lsl #16
   10a88:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
   10a8c:	54000040 	b.eq	10a94 <TEE_AsymmetricDecrypt+0x14c>  // b.none
   10a90:	97ffd2af 	bl	554c <TEE_Panic>
   10a94:	b0000047 	adrp	x7, 19000 <_DYNAMIC>
   10a98:	f94098e7 	ldr	x7, [x7, #304]
   10a9c:	f94037a0 	ldr	x0, [x29, #104]
   10aa0:	f94000e1 	ldr	x1, [x7]
   10aa4:	eb010000 	subs	x0, x0, x1
   10aa8:	d2800001 	mov	x1, #0x0                   	// #0
   10aac:	54000040 	b.eq	10ab4 <TEE_AsymmetricDecrypt+0x16c>  // b.none
   10ab0:	97ffbef2 	bl	678 <__stack_chk_fail>
   10ab4:	910003bf 	mov	sp, x29
   10ab8:	2a1303e0 	mov	w0, w19
   10abc:	a94153f3 	ldp	x19, x20, [sp, #16]
   10ac0:	a9425bf5 	ldp	x21, x22, [sp, #32]
   10ac4:	a94363f7 	ldp	x23, x24, [sp, #48]
   10ac8:	a9446bf9 	ldp	x25, x26, [sp, #64]
   10acc:	f9402bfb 	ldr	x27, [sp, #80]
   10ad0:	a8c77bfd 	ldp	x29, x30, [sp], #112
   10ad4:	d65f03c0 	ret

0000000000010ad8 <__GP11_TEE_AsymmetricDecrypt>:
__GP11_TEE_AsymmetricDecrypt():
   10ad8:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
   10adc:	b0000047 	adrp	x7, 19000 <_DYNAMIC>
   10ae0:	910003fd 	mov	x29, sp
   10ae4:	f94098e7 	ldr	x7, [x7, #304]
   10ae8:	a90153f3 	stp	x19, x20, [sp, #16]
   10aec:	aa0003f3 	mov	x19, x0
   10af0:	a9025bf5 	stp	x21, x22, [sp, #32]
   10af4:	aa0603f4 	mov	x20, x6
   10af8:	aa0303f6 	mov	x22, x3
   10afc:	a90363f7 	stp	x23, x24, [sp, #48]
   10b00:	aa0103f8 	mov	x24, x1
   10b04:	2a0403f7 	mov	w23, w4
   10b08:	a9046bf9 	stp	x25, x26, [sp, #64]
   10b0c:	2a0203fa 	mov	w26, w2
   10b10:	aa1a03f5 	mov	x21, x26
   10b14:	f9002bfb 	str	x27, [sp, #80]
   10b18:	aa0503f9 	mov	x25, x5
   10b1c:	f94000e0 	ldr	x0, [x7]
   10b20:	f90037a0 	str	x0, [x29, #104]
   10b24:	d2800000 	mov	x0, #0x0                   	// #0
   10b28:	52800307 	mov	w7, #0x18                  	// #24
   10b2c:	f90033bf 	str	xzr, [x29, #96]
   10b30:	9ba77f47 	umull	x7, w26, w7
   10b34:	91003ce7 	add	x7, x7, #0xf
   10b38:	927c84e7 	and	x7, x7, #0x3ffffffff0
   10b3c:	cb2763ff 	sub	sp, sp, x7
   10b40:	910003fb 	mov	x27, sp
   10b44:	b4000093 	cbz	x19, 10b54 <__GP11_TEE_AsymmetricDecrypt+0x7c>
   10b48:	f100007f 	cmp	x3, #0x0
   10b4c:	7a400884 	ccmp	w4, #0x0, #0x4, eq  // eq = none
   10b50:	54000060 	b.eq	10b5c <__GP11_TEE_AsymmetricDecrypt+0x84>  // b.none
   10b54:	52800000 	mov	w0, #0x0                   	// #0
   10b58:	97ffd27d 	bl	554c <TEE_Panic>
   10b5c:	aa1a03e1 	mov	x1, x26
   10b60:	aa1803e0 	mov	x0, x24
   10b64:	97ffd2e9 	bl	5708 <__utee_check_gp11_attr_in_annotation>
   10b68:	aa1403e0 	mov	x0, x20
   10b6c:	d2800081 	mov	x1, #0x4                   	// #4
   10b70:	97ffd2e7 	bl	570c <__utee_check_inout_annotation>
   10b74:	f9401260 	ldr	x0, [x19, #32]
   10b78:	b5000040 	cbnz	x0, 10b80 <__GP11_TEE_AsymmetricDecrypt+0xa8>
   10b7c:	97ffd274 	bl	554c <TEE_Panic>
   10b80:	b9400660 	ldr	w0, [x19, #4]
   10b84:	7100181f 	cmp	w0, #0x6
   10b88:	54000060 	b.eq	10b94 <__GP11_TEE_AsymmetricDecrypt+0xbc>  // b.none
   10b8c:	52800000 	mov	w0, #0x0                   	// #0
   10b90:	97ffd26f 	bl	554c <TEE_Panic>
   10b94:	b9400a60 	ldr	w0, [x19, #8]
   10b98:	7100041f 	cmp	w0, #0x1
   10b9c:	54000060 	b.eq	10ba8 <__GP11_TEE_AsymmetricDecrypt+0xd0>  // b.none
   10ba0:	52800000 	mov	w0, #0x0                   	// #0
   10ba4:	97ffd26a 	bl	554c <TEE_Panic>
   10ba8:	2a1503e2 	mov	w2, w21
   10bac:	aa1803e1 	mov	x1, x24
   10bb0:	aa1b03e0 	mov	x0, x27
   10bb4:	94000394 	bl	11a04 <__utee_from_gp11_attr>
   10bb8:	b9400280 	ldr	w0, [x20]
   10bbc:	aa1b03e1 	mov	x1, x27
   10bc0:	f90033a0 	str	x0, [x29, #96]
   10bc4:	910183a6 	add	x6, x29, #0x60
   10bc8:	b9405a60 	ldr	w0, [x19, #88]
   10bcc:	aa1903e5 	mov	x5, x25
   10bd0:	2a1703e4 	mov	w4, w23
   10bd4:	aa1603e3 	mov	x3, x22
   10bd8:	aa1a03e2 	mov	x2, x26
   10bdc:	97ffc589 	bl	2200 <_utee_asymm_operate>
   10be0:	7100001f 	cmp	w0, #0x0
   10be4:	f94033a1 	ldr	x1, [x29, #96]
   10be8:	b9000281 	str	w1, [x20]
   10bec:	2a0003f3 	mov	w19, w0
   10bf0:	129ffde1 	mov	w1, #0xffff0010            	// #-65520
   10bf4:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
   10bf8:	540000a0 	b.eq	10c0c <__GP11_TEE_AsymmetricDecrypt+0x134>  // b.none
   10bfc:	129fff21 	mov	w1, #0xffff0006            	// #-65530
   10c00:	6b01001f 	cmp	w0, w1
   10c04:	54000040 	b.eq	10c0c <__GP11_TEE_AsymmetricDecrypt+0x134>  // b.none
   10c08:	97ffd251 	bl	554c <TEE_Panic>
   10c0c:	b0000047 	adrp	x7, 19000 <_DYNAMIC>
   10c10:	f94098e7 	ldr	x7, [x7, #304]
   10c14:	f94037a0 	ldr	x0, [x29, #104]
   10c18:	f94000e1 	ldr	x1, [x7]
   10c1c:	eb010000 	subs	x0, x0, x1
   10c20:	d2800001 	mov	x1, #0x0                   	// #0
   10c24:	54000040 	b.eq	10c2c <__GP11_TEE_AsymmetricDecrypt+0x154>  // b.none
   10c28:	97ffbe94 	bl	678 <__stack_chk_fail>
   10c2c:	910003bf 	mov	sp, x29
   10c30:	2a1303e0 	mov	w0, w19
   10c34:	a94153f3 	ldp	x19, x20, [sp, #16]
   10c38:	a9425bf5 	ldp	x21, x22, [sp, #32]
   10c3c:	a94363f7 	ldp	x23, x24, [sp, #48]
   10c40:	a9446bf9 	ldp	x25, x26, [sp, #64]
   10c44:	f9402bfb 	ldr	x27, [sp, #80]
   10c48:	a8c77bfd 	ldp	x29, x30, [sp], #112
   10c4c:	d65f03c0 	ret

0000000000010c50 <TEE_AsymmetricSignDigest>:
TEE_AsymmetricSignDigest():
   10c50:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
   10c54:	b0000047 	adrp	x7, 19000 <_DYNAMIC>
   10c58:	910003fd 	mov	x29, sp
   10c5c:	f94098e7 	ldr	x7, [x7, #304]
   10c60:	a90153f3 	stp	x19, x20, [sp, #16]
   10c64:	aa0003f3 	mov	x19, x0
   10c68:	a9025bf5 	stp	x21, x22, [sp, #32]
   10c6c:	aa0603f4 	mov	x20, x6
   10c70:	aa0303f6 	mov	x22, x3
   10c74:	a90363f7 	stp	x23, x24, [sp, #48]
   10c78:	aa0103f8 	mov	x24, x1
   10c7c:	aa0403f7 	mov	x23, x4
   10c80:	a9046bf9 	stp	x25, x26, [sp, #64]
   10c84:	2a0203fa 	mov	w26, w2
   10c88:	aa1a03f5 	mov	x21, x26
   10c8c:	f9002bfb 	str	x27, [sp, #80]
   10c90:	aa0503f9 	mov	x25, x5
   10c94:	f94000e0 	ldr	x0, [x7]
   10c98:	f90037a0 	str	x0, [x29, #104]
   10c9c:	d2800000 	mov	x0, #0x0                   	// #0
   10ca0:	52800307 	mov	w7, #0x18                  	// #24
   10ca4:	f90033bf 	str	xzr, [x29, #96]
   10ca8:	9ba77f47 	umull	x7, w26, w7
   10cac:	91003ce7 	add	x7, x7, #0xf
   10cb0:	927c84e7 	and	x7, x7, #0x3ffffffff0
   10cb4:	cb2763ff 	sub	sp, sp, x7
   10cb8:	910003fb 	mov	x27, sp
   10cbc:	b4000093 	cbz	x19, 10ccc <TEE_AsymmetricSignDigest+0x7c>
   10cc0:	f100007f 	cmp	x3, #0x0
   10cc4:	fa400884 	ccmp	x4, #0x0, #0x4, eq  // eq = none
   10cc8:	54000060 	b.eq	10cd4 <TEE_AsymmetricSignDigest+0x84>  // b.none
   10ccc:	52800000 	mov	w0, #0x0                   	// #0
   10cd0:	97ffd21f 	bl	554c <TEE_Panic>
   10cd4:	aa1a03e1 	mov	x1, x26
   10cd8:	aa1803e0 	mov	x0, x24
   10cdc:	97ffd282 	bl	56e4 <__utee_check_attr_in_annotation>
   10ce0:	aa1403e0 	mov	x0, x20
   10ce4:	d2800101 	mov	x1, #0x8                   	// #8
   10ce8:	97ffd289 	bl	570c <__utee_check_inout_annotation>
   10cec:	f9401260 	ldr	x0, [x19, #32]
   10cf0:	b5000040 	cbnz	x0, 10cf8 <TEE_AsymmetricSignDigest+0xa8>
   10cf4:	97ffd216 	bl	554c <TEE_Panic>
   10cf8:	b9400660 	ldr	w0, [x19, #4]
   10cfc:	71001c1f 	cmp	w0, #0x7
   10d00:	54000060 	b.eq	10d0c <TEE_AsymmetricSignDigest+0xbc>  // b.none
   10d04:	52800000 	mov	w0, #0x0                   	// #0
   10d08:	97ffd211 	bl	554c <TEE_Panic>
   10d0c:	b9400a60 	ldr	w0, [x19, #8]
   10d10:	7100081f 	cmp	w0, #0x2
   10d14:	54000060 	b.eq	10d20 <TEE_AsymmetricSignDigest+0xd0>  // b.none
   10d18:	52800000 	mov	w0, #0x0                   	// #0
   10d1c:	97ffd20c 	bl	554c <TEE_Panic>
   10d20:	2a1503e2 	mov	w2, w21
   10d24:	aa1803e1 	mov	x1, x24
   10d28:	aa1b03e0 	mov	x0, x27
   10d2c:	94000322 	bl	119b4 <__utee_from_attr>
   10d30:	f9400280 	ldr	x0, [x20]
   10d34:	f90033a0 	str	x0, [x29, #96]
   10d38:	b9405a60 	ldr	w0, [x19, #88]
   10d3c:	aa1b03e1 	mov	x1, x27
   10d40:	910183a6 	add	x6, x29, #0x60
   10d44:	aa1903e5 	mov	x5, x25
   10d48:	aa1703e4 	mov	x4, x23
   10d4c:	aa1603e3 	mov	x3, x22
   10d50:	aa1a03e2 	mov	x2, x26
   10d54:	97ffc52b 	bl	2200 <_utee_asymm_operate>
   10d58:	7100001f 	cmp	w0, #0x0
   10d5c:	f94033a1 	ldr	x1, [x29, #96]
   10d60:	f9000281 	str	x1, [x20]
   10d64:	2a0003f3 	mov	w19, w0
   10d68:	129ffde1 	mov	w1, #0xffff0010            	// #-65520
   10d6c:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
   10d70:	54000040 	b.eq	10d78 <TEE_AsymmetricSignDigest+0x128>  // b.none
   10d74:	97ffd1f6 	bl	554c <TEE_Panic>
   10d78:	b0000047 	adrp	x7, 19000 <_DYNAMIC>
   10d7c:	f94098e7 	ldr	x7, [x7, #304]
   10d80:	f94037a0 	ldr	x0, [x29, #104]
   10d84:	f94000e1 	ldr	x1, [x7]
   10d88:	eb010000 	subs	x0, x0, x1
   10d8c:	d2800001 	mov	x1, #0x0                   	// #0
   10d90:	54000040 	b.eq	10d98 <TEE_AsymmetricSignDigest+0x148>  // b.none
   10d94:	97ffbe39 	bl	678 <__stack_chk_fail>
   10d98:	910003bf 	mov	sp, x29
   10d9c:	2a1303e0 	mov	w0, w19
   10da0:	a94153f3 	ldp	x19, x20, [sp, #16]
   10da4:	a9425bf5 	ldp	x21, x22, [sp, #32]
   10da8:	a94363f7 	ldp	x23, x24, [sp, #48]
   10dac:	a9446bf9 	ldp	x25, x26, [sp, #64]
   10db0:	f9402bfb 	ldr	x27, [sp, #80]
   10db4:	a8c77bfd 	ldp	x29, x30, [sp], #112
   10db8:	d65f03c0 	ret

0000000000010dbc <__GP11_TEE_AsymmetricSignDigest>:
__GP11_TEE_AsymmetricSignDigest():
   10dbc:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
   10dc0:	b0000047 	adrp	x7, 19000 <_DYNAMIC>
   10dc4:	910003fd 	mov	x29, sp
   10dc8:	f94098e7 	ldr	x7, [x7, #304]
   10dcc:	a90153f3 	stp	x19, x20, [sp, #16]
   10dd0:	aa0003f3 	mov	x19, x0
   10dd4:	a9025bf5 	stp	x21, x22, [sp, #32]
   10dd8:	aa0603f4 	mov	x20, x6
   10ddc:	aa0303f6 	mov	x22, x3
   10de0:	a90363f7 	stp	x23, x24, [sp, #48]
   10de4:	aa0103f8 	mov	x24, x1
   10de8:	2a0403f7 	mov	w23, w4
   10dec:	a9046bf9 	stp	x25, x26, [sp, #64]
   10df0:	2a0203fa 	mov	w26, w2
   10df4:	aa1a03f5 	mov	x21, x26
   10df8:	f9002bfb 	str	x27, [sp, #80]
   10dfc:	aa0503f9 	mov	x25, x5
   10e00:	f94000e0 	ldr	x0, [x7]
   10e04:	f90037a0 	str	x0, [x29, #104]
   10e08:	d2800000 	mov	x0, #0x0                   	// #0
   10e0c:	52800307 	mov	w7, #0x18                  	// #24
   10e10:	f90033bf 	str	xzr, [x29, #96]
   10e14:	9ba77f47 	umull	x7, w26, w7
   10e18:	91003ce7 	add	x7, x7, #0xf
   10e1c:	927c84e7 	and	x7, x7, #0x3ffffffff0
   10e20:	cb2763ff 	sub	sp, sp, x7
   10e24:	910003fb 	mov	x27, sp
   10e28:	b4000093 	cbz	x19, 10e38 <__GP11_TEE_AsymmetricSignDigest+0x7c>
   10e2c:	f100007f 	cmp	x3, #0x0
   10e30:	7a400884 	ccmp	w4, #0x0, #0x4, eq  // eq = none
   10e34:	54000060 	b.eq	10e40 <__GP11_TEE_AsymmetricSignDigest+0x84>  // b.none
   10e38:	52800000 	mov	w0, #0x0                   	// #0
   10e3c:	97ffd1c4 	bl	554c <TEE_Panic>
   10e40:	aa1a03e1 	mov	x1, x26
   10e44:	aa1803e0 	mov	x0, x24
   10e48:	97ffd230 	bl	5708 <__utee_check_gp11_attr_in_annotation>
   10e4c:	aa1403e0 	mov	x0, x20
   10e50:	d2800081 	mov	x1, #0x4                   	// #4
   10e54:	97ffd22e 	bl	570c <__utee_check_inout_annotation>
   10e58:	f9401260 	ldr	x0, [x19, #32]
   10e5c:	b5000040 	cbnz	x0, 10e64 <__GP11_TEE_AsymmetricSignDigest+0xa8>
   10e60:	97ffd1bb 	bl	554c <TEE_Panic>
   10e64:	b9400660 	ldr	w0, [x19, #4]
   10e68:	71001c1f 	cmp	w0, #0x7
   10e6c:	54000060 	b.eq	10e78 <__GP11_TEE_AsymmetricSignDigest+0xbc>  // b.none
   10e70:	52800000 	mov	w0, #0x0                   	// #0
   10e74:	97ffd1b6 	bl	554c <TEE_Panic>
   10e78:	b9400a60 	ldr	w0, [x19, #8]
   10e7c:	7100081f 	cmp	w0, #0x2
   10e80:	54000060 	b.eq	10e8c <__GP11_TEE_AsymmetricSignDigest+0xd0>  // b.none
   10e84:	52800000 	mov	w0, #0x0                   	// #0
   10e88:	97ffd1b1 	bl	554c <TEE_Panic>
   10e8c:	2a1503e2 	mov	w2, w21
   10e90:	aa1803e1 	mov	x1, x24
   10e94:	aa1b03e0 	mov	x0, x27
   10e98:	940002db 	bl	11a04 <__utee_from_gp11_attr>
   10e9c:	b9400280 	ldr	w0, [x20]
   10ea0:	aa1b03e1 	mov	x1, x27
   10ea4:	f90033a0 	str	x0, [x29, #96]
   10ea8:	910183a6 	add	x6, x29, #0x60
   10eac:	b9405a60 	ldr	w0, [x19, #88]
   10eb0:	aa1903e5 	mov	x5, x25
   10eb4:	2a1703e4 	mov	w4, w23
   10eb8:	aa1603e3 	mov	x3, x22
   10ebc:	aa1a03e2 	mov	x2, x26
   10ec0:	97ffc4d0 	bl	2200 <_utee_asymm_operate>
   10ec4:	7100001f 	cmp	w0, #0x0
   10ec8:	f94033a1 	ldr	x1, [x29, #96]
   10ecc:	b9000281 	str	w1, [x20]
   10ed0:	2a0003f3 	mov	w19, w0
   10ed4:	129ffde1 	mov	w1, #0xffff0010            	// #-65520
   10ed8:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
   10edc:	54000040 	b.eq	10ee4 <__GP11_TEE_AsymmetricSignDigest+0x128>  // b.none
   10ee0:	97ffd19b 	bl	554c <TEE_Panic>
   10ee4:	b0000047 	adrp	x7, 19000 <_DYNAMIC>
   10ee8:	f94098e7 	ldr	x7, [x7, #304]
   10eec:	f94037a0 	ldr	x0, [x29, #104]
   10ef0:	f94000e1 	ldr	x1, [x7]
   10ef4:	eb010000 	subs	x0, x0, x1
   10ef8:	d2800001 	mov	x1, #0x0                   	// #0
   10efc:	54000040 	b.eq	10f04 <__GP11_TEE_AsymmetricSignDigest+0x148>  // b.none
   10f00:	97ffbdde 	bl	678 <__stack_chk_fail>
   10f04:	910003bf 	mov	sp, x29
   10f08:	2a1303e0 	mov	w0, w19
   10f0c:	a94153f3 	ldp	x19, x20, [sp, #16]
   10f10:	a9425bf5 	ldp	x21, x22, [sp, #32]
   10f14:	a94363f7 	ldp	x23, x24, [sp, #48]
   10f18:	a9446bf9 	ldp	x25, x26, [sp, #64]
   10f1c:	f9402bfb 	ldr	x27, [sp, #80]
   10f20:	a8c77bfd 	ldp	x29, x30, [sp], #112
   10f24:	d65f03c0 	ret

0000000000010f28 <TEE_AsymmetricVerifyDigest>:
TEE_AsymmetricVerifyDigest():
   10f28:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
   10f2c:	b0000047 	adrp	x7, 19000 <_DYNAMIC>
   10f30:	910003fd 	mov	x29, sp
   10f34:	f94098e7 	ldr	x7, [x7, #304]
   10f38:	a90153f3 	stp	x19, x20, [sp, #16]
   10f3c:	aa0003f3 	mov	x19, x0
   10f40:	a9025bf5 	stp	x21, x22, [sp, #32]
   10f44:	aa0303f5 	mov	x21, x3
   10f48:	aa0403f6 	mov	x22, x4
   10f4c:	a90363f7 	stp	x23, x24, [sp, #48]
   10f50:	aa0503f7 	mov	x23, x5
   10f54:	aa0603f8 	mov	x24, x6
   10f58:	a9046bf9 	stp	x25, x26, [sp, #64]
   10f5c:	2a0203fa 	mov	w26, w2
   10f60:	aa0103f9 	mov	x25, x1
   10f64:	f9002bfb 	str	x27, [sp, #80]
   10f68:	aa1a03f4 	mov	x20, x26
   10f6c:	f94000e0 	ldr	x0, [x7]
   10f70:	f90037a0 	str	x0, [x29, #104]
   10f74:	d2800000 	mov	x0, #0x0                   	// #0
   10f78:	52800307 	mov	w7, #0x18                  	// #24
   10f7c:	9ba77f47 	umull	x7, w26, w7
   10f80:	91003ce7 	add	x7, x7, #0xf
   10f84:	927c84e7 	and	x7, x7, #0x3ffffffff0
   10f88:	cb2763ff 	sub	sp, sp, x7
   10f8c:	910003fb 	mov	x27, sp
   10f90:	b40000f3 	cbz	x19, 10fac <TEE_AsymmetricVerifyDigest+0x84>
   10f94:	f100007f 	cmp	x3, #0x0
   10f98:	fa400884 	ccmp	x4, #0x0, #0x4, eq  // eq = none
   10f9c:	54000081 	b.ne	10fac <TEE_AsymmetricVerifyDigest+0x84>  // b.any
   10fa0:	f10000bf 	cmp	x5, #0x0
   10fa4:	fa4008c4 	ccmp	x6, #0x0, #0x4, eq  // eq = none
   10fa8:	54000060 	b.eq	10fb4 <TEE_AsymmetricVerifyDigest+0x8c>  // b.none
   10fac:	52800000 	mov	w0, #0x0                   	// #0
   10fb0:	97ffd167 	bl	554c <TEE_Panic>
   10fb4:	aa1903e0 	mov	x0, x25
   10fb8:	aa1a03e1 	mov	x1, x26
   10fbc:	97ffd1ca 	bl	56e4 <__utee_check_attr_in_annotation>
   10fc0:	f9401260 	ldr	x0, [x19, #32]
   10fc4:	b5000040 	cbnz	x0, 10fcc <TEE_AsymmetricVerifyDigest+0xa4>
   10fc8:	97ffd161 	bl	554c <TEE_Panic>
   10fcc:	b9400660 	ldr	w0, [x19, #4]
   10fd0:	71001c1f 	cmp	w0, #0x7
   10fd4:	54000060 	b.eq	10fe0 <TEE_AsymmetricVerifyDigest+0xb8>  // b.none
   10fd8:	52800000 	mov	w0, #0x0                   	// #0
   10fdc:	97ffd15c 	bl	554c <TEE_Panic>
   10fe0:	b9400a60 	ldr	w0, [x19, #8]
   10fe4:	71000c1f 	cmp	w0, #0x3
   10fe8:	54000060 	b.eq	10ff4 <TEE_AsymmetricVerifyDigest+0xcc>  // b.none
   10fec:	52800000 	mov	w0, #0x0                   	// #0
   10ff0:	97ffd157 	bl	554c <TEE_Panic>
   10ff4:	2a1403e2 	mov	w2, w20
   10ff8:	aa1903e1 	mov	x1, x25
   10ffc:	aa1b03e0 	mov	x0, x27
   11000:	9400026d 	bl	119b4 <__utee_from_attr>
   11004:	b9405a60 	ldr	w0, [x19, #88]
   11008:	aa1b03e1 	mov	x1, x27
   1100c:	aa1803e6 	mov	x6, x24
   11010:	aa1703e5 	mov	x5, x23
   11014:	aa1603e4 	mov	x4, x22
   11018:	aa1503e3 	mov	x3, x21
   1101c:	aa1a03e2 	mov	x2, x26
   11020:	97ffc47b 	bl	220c <_utee_asymm_verify>
   11024:	7100001f 	cmp	w0, #0x0
   11028:	1299f1a1 	mov	w1, #0xffff3072            	// #-53134
   1102c:	2a0003f3 	mov	w19, w0
   11030:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
   11034:	54000040 	b.eq	1103c <TEE_AsymmetricVerifyDigest+0x114>  // b.none
   11038:	97ffd145 	bl	554c <TEE_Panic>
   1103c:	90000047 	adrp	x7, 19000 <_DYNAMIC>
   11040:	f94098e7 	ldr	x7, [x7, #304]
   11044:	f94037a0 	ldr	x0, [x29, #104]
   11048:	f94000e1 	ldr	x1, [x7]
   1104c:	eb010000 	subs	x0, x0, x1
   11050:	d2800001 	mov	x1, #0x0                   	// #0
   11054:	54000040 	b.eq	1105c <TEE_AsymmetricVerifyDigest+0x134>  // b.none
   11058:	97ffbd88 	bl	678 <__stack_chk_fail>
   1105c:	910003bf 	mov	sp, x29
   11060:	2a1303e0 	mov	w0, w19
   11064:	a94153f3 	ldp	x19, x20, [sp, #16]
   11068:	a9425bf5 	ldp	x21, x22, [sp, #32]
   1106c:	a94363f7 	ldp	x23, x24, [sp, #48]
   11070:	a9446bf9 	ldp	x25, x26, [sp, #64]
   11074:	f9402bfb 	ldr	x27, [sp, #80]
   11078:	a8c77bfd 	ldp	x29, x30, [sp], #112
   1107c:	d65f03c0 	ret

0000000000011080 <__GP11_TEE_AsymmetricVerifyDigest>:
__GP11_TEE_AsymmetricVerifyDigest():
   11080:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
   11084:	90000047 	adrp	x7, 19000 <_DYNAMIC>
   11088:	910003fd 	mov	x29, sp
   1108c:	f94098e7 	ldr	x7, [x7, #304]
   11090:	a90153f3 	stp	x19, x20, [sp, #16]
   11094:	aa0003f3 	mov	x19, x0
   11098:	a9025bf5 	stp	x21, x22, [sp, #32]
   1109c:	aa0303f5 	mov	x21, x3
   110a0:	2a0403f6 	mov	w22, w4
   110a4:	a90363f7 	stp	x23, x24, [sp, #48]
   110a8:	aa0503f7 	mov	x23, x5
   110ac:	2a0603f8 	mov	w24, w6
   110b0:	a9046bf9 	stp	x25, x26, [sp, #64]
   110b4:	2a0203fa 	mov	w26, w2
   110b8:	aa0103f9 	mov	x25, x1
   110bc:	f9002bfb 	str	x27, [sp, #80]
   110c0:	aa1a03f4 	mov	x20, x26
   110c4:	f94000e0 	ldr	x0, [x7]
   110c8:	f90037a0 	str	x0, [x29, #104]
   110cc:	d2800000 	mov	x0, #0x0                   	// #0
   110d0:	52800307 	mov	w7, #0x18                  	// #24
   110d4:	9ba77f47 	umull	x7, w26, w7
   110d8:	91003ce7 	add	x7, x7, #0xf
   110dc:	927c84e7 	and	x7, x7, #0x3ffffffff0
   110e0:	cb2763ff 	sub	sp, sp, x7
   110e4:	910003fb 	mov	x27, sp
   110e8:	b40000f3 	cbz	x19, 11104 <__GP11_TEE_AsymmetricVerifyDigest+0x84>
   110ec:	f100007f 	cmp	x3, #0x0
   110f0:	7a400884 	ccmp	w4, #0x0, #0x4, eq  // eq = none
   110f4:	54000081 	b.ne	11104 <__GP11_TEE_AsymmetricVerifyDigest+0x84>  // b.any
   110f8:	f10000bf 	cmp	x5, #0x0
   110fc:	7a4008c4 	ccmp	w6, #0x0, #0x4, eq  // eq = none
   11100:	54000060 	b.eq	1110c <__GP11_TEE_AsymmetricVerifyDigest+0x8c>  // b.none
   11104:	52800000 	mov	w0, #0x0                   	// #0
   11108:	97ffd111 	bl	554c <TEE_Panic>
   1110c:	aa1903e0 	mov	x0, x25
   11110:	aa1a03e1 	mov	x1, x26
   11114:	97ffd17d 	bl	5708 <__utee_check_gp11_attr_in_annotation>
   11118:	f9401260 	ldr	x0, [x19, #32]
   1111c:	b5000040 	cbnz	x0, 11124 <__GP11_TEE_AsymmetricVerifyDigest+0xa4>
   11120:	97ffd10b 	bl	554c <TEE_Panic>
   11124:	b9400660 	ldr	w0, [x19, #4]
   11128:	71001c1f 	cmp	w0, #0x7
   1112c:	54000060 	b.eq	11138 <__GP11_TEE_AsymmetricVerifyDigest+0xb8>  // b.none
   11130:	52800000 	mov	w0, #0x0                   	// #0
   11134:	97ffd106 	bl	554c <TEE_Panic>
   11138:	b9400a60 	ldr	w0, [x19, #8]
   1113c:	71000c1f 	cmp	w0, #0x3
   11140:	54000060 	b.eq	1114c <__GP11_TEE_AsymmetricVerifyDigest+0xcc>  // b.none
   11144:	52800000 	mov	w0, #0x0                   	// #0
   11148:	97ffd101 	bl	554c <TEE_Panic>
   1114c:	2a1403e2 	mov	w2, w20
   11150:	aa1903e1 	mov	x1, x25
   11154:	aa1b03e0 	mov	x0, x27
   11158:	9400022b 	bl	11a04 <__utee_from_gp11_attr>
   1115c:	b9405a60 	ldr	w0, [x19, #88]
   11160:	aa1b03e1 	mov	x1, x27
   11164:	2a1803e6 	mov	w6, w24
   11168:	aa1703e5 	mov	x5, x23
   1116c:	2a1603e4 	mov	w4, w22
   11170:	aa1503e3 	mov	x3, x21
   11174:	aa1a03e2 	mov	x2, x26
   11178:	97ffc425 	bl	220c <_utee_asymm_verify>
   1117c:	7100001f 	cmp	w0, #0x0
   11180:	1299f1a1 	mov	w1, #0xffff3072            	// #-53134
   11184:	2a0003f3 	mov	w19, w0
   11188:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
   1118c:	54000040 	b.eq	11194 <__GP11_TEE_AsymmetricVerifyDigest+0x114>  // b.none
   11190:	97ffd0ef 	bl	554c <TEE_Panic>
   11194:	90000047 	adrp	x7, 19000 <_DYNAMIC>
   11198:	f94098e7 	ldr	x7, [x7, #304]
   1119c:	f94037a0 	ldr	x0, [x29, #104]
   111a0:	f94000e1 	ldr	x1, [x7]
   111a4:	eb010000 	subs	x0, x0, x1
   111a8:	d2800001 	mov	x1, #0x0                   	// #0
   111ac:	54000040 	b.eq	111b4 <__GP11_TEE_AsymmetricVerifyDigest+0x134>  // b.none
   111b0:	97ffbd32 	bl	678 <__stack_chk_fail>
   111b4:	910003bf 	mov	sp, x29
   111b8:	2a1303e0 	mov	w0, w19
   111bc:	a94153f3 	ldp	x19, x20, [sp, #16]
   111c0:	a9425bf5 	ldp	x21, x22, [sp, #32]
   111c4:	a94363f7 	ldp	x23, x24, [sp, #48]
   111c8:	a9446bf9 	ldp	x25, x26, [sp, #64]
   111cc:	f9402bfb 	ldr	x27, [sp, #80]
   111d0:	a8c77bfd 	ldp	x29, x30, [sp], #112
   111d4:	d65f03c0 	ret

00000000000111d8 <TEE_DeriveKey>:
TEE_DeriveKey():
   111d8:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
   111dc:	90000044 	adrp	x4, 19000 <_DYNAMIC>
   111e0:	910003fd 	mov	x29, sp
   111e4:	f9409884 	ldr	x4, [x4, #304]
   111e8:	a90153f3 	stp	x19, x20, [sp, #16]
   111ec:	aa0003f3 	mov	x19, x0
   111f0:	a9025bf5 	stp	x21, x22, [sp, #32]
   111f4:	f100027f 	cmp	x19, #0x0
   111f8:	aa0103f6 	mov	x22, x1
   111fc:	a90363f7 	stp	x23, x24, [sp, #48]
   11200:	2a0203f8 	mov	w24, w2
   11204:	aa1803f5 	mov	x21, x24
   11208:	f9400080 	ldr	x0, [x4]
   1120c:	f90037a0 	str	x0, [x29, #104]
   11210:	d2800000 	mov	x0, #0x0                   	// #0
   11214:	52800304 	mov	w4, #0x18                  	// #24
   11218:	a904ffbf 	stp	xzr, xzr, [x29, #72]
   1121c:	aa0303f4 	mov	x20, x3
   11220:	9ba47f04 	umull	x4, w24, w4
   11224:	f9002fbf 	str	xzr, [x29, #88]
   11228:	fa401864 	ccmp	x3, #0x0, #0x4, ne  // ne = any
   1122c:	91003c84 	add	x4, x4, #0xf
   11230:	b90063bf 	str	wzr, [x29, #96]
   11234:	927c8484 	and	x4, x4, #0x3ffffffff0
   11238:	cb2463ff 	sub	sp, sp, x4
   1123c:	910003f7 	mov	x23, sp
   11240:	54000041 	b.ne	11248 <TEE_DeriveKey+0x70>  // b.any
   11244:	97ffd0c2 	bl	554c <TEE_Panic>
   11248:	aa1603e0 	mov	x0, x22
   1124c:	aa1803e1 	mov	x1, x24
   11250:	97ffd125 	bl	56e4 <__utee_check_attr_in_annotation>
   11254:	b9400260 	ldr	w0, [x19]
   11258:	97fff17b 	bl	d844 <__tee_alg_get_class>
   1125c:	7100201f 	cmp	w0, #0x8
   11260:	54000060 	b.eq	1126c <TEE_DeriveKey+0x94>  // b.none
   11264:	52800000 	mov	w0, #0x0                   	// #0
   11268:	97ffd0b9 	bl	554c <TEE_Panic>
   1126c:	b9400660 	ldr	w0, [x19, #4]
   11270:	7100201f 	cmp	w0, #0x8
   11274:	54000060 	b.eq	11280 <TEE_DeriveKey+0xa8>  // b.none
   11278:	52800000 	mov	w0, #0x0                   	// #0
   1127c:	97ffd0b4 	bl	554c <TEE_Panic>
   11280:	f9401260 	ldr	x0, [x19, #32]
   11284:	b5000040 	cbnz	x0, 1128c <TEE_DeriveKey+0xb4>
   11288:	97ffd0b1 	bl	554c <TEE_Panic>
   1128c:	b9400a60 	ldr	w0, [x19, #8]
   11290:	7100181f 	cmp	w0, #0x6
   11294:	54000060 	b.eq	112a0 <TEE_DeriveKey+0xc8>  // b.none
   11298:	52800000 	mov	w0, #0x0                   	// #0
   1129c:	97ffd0ac 	bl	554c <TEE_Panic>
   112a0:	b9401e60 	ldr	w0, [x19, #28]
   112a4:	37900060 	tbnz	w0, #18, 112b0 <TEE_DeriveKey+0xd8>
   112a8:	52800000 	mov	w0, #0x0                   	// #0
   112ac:	97ffd0a8 	bl	554c <TEE_Panic>
   112b0:	910123a1 	add	x1, x29, #0x48
   112b4:	aa1403e0 	mov	x0, x20
   112b8:	97ffc3a5 	bl	214c <_utee_cryp_obj_get_info>
   112bc:	34000040 	cbz	w0, 112c4 <TEE_DeriveKey+0xec>
   112c0:	97ffd0a3 	bl	554c <TEE_Panic>
   112c4:	b9404ba1 	ldr	w1, [x29, #72]
   112c8:	52b40000 	mov	w0, #0xa0000000            	// #-1610612736
   112cc:	6b00003f 	cmp	w1, w0
   112d0:	54000060 	b.eq	112dc <TEE_DeriveKey+0x104>  // b.none
   112d4:	52800000 	mov	w0, #0x0                   	// #0
   112d8:	97ffd09d 	bl	554c <TEE_Panic>
   112dc:	b94063a0 	ldr	w0, [x29, #96]
   112e0:	36880060 	tbz	w0, #17, 112ec <TEE_DeriveKey+0x114>
   112e4:	52800000 	mov	w0, #0x0                   	// #0
   112e8:	97ffd099 	bl	554c <TEE_Panic>
   112ec:	2a1503e2 	mov	w2, w21
   112f0:	aa1603e1 	mov	x1, x22
   112f4:	aa1703e0 	mov	x0, x23
   112f8:	940001af 	bl	119b4 <__utee_from_attr>
   112fc:	b9405a60 	ldr	w0, [x19, #88]
   11300:	aa1403e3 	mov	x3, x20
   11304:	aa1803e2 	mov	x2, x24
   11308:	aa1703e1 	mov	x1, x23
   1130c:	97ffc3a8 	bl	21ac <_utee_cryp_derive_key>
   11310:	34000040 	cbz	w0, 11318 <TEE_DeriveKey+0x140>
   11314:	97ffd08e 	bl	554c <TEE_Panic>
   11318:	90000044 	adrp	x4, 19000 <_DYNAMIC>
   1131c:	f9409884 	ldr	x4, [x4, #304]
   11320:	f94037a0 	ldr	x0, [x29, #104]
   11324:	f9400081 	ldr	x1, [x4]
   11328:	eb010000 	subs	x0, x0, x1
   1132c:	d2800001 	mov	x1, #0x0                   	// #0
   11330:	54000040 	b.eq	11338 <TEE_DeriveKey+0x160>  // b.none
   11334:	97ffbcd1 	bl	678 <__stack_chk_fail>
   11338:	910003bf 	mov	sp, x29
   1133c:	a94153f3 	ldp	x19, x20, [sp, #16]
   11340:	a9425bf5 	ldp	x21, x22, [sp, #32]
   11344:	a94363f7 	ldp	x23, x24, [sp, #48]
   11348:	a8c77bfd 	ldp	x29, x30, [sp], #112
   1134c:	d65f03c0 	ret

0000000000011350 <__GP11_TEE_DeriveKey>:
__GP11_TEE_DeriveKey():
   11350:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
   11354:	90000044 	adrp	x4, 19000 <_DYNAMIC>
   11358:	910003fd 	mov	x29, sp
   1135c:	f9409884 	ldr	x4, [x4, #304]
   11360:	a90153f3 	stp	x19, x20, [sp, #16]
   11364:	aa0003f3 	mov	x19, x0
   11368:	a9025bf5 	stp	x21, x22, [sp, #32]
   1136c:	f100027f 	cmp	x19, #0x0
   11370:	aa0103f6 	mov	x22, x1
   11374:	a90363f7 	stp	x23, x24, [sp, #48]
   11378:	2a0203f8 	mov	w24, w2
   1137c:	aa1803f5 	mov	x21, x24
   11380:	f9400080 	ldr	x0, [x4]
   11384:	f90037a0 	str	x0, [x29, #104]
   11388:	d2800000 	mov	x0, #0x0                   	// #0
   1138c:	52800304 	mov	w4, #0x18                  	// #24
   11390:	a904ffbf 	stp	xzr, xzr, [x29, #72]
   11394:	aa0303f4 	mov	x20, x3
   11398:	9ba47f04 	umull	x4, w24, w4
   1139c:	f9002fbf 	str	xzr, [x29, #88]
   113a0:	fa401864 	ccmp	x3, #0x0, #0x4, ne  // ne = any
   113a4:	91003c84 	add	x4, x4, #0xf
   113a8:	b90063bf 	str	wzr, [x29, #96]
   113ac:	927c8484 	and	x4, x4, #0x3ffffffff0
   113b0:	cb2463ff 	sub	sp, sp, x4
   113b4:	910003f7 	mov	x23, sp
   113b8:	54000041 	b.ne	113c0 <__GP11_TEE_DeriveKey+0x70>  // b.any
   113bc:	97ffd064 	bl	554c <TEE_Panic>
   113c0:	aa1603e0 	mov	x0, x22
   113c4:	aa1803e1 	mov	x1, x24
   113c8:	97ffd0d0 	bl	5708 <__utee_check_gp11_attr_in_annotation>
   113cc:	b9400260 	ldr	w0, [x19]
   113d0:	97fff11d 	bl	d844 <__tee_alg_get_class>
   113d4:	7100201f 	cmp	w0, #0x8
   113d8:	54000060 	b.eq	113e4 <__GP11_TEE_DeriveKey+0x94>  // b.none
   113dc:	52800000 	mov	w0, #0x0                   	// #0
   113e0:	97ffd05b 	bl	554c <TEE_Panic>
   113e4:	b9400660 	ldr	w0, [x19, #4]
   113e8:	7100201f 	cmp	w0, #0x8
   113ec:	54000060 	b.eq	113f8 <__GP11_TEE_DeriveKey+0xa8>  // b.none
   113f0:	52800000 	mov	w0, #0x0                   	// #0
   113f4:	97ffd056 	bl	554c <TEE_Panic>
   113f8:	f9401260 	ldr	x0, [x19, #32]
   113fc:	b5000040 	cbnz	x0, 11404 <__GP11_TEE_DeriveKey+0xb4>
   11400:	97ffd053 	bl	554c <TEE_Panic>
   11404:	b9400a60 	ldr	w0, [x19, #8]
   11408:	7100181f 	cmp	w0, #0x6
   1140c:	54000060 	b.eq	11418 <__GP11_TEE_DeriveKey+0xc8>  // b.none
   11410:	52800000 	mov	w0, #0x0                   	// #0
   11414:	97ffd04e 	bl	554c <TEE_Panic>
   11418:	b9401e60 	ldr	w0, [x19, #28]
   1141c:	37900060 	tbnz	w0, #18, 11428 <__GP11_TEE_DeriveKey+0xd8>
   11420:	52800000 	mov	w0, #0x0                   	// #0
   11424:	97ffd04a 	bl	554c <TEE_Panic>
   11428:	910123a1 	add	x1, x29, #0x48
   1142c:	aa1403e0 	mov	x0, x20
   11430:	97ffc347 	bl	214c <_utee_cryp_obj_get_info>
   11434:	34000040 	cbz	w0, 1143c <__GP11_TEE_DeriveKey+0xec>
   11438:	97ffd045 	bl	554c <TEE_Panic>
   1143c:	b9404ba1 	ldr	w1, [x29, #72]
   11440:	52b40000 	mov	w0, #0xa0000000            	// #-1610612736
   11444:	6b00003f 	cmp	w1, w0
   11448:	54000060 	b.eq	11454 <__GP11_TEE_DeriveKey+0x104>  // b.none
   1144c:	52800000 	mov	w0, #0x0                   	// #0
   11450:	97ffd03f 	bl	554c <TEE_Panic>
   11454:	b94063a0 	ldr	w0, [x29, #96]
   11458:	36880060 	tbz	w0, #17, 11464 <__GP11_TEE_DeriveKey+0x114>
   1145c:	52800000 	mov	w0, #0x0                   	// #0
   11460:	97ffd03b 	bl	554c <TEE_Panic>
   11464:	2a1503e2 	mov	w2, w21
   11468:	aa1603e1 	mov	x1, x22
   1146c:	aa1703e0 	mov	x0, x23
   11470:	94000165 	bl	11a04 <__utee_from_gp11_attr>
   11474:	b9405a60 	ldr	w0, [x19, #88]
   11478:	aa1403e3 	mov	x3, x20
   1147c:	aa1803e2 	mov	x2, x24
   11480:	aa1703e1 	mov	x1, x23
   11484:	97ffc34a 	bl	21ac <_utee_cryp_derive_key>
   11488:	34000040 	cbz	w0, 11490 <__GP11_TEE_DeriveKey+0x140>
   1148c:	97ffd030 	bl	554c <TEE_Panic>
   11490:	90000044 	adrp	x4, 19000 <_DYNAMIC>
   11494:	f9409884 	ldr	x4, [x4, #304]
   11498:	f94037a0 	ldr	x0, [x29, #104]
   1149c:	f9400081 	ldr	x1, [x4]
   114a0:	eb010000 	subs	x0, x0, x1
   114a4:	d2800001 	mov	x1, #0x0                   	// #0
   114a8:	54000040 	b.eq	114b0 <__GP11_TEE_DeriveKey+0x160>  // b.none
   114ac:	97ffbc73 	bl	678 <__stack_chk_fail>
   114b0:	910003bf 	mov	sp, x29
   114b4:	a94153f3 	ldp	x19, x20, [sp, #16]
   114b8:	a9425bf5 	ldp	x21, x22, [sp, #32]
   114bc:	a94363f7 	ldp	x23, x24, [sp, #48]
   114c0:	a8c77bfd 	ldp	x29, x30, [sp], #112
   114c4:	d65f03c0 	ret

00000000000114c8 <TEE_GenerateRandom>:
TEE_GenerateRandom():
   114c8:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
   114cc:	910003fd 	mov	x29, sp
   114d0:	97ffc33a 	bl	21b8 <_utee_cryp_random_number_generate>
   114d4:	34000060 	cbz	w0, 114e0 <TEE_GenerateRandom+0x18>
   114d8:	a8c17bfd 	ldp	x29, x30, [sp], #16
   114dc:	17ffd01c 	b	554c <TEE_Panic>
   114e0:	a8c17bfd 	ldp	x29, x30, [sp], #16
   114e4:	d65f03c0 	ret

00000000000114e8 <__GP11_TEE_GenerateRandom>:
__GP11_TEE_GenerateRandom():
   114e8:	2a0103e1 	mov	w1, w1
   114ec:	17fffff7 	b	114c8 <TEE_GenerateRandom>

00000000000114f0 <rand>:
rand():
   114f0:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
   114f4:	910003fd 	mov	x29, sp
   114f8:	f9000bf3 	str	x19, [sp, #16]
   114fc:	90000053 	adrp	x19, 19000 <_DYNAMIC>
   11500:	f9409a60 	ldr	x0, [x19, #304]
   11504:	f9400001 	ldr	x1, [x0]
   11508:	f90017e1 	str	x1, [sp, #40]
   1150c:	d2800001 	mov	x1, #0x0                   	// #0
   11510:	910093e0 	add	x0, sp, #0x24
   11514:	d2800081 	mov	x1, #0x4                   	// #4
   11518:	97ffffec 	bl	114c8 <TEE_GenerateRandom>
   1151c:	f9409a73 	ldr	x19, [x19, #304]
   11520:	b94027e0 	ldr	w0, [sp, #36]
   11524:	f94017e1 	ldr	x1, [sp, #40]
   11528:	f9400262 	ldr	x2, [x19]
   1152c:	eb020021 	subs	x1, x1, x2
   11530:	d2800002 	mov	x2, #0x0                   	// #0
   11534:	54000040 	b.eq	1153c <rand+0x4c>  // b.none
   11538:	97ffbc50 	bl	678 <__stack_chk_fail>
   1153c:	12007800 	and	w0, w0, #0x7fffffff
   11540:	f9400bf3 	ldr	x19, [sp, #16]
   11544:	a8c37bfd 	ldp	x29, x30, [sp], #48
   11548:	d65f03c0 	ret

000000000001154c <TEE_IsAlgorithmSupported>:
TEE_IsAlgorithmSupported():
   1154c:	2a0003e2 	mov	w2, w0
   11550:	2a0103e0 	mov	w0, w1
   11554:	52804601 	mov	w1, #0x230                 	// #560
   11558:	72ac0a21 	movk	w1, #0x6051, lsl #16
   1155c:	6b01005f 	cmp	w2, w1
   11560:	54000d80 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   11564:	540015e8 	b.hi	11820 <TEE_IsAlgorithmSupported+0x2d4>  // b.pmore
   11568:	5280a221 	mov	w1, #0x511                 	// #1297
   1156c:	72a60001 	movk	w1, #0x3000, lsl #16
   11570:	6b01005f 	cmp	w2, w1
   11574:	54001088 	b.hi	11784 <TEE_IsAlgorithmSupported+0x238>  // b.pmore
   11578:	51000821 	sub	w1, w1, #0x2
   1157c:	6b01005f 	cmp	w2, w1
   11580:	54000c88 	b.hi	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.pmore
   11584:	52804281 	mov	w1, #0x214                 	// #532
   11588:	72a20001 	movk	w1, #0x1000, lsl #16
   1158c:	6b01005f 	cmp	w2, w1
   11590:	54000c00 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   11594:	54000d08 	b.hi	11734 <TEE_IsAlgorithmSupported+0x1e8>  // b.pmore
   11598:	51040c21 	sub	w1, w1, #0x103
   1159c:	6b01005f 	cmp	w2, w1
   115a0:	54000aa8 	b.hi	116f4 <TEE_IsAlgorithmSupported+0x1a8>  // b.pmore
   115a4:	51000821 	sub	w1, w1, #0x2
   115a8:	6b01005f 	cmp	w2, w1
   115ac:	54000b28 	b.hi	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.pmore
   115b0:	5103f821 	sub	w1, w1, #0xfe
   115b4:	6b01005f 	cmp	w2, w1
   115b8:	54000928 	b.hi	116dc <TEE_IsAlgorithmSupported+0x190>  // b.pmore
   115bc:	51000821 	sub	w1, w1, #0x2
   115c0:	6b01005f 	cmp	w2, w1
   115c4:	54000a68 	b.hi	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.pmore
   115c8:	529bf7e1 	mov	w1, #0xdfbf                	// #57279
   115cc:	72b1ffe1 	movk	w1, #0x8fff, lsl #16
   115d0:	0b010041 	add	w1, w2, w1
   115d4:	7100043f 	cmp	w1, #0x1
   115d8:	540000c9 	b.ls	115f0 <TEE_IsAlgorithmSupported+0xa4>  // b.plast
   115dc:	52800841 	mov	w1, #0x42                  	// #66
   115e0:	12127843 	and	w3, w2, #0xffffdfff
   115e4:	72b00001 	movk	w1, #0x8000, lsl #16
   115e8:	6b01007f 	cmp	w3, w1
   115ec:	54000061 	b.ne	115f8 <TEE_IsAlgorithmSupported+0xac>  // b.any
   115f0:	7100081f 	cmp	w0, #0x2
   115f4:	540014a0 	b.eq	11888 <TEE_IsAlgorithmSupported+0x33c>  // b.none
   115f8:	5299f7e1 	mov	w1, #0xcfbf                	// #53183
   115fc:	72b1ffe1 	movk	w1, #0x8fff, lsl #16
   11600:	0b010041 	add	w1, w2, w1
   11604:	7100043f 	cmp	w1, #0x1
   11608:	52860841 	mov	w1, #0x3042                	// #12354
   1160c:	72b00001 	movk	w1, #0x8000, lsl #16
   11610:	7a418044 	ccmp	w2, w1, #0x4, hi  // hi = pmore
   11614:	54001ba0 	b.eq	11988 <TEE_IsAlgorithmSupported+0x43c>  // b.none
   11618:	51400c21 	sub	w1, w1, #0x3, lsl #12
   1161c:	6b01005f 	cmp	w2, w1
   11620:	54001c40 	b.eq	119a8 <TEE_IsAlgorithmSupported+0x45c>  // b.none
   11624:	5297f7e1 	mov	w1, #0xbfbf                	// #49087
   11628:	72b1ffe1 	movk	w1, #0x8fff, lsl #16
   1162c:	0b010041 	add	w1, w2, w1
   11630:	7100043f 	cmp	w1, #0x1
   11634:	540000c9 	b.ls	1164c <TEE_IsAlgorithmSupported+0x100>  // b.plast
   11638:	52800841 	mov	w1, #0x42                  	// #66
   1163c:	12117843 	and	w3, w2, #0xffffbfff
   11640:	72b00001 	movk	w1, #0x8000, lsl #16
   11644:	6b01007f 	cmp	w3, w1
   11648:	54000061 	b.ne	11654 <TEE_IsAlgorithmSupported+0x108>  // b.any
   1164c:	7100101f 	cmp	w0, #0x4
   11650:	540011c0 	b.eq	11888 <TEE_IsAlgorithmSupported+0x33c>  // b.none
   11654:	5295f7e1 	mov	w1, #0xafbf                	// #44991
   11658:	72b1ffe1 	movk	w1, #0x8fff, lsl #16
   1165c:	0b010041 	add	w1, w2, w1
   11660:	7100043f 	cmp	w1, #0x1
   11664:	528a0841 	mov	w1, #0x5042                	// #20546
   11668:	72b00001 	movk	w1, #0x8000, lsl #16
   1166c:	7a418044 	ccmp	w2, w1, #0x4, hi  // hi = pmore
   11670:	54001920 	b.eq	11994 <TEE_IsAlgorithmSupported+0x448>  // b.none
   11674:	51401421 	sub	w1, w1, #0x5, lsl #12
   11678:	6b01005f 	cmp	w2, w1
   1167c:	54001920 	b.eq	119a0 <TEE_IsAlgorithmSupported+0x454>  // b.none
   11680:	528c08a1 	mov	w1, #0x6045                	// #24645
   11684:	72ae0001 	movk	w1, #0x7000, lsl #16
   11688:	6b01005f 	cmp	w2, w1
   1168c:	528008a1 	mov	w1, #0x45                  	// #69
   11690:	72ac0001 	movk	w1, #0x6000, lsl #16
   11694:	7a411044 	ccmp	w2, w1, #0x4, ne  // ne = any
   11698:	528008c1 	mov	w1, #0x46                  	// #70
   1169c:	72b00001 	movk	w1, #0x8000, lsl #16
   116a0:	7a411044 	ccmp	w2, w1, #0x4, ne  // ne = any
   116a4:	52808001 	mov	w1, #0x400                 	// #1024
   116a8:	7a410000 	ccmp	w0, w1, #0x0, eq  // eq = none
   116ac:	54000ee0 	b.eq	11888 <TEE_IsAlgorithmSupported+0x33c>  // b.none
   116b0:	52800881 	mov	w1, #0x44                  	// #68
   116b4:	72b00001 	movk	w1, #0x8000, lsl #16
   116b8:	6b01005f 	cmp	w2, w1
   116bc:	528c0861 	mov	w1, #0x6043                	// #24643
   116c0:	72ae0001 	movk	w1, #0x7000, lsl #16
   116c4:	7a411044 	ccmp	w2, w1, #0x4, ne  // ne = any
   116c8:	52806001 	mov	w1, #0x300                 	// #768
   116cc:	7a410000 	ccmp	w0, w1, #0x0, eq  // eq = none
   116d0:	129ffea0 	mov	w0, #0xffff000a            	// #-65526
   116d4:	1a9f1000 	csel	w0, w0, wzr, ne  // ne = any
   116d8:	d65f03c0 	ret
   116dc:	529ffda1 	mov	w1, #0xffed                	// #65517
   116e0:	72bdffe1 	movk	w1, #0xefff, lsl #16
   116e4:	0b010041 	add	w1, w2, w1
   116e8:	7100043f 	cmp	w1, #0x1
   116ec:	54fff6e8 	b.hi	115c8 <TEE_IsAlgorithmSupported+0x7c>  // b.pmore
   116f0:	14000008 	b	11710 <TEE_IsAlgorithmSupported+0x1c4>
   116f4:	52802281 	mov	w1, #0x114                 	// #276
   116f8:	72a20001 	movk	w1, #0x1000, lsl #16
   116fc:	6b01005f 	cmp	w2, w1
   11700:	54000108 	b.hi	11720 <TEE_IsAlgorithmSupported+0x1d4>  // b.pmore
   11704:	51000821 	sub	w1, w1, #0x2
   11708:	6b01005f 	cmp	w2, w1
   1170c:	54fff5e0 	b.eq	115c8 <TEE_IsAlgorithmSupported+0x7c>  // b.none
   11710:	7100001f 	cmp	w0, #0x0
   11714:	129ffea1 	mov	w1, #0xffff000a            	// #-65526
   11718:	1a810000 	csel	w0, w0, w1, eq  // eq = none
   1171c:	17ffffef 	b	116d8 <TEE_IsAlgorithmSupported+0x18c>
   11720:	52804201 	mov	w1, #0x210                 	// #528
   11724:	72a20001 	movk	w1, #0x1000, lsl #16
   11728:	6b01005f 	cmp	w2, w1
   1172c:	54ffff20 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   11730:	17ffffa6 	b	115c8 <TEE_IsAlgorithmSupported+0x7c>
   11734:	52800161 	mov	w1, #0xb                   	// #11
   11738:	72a60001 	movk	w1, #0x3000, lsl #16
   1173c:	6b01005f 	cmp	w2, w1
   11740:	54000148 	b.hi	11768 <TEE_IsAlgorithmSupported+0x21c>  // b.pmore
   11744:	52a60001 	mov	w1, #0x30000000            	// #805306368
   11748:	6b01005f 	cmp	w2, w1
   1174c:	54fffe28 	b.hi	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.pmore
   11750:	52806201 	mov	w1, #0x310                 	// #784
   11754:	72a20001 	movk	w1, #0x1000, lsl #16
   11758:	6b01005f 	cmp	w2, w1
   1175c:	54fffda0 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   11760:	11040021 	add	w1, w1, #0x100
   11764:	17fffff1 	b	11728 <TEE_IsAlgorithmSupported+0x1dc>
   11768:	52802221 	mov	w1, #0x111                 	// #273
   1176c:	72a60001 	movk	w1, #0x3000, lsl #16
   11770:	6b01005f 	cmp	w2, w1
   11774:	54fff249 	b.ls	115bc <TEE_IsAlgorithmSupported+0x70>  // b.plast
   11778:	52802261 	mov	w1, #0x113                 	// #275
   1177c:	72a60001 	movk	w1, #0x3000, lsl #16
   11780:	17ffffea 	b	11728 <TEE_IsAlgorithmSupported+0x1dc>
   11784:	528001e1 	mov	w1, #0xf                   	// #15
   11788:	72aa0001 	movk	w1, #0x5000, lsl #16
   1178c:	6b01005f 	cmp	w2, w1
   11790:	54fffc00 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   11794:	54000288 	b.hi	117e4 <TEE_IsAlgorithmSupported+0x298>  // b.pmore
   11798:	5280e201 	mov	w1, #0x710                 	// #1808
   1179c:	72a80001 	movk	w1, #0x4000, lsl #16
   117a0:	6b01005f 	cmp	w2, w1
   117a4:	54fffb60 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   117a8:	540000e8 	b.hi	117c4 <TEE_IsAlgorithmSupported+0x278>  // b.pmore
   117ac:	5280a261 	mov	w1, #0x513                 	// #1299
   117b0:	72a60001 	movk	w1, #0x3000, lsl #16
   117b4:	6b01005f 	cmp	w2, w1
   117b8:	54fffac0 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   117bc:	1103f421 	add	w1, w1, #0xfd
   117c0:	17ffffda 	b	11728 <TEE_IsAlgorithmSupported+0x1dc>
   117c4:	52810201 	mov	w1, #0x810                 	// #2064
   117c8:	72a80001 	movk	w1, #0x4000, lsl #16
   117cc:	6b01005f 	cmp	w2, w1
   117d0:	54fffa00 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   117d4:	12aa0001 	mov	w1, #0xafffffff            	// #-1342177281
   117d8:	0b010041 	add	w1, w2, w1
   117dc:	7100283f 	cmp	w1, #0xa
   117e0:	17ffffc3 	b	116ec <TEE_IsAlgorithmSupported+0x1a0>
   117e4:	52804601 	mov	w1, #0x230                 	// #560
   117e8:	72ac0621 	movk	w1, #0x6031, lsl #16
   117ec:	6b01005f 	cmp	w2, w1
   117f0:	54fff900 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   117f4:	54000108 	b.hi	11814 <TEE_IsAlgorithmSupported+0x2c8>  // b.pmore
   117f8:	52800601 	mov	w1, #0x30                  	// #48
   117fc:	72ac0001 	movk	w1, #0x6000, lsl #16
   11800:	6b01005f 	cmp	w2, w1
   11804:	54fff860 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   11808:	52804601 	mov	w1, #0x230                 	// #560
   1180c:	72ac0421 	movk	w1, #0x6021, lsl #16
   11810:	17ffffc6 	b	11728 <TEE_IsAlgorithmSupported+0x1dc>
   11814:	52804601 	mov	w1, #0x230                 	// #560
   11818:	72ac0821 	movk	w1, #0x6041, lsl #16
   1181c:	17ffffc3 	b	11728 <TEE_IsAlgorithmSupported+0x1dc>
   11820:	529f0601 	mov	w1, #0xf830                	// #63536
   11824:	72ae0001 	movk	w1, #0x7000, lsl #16
   11828:	6b01005f 	cmp	w2, w1
   1182c:	54fff720 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   11830:	540005c8 	b.hi	118e8 <TEE_IsAlgorithmSupported+0x39c>  // b.pmore
   11834:	52862621 	mov	w1, #0x3131                	// #12593
   11838:	72ae0001 	movk	w1, #0x7000, lsl #16
   1183c:	6b01005f 	cmp	w2, w1
   11840:	54fff680 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   11844:	54000328 	b.hi	118a8 <TEE_IsAlgorithmSupported+0x35c>  // b.pmore
   11848:	52830601 	mov	w1, #0x1830                	// #6192
   1184c:	72ae0001 	movk	w1, #0x7000, lsl #16
   11850:	6b01005f 	cmp	w2, w1
   11854:	54fff5e0 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   11858:	540001c8 	b.hi	11890 <TEE_IsAlgorithmSupported+0x344>  // b.pmore
   1185c:	52804601 	mov	w1, #0x230                 	// #560
   11860:	72ac0c21 	movk	w1, #0x6061, lsl #16
   11864:	6b01005f 	cmp	w2, w1
   11868:	54fff540 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   1186c:	529df7e1 	mov	w1, #0xefbf                	// #61375
   11870:	72b1ffe1 	movk	w1, #0x8fff, lsl #16
   11874:	0b010041 	add	w1, w2, w1
   11878:	7100043f 	cmp	w1, #0x1
   1187c:	54ffea68 	b.hi	115c8 <TEE_IsAlgorithmSupported+0x7c>  // b.pmore
   11880:	7100041f 	cmp	w0, #0x1
   11884:	54ffea21 	b.ne	115c8 <TEE_IsAlgorithmSupported+0x7c>  // b.any
   11888:	52800000 	mov	w0, #0x0                   	// #0
   1188c:	17ffff93 	b	116d8 <TEE_IsAlgorithmSupported+0x18c>
   11890:	52842621 	mov	w1, #0x2131                	// #8497
   11894:	72ae0001 	movk	w1, #0x7000, lsl #16
   11898:	6b01005f 	cmp	w2, w1
   1189c:	54fff3a0 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   118a0:	111bfc21 	add	w1, w1, #0x6ff
   118a4:	17ffffa1 	b	11728 <TEE_IsAlgorithmSupported+0x1dc>
   118a8:	52890601 	mov	w1, #0x4830                	// #18480
   118ac:	72ae0001 	movk	w1, #0x7000, lsl #16
   118b0:	6b01005f 	cmp	w2, w1
   118b4:	54fff2e0 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   118b8:	540000c8 	b.hi	118d0 <TEE_IsAlgorithmSupported+0x384>  // b.pmore
   118bc:	51400421 	sub	w1, w1, #0x1, lsl #12
   118c0:	6b01005f 	cmp	w2, w1
   118c4:	54fff260 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   118c8:	11240421 	add	w1, w1, #0x901
   118cc:	17ffff97 	b	11728 <TEE_IsAlgorithmSupported+0x1dc>
   118d0:	528b0601 	mov	w1, #0x5830                	// #22576
   118d4:	72ae0001 	movk	w1, #0x7000, lsl #16
   118d8:	6b01005f 	cmp	w2, w1
   118dc:	54fff1a0 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   118e0:	11400421 	add	w1, w1, #0x1, lsl #12
   118e4:	17ffff91 	b	11728 <TEE_IsAlgorithmSupported+0x1dc>
   118e8:	52800641 	mov	w1, #0x32                  	// #50
   118ec:	72b00001 	movk	w1, #0x8000, lsl #16
   118f0:	6b01005f 	cmp	w2, w1
   118f4:	54fff0e0 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   118f8:	540001c8 	b.hi	11930 <TEE_IsAlgorithmSupported+0x3e4>  // b.pmore
   118fc:	52892601 	mov	w1, #0x4930                	// #18736
   11900:	72ae0821 	movk	w1, #0x7041, lsl #16
   11904:	6b01005f 	cmp	w2, w1
   11908:	54fff040 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   1190c:	540000c8 	b.hi	11924 <TEE_IsAlgorithmSupported+0x3d8>  // b.pmore
   11910:	51480821 	sub	w1, w1, #0x202, lsl #12
   11914:	6b01005f 	cmp	w2, w1
   11918:	54ffefc0 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   1191c:	11440421 	add	w1, w1, #0x101, lsl #12
   11920:	17ffff82 	b	11728 <TEE_IsAlgorithmSupported+0x1dc>
   11924:	528b2601 	mov	w1, #0x5930                	// #22832
   11928:	72ae0a21 	movk	w1, #0x7051, lsl #16
   1192c:	17fffffa 	b	11914 <TEE_IsAlgorithmSupported+0x3c8>
   11930:	52810601 	mov	w1, #0x830                 	// #2096
   11934:	72be0001 	movk	w1, #0xf000, lsl #16
   11938:	6b01005f 	cmp	w2, w1
   1193c:	54ffeea0 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   11940:	54000168 	b.hi	1196c <TEE_IsAlgorithmSupported+0x420>  // b.pmore
   11944:	51107021 	sub	w1, w1, #0x41c
   11948:	6b01005f 	cmp	w2, w1
   1194c:	54ffee20 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   11950:	54ffe3c8 	b.hi	115c8 <TEE_IsAlgorithmSupported+0x7c>  // b.pmore
   11954:	52800841 	mov	w1, #0x42                  	// #66
   11958:	12137843 	and	w3, w2, #0xffffefff
   1195c:	72b00001 	movk	w1, #0x8000, lsl #16
   11960:	6b01007f 	cmp	w3, w1
   11964:	54ffe321 	b.ne	115c8 <TEE_IsAlgorithmSupported+0x7c>  // b.any
   11968:	17ffffc6 	b	11880 <TEE_IsAlgorithmSupported+0x334>
   1196c:	52804601 	mov	w1, #0x230                 	// #560
   11970:	72be0221 	movk	w1, #0xf011, lsl #16
   11974:	6b01005f 	cmp	w2, w1
   11978:	54ffecc0 	b.eq	11710 <TEE_IsAlgorithmSupported+0x1c4>  // b.none
   1197c:	52832601 	mov	w1, #0x1930                	// #6448
   11980:	72be0221 	movk	w1, #0xf011, lsl #16
   11984:	17ffff69 	b	11728 <TEE_IsAlgorithmSupported+0x1dc>
   11988:	71000c1f 	cmp	w0, #0x3
   1198c:	54ffe4c1 	b.ne	11624 <TEE_IsAlgorithmSupported+0xd8>  // b.any
   11990:	17ffffbe 	b	11888 <TEE_IsAlgorithmSupported+0x33c>
   11994:	7100141f 	cmp	w0, #0x5
   11998:	54ffe741 	b.ne	11680 <TEE_IsAlgorithmSupported+0x134>  // b.any
   1199c:	17ffffbb 	b	11888 <TEE_IsAlgorithmSupported+0x33c>
   119a0:	7100141f 	cmp	w0, #0x5
   119a4:	17ffff42 	b	116ac <TEE_IsAlgorithmSupported+0x160>
   119a8:	71000c1f 	cmp	w0, #0x3
   119ac:	54ffe461 	b.ne	11638 <TEE_IsAlgorithmSupported+0xec>  // b.any
   119b0:	17ffffb6 	b	11888 <TEE_IsAlgorithmSupported+0x33c>

00000000000119b4 <__utee_from_attr>:
__utee_from_attr():
   119b4:	2a0203e2 	mov	w2, w2
   119b8:	d2800003 	mov	x3, #0x0                   	// #0
   119bc:	eb03005f 	cmp	x2, x3
   119c0:	54000048 	b.hi	119c8 <__utee_from_attr+0x14>  // b.pmore
   119c4:	d65f03c0 	ret
   119c8:	b9400024 	ldr	w4, [x1]
   119cc:	b9001004 	str	w4, [x0, #16]
   119d0:	36e80124 	tbz	w4, #29, 119f4 <__utee_from_attr+0x40>
   119d4:	b9400824 	ldr	w4, [x1, #8]
   119d8:	f9000004 	str	x4, [x0]
   119dc:	b9400c24 	ldr	w4, [x1, #12]
   119e0:	91000463 	add	x3, x3, #0x1
   119e4:	91006021 	add	x1, x1, #0x18
   119e8:	91006000 	add	x0, x0, #0x18
   119ec:	f81f0004 	stur	x4, [x0, #-16]
   119f0:	17fffff3 	b	119bc <__utee_from_attr+0x8>
   119f4:	f9400424 	ldr	x4, [x1, #8]
   119f8:	f9000004 	str	x4, [x0]
   119fc:	f9400824 	ldr	x4, [x1, #16]
   11a00:	17fffff8 	b	119e0 <__utee_from_attr+0x2c>

0000000000011a04 <__utee_from_gp11_attr>:
__utee_from_gp11_attr():
   11a04:	2a0203e2 	mov	w2, w2
   11a08:	d2800003 	mov	x3, #0x0                   	// #0
   11a0c:	eb03005f 	cmp	x2, x3
   11a10:	54000048 	b.hi	11a18 <__utee_from_gp11_attr+0x14>  // b.pmore
   11a14:	d65f03c0 	ret
   11a18:	b9400024 	ldr	w4, [x1]
   11a1c:	b9001004 	str	w4, [x0, #16]
   11a20:	36e80124 	tbz	w4, #29, 11a44 <__utee_from_gp11_attr+0x40>
   11a24:	b9400824 	ldr	w4, [x1, #8]
   11a28:	f9000004 	str	x4, [x0]
   11a2c:	b9400c24 	ldr	w4, [x1, #12]
   11a30:	91000463 	add	x3, x3, #0x1
   11a34:	91006021 	add	x1, x1, #0x18
   11a38:	91006000 	add	x0, x0, #0x18
   11a3c:	f81f0004 	stur	x4, [x0, #-16]
   11a40:	17fffff3 	b	11a0c <__utee_from_gp11_attr+0x8>
   11a44:	f9400424 	ldr	x4, [x1, #8]
   11a48:	f9000004 	str	x4, [x0]
   11a4c:	b9401024 	ldr	w4, [x1, #16]
   11a50:	17fffff8 	b	11a30 <__utee_from_gp11_attr+0x2c>

0000000000011a54 <TEE_GetObjectInfo>:
TEE_GetObjectInfo():
   11a54:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
   11a58:	910003fd 	mov	x29, sp
   11a5c:	f9000bf3 	str	x19, [sp, #16]
   11a60:	aa0103f3 	mov	x19, x1
   11a64:	90000041 	adrp	x1, 19000 <_DYNAMIC>
   11a68:	f9409821 	ldr	x1, [x1, #304]
   11a6c:	f9400022 	ldr	x2, [x1]
   11a70:	f90027e2 	str	x2, [sp, #72]
   11a74:	d2800002 	mov	x2, #0x0                   	// #0
   11a78:	9100a3e1 	add	x1, sp, #0x28
   11a7c:	a902ffff 	stp	xzr, xzr, [sp, #40]
   11a80:	f9001fff 	str	xzr, [sp, #56]
   11a84:	b90043ff 	str	wzr, [sp, #64]
   11a88:	97ffc1b1 	bl	214c <_utee_cryp_obj_get_info>
   11a8c:	34000040 	cbz	w0, 11a94 <TEE_GetObjectInfo+0x40>
   11a90:	97ffceaf 	bl	554c <TEE_Panic>
   11a94:	b9402be1 	ldr	w1, [sp, #40]
   11a98:	528017c0 	mov	w0, #0xbe                  	// #190
   11a9c:	72b40000 	movk	w0, #0xa000, lsl #16
   11aa0:	6b00003f 	cmp	w1, w0
   11aa4:	540001c1 	b.ne	11adc <TEE_GetObjectInfo+0x88>  // b.any
   11aa8:	52800000 	mov	w0, #0x0                   	// #0
   11aac:	b900067f 	str	wzr, [x19, #4]
   11ab0:	a900fe7f 	stp	xzr, xzr, [x19, #8]
   11ab4:	f9000e7f 	str	xzr, [x19, #24]
   11ab8:	90000041 	adrp	x1, 19000 <_DYNAMIC>
   11abc:	b9002260 	str	w0, [x19, #32]
   11ac0:	f9409821 	ldr	x1, [x1, #304]
   11ac4:	f94027e0 	ldr	x0, [sp, #72]
   11ac8:	f9400022 	ldr	x2, [x1]
   11acc:	eb020000 	subs	x0, x0, x2
   11ad0:	d2800002 	mov	x2, #0x0                   	// #0
   11ad4:	54000180 	b.eq	11b04 <TEE_GetObjectInfo+0xb0>  // b.none
   11ad8:	97ffbae8 	bl	678 <__stack_chk_fail>
   11adc:	f94017e0 	ldr	x0, [sp, #40]
   11ae0:	f9000260 	str	x0, [x19]
   11ae4:	f9401be0 	ldr	x0, [sp, #48]
   11ae8:	f9000660 	str	x0, [x19, #8]
   11aec:	b9403be0 	ldr	w0, [sp, #56]
   11af0:	f9000a60 	str	x0, [x19, #16]
   11af4:	b9403fe0 	ldr	w0, [sp, #60]
   11af8:	f9000e60 	str	x0, [x19, #24]
   11afc:	b94043e0 	ldr	w0, [sp, #64]
   11b00:	17ffffee 	b	11ab8 <TEE_GetObjectInfo+0x64>
   11b04:	f9400bf3 	ldr	x19, [sp, #16]
   11b08:	a8c57bfd 	ldp	x29, x30, [sp], #80
   11b0c:	d65f03c0 	ret

0000000000011b10 <__GP11_TEE_GetObjectInfo>:
__GP11_TEE_GetObjectInfo():
   11b10:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
   11b14:	910003fd 	mov	x29, sp
   11b18:	f9000bf3 	str	x19, [sp, #16]
   11b1c:	aa0103f3 	mov	x19, x1
   11b20:	90000041 	adrp	x1, 19000 <_DYNAMIC>
   11b24:	f9409821 	ldr	x1, [x1, #304]
   11b28:	f9400022 	ldr	x2, [x1]
   11b2c:	f90027e2 	str	x2, [sp, #72]
   11b30:	d2800002 	mov	x2, #0x0                   	// #0
   11b34:	9100a3e1 	add	x1, sp, #0x28
   11b38:	a902ffff 	stp	xzr, xzr, [sp, #40]
   11b3c:	f9001fff 	str	xzr, [sp, #56]
   11b40:	b90043ff 	str	wzr, [sp, #64]
   11b44:	97ffc182 	bl	214c <_utee_cryp_obj_get_info>
   11b48:	34000040 	cbz	w0, 11b50 <__GP11_TEE_GetObjectInfo+0x40>
   11b4c:	97ffce80 	bl	554c <TEE_Panic>
   11b50:	b9402be0 	ldr	w0, [sp, #40]
   11b54:	528017c1 	mov	w1, #0xbe                  	// #190
   11b58:	72b40001 	movk	w1, #0xa000, lsl #16
   11b5c:	6b01001f 	cmp	w0, w1
   11b60:	540001c1 	b.ne	11b98 <__GP11_TEE_GetObjectInfo+0x88>  // b.any
   11b64:	52800000 	mov	w0, #0x0                   	// #0
   11b68:	2900fe7f 	stp	wzr, wzr, [x19, #4]
   11b6c:	2901fe7f 	stp	wzr, wzr, [x19, #12]
   11b70:	b900167f 	str	wzr, [x19, #20]
   11b74:	90000041 	adrp	x1, 19000 <_DYNAMIC>
   11b78:	b9001a60 	str	w0, [x19, #24]
   11b7c:	f9409821 	ldr	x1, [x1, #304]
   11b80:	f94027e0 	ldr	x0, [sp, #72]
   11b84:	f9400022 	ldr	x2, [x1]
   11b88:	eb020000 	subs	x0, x0, x2
   11b8c:	d2800002 	mov	x2, #0x0                   	// #0
   11b90:	540001e0 	b.eq	11bcc <__GP11_TEE_GetObjectInfo+0xbc>  // b.none
   11b94:	97ffbab9 	bl	678 <__stack_chk_fail>
   11b98:	b9000260 	str	w0, [x19]
   11b9c:	b9402fe0 	ldr	w0, [sp, #44]
   11ba0:	b9000660 	str	w0, [x19, #4]
   11ba4:	b94033e0 	ldr	w0, [sp, #48]
   11ba8:	b9000a60 	str	w0, [x19, #8]
   11bac:	b94037e0 	ldr	w0, [sp, #52]
   11bb0:	b9000e60 	str	w0, [x19, #12]
   11bb4:	b9403be0 	ldr	w0, [sp, #56]
   11bb8:	b9001260 	str	w0, [x19, #16]
   11bbc:	b9403fe0 	ldr	w0, [sp, #60]
   11bc0:	b9001660 	str	w0, [x19, #20]
   11bc4:	b94043e0 	ldr	w0, [sp, #64]
   11bc8:	17ffffeb 	b	11b74 <__GP11_TEE_GetObjectInfo+0x64>
   11bcc:	f9400bf3 	ldr	x19, [sp, #16]
   11bd0:	a8c57bfd 	ldp	x29, x30, [sp], #80
   11bd4:	d65f03c0 	ret

0000000000011bd8 <TEE_GetObjectInfo1>:
TEE_GetObjectInfo1():
   11bd8:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
   11bdc:	90000042 	adrp	x2, 19000 <_DYNAMIC>
   11be0:	910003fd 	mov	x29, sp
   11be4:	f9409842 	ldr	x2, [x2, #304]
   11be8:	a90153f3 	stp	x19, x20, [sp, #16]
   11bec:	aa0103f3 	mov	x19, x1
   11bf0:	f9400041 	ldr	x1, [x2]
   11bf4:	f90027e1 	str	x1, [sp, #72]
   11bf8:	d2800001 	mov	x1, #0x0                   	// #0
   11bfc:	a902ffff 	stp	xzr, xzr, [sp, #40]
   11c00:	9100a3e1 	add	x1, sp, #0x28
   11c04:	f9001fff 	str	xzr, [sp, #56]
   11c08:	b90043ff 	str	wzr, [sp, #64]
   11c0c:	97ffc150 	bl	214c <_utee_cryp_obj_get_info>
   11c10:	52800021 	mov	w1, #0x1                   	// #1
   11c14:	121e7802 	and	w2, w0, #0xfffffffd
   11c18:	7100001f 	cmp	w0, #0x0
   11c1c:	72be0201 	movk	w1, #0xf010, lsl #16
   11c20:	2a0003f4 	mov	w20, w0
   11c24:	7a411044 	ccmp	w2, w1, #0x4, ne  // ne = any
   11c28:	54000040 	b.eq	11c30 <TEE_GetObjectInfo1+0x58>  // b.none
   11c2c:	97ffce48 	bl	554c <TEE_Panic>
   11c30:	f94017e0 	ldr	x0, [sp, #40]
   11c34:	f9000260 	str	x0, [x19]
   11c38:	f9401be0 	ldr	x0, [sp, #48]
   11c3c:	90000042 	adrp	x2, 19000 <_DYNAMIC>
   11c40:	f9000660 	str	x0, [x19, #8]
   11c44:	b9403be0 	ldr	w0, [sp, #56]
   11c48:	f9000a60 	str	x0, [x19, #16]
   11c4c:	b9403fe0 	ldr	w0, [sp, #60]
   11c50:	f9409842 	ldr	x2, [x2, #304]
   11c54:	f9000e60 	str	x0, [x19, #24]
   11c58:	b94043e0 	ldr	w0, [sp, #64]
   11c5c:	b9002260 	str	w0, [x19, #32]
   11c60:	f94027e0 	ldr	x0, [sp, #72]
   11c64:	f9400041 	ldr	x1, [x2]
   11c68:	eb010000 	subs	x0, x0, x1
   11c6c:	d2800001 	mov	x1, #0x0                   	// #0
   11c70:	54000040 	b.eq	11c78 <TEE_GetObjectInfo1+0xa0>  // b.none
   11c74:	97ffba81 	bl	678 <__stack_chk_fail>
   11c78:	2a1403e0 	mov	w0, w20
   11c7c:	a94153f3 	ldp	x19, x20, [sp, #16]
   11c80:	a8c57bfd 	ldp	x29, x30, [sp], #80
   11c84:	d65f03c0 	ret

0000000000011c88 <__GP11_TEE_GetObjectInfo1>:
__GP11_TEE_GetObjectInfo1():
   11c88:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
   11c8c:	910003fd 	mov	x29, sp
   11c90:	a90153f3 	stp	x19, x20, [sp, #16]
   11c94:	aa0103f3 	mov	x19, x1
   11c98:	90000041 	adrp	x1, 19000 <_DYNAMIC>
   11c9c:	f9409821 	ldr	x1, [x1, #304]
   11ca0:	f9400022 	ldr	x2, [x1]
   11ca4:	f90027e2 	str	x2, [sp, #72]
   11ca8:	d2800002 	mov	x2, #0x0                   	// #0
   11cac:	9100a3e1 	add	x1, sp, #0x28
   11cb0:	a902ffff 	stp	xzr, xzr, [sp, #40]
   11cb4:	f9001fff 	str	xzr, [sp, #56]
   11cb8:	b90043ff 	str	wzr, [sp, #64]
   11cbc:	97ffc124 	bl	214c <_utee_cryp_obj_get_info>
   11cc0:	52800021 	mov	w1, #0x1                   	// #1
   11cc4:	121e7802 	and	w2, w0, #0xfffffffd
   11cc8:	7100001f 	cmp	w0, #0x0
   11ccc:	72be0201 	movk	w1, #0xf010, lsl #16
   11cd0:	2a0003f4 	mov	w20, w0
   11cd4:	7a411044 	ccmp	w2, w1, #0x4, ne  // ne = any
   11cd8:	54000040 	b.eq	11ce0 <__GP11_TEE_GetObjectInfo1+0x58>  // b.none
   11cdc:	97ffce1c 	bl	554c <TEE_Panic>
   11ce0:	b9402be0 	ldr	w0, [sp, #40]
   11ce4:	90000041 	adrp	x1, 19000 <_DYNAMIC>
   11ce8:	b9000260 	str	w0, [x19]
   11cec:	b9402fe0 	ldr	w0, [sp, #44]
   11cf0:	b9000660 	str	w0, [x19, #4]
   11cf4:	b94033e0 	ldr	w0, [sp, #48]
   11cf8:	b9000a60 	str	w0, [x19, #8]
   11cfc:	b94037e0 	ldr	w0, [sp, #52]
   11d00:	b9000e60 	str	w0, [x19, #12]
   11d04:	b9403be0 	ldr	w0, [sp, #56]
   11d08:	b9001260 	str	w0, [x19, #16]
   11d0c:	b9403fe0 	ldr	w0, [sp, #60]
   11d10:	f9409821 	ldr	x1, [x1, #304]
   11d14:	b9001660 	str	w0, [x19, #20]
   11d18:	b94043e0 	ldr	w0, [sp, #64]
   11d1c:	b9001a60 	str	w0, [x19, #24]
   11d20:	f94027e0 	ldr	x0, [sp, #72]
   11d24:	f9400022 	ldr	x2, [x1]
   11d28:	eb020000 	subs	x0, x0, x2
   11d2c:	d2800002 	mov	x2, #0x0                   	// #0
   11d30:	54000040 	b.eq	11d38 <__GP11_TEE_GetObjectInfo1+0xb0>  // b.none
   11d34:	97ffba51 	bl	678 <__stack_chk_fail>
   11d38:	2a1403e0 	mov	w0, w20
   11d3c:	a94153f3 	ldp	x19, x20, [sp, #16]
   11d40:	a8c57bfd 	ldp	x29, x30, [sp], #80
   11d44:	d65f03c0 	ret

0000000000011d48 <TEE_RestrictObjectUsage1>:
TEE_RestrictObjectUsage1():
   11d48:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
   11d4c:	2a0103e1 	mov	w1, w1
   11d50:	910003fd 	mov	x29, sp
   11d54:	f9000bf3 	str	x19, [sp, #16]
   11d58:	97ffc100 	bl	2158 <_utee_cryp_obj_restrict_usage>
   11d5c:	52800021 	mov	w1, #0x1                   	// #1
   11d60:	121e7802 	and	w2, w0, #0xfffffffd
   11d64:	7100001f 	cmp	w0, #0x0
   11d68:	72be0201 	movk	w1, #0xf010, lsl #16
   11d6c:	2a0003f3 	mov	w19, w0
   11d70:	7a411044 	ccmp	w2, w1, #0x4, ne  // ne = any
   11d74:	54000040 	b.eq	11d7c <TEE_RestrictObjectUsage1+0x34>  // b.none
   11d78:	97ffcdf5 	bl	554c <TEE_Panic>
   11d7c:	2a1303e0 	mov	w0, w19
   11d80:	f9400bf3 	ldr	x19, [sp, #16]
   11d84:	a8c27bfd 	ldp	x29, x30, [sp], #32
   11d88:	d65f03c0 	ret

0000000000011d8c <TEE_RestrictObjectUsage>:
TEE_RestrictObjectUsage():
   11d8c:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
   11d90:	90000042 	adrp	x2, 19000 <_DYNAMIC>
   11d94:	910003fd 	mov	x29, sp
   11d98:	f9409842 	ldr	x2, [x2, #304]
   11d9c:	a90153f3 	stp	x19, x20, [sp, #16]
   11da0:	2a0103f4 	mov	w20, w1
   11da4:	f9400041 	ldr	x1, [x2]
   11da8:	f90027e1 	str	x1, [sp, #72]
   11dac:	d2800001 	mov	x1, #0x0                   	// #0
   11db0:	aa0003f3 	mov	x19, x0
   11db4:	9100a3e1 	add	x1, sp, #0x28
   11db8:	a902ffff 	stp	xzr, xzr, [sp, #40]
   11dbc:	f9001fff 	str	xzr, [sp, #56]
   11dc0:	b90043ff 	str	wzr, [sp, #64]
   11dc4:	97ffc0e2 	bl	214c <_utee_cryp_obj_get_info>
   11dc8:	b9402be1 	ldr	w1, [sp, #40]
   11dcc:	528017c0 	mov	w0, #0xbe                  	// #190
   11dd0:	72b40000 	movk	w0, #0xa000, lsl #16
   11dd4:	6b00003f 	cmp	w1, w0
   11dd8:	540000c0 	b.eq	11df0 <TEE_RestrictObjectUsage+0x64>  // b.none
   11ddc:	2a1403e1 	mov	w1, w20
   11de0:	aa1303e0 	mov	x0, x19
   11de4:	97ffffd9 	bl	11d48 <TEE_RestrictObjectUsage1>
   11de8:	34000040 	cbz	w0, 11df0 <TEE_RestrictObjectUsage+0x64>
   11dec:	97ffcdd8 	bl	554c <TEE_Panic>
   11df0:	90000042 	adrp	x2, 19000 <_DYNAMIC>
   11df4:	f9409842 	ldr	x2, [x2, #304]
   11df8:	f94027e0 	ldr	x0, [sp, #72]
   11dfc:	f9400041 	ldr	x1, [x2]
   11e00:	eb010000 	subs	x0, x0, x1
   11e04:	d2800001 	mov	x1, #0x0                   	// #0
   11e08:	54000040 	b.eq	11e10 <TEE_RestrictObjectUsage+0x84>  // b.none
   11e0c:	97ffba1b 	bl	678 <__stack_chk_fail>
   11e10:	a94153f3 	ldp	x19, x20, [sp, #16]
   11e14:	a8c57bfd 	ldp	x29, x30, [sp], #80
   11e18:	d65f03c0 	ret

0000000000011e1c <TEE_GetObjectBufferAttribute>:
TEE_GetObjectBufferAttribute():
   11e1c:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
   11e20:	90000044 	adrp	x4, 19000 <_DYNAMIC>
   11e24:	910003fd 	mov	x29, sp
   11e28:	f9409884 	ldr	x4, [x4, #304]
   11e2c:	a90153f3 	stp	x19, x20, [sp, #16]
   11e30:	aa0303f4 	mov	x20, x3
   11e34:	a9025bf5 	stp	x21, x22, [sp, #32]
   11e38:	aa0003f5 	mov	x21, x0
   11e3c:	2a0103f6 	mov	w22, w1
   11e40:	f9001bf7 	str	x23, [sp, #48]
   11e44:	d2800101 	mov	x1, #0x8                   	// #8
   11e48:	aa0203f7 	mov	x23, x2
   11e4c:	f9400080 	ldr	x0, [x4]
   11e50:	f90037e0 	str	x0, [sp, #104]
   11e54:	d2800000 	mov	x0, #0x0                   	// #0
   11e58:	a9047fff 	stp	xzr, xzr, [sp, #64]
   11e5c:	aa0303e0 	mov	x0, x3
   11e60:	a9057fff 	stp	xzr, xzr, [sp, #80]
   11e64:	b90063ff 	str	wzr, [sp, #96]
   11e68:	97ffce29 	bl	570c <__utee_check_inout_annotation>
   11e6c:	910123e1 	add	x1, sp, #0x48
   11e70:	aa1503e0 	mov	x0, x21
   11e74:	97ffc0b6 	bl	214c <_utee_cryp_obj_get_info>
   11e78:	2a0003f3 	mov	w19, w0
   11e7c:	35000180 	cbnz	w0, 11eac <TEE_GetObjectBufferAttribute+0x90>
   11e80:	37e80416 	tbnz	w22, #29, 11f00 <TEE_GetObjectBufferAttribute+0xe4>
   11e84:	f9400280 	ldr	x0, [x20]
   11e88:	910103e3 	add	x3, sp, #0x40
   11e8c:	aa1703e2 	mov	x2, x23
   11e90:	2a1603e1 	mov	w1, w22
   11e94:	f90023e0 	str	x0, [sp, #64]
   11e98:	aa1503e0 	mov	x0, x21
   11e9c:	97ffc0b2 	bl	2164 <_utee_cryp_obj_get_attr>
   11ea0:	2a0003f3 	mov	w19, w0
   11ea4:	f94023e0 	ldr	x0, [sp, #64]
   11ea8:	f9000280 	str	x0, [x20]
   11eac:	7100027f 	cmp	w19, #0x0
   11eb0:	129ffee0 	mov	w0, #0xffff0008            	// #-65528
   11eb4:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
   11eb8:	54000140 	b.eq	11ee0 <TEE_GetObjectBufferAttribute+0xc4>  // b.none
   11ebc:	121e7a61 	and	w1, w19, #0xfffffffd
   11ec0:	52800020 	mov	w0, #0x1                   	// #1
   11ec4:	72be0200 	movk	w0, #0xf010, lsl #16
   11ec8:	6b00003f 	cmp	w1, w0
   11ecc:	129ffde0 	mov	w0, #0xffff0010            	// #-65520
   11ed0:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
   11ed4:	54000060 	b.eq	11ee0 <TEE_GetObjectBufferAttribute+0xc4>  // b.none
   11ed8:	2a1303e0 	mov	w0, w19
   11edc:	97ffcd9c 	bl	554c <TEE_Panic>
   11ee0:	90000044 	adrp	x4, 19000 <_DYNAMIC>
   11ee4:	f9409884 	ldr	x4, [x4, #304]
   11ee8:	f94037e0 	ldr	x0, [sp, #104]
   11eec:	f9400081 	ldr	x1, [x4]
   11ef0:	eb010000 	subs	x0, x0, x1
   11ef4:	d2800001 	mov	x1, #0x0                   	// #0
   11ef8:	54000080 	b.eq	11f08 <TEE_GetObjectBufferAttribute+0xec>  // b.none
   11efc:	97ffb9df 	bl	678 <__stack_chk_fail>
   11f00:	129fff33 	mov	w19, #0xffff0006            	// #-65530
   11f04:	17ffffea 	b	11eac <TEE_GetObjectBufferAttribute+0x90>
   11f08:	2a1303e0 	mov	w0, w19
   11f0c:	a94153f3 	ldp	x19, x20, [sp, #16]
   11f10:	a9425bf5 	ldp	x21, x22, [sp, #32]
   11f14:	f9401bf7 	ldr	x23, [sp, #48]
   11f18:	a8c77bfd 	ldp	x29, x30, [sp], #112
   11f1c:	d65f03c0 	ret

0000000000011f20 <__GP11_TEE_GetObjectBufferAttribute>:
__GP11_TEE_GetObjectBufferAttribute():
   11f20:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
   11f24:	910003fd 	mov	x29, sp
   11f28:	a90153f3 	stp	x19, x20, [sp, #16]
   11f2c:	90000054 	adrp	x20, 19000 <_DYNAMIC>
   11f30:	aa0303f3 	mov	x19, x3
   11f34:	a9025bf5 	stp	x21, x22, [sp, #32]
   11f38:	aa0003f5 	mov	x21, x0
   11f3c:	2a0103f6 	mov	w22, w1
   11f40:	f9409a80 	ldr	x0, [x20, #304]
   11f44:	f9001bf7 	str	x23, [sp, #48]
   11f48:	aa0203f7 	mov	x23, x2
   11f4c:	f9400001 	ldr	x1, [x0]
   11f50:	f90027e1 	str	x1, [sp, #72]
   11f54:	d2800001 	mov	x1, #0x0                   	// #0
   11f58:	aa0303e0 	mov	x0, x3
   11f5c:	d2800081 	mov	x1, #0x4                   	// #4
   11f60:	f90023ff 	str	xzr, [sp, #64]
   11f64:	97ffcdea 	bl	570c <__utee_check_inout_annotation>
   11f68:	b9400260 	ldr	w0, [x19]
   11f6c:	aa1703e2 	mov	x2, x23
   11f70:	2a1603e1 	mov	w1, w22
   11f74:	910103e3 	add	x3, sp, #0x40
   11f78:	f90023e0 	str	x0, [sp, #64]
   11f7c:	aa1503e0 	mov	x0, x21
   11f80:	97ffffa7 	bl	11e1c <TEE_GetObjectBufferAttribute>
   11f84:	f9409a94 	ldr	x20, [x20, #304]
   11f88:	f94023e1 	ldr	x1, [sp, #64]
   11f8c:	b9000261 	str	w1, [x19]
   11f90:	f94027e1 	ldr	x1, [sp, #72]
   11f94:	f9400282 	ldr	x2, [x20]
   11f98:	eb020021 	subs	x1, x1, x2
   11f9c:	d2800002 	mov	x2, #0x0                   	// #0
   11fa0:	54000040 	b.eq	11fa8 <__GP11_TEE_GetObjectBufferAttribute+0x88>  // b.none
   11fa4:	97ffb9b5 	bl	678 <__stack_chk_fail>
   11fa8:	a94153f3 	ldp	x19, x20, [sp, #16]
   11fac:	a9425bf5 	ldp	x21, x22, [sp, #32]
   11fb0:	f9401bf7 	ldr	x23, [sp, #48]
   11fb4:	a8c57bfd 	ldp	x29, x30, [sp], #80
   11fb8:	d65f03c0 	ret

0000000000011fbc <TEE_GetObjectValueAttribute>:
TEE_GetObjectValueAttribute():
   11fbc:	a9b87bfd 	stp	x29, x30, [sp, #-128]!
   11fc0:	90000044 	adrp	x4, 19000 <_DYNAMIC>
   11fc4:	910003fd 	mov	x29, sp
   11fc8:	f9409884 	ldr	x4, [x4, #304]
   11fcc:	a90153f3 	stp	x19, x20, [sp, #16]
   11fd0:	aa0303f4 	mov	x20, x3
   11fd4:	a9025bf5 	stp	x21, x22, [sp, #32]
   11fd8:	aa0003f6 	mov	x22, x0
   11fdc:	aa0203f5 	mov	x21, x2
   11fe0:	f9001bf7 	str	x23, [sp, #48]
   11fe4:	2a0103f7 	mov	w23, w1
   11fe8:	f9400080 	ldr	x0, [x4]
   11fec:	f9003fe0 	str	x0, [sp, #120]
   11ff0:	d2800000 	mov	x0, #0x0                   	// #0
   11ff4:	a9057fff 	stp	xzr, xzr, [sp, #80]
   11ff8:	d2800100 	mov	x0, #0x8                   	// #8
   11ffc:	f90027e0 	str	x0, [sp, #72]
   12000:	f90033ff 	str	xzr, [sp, #96]
   12004:	b9006bff 	str	wzr, [sp, #104]
   12008:	b4000082 	cbz	x2, 12018 <TEE_GetObjectValueAttribute+0x5c>
   1200c:	aa0203e0 	mov	x0, x2
   12010:	d2800081 	mov	x1, #0x4                   	// #4
   12014:	97ffcdac 	bl	56c4 <__utee_check_out_annotation>
   12018:	b4000094 	cbz	x20, 12028 <TEE_GetObjectValueAttribute+0x6c>
   1201c:	aa1403e0 	mov	x0, x20
   12020:	d2800081 	mov	x1, #0x4                   	// #4
   12024:	97ffcda8 	bl	56c4 <__utee_check_out_annotation>
   12028:	910143e1 	add	x1, sp, #0x50
   1202c:	aa1603e0 	mov	x0, x22
   12030:	97ffc047 	bl	214c <_utee_cryp_obj_get_info>
   12034:	2a0003f3 	mov	w19, w0
   12038:	35000100 	cbnz	w0, 12058 <TEE_GetObjectValueAttribute+0x9c>
   1203c:	36e804d7 	tbz	w23, #29, 120d4 <TEE_GetObjectValueAttribute+0x118>
   12040:	910123e3 	add	x3, sp, #0x48
   12044:	9101c3e2 	add	x2, sp, #0x70
   12048:	2a1703e1 	mov	w1, w23
   1204c:	aa1603e0 	mov	x0, x22
   12050:	97ffc045 	bl	2164 <_utee_cryp_obj_get_attr>
   12054:	2a0003f3 	mov	w19, w0
   12058:	7100027f 	cmp	w19, #0x0
   1205c:	129ffee0 	mov	w0, #0xffff0008            	// #-65528
   12060:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
   12064:	54000100 	b.eq	12084 <TEE_GetObjectValueAttribute+0xc8>  // b.none
   12068:	52800020 	mov	w0, #0x1                   	// #1
   1206c:	121e7a61 	and	w1, w19, #0xfffffffd
   12070:	72be0200 	movk	w0, #0xf010, lsl #16
   12074:	6b00003f 	cmp	w1, w0
   12078:	54000060 	b.eq	12084 <TEE_GetObjectValueAttribute+0xc8>  // b.none
   1207c:	2a1303e0 	mov	w0, w19
   12080:	97ffcd33 	bl	554c <TEE_Panic>
   12084:	f94027e0 	ldr	x0, [sp, #72]
   12088:	f100201f 	cmp	x0, #0x8
   1208c:	54000060 	b.eq	12098 <TEE_GetObjectValueAttribute+0xdc>  // b.none
   12090:	52800000 	mov	w0, #0x0                   	// #0
   12094:	97ffcd2e 	bl	554c <TEE_Panic>
   12098:	350000f3 	cbnz	w19, 120b4 <TEE_GetObjectValueAttribute+0xf8>
   1209c:	b4000075 	cbz	x21, 120a8 <TEE_GetObjectValueAttribute+0xec>
   120a0:	b94073e0 	ldr	w0, [sp, #112]
   120a4:	b90002a0 	str	w0, [x21]
   120a8:	b4000074 	cbz	x20, 120b4 <TEE_GetObjectValueAttribute+0xf8>
   120ac:	b94077e0 	ldr	w0, [sp, #116]
   120b0:	b9000280 	str	w0, [x20]
   120b4:	f0000024 	adrp	x4, 19000 <_DYNAMIC>
   120b8:	f9409884 	ldr	x4, [x4, #304]
   120bc:	f9403fe0 	ldr	x0, [sp, #120]
   120c0:	f9400081 	ldr	x1, [x4]
   120c4:	eb010000 	subs	x0, x0, x1
   120c8:	d2800001 	mov	x1, #0x0                   	// #0
   120cc:	54000080 	b.eq	120dc <TEE_GetObjectValueAttribute+0x120>  // b.none
   120d0:	97ffb96a 	bl	678 <__stack_chk_fail>
   120d4:	129fff33 	mov	w19, #0xffff0006            	// #-65530
   120d8:	17ffffe0 	b	12058 <TEE_GetObjectValueAttribute+0x9c>
   120dc:	2a1303e0 	mov	w0, w19
   120e0:	a94153f3 	ldp	x19, x20, [sp, #16]
   120e4:	a9425bf5 	ldp	x21, x22, [sp, #32]
   120e8:	f9401bf7 	ldr	x23, [sp, #48]
   120ec:	a8c87bfd 	ldp	x29, x30, [sp], #128
   120f0:	d65f03c0 	ret

00000000000120f4 <TEE_CloseObject>:
TEE_CloseObject():
   120f4:	b4000120 	cbz	x0, 12118 <TEE_CloseObject+0x24>
   120f8:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
   120fc:	910003fd 	mov	x29, sp
   12100:	97ffc01f 	bl	217c <_utee_cryp_obj_close>
   12104:	34000060 	cbz	w0, 12110 <TEE_CloseObject+0x1c>
   12108:	a8c17bfd 	ldp	x29, x30, [sp], #16
   1210c:	17ffcd10 	b	554c <TEE_Panic>
   12110:	a8c17bfd 	ldp	x29, x30, [sp], #16
   12114:	d65f03c0 	ret
   12118:	d65f03c0 	ret

000000000001211c <__GP11_TEE_AllocateTransientObject>:
__GP11_TEE_AllocateTransientObject():
   1211c:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
   12120:	f0000023 	adrp	x3, 19000 <_DYNAMIC>
   12124:	910003fd 	mov	x29, sp
   12128:	f9409863 	ldr	x3, [x3, #304]
   1212c:	a90153f3 	stp	x19, x20, [sp, #16]
   12130:	2a0003f3 	mov	w19, w0
   12134:	f90013f5 	str	x21, [sp, #32]
   12138:	aa0203f4 	mov	x20, x2
   1213c:	2a0103f5 	mov	w21, w1
   12140:	d2800101 	mov	x1, #0x8                   	// #8
   12144:	f9400060 	ldr	x0, [x3]
   12148:	f9001fe0 	str	x0, [sp, #56]
   1214c:	d2800000 	mov	x0, #0x0                   	// #0
   12150:	aa0203e0 	mov	x0, x2
   12154:	97ffcd5c 	bl	56c4 <__utee_check_out_annotation>
   12158:	2a1503e1 	mov	w1, w21
   1215c:	2a1303e0 	mov	w0, w19
   12160:	9100d3e2 	add	x2, sp, #0x34
   12164:	97ffc003 	bl	2170 <_utee_cryp_obj_alloc>
   12168:	7100001f 	cmp	w0, #0x0
   1216c:	129ffe61 	mov	w1, #0xffff000c            	// #-65524
   12170:	2a0003f3 	mov	w19, w0
   12174:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
   12178:	540001a0 	b.eq	121ac <__GP11_TEE_AllocateTransientObject+0x90>  // b.none
   1217c:	129ffea1 	mov	w1, #0xffff000a            	// #-65526
   12180:	6b01001f 	cmp	w0, w1
   12184:	54000040 	b.eq	1218c <__GP11_TEE_AllocateTransientObject+0x70>  // b.none
   12188:	97ffccf1 	bl	554c <TEE_Panic>
   1218c:	f0000023 	adrp	x3, 19000 <_DYNAMIC>
   12190:	f9409863 	ldr	x3, [x3, #304]
   12194:	f9401fe0 	ldr	x0, [sp, #56]
   12198:	f9400061 	ldr	x1, [x3]
   1219c:	eb010000 	subs	x0, x0, x1
   121a0:	d2800001 	mov	x1, #0x0                   	// #0
   121a4:	540000c0 	b.eq	121bc <__GP11_TEE_AllocateTransientObject+0xa0>  // b.none
   121a8:	97ffb934 	bl	678 <__stack_chk_fail>
   121ac:	35ffff00 	cbnz	w0, 1218c <__GP11_TEE_AllocateTransientObject+0x70>
   121b0:	b94037e0 	ldr	w0, [sp, #52]
   121b4:	f9000280 	str	x0, [x20]
   121b8:	17fffff5 	b	1218c <__GP11_TEE_AllocateTransientObject+0x70>
   121bc:	2a1303e0 	mov	w0, w19
   121c0:	a94153f3 	ldp	x19, x20, [sp, #16]
   121c4:	f94013f5 	ldr	x21, [sp, #32]
   121c8:	a8c47bfd 	ldp	x29, x30, [sp], #64
   121cc:	d65f03c0 	ret

00000000000121d0 <TEE_AllocateTransientObject>:
TEE_AllocateTransientObject():
   121d0:	528017e3 	mov	w3, #0xbf                  	// #191
   121d4:	72b40003 	movk	w3, #0xa000, lsl #16
   121d8:	6b03001f 	cmp	w0, w3
   121dc:	54000040 	b.eq	121e4 <TEE_AllocateTransientObject+0x14>  // b.none
   121e0:	17ffffcf 	b	1211c <__GP11_TEE_AllocateTransientObject>
   121e4:	129ffea0 	mov	w0, #0xffff000a            	// #-65526
   121e8:	d65f03c0 	ret

00000000000121ec <TEE_FreeTransientObject>:
TEE_FreeTransientObject():
   121ec:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
   121f0:	f0000021 	adrp	x1, 19000 <_DYNAMIC>
   121f4:	910003fd 	mov	x29, sp
   121f8:	f9409821 	ldr	x1, [x1, #304]
   121fc:	f9000bf3 	str	x19, [sp, #16]
   12200:	f9400022 	ldr	x2, [x1]
   12204:	f90027e2 	str	x2, [sp, #72]
   12208:	d2800002 	mov	x2, #0x0                   	// #0
   1220c:	a902ffff 	stp	xzr, xzr, [sp, #40]
   12210:	f9001fff 	str	xzr, [sp, #56]
   12214:	b90043ff 	str	wzr, [sp, #64]
   12218:	b40001c0 	cbz	x0, 12250 <TEE_FreeTransientObject+0x64>
   1221c:	aa0003f3 	mov	x19, x0
   12220:	9100a3e1 	add	x1, sp, #0x28
   12224:	97ffbfca 	bl	214c <_utee_cryp_obj_get_info>
   12228:	34000040 	cbz	w0, 12230 <TEE_FreeTransientObject+0x44>
   1222c:	97ffccc8 	bl	554c <TEE_Panic>
   12230:	b94043e0 	ldr	w0, [sp, #64]
   12234:	36800060 	tbz	w0, #16, 12240 <TEE_FreeTransientObject+0x54>
   12238:	52800000 	mov	w0, #0x0                   	// #0
   1223c:	97ffccc4 	bl	554c <TEE_Panic>
   12240:	aa1303e0 	mov	x0, x19
   12244:	97ffbfce 	bl	217c <_utee_cryp_obj_close>
   12248:	34000040 	cbz	w0, 12250 <TEE_FreeTransientObject+0x64>
   1224c:	97ffccc0 	bl	554c <TEE_Panic>
   12250:	f0000021 	adrp	x1, 19000 <_DYNAMIC>
   12254:	f9409821 	ldr	x1, [x1, #304]
   12258:	f94027e0 	ldr	x0, [sp, #72]
   1225c:	f9400022 	ldr	x2, [x1]
   12260:	eb020000 	subs	x0, x0, x2
   12264:	d2800002 	mov	x2, #0x0                   	// #0
   12268:	54000040 	b.eq	12270 <TEE_FreeTransientObject+0x84>  // b.none
   1226c:	97ffb903 	bl	678 <__stack_chk_fail>
   12270:	f9400bf3 	ldr	x19, [sp, #16]
   12274:	a8c57bfd 	ldp	x29, x30, [sp], #80
   12278:	d65f03c0 	ret

000000000001227c <TEE_ResetTransientObject>:
TEE_ResetTransientObject():
   1227c:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
   12280:	f0000021 	adrp	x1, 19000 <_DYNAMIC>
   12284:	910003fd 	mov	x29, sp
   12288:	f9409821 	ldr	x1, [x1, #304]
   1228c:	f9000bf3 	str	x19, [sp, #16]
   12290:	f9400022 	ldr	x2, [x1]
   12294:	f90027e2 	str	x2, [sp, #72]
   12298:	d2800002 	mov	x2, #0x0                   	// #0
   1229c:	a902ffff 	stp	xzr, xzr, [sp, #40]
   122a0:	f9001fff 	str	xzr, [sp, #56]
   122a4:	b90043ff 	str	wzr, [sp, #64]
   122a8:	b40001c0 	cbz	x0, 122e0 <TEE_ResetTransientObject+0x64>
   122ac:	aa0003f3 	mov	x19, x0
   122b0:	9100a3e1 	add	x1, sp, #0x28
   122b4:	97ffbfa6 	bl	214c <_utee_cryp_obj_get_info>
   122b8:	34000040 	cbz	w0, 122c0 <TEE_ResetTransientObject+0x44>
   122bc:	97ffcca4 	bl	554c <TEE_Panic>
   122c0:	b94043e0 	ldr	w0, [sp, #64]
   122c4:	36800060 	tbz	w0, #16, 122d0 <TEE_ResetTransientObject+0x54>
   122c8:	52800000 	mov	w0, #0x0                   	// #0
   122cc:	97ffcca0 	bl	554c <TEE_Panic>
   122d0:	aa1303e0 	mov	x0, x19
   122d4:	97ffbfad 	bl	2188 <_utee_cryp_obj_reset>
   122d8:	34000040 	cbz	w0, 122e0 <TEE_ResetTransientObject+0x64>
   122dc:	97ffcc9c 	bl	554c <TEE_Panic>
   122e0:	f0000021 	adrp	x1, 19000 <_DYNAMIC>
   122e4:	f9409821 	ldr	x1, [x1, #304]
   122e8:	f94027e0 	ldr	x0, [sp, #72]
   122ec:	f9400022 	ldr	x2, [x1]
   122f0:	eb020000 	subs	x0, x0, x2
   122f4:	d2800002 	mov	x2, #0x0                   	// #0
   122f8:	54000040 	b.eq	12300 <TEE_ResetTransientObject+0x84>  // b.none
   122fc:	97ffb8df 	bl	678 <__stack_chk_fail>
   12300:	f9400bf3 	ldr	x19, [sp, #16]
   12304:	a8c57bfd 	ldp	x29, x30, [sp], #80
   12308:	d65f03c0 	ret

000000000001230c <TEE_PopulateTransientObject>:
TEE_PopulateTransientObject():
   1230c:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
   12310:	f0000023 	adrp	x3, 19000 <_DYNAMIC>
   12314:	910003fd 	mov	x29, sp
   12318:	f9409863 	ldr	x3, [x3, #304]
   1231c:	a90153f3 	stp	x19, x20, [sp, #16]
   12320:	aa0003f4 	mov	x20, x0
   12324:	a9025bf5 	stp	x21, x22, [sp, #32]
   12328:	aa0103f5 	mov	x21, x1
   1232c:	f9001bf7 	str	x23, [sp, #48]
   12330:	2a0203f7 	mov	w23, w2
   12334:	aa1703e1 	mov	x1, x23
   12338:	aa1703f3 	mov	x19, x23
   1233c:	f9400060 	ldr	x0, [x3]
   12340:	f90037a0 	str	x0, [x29, #104]
   12344:	d2800000 	mov	x0, #0x0                   	// #0
   12348:	52800303 	mov	w3, #0x18                  	// #24
   1234c:	aa1503e0 	mov	x0, x21
   12350:	a904ffbf 	stp	xzr, xzr, [x29, #72]
   12354:	9ba37ee3 	umull	x3, w23, w3
   12358:	f9002fbf 	str	xzr, [x29, #88]
   1235c:	91003c63 	add	x3, x3, #0xf
   12360:	b90063bf 	str	wzr, [x29, #96]
   12364:	927c8463 	and	x3, x3, #0x3ffffffff0
   12368:	cb2363ff 	sub	sp, sp, x3
   1236c:	910003f6 	mov	x22, sp
   12370:	97ffccdd 	bl	56e4 <__utee_check_attr_in_annotation>
   12374:	910123a1 	add	x1, x29, #0x48
   12378:	aa1403e0 	mov	x0, x20
   1237c:	97ffbf74 	bl	214c <_utee_cryp_obj_get_info>
   12380:	34000040 	cbz	w0, 12388 <TEE_PopulateTransientObject+0x7c>
   12384:	97ffcc72 	bl	554c <TEE_Panic>
   12388:	b94063a0 	ldr	w0, [x29, #96]
   1238c:	36800060 	tbz	w0, #16, 12398 <TEE_PopulateTransientObject+0x8c>
   12390:	52800000 	mov	w0, #0x0                   	// #0
   12394:	97ffcc6e 	bl	554c <TEE_Panic>
   12398:	b94063a0 	ldr	w0, [x29, #96]
   1239c:	36880060 	tbz	w0, #17, 123a8 <TEE_PopulateTransientObject+0x9c>
   123a0:	52800000 	mov	w0, #0x0                   	// #0
   123a4:	97ffcc6a 	bl	554c <TEE_Panic>
   123a8:	2a1303e2 	mov	w2, w19
   123ac:	aa1503e1 	mov	x1, x21
   123b0:	aa1603e0 	mov	x0, x22
   123b4:	97fffd80 	bl	119b4 <__utee_from_attr>
   123b8:	aa1603e1 	mov	x1, x22
   123bc:	aa1703e2 	mov	x2, x23
   123c0:	aa1403e0 	mov	x0, x20
   123c4:	97ffbf74 	bl	2194 <_utee_cryp_obj_populate>
   123c8:	7100001f 	cmp	w0, #0x0
   123cc:	129fff21 	mov	w1, #0xffff0006            	// #-65530
   123d0:	2a0003f3 	mov	w19, w0
   123d4:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
   123d8:	54000040 	b.eq	123e0 <TEE_PopulateTransientObject+0xd4>  // b.none
   123dc:	97ffcc5c 	bl	554c <TEE_Panic>
   123e0:	f0000023 	adrp	x3, 19000 <_DYNAMIC>
   123e4:	f9409863 	ldr	x3, [x3, #304]
   123e8:	f94037a0 	ldr	x0, [x29, #104]
   123ec:	f9400061 	ldr	x1, [x3]
   123f0:	eb010000 	subs	x0, x0, x1
   123f4:	d2800001 	mov	x1, #0x0                   	// #0
   123f8:	54000040 	b.eq	12400 <TEE_PopulateTransientObject+0xf4>  // b.none
   123fc:	97ffb89f 	bl	678 <__stack_chk_fail>
   12400:	910003bf 	mov	sp, x29
   12404:	2a1303e0 	mov	w0, w19
   12408:	a94153f3 	ldp	x19, x20, [sp, #16]
   1240c:	a9425bf5 	ldp	x21, x22, [sp, #32]
   12410:	f9401bf7 	ldr	x23, [sp, #48]
   12414:	a8c77bfd 	ldp	x29, x30, [sp], #112
   12418:	d65f03c0 	ret

000000000001241c <__GP11_TEE_PopulateTransientObject>:
__GP11_TEE_PopulateTransientObject():
   1241c:	a9b97bfd 	stp	x29, x30, [sp, #-112]!
   12420:	f0000023 	adrp	x3, 19000 <_DYNAMIC>
   12424:	910003fd 	mov	x29, sp
   12428:	f9409863 	ldr	x3, [x3, #304]
   1242c:	a90153f3 	stp	x19, x20, [sp, #16]
   12430:	aa0003f4 	mov	x20, x0
   12434:	a9025bf5 	stp	x21, x22, [sp, #32]
   12438:	aa0103f5 	mov	x21, x1
   1243c:	f9001bf7 	str	x23, [sp, #48]
   12440:	2a0203f7 	mov	w23, w2
   12444:	aa1703e1 	mov	x1, x23
   12448:	aa1703f3 	mov	x19, x23
   1244c:	f9400060 	ldr	x0, [x3]
   12450:	f90037a0 	str	x0, [x29, #104]
   12454:	d2800000 	mov	x0, #0x0                   	// #0
   12458:	52800303 	mov	w3, #0x18                  	// #24
   1245c:	aa1503e0 	mov	x0, x21
   12460:	a904ffbf 	stp	xzr, xzr, [x29, #72]
   12464:	9ba37ee3 	umull	x3, w23, w3
   12468:	f9002fbf 	str	xzr, [x29, #88]
   1246c:	91003c63 	add	x3, x3, #0xf
   12470:	b90063bf 	str	wzr, [x29, #96]
   12474:	927c8463 	and	x3, x3, #0x3ffffffff0
   12478:	cb2363ff 	sub	sp, sp, x3
   1247c:	910003f6 	mov	x22, sp
   12480:	97ffcca2 	bl	5708 <__utee_check_gp11_attr_in_annotation>
   12484:	910123a1 	add	x1, x29, #0x48
   12488:	aa1403e0 	mov	x0, x20
   1248c:	97ffbf30 	bl	214c <_utee_cryp_obj_get_info>
   12490:	34000040 	cbz	w0, 12498 <__GP11_TEE_PopulateTransientObject+0x7c>
   12494:	97ffcc2e 	bl	554c <TEE_Panic>
   12498:	b94063a0 	ldr	w0, [x29, #96]
   1249c:	36800060 	tbz	w0, #16, 124a8 <__GP11_TEE_PopulateTransientObject+0x8c>
   124a0:	52800000 	mov	w0, #0x0                   	// #0
   124a4:	97ffcc2a 	bl	554c <TEE_Panic>
   124a8:	b94063a0 	ldr	w0, [x29, #96]
   124ac:	36880060 	tbz	w0, #17, 124b8 <__GP11_TEE_PopulateTransientObject+0x9c>
   124b0:	52800000 	mov	w0, #0x0                   	// #0
   124b4:	97ffcc26 	bl	554c <TEE_Panic>
   124b8:	2a1303e2 	mov	w2, w19
   124bc:	aa1503e1 	mov	x1, x21
   124c0:	aa1603e0 	mov	x0, x22
   124c4:	97fffd50 	bl	11a04 <__utee_from_gp11_attr>
   124c8:	aa1603e1 	mov	x1, x22
   124cc:	aa1703e2 	mov	x2, x23
   124d0:	aa1403e0 	mov	x0, x20
   124d4:	97ffbf30 	bl	2194 <_utee_cryp_obj_populate>
   124d8:	7100001f 	cmp	w0, #0x0
   124dc:	129fff21 	mov	w1, #0xffff0006            	// #-65530
   124e0:	2a0003f3 	mov	w19, w0
   124e4:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
   124e8:	54000040 	b.eq	124f0 <__GP11_TEE_PopulateTransientObject+0xd4>  // b.none
   124ec:	97ffcc18 	bl	554c <TEE_Panic>
   124f0:	f0000023 	adrp	x3, 19000 <_DYNAMIC>
   124f4:	f9409863 	ldr	x3, [x3, #304]
   124f8:	f94037a0 	ldr	x0, [x29, #104]
   124fc:	f9400061 	ldr	x1, [x3]
   12500:	eb010000 	subs	x0, x0, x1
   12504:	d2800001 	mov	x1, #0x0                   	// #0
   12508:	54000040 	b.eq	12510 <__GP11_TEE_PopulateTransientObject+0xf4>  // b.none
   1250c:	97ffb85b 	bl	678 <__stack_chk_fail>
   12510:	910003bf 	mov	sp, x29
   12514:	2a1303e0 	mov	w0, w19
   12518:	a94153f3 	ldp	x19, x20, [sp, #16]
   1251c:	a9425bf5 	ldp	x21, x22, [sp, #32]
   12520:	f9401bf7 	ldr	x23, [sp, #48]
   12524:	a8c77bfd 	ldp	x29, x30, [sp], #112
   12528:	d65f03c0 	ret

000000000001252c <TEE_InitRefAttribute>:
TEE_InitRefAttribute():
   1252c:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
   12530:	910003fd 	mov	x29, sp
   12534:	a90153f3 	stp	x19, x20, [sp, #16]
   12538:	2a0103f4 	mov	w20, w1
   1253c:	aa0003f3 	mov	x19, x0
   12540:	d2800301 	mov	x1, #0x18                  	// #24
   12544:	a9025bf5 	stp	x21, x22, [sp, #32]
   12548:	aa0203f6 	mov	x22, x2
   1254c:	aa0303f5 	mov	x21, x3
   12550:	97ffcc5d 	bl	56c4 <__utee_check_out_annotation>
   12554:	36e80074 	tbz	w20, #29, 12560 <TEE_InitRefAttribute+0x34>
   12558:	52800000 	mov	w0, #0x0                   	// #0
   1255c:	97ffcbfc 	bl	554c <TEE_Panic>
   12560:	b9000274 	str	w20, [x19]
   12564:	a900d676 	stp	x22, x21, [x19, #8]
   12568:	a94153f3 	ldp	x19, x20, [sp, #16]
   1256c:	a9425bf5 	ldp	x21, x22, [sp, #32]
   12570:	a8c37bfd 	ldp	x29, x30, [sp], #48
   12574:	d65f03c0 	ret

0000000000012578 <__GP11_TEE_InitRefAttribute>:
__GP11_TEE_InitRefAttribute():
   12578:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
   1257c:	910003fd 	mov	x29, sp
   12580:	a90153f3 	stp	x19, x20, [sp, #16]
   12584:	2a0103f4 	mov	w20, w1
   12588:	aa0003f3 	mov	x19, x0
   1258c:	d2800301 	mov	x1, #0x18                  	// #24
   12590:	a9025bf5 	stp	x21, x22, [sp, #32]
   12594:	aa0203f6 	mov	x22, x2
   12598:	2a0303f5 	mov	w21, w3
   1259c:	97ffcc4a 	bl	56c4 <__utee_check_out_annotation>
   125a0:	36e80074 	tbz	w20, #29, 125ac <__GP11_TEE_InitRefAttribute+0x34>
   125a4:	52800000 	mov	w0, #0x0                   	// #0
   125a8:	97ffcbe9 	bl	554c <TEE_Panic>
   125ac:	b9000274 	str	w20, [x19]
   125b0:	f9000676 	str	x22, [x19, #8]
   125b4:	b9001275 	str	w21, [x19, #16]
   125b8:	a94153f3 	ldp	x19, x20, [sp, #16]
   125bc:	a9425bf5 	ldp	x21, x22, [sp, #32]
   125c0:	a8c37bfd 	ldp	x29, x30, [sp], #48
   125c4:	d65f03c0 	ret

00000000000125c8 <TEE_InitValueAttribute>:
TEE_InitValueAttribute():
   125c8:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
   125cc:	910003fd 	mov	x29, sp
   125d0:	a90153f3 	stp	x19, x20, [sp, #16]
   125d4:	2a0103f4 	mov	w20, w1
   125d8:	aa0003f3 	mov	x19, x0
   125dc:	d2800301 	mov	x1, #0x18                  	// #24
   125e0:	a9025bf5 	stp	x21, x22, [sp, #32]
   125e4:	2a0203f6 	mov	w22, w2
   125e8:	2a0303f5 	mov	w21, w3
   125ec:	97ffcc36 	bl	56c4 <__utee_check_out_annotation>
   125f0:	37e80074 	tbnz	w20, #29, 125fc <TEE_InitValueAttribute+0x34>
   125f4:	52800000 	mov	w0, #0x0                   	// #0
   125f8:	97ffcbd5 	bl	554c <TEE_Panic>
   125fc:	b9000274 	str	w20, [x19]
   12600:	29015676 	stp	w22, w21, [x19, #8]
   12604:	a94153f3 	ldp	x19, x20, [sp, #16]
   12608:	a9425bf5 	ldp	x21, x22, [sp, #32]
   1260c:	a8c37bfd 	ldp	x29, x30, [sp], #48
   12610:	d65f03c0 	ret

0000000000012614 <__GP11_TEE_InitValueAttribute>:
__GP11_TEE_InitValueAttribute():
   12614:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
   12618:	910003fd 	mov	x29, sp
   1261c:	a90153f3 	stp	x19, x20, [sp, #16]
   12620:	2a0103f4 	mov	w20, w1
   12624:	aa0003f3 	mov	x19, x0
   12628:	d2800301 	mov	x1, #0x18                  	// #24
   1262c:	a9025bf5 	stp	x21, x22, [sp, #32]
   12630:	2a0203f6 	mov	w22, w2
   12634:	2a0303f5 	mov	w21, w3
   12638:	97ffcc23 	bl	56c4 <__utee_check_out_annotation>
   1263c:	37e80074 	tbnz	w20, #29, 12648 <__GP11_TEE_InitValueAttribute+0x34>
   12640:	52800000 	mov	w0, #0x0                   	// #0
   12644:	97ffcbc2 	bl	554c <TEE_Panic>
   12648:	b9000274 	str	w20, [x19]
   1264c:	29015676 	stp	w22, w21, [x19, #8]
   12650:	a94153f3 	ldp	x19, x20, [sp, #16]
   12654:	a9425bf5 	ldp	x21, x22, [sp, #32]
   12658:	a8c37bfd 	ldp	x29, x30, [sp], #48
   1265c:	d65f03c0 	ret

0000000000012660 <TEE_CopyObjectAttributes1>:
TEE_CopyObjectAttributes1():
   12660:	a9b87bfd 	stp	x29, x30, [sp, #-128]!
   12664:	f0000022 	adrp	x2, 19000 <_DYNAMIC>
   12668:	910003fd 	mov	x29, sp
   1266c:	f9409842 	ldr	x2, [x2, #304]
   12670:	a90153f3 	stp	x19, x20, [sp, #16]
   12674:	aa0103f4 	mov	x20, x1
   12678:	f90013f5 	str	x21, [sp, #32]
   1267c:	aa0003f5 	mov	x21, x0
   12680:	f9400041 	ldr	x1, [x2]
   12684:	f9003fe1 	str	x1, [sp, #120]
   12688:	d2800001 	mov	x1, #0x0                   	// #0
   1268c:	a903ffff 	stp	xzr, xzr, [sp, #56]
   12690:	9100e3e1 	add	x1, sp, #0x38
   12694:	f90027ff 	str	xzr, [sp, #72]
   12698:	b90053ff 	str	wzr, [sp, #80]
   1269c:	a905ffff 	stp	xzr, xzr, [sp, #88]
   126a0:	f90037ff 	str	xzr, [sp, #104]
   126a4:	b90073ff 	str	wzr, [sp, #112]
   126a8:	97ffbea9 	bl	214c <_utee_cryp_obj_get_info>
   126ac:	2a0003f3 	mov	w19, w0
   126b0:	350002a0 	cbnz	w0, 12704 <TEE_CopyObjectAttributes1+0xa4>
   126b4:	910163e1 	add	x1, sp, #0x58
   126b8:	aa1403e0 	mov	x0, x20
   126bc:	97ffbea4 	bl	214c <_utee_cryp_obj_get_info>
   126c0:	2a0003f3 	mov	w19, w0
   126c4:	35000200 	cbnz	w0, 12704 <TEE_CopyObjectAttributes1+0xa4>
   126c8:	b94073e1 	ldr	w1, [sp, #112]
   126cc:	37880041 	tbnz	w1, #17, 126d4 <TEE_CopyObjectAttributes1+0x74>
   126d0:	97ffcb9f 	bl	554c <TEE_Panic>
   126d4:	b94053e0 	ldr	w0, [sp, #80]
   126d8:	36800060 	tbz	w0, #16, 126e4 <TEE_CopyObjectAttributes1+0x84>
   126dc:	52800000 	mov	w0, #0x0                   	// #0
   126e0:	97ffcb9b 	bl	554c <TEE_Panic>
   126e4:	b94053e0 	ldr	w0, [sp, #80]
   126e8:	36880060 	tbz	w0, #17, 126f4 <TEE_CopyObjectAttributes1+0x94>
   126ec:	52800000 	mov	w0, #0x0                   	// #0
   126f0:	97ffcb97 	bl	554c <TEE_Panic>
   126f4:	aa1403e1 	mov	x1, x20
   126f8:	aa1503e0 	mov	x0, x21
   126fc:	97ffbea9 	bl	21a0 <_utee_cryp_obj_copy>
   12700:	2a0003f3 	mov	w19, w0
   12704:	121e7a60 	and	w0, w19, #0xfffffffd
   12708:	7100027f 	cmp	w19, #0x0
   1270c:	52800021 	mov	w1, #0x1                   	// #1
   12710:	72be0201 	movk	w1, #0xf010, lsl #16
   12714:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
   12718:	54000060 	b.eq	12724 <TEE_CopyObjectAttributes1+0xc4>  // b.none
   1271c:	2a1303e0 	mov	w0, w19
   12720:	97ffcb8b 	bl	554c <TEE_Panic>
   12724:	f0000022 	adrp	x2, 19000 <_DYNAMIC>
   12728:	f9409842 	ldr	x2, [x2, #304]
   1272c:	f9403fe0 	ldr	x0, [sp, #120]
   12730:	f9400041 	ldr	x1, [x2]
   12734:	eb010000 	subs	x0, x0, x1
   12738:	d2800001 	mov	x1, #0x0                   	// #0
   1273c:	54000040 	b.eq	12744 <TEE_CopyObjectAttributes1+0xe4>  // b.none
   12740:	97ffb7ce 	bl	678 <__stack_chk_fail>
   12744:	2a1303e0 	mov	w0, w19
   12748:	a94153f3 	ldp	x19, x20, [sp, #16]
   1274c:	f94013f5 	ldr	x21, [sp, #32]
   12750:	a8c87bfd 	ldp	x29, x30, [sp], #128
   12754:	d65f03c0 	ret

0000000000012758 <TEE_CopyObjectAttributes>:
TEE_CopyObjectAttributes():
   12758:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
   1275c:	f0000022 	adrp	x2, 19000 <_DYNAMIC>
   12760:	910003fd 	mov	x29, sp
   12764:	f9409842 	ldr	x2, [x2, #304]
   12768:	a90153f3 	stp	x19, x20, [sp, #16]
   1276c:	aa0103f3 	mov	x19, x1
   12770:	aa0003f4 	mov	x20, x0
   12774:	f9400040 	ldr	x0, [x2]
   12778:	f90027e0 	str	x0, [sp, #72]
   1277c:	d2800000 	mov	x0, #0x0                   	// #0
   12780:	9100a3e1 	add	x1, sp, #0x28
   12784:	aa1303e0 	mov	x0, x19
   12788:	a902ffff 	stp	xzr, xzr, [sp, #40]
   1278c:	f9001fff 	str	xzr, [sp, #56]
   12790:	b90043ff 	str	wzr, [sp, #64]
   12794:	97ffbe6e 	bl	214c <_utee_cryp_obj_get_info>
   12798:	b9402be1 	ldr	w1, [sp, #40]
   1279c:	528017c0 	mov	w0, #0xbe                  	// #190
   127a0:	72b40000 	movk	w0, #0xa000, lsl #16
   127a4:	6b00003f 	cmp	w1, w0
   127a8:	540000c0 	b.eq	127c0 <TEE_CopyObjectAttributes+0x68>  // b.none
   127ac:	aa1303e1 	mov	x1, x19
   127b0:	aa1403e0 	mov	x0, x20
   127b4:	97ffffab 	bl	12660 <TEE_CopyObjectAttributes1>
   127b8:	34000040 	cbz	w0, 127c0 <TEE_CopyObjectAttributes+0x68>
   127bc:	97ffcb64 	bl	554c <TEE_Panic>
   127c0:	f0000022 	adrp	x2, 19000 <_DYNAMIC>
   127c4:	f9409842 	ldr	x2, [x2, #304]
   127c8:	f94027e0 	ldr	x0, [sp, #72]
   127cc:	f9400041 	ldr	x1, [x2]
   127d0:	eb010000 	subs	x0, x0, x1
   127d4:	d2800001 	mov	x1, #0x0                   	// #0
   127d8:	54000040 	b.eq	127e0 <TEE_CopyObjectAttributes+0x88>  // b.none
   127dc:	97ffb7a7 	bl	678 <__stack_chk_fail>
   127e0:	a94153f3 	ldp	x19, x20, [sp, #16]
   127e4:	a8c57bfd 	ldp	x29, x30, [sp], #80
   127e8:	d65f03c0 	ret

00000000000127ec <TEE_GenerateKey>:
TEE_GenerateKey():
   127ec:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
   127f0:	f0000024 	adrp	x4, 19000 <_DYNAMIC>
   127f4:	910003fd 	mov	x29, sp
   127f8:	f9409884 	ldr	x4, [x4, #304]
   127fc:	a90153f3 	stp	x19, x20, [sp, #16]
   12800:	aa0203f4 	mov	x20, x2
   12804:	a9025bf5 	stp	x21, x22, [sp, #32]
   12808:	aa0003f5 	mov	x21, x0
   1280c:	2a0103f6 	mov	w22, w1
   12810:	a90363f7 	stp	x23, x24, [sp, #48]
   12814:	2a0303f8 	mov	w24, w3
   12818:	aa1803e1 	mov	x1, x24
   1281c:	f9400080 	ldr	x0, [x4]
   12820:	f90027a0 	str	x0, [x29, #72]
   12824:	d2800000 	mov	x0, #0x0                   	// #0
   12828:	52800304 	mov	w4, #0x18                  	// #24
   1282c:	aa0203e0 	mov	x0, x2
   12830:	9ba47f04 	umull	x4, w24, w4
   12834:	91003c84 	add	x4, x4, #0xf
   12838:	927c8484 	and	x4, x4, #0x3ffffffff0
   1283c:	cb2463ff 	sub	sp, sp, x4
   12840:	910003f7 	mov	x23, sp
   12844:	97ffcba8 	bl	56e4 <__utee_check_attr_in_annotation>
   12848:	2a1803e2 	mov	w2, w24
   1284c:	aa1403e1 	mov	x1, x20
   12850:	aa1703e0 	mov	x0, x23
   12854:	97fffc58 	bl	119b4 <__utee_from_attr>
   12858:	2a1603e1 	mov	w1, w22
   1285c:	aa1803e3 	mov	x3, x24
   12860:	aa1703e2 	mov	x2, x23
   12864:	aa1503e0 	mov	x0, x21
   12868:	97ffbe93 	bl	22b4 <_utee_cryp_obj_generate_key>
   1286c:	7100001f 	cmp	w0, #0x0
   12870:	129fff21 	mov	w1, #0xffff0006            	// #-65530
   12874:	2a0003f3 	mov	w19, w0
   12878:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
   1287c:	54000040 	b.eq	12884 <TEE_GenerateKey+0x98>  // b.none
   12880:	97ffcb33 	bl	554c <TEE_Panic>
   12884:	f0000024 	adrp	x4, 19000 <_DYNAMIC>
   12888:	f9409884 	ldr	x4, [x4, #304]
   1288c:	f94027a0 	ldr	x0, [x29, #72]
   12890:	f9400081 	ldr	x1, [x4]
   12894:	eb010000 	subs	x0, x0, x1
   12898:	d2800001 	mov	x1, #0x0                   	// #0
   1289c:	54000040 	b.eq	128a4 <TEE_GenerateKey+0xb8>  // b.none
   128a0:	97ffb776 	bl	678 <__stack_chk_fail>
   128a4:	910003bf 	mov	sp, x29
   128a8:	2a1303e0 	mov	w0, w19
   128ac:	a94153f3 	ldp	x19, x20, [sp, #16]
   128b0:	a9425bf5 	ldp	x21, x22, [sp, #32]
   128b4:	a94363f7 	ldp	x23, x24, [sp, #48]
   128b8:	a8c57bfd 	ldp	x29, x30, [sp], #80
   128bc:	d65f03c0 	ret

00000000000128c0 <__GP11_TEE_GenerateKey>:
__GP11_TEE_GenerateKey():
   128c0:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
   128c4:	f0000024 	adrp	x4, 19000 <_DYNAMIC>
   128c8:	910003fd 	mov	x29, sp
   128cc:	f9409884 	ldr	x4, [x4, #304]
   128d0:	a90153f3 	stp	x19, x20, [sp, #16]
   128d4:	aa0203f4 	mov	x20, x2
   128d8:	a9025bf5 	stp	x21, x22, [sp, #32]
   128dc:	aa0003f5 	mov	x21, x0
   128e0:	2a0103f6 	mov	w22, w1
   128e4:	a90363f7 	stp	x23, x24, [sp, #48]
   128e8:	2a0303f8 	mov	w24, w3
   128ec:	aa1803e1 	mov	x1, x24
   128f0:	f9400080 	ldr	x0, [x4]
   128f4:	f90027a0 	str	x0, [x29, #72]
   128f8:	d2800000 	mov	x0, #0x0                   	// #0
   128fc:	52800304 	mov	w4, #0x18                  	// #24
   12900:	aa0203e0 	mov	x0, x2
   12904:	9ba47f04 	umull	x4, w24, w4
   12908:	91003c84 	add	x4, x4, #0xf
   1290c:	927c8484 	and	x4, x4, #0x3ffffffff0
   12910:	cb2463ff 	sub	sp, sp, x4
   12914:	910003f7 	mov	x23, sp
   12918:	97ffcb7c 	bl	5708 <__utee_check_gp11_attr_in_annotation>
   1291c:	2a1803e2 	mov	w2, w24
   12920:	aa1403e1 	mov	x1, x20
   12924:	aa1703e0 	mov	x0, x23
   12928:	97fffc37 	bl	11a04 <__utee_from_gp11_attr>
   1292c:	2a1603e1 	mov	w1, w22
   12930:	aa1803e3 	mov	x3, x24
   12934:	aa1703e2 	mov	x2, x23
   12938:	aa1503e0 	mov	x0, x21
   1293c:	97ffbe5e 	bl	22b4 <_utee_cryp_obj_generate_key>
   12940:	7100001f 	cmp	w0, #0x0
   12944:	129fff21 	mov	w1, #0xffff0006            	// #-65530
   12948:	2a0003f3 	mov	w19, w0
   1294c:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
   12950:	54000040 	b.eq	12958 <__GP11_TEE_GenerateKey+0x98>  // b.none
   12954:	97ffcafe 	bl	554c <TEE_Panic>
   12958:	f0000024 	adrp	x4, 19000 <_DYNAMIC>
   1295c:	f9409884 	ldr	x4, [x4, #304]
   12960:	f94027a0 	ldr	x0, [x29, #72]
   12964:	f9400081 	ldr	x1, [x4]
   12968:	eb010000 	subs	x0, x0, x1
   1296c:	d2800001 	mov	x1, #0x0                   	// #0
   12970:	54000040 	b.eq	12978 <__GP11_TEE_GenerateKey+0xb8>  // b.none
   12974:	97ffb741 	bl	678 <__stack_chk_fail>
   12978:	910003bf 	mov	sp, x29
   1297c:	2a1303e0 	mov	w0, w19
   12980:	a94153f3 	ldp	x19, x20, [sp, #16]
   12984:	a9425bf5 	ldp	x21, x22, [sp, #32]
   12988:	a94363f7 	ldp	x23, x24, [sp, #48]
   1298c:	a8c57bfd 	ldp	x29, x30, [sp], #80
   12990:	d65f03c0 	ret

0000000000012994 <TEE_OpenPersistentObject>:
TEE_OpenPersistentObject():
   12994:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
   12998:	f0000025 	adrp	x5, 19000 <_DYNAMIC>
   1299c:	910003fd 	mov	x29, sp
   129a0:	f94098a5 	ldr	x5, [x5, #304]
   129a4:	a90153f3 	stp	x19, x20, [sp, #16]
   129a8:	2a0003f3 	mov	w19, w0
   129ac:	a9025bf5 	stp	x21, x22, [sp, #32]
   129b0:	aa0403f4 	mov	x20, x4
   129b4:	aa0103f5 	mov	x21, x1
   129b8:	f9001bf7 	str	x23, [sp, #48]
   129bc:	aa0203f6 	mov	x22, x2
   129c0:	2a0303f7 	mov	w23, w3
   129c4:	d2800101 	mov	x1, #0x8                   	// #8
   129c8:	f94000a0 	ldr	x0, [x5]
   129cc:	f90027e0 	str	x0, [sp, #72]
   129d0:	d2800000 	mov	x0, #0x0                   	// #0
   129d4:	aa0403e0 	mov	x0, x4
   129d8:	97ffcb3b 	bl	56c4 <__utee_check_out_annotation>
   129dc:	2a1303e0 	mov	w0, w19
   129e0:	910113e4 	add	x4, sp, #0x44
   129e4:	2a1703e3 	mov	w3, w23
   129e8:	aa1603e2 	mov	x2, x22
   129ec:	aa1503e1 	mov	x1, x21
   129f0:	97ffbe0a 	bl	2218 <_utee_storage_obj_open>
   129f4:	2a0003f3 	mov	w19, w0
   129f8:	35000160 	cbnz	w0, 12a24 <TEE_OpenPersistentObject+0x90>
   129fc:	b94047e0 	ldr	w0, [sp, #68]
   12a00:	f0000025 	adrp	x5, 19000 <_DYNAMIC>
   12a04:	f9000280 	str	x0, [x20]
   12a08:	f94098a5 	ldr	x5, [x5, #304]
   12a0c:	f94027e0 	ldr	x0, [sp, #72]
   12a10:	f94000a1 	ldr	x1, [x5]
   12a14:	eb010000 	subs	x0, x0, x1
   12a18:	d2800001 	mov	x1, #0x0                   	// #0
   12a1c:	54000220 	b.eq	12a60 <TEE_OpenPersistentObject+0xcc>  // b.none
   12a20:	97ffb716 	bl	678 <__stack_chk_fail>
   12a24:	121d7802 	and	w2, w0, #0xfffffffb
   12a28:	129ffee1 	mov	w1, #0xffff0008            	// #-65528
   12a2c:	6b01005f 	cmp	w2, w1
   12a30:	54000140 	b.eq	12a58 <TEE_OpenPersistentObject+0xc4>  // b.none
   12a34:	129fff81 	mov	w1, #0xffff0003            	// #-65533
   12a38:	6b01001f 	cmp	w0, w1
   12a3c:	540000e0 	b.eq	12a58 <TEE_OpenPersistentObject+0xc4>  // b.none
   12a40:	52800021 	mov	w1, #0x1                   	// #1
   12a44:	121e7802 	and	w2, w0, #0xfffffffd
   12a48:	72be0201 	movk	w1, #0xf010, lsl #16
   12a4c:	6b01005f 	cmp	w2, w1
   12a50:	54000040 	b.eq	12a58 <TEE_OpenPersistentObject+0xc4>  // b.none
   12a54:	97ffcabe 	bl	554c <TEE_Panic>
   12a58:	d2800000 	mov	x0, #0x0                   	// #0
   12a5c:	17ffffe9 	b	12a00 <TEE_OpenPersistentObject+0x6c>
   12a60:	2a1303e0 	mov	w0, w19
   12a64:	a94153f3 	ldp	x19, x20, [sp, #16]
   12a68:	a9425bf5 	ldp	x21, x22, [sp, #32]
   12a6c:	f9401bf7 	ldr	x23, [sp, #48]
   12a70:	a8c57bfd 	ldp	x29, x30, [sp], #80
   12a74:	d65f03c0 	ret

0000000000012a78 <__GP11_TEE_OpenPersistentObject>:
__GP11_TEE_OpenPersistentObject():
   12a78:	2a0203e2 	mov	w2, w2
   12a7c:	17ffffc6 	b	12994 <TEE_OpenPersistentObject>

0000000000012a80 <TEE_CreatePersistentObject>:
TEE_CreatePersistentObject():
   12a80:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
   12a84:	f0000028 	adrp	x8, 19000 <_DYNAMIC>
   12a88:	910003fd 	mov	x29, sp
   12a8c:	f9409908 	ldr	x8, [x8, #304]
   12a90:	a90153f3 	stp	x19, x20, [sp, #16]
   12a94:	2a0003f3 	mov	w19, w0
   12a98:	a9025bf5 	stp	x21, x22, [sp, #32]
   12a9c:	aa0703f4 	mov	x20, x7
   12aa0:	aa0103f5 	mov	x21, x1
   12aa4:	a90363f7 	stp	x23, x24, [sp, #48]
   12aa8:	aa0203f6 	mov	x22, x2
   12aac:	2a0303f7 	mov	w23, w3
   12ab0:	a9046bf9 	stp	x25, x26, [sp, #64]
   12ab4:	aa0403f8 	mov	x24, x4
   12ab8:	aa0503f9 	mov	x25, x5
   12abc:	f9400100 	ldr	x0, [x8]
   12ac0:	f9002fe0 	str	x0, [sp, #88]
   12ac4:	d2800000 	mov	x0, #0x0                   	// #0
   12ac8:	b90057ff 	str	wzr, [sp, #84]
   12acc:	aa0603fa 	mov	x26, x6
   12ad0:	b4000687 	cbz	x7, 12ba0 <TEE_CreatePersistentObject+0x120>
   12ad4:	aa0703e0 	mov	x0, x7
   12ad8:	d2800101 	mov	x1, #0x8                   	// #8
   12adc:	97ffcafa 	bl	56c4 <__utee_check_out_annotation>
   12ae0:	910153e7 	add	x7, sp, #0x54
   12ae4:	aa1603e2 	mov	x2, x22
   12ae8:	2a1303e0 	mov	w0, w19
   12aec:	aa1a03e6 	mov	x6, x26
   12af0:	aa1903e5 	mov	x5, x25
   12af4:	aa1803e4 	mov	x4, x24
   12af8:	2a1703e3 	mov	w3, w23
   12afc:	aa1503e1 	mov	x1, x21
   12b00:	97ffbdc9 	bl	2224 <_utee_storage_obj_create>
   12b04:	f100029f 	cmp	x20, #0x0
   12b08:	2a0003f3 	mov	w19, w0
   12b0c:	1a9f07f6 	cset	w22, ne  // ne = any
   12b10:	7100001f 	cmp	w0, #0x0
   12b14:	7a400ac4 	ccmp	w22, #0x0, #0x4, eq  // eq = none
   12b18:	54000060 	b.eq	12b24 <TEE_CreatePersistentObject+0xa4>  // b.none
   12b1c:	b94057e0 	ldr	w0, [sp, #84]
   12b20:	f9000280 	str	x0, [x20]
   12b24:	7100027f 	cmp	w19, #0x0
   12b28:	121d7a60 	and	w0, w19, #0xfffffffb
   12b2c:	1a9f07f5 	cset	w21, ne  // ne = any
   12b30:	129ffee1 	mov	w1, #0xffff0008            	// #-65528
   12b34:	710002bf 	cmp	w21, #0x0
   12b38:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
   12b3c:	540001a0 	b.eq	12b70 <TEE_CreatePersistentObject+0xf0>  // b.none
   12b40:	129fff80 	mov	w0, #0xffff0003            	// #-65533
   12b44:	6b00027f 	cmp	w19, w0
   12b48:	54000140 	b.eq	12b70 <TEE_CreatePersistentObject+0xf0>  // b.none
   12b4c:	121e7a61 	and	w1, w19, #0xfffffffd
   12b50:	52800020 	mov	w0, #0x1                   	// #1
   12b54:	72be0200 	movk	w0, #0xf010, lsl #16
   12b58:	6b00003f 	cmp	w1, w0
   12b5c:	1299f7c0 	mov	w0, #0xffff3041            	// #-53183
   12b60:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
   12b64:	54000060 	b.eq	12b70 <TEE_CreatePersistentObject+0xf0>  // b.none
   12b68:	2a1303e0 	mov	w0, w19
   12b6c:	97ffca78 	bl	554c <TEE_Panic>
   12b70:	710002df 	cmp	w22, #0x0
   12b74:	7a401aa4 	ccmp	w21, #0x0, #0x4, ne  // ne = any
   12b78:	54000040 	b.eq	12b80 <TEE_CreatePersistentObject+0x100>  // b.none
   12b7c:	f900029f 	str	xzr, [x20]
   12b80:	f0000028 	adrp	x8, 19000 <_DYNAMIC>
   12b84:	f9409908 	ldr	x8, [x8, #304]
   12b88:	f9402fe0 	ldr	x0, [sp, #88]
   12b8c:	f9400101 	ldr	x1, [x8]
   12b90:	eb010000 	subs	x0, x0, x1
   12b94:	d2800001 	mov	x1, #0x0                   	// #0
   12b98:	54000080 	b.eq	12ba8 <TEE_CreatePersistentObject+0x128>  // b.none
   12b9c:	97ffb6b7 	bl	678 <__stack_chk_fail>
   12ba0:	d2800007 	mov	x7, #0x0                   	// #0
   12ba4:	17ffffd0 	b	12ae4 <TEE_CreatePersistentObject+0x64>
   12ba8:	2a1303e0 	mov	w0, w19
   12bac:	a94153f3 	ldp	x19, x20, [sp, #16]
   12bb0:	a9425bf5 	ldp	x21, x22, [sp, #32]
   12bb4:	a94363f7 	ldp	x23, x24, [sp, #48]
   12bb8:	a9446bf9 	ldp	x25, x26, [sp, #64]
   12bbc:	a8c67bfd 	ldp	x29, x30, [sp], #96
   12bc0:	d65f03c0 	ret

0000000000012bc4 <__GP11_TEE_CreatePersistentObject>:
__GP11_TEE_CreatePersistentObject():
   12bc4:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
   12bc8:	910003fd 	mov	x29, sp
   12bcc:	a90153f3 	stp	x19, x20, [sp, #16]
   12bd0:	2a0003f4 	mov	w20, w0
   12bd4:	aa0703f3 	mov	x19, x7
   12bd8:	aa0703e0 	mov	x0, x7
   12bdc:	a9025bf5 	stp	x21, x22, [sp, #32]
   12be0:	aa0103f5 	mov	x21, x1
   12be4:	2a0203f6 	mov	w22, w2
   12be8:	d2800101 	mov	x1, #0x8                   	// #8
   12bec:	a90363f7 	stp	x23, x24, [sp, #48]
   12bf0:	2a0303f7 	mov	w23, w3
   12bf4:	aa0403f8 	mov	x24, x4
   12bf8:	a9046bf9 	stp	x25, x26, [sp, #64]
   12bfc:	aa0503f9 	mov	x25, x5
   12c00:	2a0603fa 	mov	w26, w6
   12c04:	97ffcab0 	bl	56c4 <__utee_check_out_annotation>
   12c08:	aa1303e7 	mov	x7, x19
   12c0c:	2a1a03e6 	mov	w6, w26
   12c10:	aa1903e5 	mov	x5, x25
   12c14:	aa1803e4 	mov	x4, x24
   12c18:	2a1703e3 	mov	w3, w23
   12c1c:	2a1603e2 	mov	w2, w22
   12c20:	aa1503e1 	mov	x1, x21
   12c24:	2a1403e0 	mov	w0, w20
   12c28:	a94153f3 	ldp	x19, x20, [sp, #16]
   12c2c:	a9425bf5 	ldp	x21, x22, [sp, #32]
   12c30:	a94363f7 	ldp	x23, x24, [sp, #48]
   12c34:	a9446bf9 	ldp	x25, x26, [sp, #64]
   12c38:	a8c57bfd 	ldp	x29, x30, [sp], #80
   12c3c:	17ffff91 	b	12a80 <TEE_CreatePersistentObject>

0000000000012c40 <TEE_CloseAndDeletePersistentObject1>:
TEE_CloseAndDeletePersistentObject1():
   12c40:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
   12c44:	910003fd 	mov	x29, sp
   12c48:	f9000bf3 	str	x19, [sp, #16]
   12c4c:	b40001a0 	cbz	x0, 12c80 <TEE_CloseAndDeletePersistentObject1+0x40>
   12c50:	97ffbd78 	bl	2230 <_utee_storage_obj_del>
   12c54:	7100001f 	cmp	w0, #0x0
   12c58:	52800061 	mov	w1, #0x3                   	// #3
   12c5c:	2a0003f3 	mov	w19, w0
   12c60:	72be0201 	movk	w1, #0xf010, lsl #16
   12c64:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
   12c68:	54000040 	b.eq	12c70 <TEE_CloseAndDeletePersistentObject1+0x30>  // b.none
   12c6c:	97ffca38 	bl	554c <TEE_Panic>
   12c70:	2a1303e0 	mov	w0, w19
   12c74:	f9400bf3 	ldr	x19, [sp, #16]
   12c78:	a8c27bfd 	ldp	x29, x30, [sp], #32
   12c7c:	d65f03c0 	ret
   12c80:	52800013 	mov	w19, #0x0                   	// #0
   12c84:	17fffffb 	b	12c70 <TEE_CloseAndDeletePersistentObject1+0x30>

0000000000012c88 <TEE_CloseAndDeletePersistentObject>:
TEE_CloseAndDeletePersistentObject():
   12c88:	b4000140 	cbz	x0, 12cb0 <TEE_CloseAndDeletePersistentObject+0x28>
   12c8c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
   12c90:	910003fd 	mov	x29, sp
   12c94:	97ffffeb 	bl	12c40 <TEE_CloseAndDeletePersistentObject1>
   12c98:	34000080 	cbz	w0, 12ca8 <TEE_CloseAndDeletePersistentObject+0x20>
   12c9c:	a8c17bfd 	ldp	x29, x30, [sp], #16
   12ca0:	52800000 	mov	w0, #0x0                   	// #0
   12ca4:	17ffca2a 	b	554c <TEE_Panic>
   12ca8:	a8c17bfd 	ldp	x29, x30, [sp], #16
   12cac:	d65f03c0 	ret
   12cb0:	d65f03c0 	ret

0000000000012cb4 <TEE_RenamePersistentObject>:
TEE_RenamePersistentObject():
   12cb4:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
   12cb8:	910003fd 	mov	x29, sp
   12cbc:	f9000bf3 	str	x19, [sp, #16]
   12cc0:	b4000240 	cbz	x0, 12d08 <TEE_RenamePersistentObject+0x54>
   12cc4:	97ffbd5e 	bl	223c <_utee_storage_obj_rename>
   12cc8:	2a0003f3 	mov	w19, w0
   12ccc:	7100027f 	cmp	w19, #0x0
   12cd0:	129fff80 	mov	w0, #0xffff0003            	// #-65533
   12cd4:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
   12cd8:	54000100 	b.eq	12cf8 <TEE_RenamePersistentObject+0x44>  // b.none
   12cdc:	52800020 	mov	w0, #0x1                   	// #1
   12ce0:	121e7a61 	and	w1, w19, #0xfffffffd
   12ce4:	72be0200 	movk	w0, #0xf010, lsl #16
   12ce8:	6b00003f 	cmp	w1, w0
   12cec:	54000060 	b.eq	12cf8 <TEE_RenamePersistentObject+0x44>  // b.none
   12cf0:	2a1303e0 	mov	w0, w19
   12cf4:	97ffca16 	bl	554c <TEE_Panic>
   12cf8:	2a1303e0 	mov	w0, w19
   12cfc:	f9400bf3 	ldr	x19, [sp, #16]
   12d00:	a8c27bfd 	ldp	x29, x30, [sp], #32
   12d04:	d65f03c0 	ret
   12d08:	129ffef3 	mov	w19, #0xffff0008            	// #-65528
   12d0c:	17fffff0 	b	12ccc <TEE_RenamePersistentObject+0x18>

0000000000012d10 <__GP11_TEE_RenamePersistentObject>:
__GP11_TEE_RenamePersistentObject():
   12d10:	2a0203e2 	mov	w2, w2
   12d14:	17ffffe8 	b	12cb4 <TEE_RenamePersistentObject>

0000000000012d18 <TEE_AllocatePersistentObjectEnumerator>:
TEE_AllocatePersistentObjectEnumerator():
   12d18:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
   12d1c:	f0000021 	adrp	x1, 19000 <_DYNAMIC>
   12d20:	910003fd 	mov	x29, sp
   12d24:	f9409821 	ldr	x1, [x1, #304]
   12d28:	a90153f3 	stp	x19, x20, [sp, #16]
   12d2c:	aa0003f4 	mov	x20, x0
   12d30:	f9400022 	ldr	x2, [x1]
   12d34:	f90017e2 	str	x2, [sp, #40]
   12d38:	d2800002 	mov	x2, #0x0                   	// #0
   12d3c:	d2800101 	mov	x1, #0x8                   	// #8
   12d40:	97ffca61 	bl	56c4 <__utee_check_out_annotation>
   12d44:	910093e0 	add	x0, sp, #0x24
   12d48:	97ffbd40 	bl	2248 <_utee_storage_alloc_enum>
   12d4c:	2a0003f3 	mov	w19, w0
   12d50:	34000040 	cbz	w0, 12d58 <TEE_AllocatePersistentObjectEnumerator+0x40>
   12d54:	b90027ff 	str	wzr, [sp, #36]
   12d58:	b94027e0 	ldr	w0, [sp, #36]
   12d5c:	7100027f 	cmp	w19, #0x0
   12d60:	f9000280 	str	x0, [x20]
   12d64:	129fff80 	mov	w0, #0xffff0003            	// #-65533
   12d68:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
   12d6c:	54000060 	b.eq	12d78 <TEE_AllocatePersistentObjectEnumerator+0x60>  // b.none
   12d70:	2a1303e0 	mov	w0, w19
   12d74:	97ffc9f6 	bl	554c <TEE_Panic>
   12d78:	f0000021 	adrp	x1, 19000 <_DYNAMIC>
   12d7c:	f9409821 	ldr	x1, [x1, #304]
   12d80:	f94017e0 	ldr	x0, [sp, #40]
   12d84:	f9400022 	ldr	x2, [x1]
   12d88:	eb020000 	subs	x0, x0, x2
   12d8c:	d2800002 	mov	x2, #0x0                   	// #0
   12d90:	54000040 	b.eq	12d98 <TEE_AllocatePersistentObjectEnumerator+0x80>  // b.none
   12d94:	97ffb639 	bl	678 <__stack_chk_fail>
   12d98:	2a1303e0 	mov	w0, w19
   12d9c:	a94153f3 	ldp	x19, x20, [sp, #16]
   12da0:	a8c37bfd 	ldp	x29, x30, [sp], #48
   12da4:	d65f03c0 	ret

0000000000012da8 <TEE_FreePersistentObjectEnumerator>:
TEE_FreePersistentObjectEnumerator():
   12da8:	b4000120 	cbz	x0, 12dcc <TEE_FreePersistentObjectEnumerator+0x24>
   12dac:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
   12db0:	910003fd 	mov	x29, sp
   12db4:	97ffbd28 	bl	2254 <_utee_storage_free_enum>
   12db8:	34000060 	cbz	w0, 12dc4 <TEE_FreePersistentObjectEnumerator+0x1c>
   12dbc:	a8c17bfd 	ldp	x29, x30, [sp], #16
   12dc0:	17ffc9e3 	b	554c <TEE_Panic>
   12dc4:	a8c17bfd 	ldp	x29, x30, [sp], #16
   12dc8:	d65f03c0 	ret
   12dcc:	d65f03c0 	ret

0000000000012dd0 <TEE_ResetPersistentObjectEnumerator>:
TEE_ResetPersistentObjectEnumerator():
   12dd0:	b4000120 	cbz	x0, 12df4 <TEE_ResetPersistentObjectEnumerator+0x24>
   12dd4:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
   12dd8:	910003fd 	mov	x29, sp
   12ddc:	97ffbd21 	bl	2260 <_utee_storage_reset_enum>
   12de0:	34000060 	cbz	w0, 12dec <TEE_ResetPersistentObjectEnumerator+0x1c>
   12de4:	a8c17bfd 	ldp	x29, x30, [sp], #16
   12de8:	17ffc9d9 	b	554c <TEE_Panic>
   12dec:	a8c17bfd 	ldp	x29, x30, [sp], #16
   12df0:	d65f03c0 	ret
   12df4:	d65f03c0 	ret

0000000000012df8 <TEE_StartPersistentObjectEnumerator>:
TEE_StartPersistentObjectEnumerator():
   12df8:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
   12dfc:	2a0103e1 	mov	w1, w1
   12e00:	910003fd 	mov	x29, sp
   12e04:	f9000bf3 	str	x19, [sp, #16]
   12e08:	97ffbd19 	bl	226c <_utee_storage_start_enum>
   12e0c:	7100001f 	cmp	w0, #0x0
   12e10:	129ffee1 	mov	w1, #0xffff0008            	// #-65528
   12e14:	2a0003f3 	mov	w19, w0
   12e18:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
   12e1c:	540000e0 	b.eq	12e38 <TEE_StartPersistentObjectEnumerator+0x40>  // b.none
   12e20:	52800021 	mov	w1, #0x1                   	// #1
   12e24:	121e7802 	and	w2, w0, #0xfffffffd
   12e28:	72be0201 	movk	w1, #0xf010, lsl #16
   12e2c:	6b01005f 	cmp	w2, w1
   12e30:	54000040 	b.eq	12e38 <TEE_StartPersistentObjectEnumerator+0x40>  // b.none
   12e34:	97ffc9c6 	bl	554c <TEE_Panic>
   12e38:	2a1303e0 	mov	w0, w19
   12e3c:	f9400bf3 	ldr	x19, [sp, #16]
   12e40:	a8c27bfd 	ldp	x29, x30, [sp], #32
   12e44:	d65f03c0 	ret

0000000000012e48 <TEE_GetNextPersistentObject>:
TEE_GetNextPersistentObject():
   12e48:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
   12e4c:	910003fd 	mov	x29, sp
   12e50:	a90153f3 	stp	x19, x20, [sp, #16]
   12e54:	aa0103f3 	mov	x19, x1
   12e58:	f0000021 	adrp	x1, 19000 <_DYNAMIC>
   12e5c:	a9025bf5 	stp	x21, x22, [sp, #32]
   12e60:	aa0003f6 	mov	x22, x0
   12e64:	aa0203f4 	mov	x20, x2
   12e68:	f9409821 	ldr	x1, [x1, #304]
   12e6c:	aa0303f5 	mov	x21, x3
   12e70:	f9400020 	ldr	x0, [x1]
   12e74:	f9002fe0 	str	x0, [sp, #88]
   12e78:	d2800000 	mov	x0, #0x0                   	// #0
   12e7c:	a9037fff 	stp	xzr, xzr, [sp, #48]
   12e80:	a9047fff 	stp	xzr, xzr, [sp, #64]
   12e84:	b90053ff 	str	wzr, [sp, #80]
   12e88:	b4000093 	cbz	x19, 12e98 <TEE_GetNextPersistentObject+0x50>
   12e8c:	aa1303e0 	mov	x0, x19
   12e90:	d2800501 	mov	x1, #0x28                  	// #40
   12e94:	97ffca0c 	bl	56c4 <__utee_check_out_annotation>
   12e98:	aa1503e0 	mov	x0, x21
   12e9c:	d2800101 	mov	x1, #0x8                   	// #8
   12ea0:	97ffca09 	bl	56c4 <__utee_check_out_annotation>
   12ea4:	b4000534 	cbz	x20, 12f48 <TEE_GetNextPersistentObject+0x100>
   12ea8:	f94002a0 	ldr	x0, [x21]
   12eac:	aa1403e2 	mov	x2, x20
   12eb0:	9100c3e3 	add	x3, sp, #0x30
   12eb4:	9100e3e1 	add	x1, sp, #0x38
   12eb8:	f9001be0 	str	x0, [sp, #48]
   12ebc:	aa1603e0 	mov	x0, x22
   12ec0:	97ffbcee 	bl	2278 <_utee_storage_next_enum>
   12ec4:	2a0003f4 	mov	w20, w0
   12ec8:	b4000173 	cbz	x19, 12ef4 <TEE_GetNextPersistentObject+0xac>
   12ecc:	f9401fe0 	ldr	x0, [sp, #56]
   12ed0:	f9000260 	str	x0, [x19]
   12ed4:	f94023e0 	ldr	x0, [sp, #64]
   12ed8:	f9000660 	str	x0, [x19, #8]
   12edc:	b9404be0 	ldr	w0, [sp, #72]
   12ee0:	f9000a60 	str	x0, [x19, #16]
   12ee4:	b9404fe0 	ldr	w0, [sp, #76]
   12ee8:	f9000e60 	str	x0, [x19, #24]
   12eec:	b94053e0 	ldr	w0, [sp, #80]
   12ef0:	b9002260 	str	w0, [x19, #32]
   12ef4:	f9401be0 	ldr	x0, [sp, #48]
   12ef8:	f90002a0 	str	x0, [x21]
   12efc:	7100029f 	cmp	w20, #0x0
   12f00:	129ffee0 	mov	w0, #0xffff0008            	// #-65528
   12f04:	7a401284 	ccmp	w20, w0, #0x4, ne  // ne = any
   12f08:	54000100 	b.eq	12f28 <TEE_GetNextPersistentObject+0xe0>  // b.none
   12f0c:	52800020 	mov	w0, #0x1                   	// #1
   12f10:	121e7a81 	and	w1, w20, #0xfffffffd
   12f14:	72be0200 	movk	w0, #0xf010, lsl #16
   12f18:	6b00003f 	cmp	w1, w0
   12f1c:	54000060 	b.eq	12f28 <TEE_GetNextPersistentObject+0xe0>  // b.none
   12f20:	2a1403e0 	mov	w0, w20
   12f24:	97ffc98a 	bl	554c <TEE_Panic>
   12f28:	f0000021 	adrp	x1, 19000 <_DYNAMIC>
   12f2c:	f9409821 	ldr	x1, [x1, #304]
   12f30:	f9402fe0 	ldr	x0, [sp, #88]
   12f34:	f9400022 	ldr	x2, [x1]
   12f38:	eb020000 	subs	x0, x0, x2
   12f3c:	d2800002 	mov	x2, #0x0                   	// #0
   12f40:	54000080 	b.eq	12f50 <TEE_GetNextPersistentObject+0x108>  // b.none
   12f44:	97ffb5cd 	bl	678 <__stack_chk_fail>
   12f48:	129fff34 	mov	w20, #0xffff0006            	// #-65530
   12f4c:	17ffffec 	b	12efc <TEE_GetNextPersistentObject+0xb4>
   12f50:	2a1403e0 	mov	w0, w20
   12f54:	a94153f3 	ldp	x19, x20, [sp, #16]
   12f58:	a9425bf5 	ldp	x21, x22, [sp, #32]
   12f5c:	a8c67bfd 	ldp	x29, x30, [sp], #96
   12f60:	d65f03c0 	ret

0000000000012f64 <__GP11_TEE_GetNextPersistentObject>:
__GP11_TEE_GetNextPersistentObject():
   12f64:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
   12f68:	910003fd 	mov	x29, sp
   12f6c:	a90153f3 	stp	x19, x20, [sp, #16]
   12f70:	aa0103f3 	mov	x19, x1
   12f74:	f0000021 	adrp	x1, 19000 <_DYNAMIC>
   12f78:	a9025bf5 	stp	x21, x22, [sp, #32]
   12f7c:	aa0003f6 	mov	x22, x0
   12f80:	aa0203f4 	mov	x20, x2
   12f84:	f9409821 	ldr	x1, [x1, #304]
   12f88:	aa0303f5 	mov	x21, x3
   12f8c:	f9400020 	ldr	x0, [x1]
   12f90:	f9002fe0 	str	x0, [sp, #88]
   12f94:	d2800000 	mov	x0, #0x0                   	// #0
   12f98:	a9037fff 	stp	xzr, xzr, [sp, #48]
   12f9c:	a9047fff 	stp	xzr, xzr, [sp, #64]
   12fa0:	b90053ff 	str	wzr, [sp, #80]
   12fa4:	b4000093 	cbz	x19, 12fb4 <__GP11_TEE_GetNextPersistentObject+0x50>
   12fa8:	aa1303e0 	mov	x0, x19
   12fac:	d2800381 	mov	x1, #0x1c                  	// #28
   12fb0:	97ffc9c5 	bl	56c4 <__utee_check_out_annotation>
   12fb4:	aa1503e0 	mov	x0, x21
   12fb8:	d2800081 	mov	x1, #0x4                   	// #4
   12fbc:	97ffc9c2 	bl	56c4 <__utee_check_out_annotation>
   12fc0:	b40005b4 	cbz	x20, 13074 <__GP11_TEE_GetNextPersistentObject+0x110>
   12fc4:	b94002a0 	ldr	w0, [x21]
   12fc8:	aa1403e2 	mov	x2, x20
   12fcc:	9100c3e3 	add	x3, sp, #0x30
   12fd0:	9100e3e1 	add	x1, sp, #0x38
   12fd4:	f9001be0 	str	x0, [sp, #48]
   12fd8:	aa1603e0 	mov	x0, x22
   12fdc:	97ffbca7 	bl	2278 <_utee_storage_next_enum>
   12fe0:	2a0003f4 	mov	w20, w0
   12fe4:	b40001f3 	cbz	x19, 13020 <__GP11_TEE_GetNextPersistentObject+0xbc>
   12fe8:	b9403be0 	ldr	w0, [sp, #56]
   12fec:	b9000260 	str	w0, [x19]
   12ff0:	b9403fe0 	ldr	w0, [sp, #60]
   12ff4:	b9000660 	str	w0, [x19, #4]
   12ff8:	b94043e0 	ldr	w0, [sp, #64]
   12ffc:	b9000a60 	str	w0, [x19, #8]
   13000:	b94047e0 	ldr	w0, [sp, #68]
   13004:	b9000e60 	str	w0, [x19, #12]
   13008:	b9404be0 	ldr	w0, [sp, #72]
   1300c:	b9001260 	str	w0, [x19, #16]
   13010:	b9404fe0 	ldr	w0, [sp, #76]
   13014:	b9001660 	str	w0, [x19, #20]
   13018:	b94053e0 	ldr	w0, [sp, #80]
   1301c:	b9001a60 	str	w0, [x19, #24]
   13020:	f9401be0 	ldr	x0, [sp, #48]
   13024:	b90002a0 	str	w0, [x21]
   13028:	7100029f 	cmp	w20, #0x0
   1302c:	129ffee0 	mov	w0, #0xffff0008            	// #-65528
   13030:	7a401284 	ccmp	w20, w0, #0x4, ne  // ne = any
   13034:	54000100 	b.eq	13054 <__GP11_TEE_GetNextPersistentObject+0xf0>  // b.none
   13038:	52800020 	mov	w0, #0x1                   	// #1
   1303c:	121e7a81 	and	w1, w20, #0xfffffffd
   13040:	72be0200 	movk	w0, #0xf010, lsl #16
   13044:	6b00003f 	cmp	w1, w0
   13048:	54000060 	b.eq	13054 <__GP11_TEE_GetNextPersistentObject+0xf0>  // b.none
   1304c:	2a1403e0 	mov	w0, w20
   13050:	97ffc93f 	bl	554c <TEE_Panic>
   13054:	d0000021 	adrp	x1, 19000 <_DYNAMIC>
   13058:	f9409821 	ldr	x1, [x1, #304]
   1305c:	f9402fe0 	ldr	x0, [sp, #88]
   13060:	f9400022 	ldr	x2, [x1]
   13064:	eb020000 	subs	x0, x0, x2
   13068:	d2800002 	mov	x2, #0x0                   	// #0
   1306c:	54000080 	b.eq	1307c <__GP11_TEE_GetNextPersistentObject+0x118>  // b.none
   13070:	97ffb582 	bl	678 <__stack_chk_fail>
   13074:	129fff34 	mov	w20, #0xffff0006            	// #-65530
   13078:	17ffffec 	b	13028 <__GP11_TEE_GetNextPersistentObject+0xc4>
   1307c:	2a1403e0 	mov	w0, w20
   13080:	a94153f3 	ldp	x19, x20, [sp, #16]
   13084:	a9425bf5 	ldp	x21, x22, [sp, #32]
   13088:	a8c67bfd 	ldp	x29, x30, [sp], #96
   1308c:	d65f03c0 	ret

0000000000013090 <TEE_ReadObjectData>:
TEE_ReadObjectData():
   13090:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
   13094:	d0000024 	adrp	x4, 19000 <_DYNAMIC>
   13098:	910003fd 	mov	x29, sp
   1309c:	f9409884 	ldr	x4, [x4, #304]
   130a0:	a90153f3 	stp	x19, x20, [sp, #16]
   130a4:	aa0003f3 	mov	x19, x0
   130a8:	a9025bf5 	stp	x21, x22, [sp, #32]
   130ac:	f9400080 	ldr	x0, [x4]
   130b0:	f9001fe0 	str	x0, [sp, #56]
   130b4:	d2800000 	mov	x0, #0x0                   	// #0
   130b8:	b4000433 	cbz	x19, 1313c <TEE_ReadObjectData+0xac>
   130bc:	aa0303f4 	mov	x20, x3
   130c0:	aa0303e0 	mov	x0, x3
   130c4:	aa0103f5 	mov	x21, x1
   130c8:	aa0203f6 	mov	x22, x2
   130cc:	d2800101 	mov	x1, #0x8                   	// #8
   130d0:	97ffc97d 	bl	56c4 <__utee_check_out_annotation>
   130d4:	f9400280 	ldr	x0, [x20]
   130d8:	9100c3e3 	add	x3, sp, #0x30
   130dc:	aa1603e2 	mov	x2, x22
   130e0:	aa1503e1 	mov	x1, x21
   130e4:	f9001be0 	str	x0, [sp, #48]
   130e8:	aa1303e0 	mov	x0, x19
   130ec:	97ffbc66 	bl	2284 <_utee_storage_obj_read>
   130f0:	2a0003f3 	mov	w19, w0
   130f4:	f9401be0 	ldr	x0, [sp, #48]
   130f8:	f9000280 	str	x0, [x20]
   130fc:	121e7a60 	and	w0, w19, #0xfffffffd
   13100:	7100027f 	cmp	w19, #0x0
   13104:	52800021 	mov	w1, #0x1                   	// #1
   13108:	72be0201 	movk	w1, #0xf010, lsl #16
   1310c:	7a411004 	ccmp	w0, w1, #0x4, ne  // ne = any
   13110:	54000060 	b.eq	1311c <TEE_ReadObjectData+0x8c>  // b.none
   13114:	2a1303e0 	mov	w0, w19
   13118:	97ffc90d 	bl	554c <TEE_Panic>
   1311c:	d0000024 	adrp	x4, 19000 <_DYNAMIC>
   13120:	f9409884 	ldr	x4, [x4, #304]
   13124:	f9401fe0 	ldr	x0, [sp, #56]
   13128:	f9400081 	ldr	x1, [x4]
   1312c:	eb010000 	subs	x0, x0, x1
   13130:	d2800001 	mov	x1, #0x0                   	// #0
   13134:	54000080 	b.eq	13144 <TEE_ReadObjectData+0xb4>  // b.none
   13138:	97ffb550 	bl	678 <__stack_chk_fail>
   1313c:	129fff33 	mov	w19, #0xffff0006            	// #-65530
   13140:	17ffffef 	b	130fc <TEE_ReadObjectData+0x6c>
   13144:	2a1303e0 	mov	w0, w19
   13148:	a94153f3 	ldp	x19, x20, [sp, #16]
   1314c:	a9425bf5 	ldp	x21, x22, [sp, #32]
   13150:	a8c47bfd 	ldp	x29, x30, [sp], #64
   13154:	d65f03c0 	ret

0000000000013158 <__GP11_TEE_ReadObjectData>:
__GP11_TEE_ReadObjectData():
   13158:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
   1315c:	910003fd 	mov	x29, sp
   13160:	a90153f3 	stp	x19, x20, [sp, #16]
   13164:	d0000034 	adrp	x20, 19000 <_DYNAMIC>
   13168:	aa0303f3 	mov	x19, x3
   1316c:	a9025bf5 	stp	x21, x22, [sp, #32]
   13170:	aa0003f5 	mov	x21, x0
   13174:	aa0103f6 	mov	x22, x1
   13178:	f9409a80 	ldr	x0, [x20, #304]
   1317c:	f9001bf7 	str	x23, [sp, #48]
   13180:	2a0203f7 	mov	w23, w2
   13184:	f9400001 	ldr	x1, [x0]
   13188:	f90027e1 	str	x1, [sp, #72]
   1318c:	d2800001 	mov	x1, #0x0                   	// #0
   13190:	aa0303e0 	mov	x0, x3
   13194:	d2800081 	mov	x1, #0x4                   	// #4
   13198:	f90023ff 	str	xzr, [sp, #64]
   1319c:	97ffc94a 	bl	56c4 <__utee_check_out_annotation>
   131a0:	b9400260 	ldr	w0, [x19]
   131a4:	2a1703e2 	mov	w2, w23
   131a8:	aa1603e1 	mov	x1, x22
   131ac:	910103e3 	add	x3, sp, #0x40
   131b0:	f90023e0 	str	x0, [sp, #64]
   131b4:	aa1503e0 	mov	x0, x21
   131b8:	97ffffb6 	bl	13090 <TEE_ReadObjectData>
   131bc:	f9409a94 	ldr	x20, [x20, #304]
   131c0:	f94023e1 	ldr	x1, [sp, #64]
   131c4:	b9000261 	str	w1, [x19]
   131c8:	f94027e1 	ldr	x1, [sp, #72]
   131cc:	f9400282 	ldr	x2, [x20]
   131d0:	eb020021 	subs	x1, x1, x2
   131d4:	d2800002 	mov	x2, #0x0                   	// #0
   131d8:	54000040 	b.eq	131e0 <__GP11_TEE_ReadObjectData+0x88>  // b.none
   131dc:	97ffb527 	bl	678 <__stack_chk_fail>
   131e0:	a94153f3 	ldp	x19, x20, [sp, #16]
   131e4:	a9425bf5 	ldp	x21, x22, [sp, #32]
   131e8:	f9401bf7 	ldr	x23, [sp, #48]
   131ec:	a8c57bfd 	ldp	x29, x30, [sp], #80
   131f0:	d65f03c0 	ret

00000000000131f4 <TEE_WriteObjectData>:
TEE_WriteObjectData():
   131f4:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
   131f8:	910003fd 	mov	x29, sp
   131fc:	f9000bf3 	str	x19, [sp, #16]
   13200:	b40002e0 	cbz	x0, 1325c <TEE_WriteObjectData+0x68>
   13204:	b2407fe4 	mov	x4, #0xffffffff            	// #4294967295
   13208:	eb04005f 	cmp	x2, x4
   1320c:	540002c8 	b.hi	13264 <TEE_WriteObjectData+0x70>  // b.pmore
   13210:	97ffbc20 	bl	2290 <_utee_storage_obj_write>
   13214:	2a0003f3 	mov	w19, w0
   13218:	7100027f 	cmp	w19, #0x0
   1321c:	1299f7c0 	mov	w0, #0xffff3041            	// #-53183
   13220:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
   13224:	54000140 	b.eq	1324c <TEE_WriteObjectData+0x58>  // b.none
   13228:	121e7a61 	and	w1, w19, #0xfffffffd
   1322c:	52800020 	mov	w0, #0x1                   	// #1
   13230:	72be0200 	movk	w0, #0xf010, lsl #16
   13234:	6b00003f 	cmp	w1, w0
   13238:	1299fe00 	mov	w0, #0xffff300f            	// #-53233
   1323c:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
   13240:	54000060 	b.eq	1324c <TEE_WriteObjectData+0x58>  // b.none
   13244:	2a1303e0 	mov	w0, w19
   13248:	97ffc8c1 	bl	554c <TEE_Panic>
   1324c:	2a1303e0 	mov	w0, w19
   13250:	f9400bf3 	ldr	x19, [sp, #16]
   13254:	a8c27bfd 	ldp	x29, x30, [sp], #32
   13258:	d65f03c0 	ret
   1325c:	129fff33 	mov	w19, #0xffff0006            	// #-65530
   13260:	17ffffee 	b	13218 <TEE_WriteObjectData+0x24>
   13264:	1299fe13 	mov	w19, #0xffff300f            	// #-53233
   13268:	17ffffec 	b	13218 <TEE_WriteObjectData+0x24>

000000000001326c <__GP11_TEE_WriteObjectData>:
__GP11_TEE_WriteObjectData():
   1326c:	2a0203e2 	mov	w2, w2
   13270:	17ffffe1 	b	131f4 <TEE_WriteObjectData>

0000000000013274 <TEE_TruncateObjectData>:
TEE_TruncateObjectData():
   13274:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
   13278:	910003fd 	mov	x29, sp
   1327c:	f9000bf3 	str	x19, [sp, #16]
   13280:	b4000240 	cbz	x0, 132c8 <TEE_TruncateObjectData+0x54>
   13284:	97ffbc06 	bl	229c <_utee_storage_obj_trunc>
   13288:	2a0003f3 	mov	w19, w0
   1328c:	7100027f 	cmp	w19, #0x0
   13290:	1299f7c0 	mov	w0, #0xffff3041            	// #-53183
   13294:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
   13298:	54000100 	b.eq	132b8 <TEE_TruncateObjectData+0x44>  // b.none
   1329c:	52800020 	mov	w0, #0x1                   	// #1
   132a0:	121e7a61 	and	w1, w19, #0xfffffffd
   132a4:	72be0200 	movk	w0, #0xf010, lsl #16
   132a8:	6b00003f 	cmp	w1, w0
   132ac:	54000060 	b.eq	132b8 <TEE_TruncateObjectData+0x44>  // b.none
   132b0:	2a1303e0 	mov	w0, w19
   132b4:	97ffc8a6 	bl	554c <TEE_Panic>
   132b8:	2a1303e0 	mov	w0, w19
   132bc:	f9400bf3 	ldr	x19, [sp, #16]
   132c0:	a8c27bfd 	ldp	x29, x30, [sp], #32
   132c4:	d65f03c0 	ret
   132c8:	129fff33 	mov	w19, #0xffff0006            	// #-65530
   132cc:	17fffff0 	b	1328c <TEE_TruncateObjectData+0x18>

00000000000132d0 <__GP11_TEE_TruncateObjectData>:
__GP11_TEE_TruncateObjectData():
   132d0:	2a0103e1 	mov	w1, w1
   132d4:	17ffffe8 	b	13274 <TEE_TruncateObjectData>

00000000000132d8 <TEE_SeekObjectData>:
TEE_SeekObjectData():
   132d8:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
   132dc:	d0000023 	adrp	x3, 19000 <_DYNAMIC>
   132e0:	910003fd 	mov	x29, sp
   132e4:	f9409863 	ldr	x3, [x3, #304]
   132e8:	a90153f3 	stp	x19, x20, [sp, #16]
   132ec:	aa0103f4 	mov	x20, x1
   132f0:	a9025bf5 	stp	x21, x22, [sp, #32]
   132f4:	f9400061 	ldr	x1, [x3]
   132f8:	f9002fe1 	str	x1, [sp, #88]
   132fc:	d2800001 	mov	x1, #0x0                   	// #0
   13300:	a903ffff 	stp	xzr, xzr, [sp, #56]
   13304:	f90027ff 	str	xzr, [sp, #72]
   13308:	b90053ff 	str	wzr, [sp, #80]
   1330c:	b4000600 	cbz	x0, 133cc <TEE_SeekObjectData+0xf4>
   13310:	aa0003f6 	mov	x22, x0
   13314:	2a0203f5 	mov	w21, w2
   13318:	9100e3e1 	add	x1, sp, #0x38
   1331c:	97ffbb8c 	bl	214c <_utee_cryp_obj_get_info>
   13320:	2a0003f3 	mov	w19, w0
   13324:	350000e0 	cbnz	w0, 13340 <TEE_SeekObjectData+0x68>
   13328:	710006bf 	cmp	w21, #0x1
   1332c:	54000300 	b.eq	1338c <TEE_SeekObjectData+0xb4>  // b.none
   13330:	71000abf 	cmp	w21, #0x2
   13334:	54000440 	b.eq	133bc <TEE_SeekObjectData+0xe4>  // b.none
   13338:	34000375 	cbz	w21, 133a4 <TEE_SeekObjectData+0xcc>
   1333c:	129ffef3 	mov	w19, #0xffff0008            	// #-65528
   13340:	7100027f 	cmp	w19, #0x0
   13344:	1299fe00 	mov	w0, #0xffff300f            	// #-53233
   13348:	7a401264 	ccmp	w19, w0, #0x4, ne  // ne = any
   1334c:	54000100 	b.eq	1336c <TEE_SeekObjectData+0x94>  // b.none
   13350:	52800020 	mov	w0, #0x1                   	// #1
   13354:	121e7a61 	and	w1, w19, #0xfffffffd
   13358:	72be0200 	movk	w0, #0xf010, lsl #16
   1335c:	6b00003f 	cmp	w1, w0
   13360:	54000060 	b.eq	1336c <TEE_SeekObjectData+0x94>  // b.none
   13364:	2a1303e0 	mov	w0, w19
   13368:	97ffc879 	bl	554c <TEE_Panic>
   1336c:	d0000023 	adrp	x3, 19000 <_DYNAMIC>
   13370:	f9409863 	ldr	x3, [x3, #304]
   13374:	f9402fe0 	ldr	x0, [sp, #88]
   13378:	f9400061 	ldr	x1, [x3]
   1337c:	eb010000 	subs	x0, x0, x1
   13380:	d2800001 	mov	x1, #0x0                   	// #0
   13384:	540002c0 	b.eq	133dc <TEE_SeekObjectData+0x104>  // b.none
   13388:	97ffb4bc 	bl	678 <__stack_chk_fail>
   1338c:	f100029f 	cmp	x20, #0x0
   13390:	540000ad 	b.le	133a4 <TEE_SeekObjectData+0xcc>
   13394:	b9404fe0 	ldr	w0, [sp, #76]
   13398:	0b140001 	add	w1, w0, w20
   1339c:	6b01001f 	cmp	w0, w1
   133a0:	540001a8 	b.hi	133d4 <TEE_SeekObjectData+0xfc>  // b.pmore
   133a4:	2a1503e2 	mov	w2, w21
   133a8:	2a1403e1 	mov	w1, w20
   133ac:	aa1603e0 	mov	x0, x22
   133b0:	97ffbbbe 	bl	22a8 <_utee_storage_obj_seek>
   133b4:	2a0003f3 	mov	w19, w0
   133b8:	17ffffe2 	b	13340 <TEE_SeekObjectData+0x68>
   133bc:	f100029f 	cmp	x20, #0x0
   133c0:	54ffff2d 	b.le	133a4 <TEE_SeekObjectData+0xcc>
   133c4:	b9404be0 	ldr	w0, [sp, #72]
   133c8:	17fffff4 	b	13398 <TEE_SeekObjectData+0xc0>
   133cc:	129fff33 	mov	w19, #0xffff0006            	// #-65530
   133d0:	17ffffdc 	b	13340 <TEE_SeekObjectData+0x68>
   133d4:	1299fe13 	mov	w19, #0xffff300f            	// #-53233
   133d8:	17ffffda 	b	13340 <TEE_SeekObjectData+0x68>
   133dc:	2a1303e0 	mov	w0, w19
   133e0:	a94153f3 	ldp	x19, x20, [sp, #16]
   133e4:	a9425bf5 	ldp	x21, x22, [sp, #32]
   133e8:	a8c67bfd 	ldp	x29, x30, [sp], #96
   133ec:	d65f03c0 	ret

00000000000133f0 <__GP11_TEE_SeekObjectData>:
__GP11_TEE_SeekObjectData():
   133f0:	93407c21 	sxtw	x1, w1
   133f4:	17ffffb9 	b	132d8 <TEE_SeekObjectData>
